<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <sec:global-method-security secured-annotations="enabled" access-decision-manager-ref="accessDecisionManager">
        <sec:expression-handler ref="expressionHandler" />
    </sec:global-method-security>

    <bean id="securityUtil" class="com.palermotenis.util.SecurityUtil" />

    <bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map path-type="ant">
        	<sec:filter-chain filters="none" pattern="/static/**" />
            <sec:filter-chain filters="none" pattern="/css/**" />
            <sec:filter-chain filters="none" pattern="/flash/**" />
            <sec:filter-chain filters="none" pattern="/images/**" />
            <sec:filter-chain filters="none" pattern="/js/jquery/**" />
            <sec:filter-chain filters="none" pattern="/js/bootstrap/**" />
            <sec:filter-chain filters="none" pattern="/admin/css/**" />
            <sec:filter-chain filters="none" pattern="/admin/images/**" />
            <sec:filter-chain filters="none" pattern="/admin/login.jsp" />
            <sec:filter-chain filters="none" pattern="/admin/accessDenied.jsp" />
            <sec:filter-chain filters="none" pattern="/clientes_web/login.jsp" />
            <sec:filter-chain pattern="/admin/**"
                              filters="securityContextPersistenceFilter,adminLogoutFilter,rememberMeFilter,adminAuthenticationFilter,anonymousAuthFilter,adminExceptionTranslationFilter,adminFilterSecurityInterceptor" />
            <sec:filter-chain pattern="/**"
                              filters="securityContextPersistenceFilter,clientsLogoutFilter,rememberMeFilter,clientsAuthenticationFilter,anonymousAuthFilter,clientsExceptionTranslationFilter,clientsFilterSecurityInterceptor" />
        </sec:filter-chain-map>
    </bean>

    <bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <property name='securityContextRepository'>
            <bean class='org.springframework.security.web.context.HttpSessionSecurityContextRepository'>
                <property name='allowSessionCreation' value='true' />
            </bean>
        </property>
    </bean>

    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter" />

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter" />
            </list>
        </property>
    </bean>

    <bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>


    <!-- Anonymous authentication -->
    <bean id="anonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <property name="key" value="foobar"/>
        <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
    </bean>
    

    <!-- Remember Me -->
    <bean id="rememberMeFilter" class= "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <property name="rememberMeServices" ref="rememberMeServices"/>
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>

    <bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <property name="userDetailsService" ref="usuariosService"/>
        <property name="tokenRepository" ref="persistentTokenRepository" />
        <property name="key" value="PalermoTenisKey"/>
    </bean>

    <bean id="persistentTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Authentication Providers -->
    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="usuariosService"/>
        <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>

    <bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <property name="key" value="PalermoTenisKey"/>
    </bean>

    <bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="foobar"/>
    </bean>

    <!-- JDBC User Details Service -->
    <bean id="jdbcUserDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

    <!-- ADMIN -->
    <import resource="applicationContext-security-admin.xml" />

    <!-- CLIENTS -->
    <import resource="applicationContext-security-clients.xml" />

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="daoAuthenticationProvider" />
        <sec:authentication-provider ref="rememberMeAuthenticationProvider" />
    </sec:authentication-manager>

</beans>