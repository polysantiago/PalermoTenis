<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<context:component-scan base-package="com.palermotenis.model.service,com.palermotenis.model.dao,com.palermotenis.controller.struts.actions" />

	<context:property-placeholder location="classpath:/palermotenis.properties" />

    <!-- Web Services -->
    <bean id="currencyConvertor" class="com.palermotenis.model.ws.MyJaxRpcPortProxyFactoryBean">
        <property name="serviceInterface">
            <value>com.palermotenis.model.ws.CurrencyConvertor</value>
        </property>
        <property name="wsdlDocumentUrl">
            <value>http://www.webserviceX.NET/CurrencyConvertor.asmx?wsdl</value>
        </property>
        <property name="endpointAddress">
            <value>http://www.webserviceX.NET/CurrencyConvertor.asmx</value>
        </property>
        <property name="namespaceUri">
            <value>http://www.webserviceX.NET/</value>
        </property>
        <property name="serviceName">
            <value>CurrencyConvertor</value>
        </property>
        <property name="portName">
            <value>CurrencyConvertorSoap</value>
        </property>
        <property name="lookupServiceOnStartup">
            <value>false</value>
        </property>
    </bean>
    <!-- Web Services END -->

    <!-- Currency Formatter -->
    <bean id="currencyFormatter" class="org.springframework.format.number.CurrencyFormatter" />

	<!-- Password Encoder -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

    <!-- Exporters -->
    <bean id="excelExporter" class="com.palermotenis.export.ExcelExporter" />

    <!-- Tasks -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
    </bean>
    <!-- END tasks -->
    
    <!-- Carrito -->
    <bean class="com.palermotenis.controller.carrito.CarritoImpl" id="carrito" scope="session">
        <aop:scoped-proxy/>
    </bean>

    <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
        <property name="attributes">
            <map>
                <entry key="domain" value="www.palermotenis.com.ar"/>
            </map>
        </property>
    </bean>

    <!-- Mail -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${com.palermotenis.mail.host}" />
        <property name="protocol" value="${com.palermotenis.mail.protocol}" />
        <property name="port" value="${com.palermotenis.mail.port}" />
        <property name="username" value="${com.palermotenis.mail.username}" />
        <property name="password" value="${com.palermotenis.mail.password}" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.starttls.enable">${com.palermotenis.mail.smtp.starttls.enable}</prop>
                <prop key="mail.smtp.auth">${com.palermotenis.mail.smtp.auth}</prop>
                <prop key="mail.smtp.debug">${com.palermotenis.mail.smtp.debug}</prop>
                <prop key="mail.mime.charset">${com.palermotenis.mail.mime.charset}</prop>
            </props>
        </property>
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>

    <!-- Messages Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="com/palermotenis/resources/security/messages/messages"/>
    </bean>

    <!-- HIBERNATE -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory" depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.jdbc.use_get_generated_keys">false</prop>
                <prop key="hibernate.connection.isolation">1</prop>
                <prop key="hibernate.connection.release_mode">on_close</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
            </props>
        </property>
    </bean>

    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource" destroy-method="close">
        <property name="driverClass" value="org.gjt.mm.mysql.Driver"/>
        <property name="jdbcUrl" value="${com.palermotenis.datasource.jdbcUrl}"/>
        <property name="user" value="${com.palermotenis.datasource.user}"/>
        <property name="password" value="${com.palermotenis.datasource.password}"/>
        <property name="acquireIncrement" value="5" />
        <property name="acquireRetryAttempts" value="50" />
        <property name="acquireRetryDelay" value="1000" />
        <property name="breakAfterAcquireFailure" value="true" />
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="maxConnectionAge" value="18000" />
        <property name="maxIdleTimeExcessConnections" value="3600" />
        <property name="maxIdleTime" value="7200" />
        <property name="debugUnreturnedConnectionStackTraces" value="true" />
        <property name="idleConnectionTestPeriod" value="360" />
        <property name="preferredTestQuery" value="SELECT 1" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="numHelperThreads" value="5" />
    </bean>

    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="jtaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="jtaTransactionManager" />
    
    <tx:advice id="txAdvice" transaction-manager="jtaTransactionManager">
    	<tx:attributes>
    		<tx:method name="get*" no-rollback-for="javax.persistence.NoResultException,javax.persistence.EntityNotFoundException" read-only="true"/>
    		<tx:method name="*"/>
    	</tx:attributes>
    </tx:advice>

	<bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">
    	<property name="dataSource" ref="dataSource" />
	</bean>
	
    <import resource="/applicationContext-jobs.xml" />

</beans>
