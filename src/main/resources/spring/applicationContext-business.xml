<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<context:annotation-config />

    <!-- Web Services -->
    <bean class="com.palermotenis.model.ws.MyJaxRpcPortProxyFactoryBean" id="currencyConvertor">
        <property name="serviceInterface">
            <value>com.palermotenis.model.ws.CurrencyConvertor</value>
        </property>
        <property name="wsdlDocumentUrl">
            <value>http://www.webserviceX.NET/CurrencyConvertor.asmx?wsdl</value>
        </property>
        <property name="endpointAddress">
            <value>http://www.webserviceX.NET/CurrencyConvertor.asmx</value>
        </property>
        <property name="namespaceUri">
            <value>http://www.webserviceX.NET/</value>
        </property>
        <property name="serviceName">
            <value>CurrencyConvertor</value>
        </property>
        <property name="portName">
            <value>CurrencyConvertorSoap</value>
        </property>
        <property name="lookupServiceOnStartup">
            <value>false</value>
        </property>
    </bean>

    <!-- Currency Formatter -->
    <bean id="currencyFormatter" class="org.springframework.format.number.CurrencyFormatter" />

    <!-- DAO's -->
    <import resource="/applicationContext-daos.xml" />

    <!-- Exporters -->
    <bean id="excelExporter" class="com.palermotenis.export.ExcelExporter" />

    <!-- Tasks -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
    </bean>
    <!-- END tasks -->

    <!-- XStream -->
    <!--<bean id="xstreamMarshaller" class="com.palermotenis.xstream.XStreamMarshaller">
        <property name="aliases">
            <props>
                <prop key="modelo">com.palermotenis.model.beans.Modelo</prop>
                <prop key="stock">com.palermotenis.model.beans.Stock</prop>
                <prop key="costo">com.palermotenis.model.beans.compras.Costo</prop>
                <prop key="presentacion">com.palermotenis.model.beans.presentaciones.Presentacion</prop>
                <prop key="tipo-producto">com.palermotenis.model.beans.productos.tipos.TipoProducto</prop>
                <prop key="valor-clasificatorio">com.palermotenis.model.beans.valores.ValorClasificatorio</prop>
                <prop key="tipo-atributo">com.palermotenis.model.beans.atributos.tipos.TipoAtributoClasificatorio</prop>
            </props>
        </property>
        <property name="marshallingStrategy">
            <bean class="com.palermotenis.xstream.XStreamMarshallingStrategy">
                <constructor-arg>
                    <util:constant static-field="com.palermotenis.xstream.XStreamMarshallingStrategy.RELATIVE" />
                </constructor-arg>
            </bean>
        </property>
        <property name="converters">
            <list>
                <bean class="com.palermotenis.xstream.HibernateProxyConverter">
                    <constructor-arg index="0">
                        <util:property-path path="xstreamMarshaller.mapper" />
                    </constructor-arg>
                    <constructor-arg index="1">
                        <bean class="com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider" />
                    </constructor-arg>
                    <constructor-arg index="2">
                        <util:property-path path="xstreamMarshaller.converterLookup" />
                    </constructor-arg>
                </bean>
            </list>
        </property>
        <property name="omittedFields">
            <map>
                <entry key="com.palermotenis.model.beans.Modelo">
                    <value>left,right,orden,tipoProducto,deportes</value>
                </entry>
                <entry key="com.palermotenis.model.beans.productos.tipos.TipoProducto">
                    <value>productos,modelos,presentable,tiposAtributos,tiposAtributosSimples,tiposAtributosTipados,tiposAtributosMultiplesValores,tiposAtributosClasificatorios,tiposPresentacion</value>
                </entry>
                <entry key="com.palermotenis.model.beans.Marca">
                    <value>imagen,tamanio,modelos,contentType,deportes</value>
                </entry>
                <entry key="com.palermotenis.model.beans.productos.Producto">
                    <value>modelo,descripcion,activo,presentaciones,tipoProducto,atributos,atributosSimples,atributosTipados,atributosMultiplesValores,atributosClasificatorios</value>
                </entry>
                <entry key="com.palermotenis.model.beans.Stock">
                    <value>id,producto,pedidos</value>
                </entry>
                <entry key="com.palermotenis.model.beans.imagenes.Imagen">
                    <value>id,tipo,ancho,alto,nombre,categoria,imagenesEscaladas,modelo</value>
                </entry>
                <entry key="com.palermotenis.model.beans.valores.ValorClasificatorio">
                    <value>stocks</value>
                </entry>
                <entry key="com.palermotenis.model.beans.valores.ValorPosible">
                    <value>id,orden,atributos</value>
                </entry>
                <entry key="com.palermotenis.model.beans.valores.Valor">
                    <value>unidad</value>
                </entry>
                <entry key="com.palermotenis.model.beans.atributos.tipos.TipoAtributoTipado">
                    <value>tipo,valoresPosibles</value>
                </entry>
                <entry key="com.palermotenis.model.beans.atributos.tipos.TipoAtributo">
                    <value>id,tipoProducto,atributos</value>
                </entry>
                <entry key="com.palermotenis.model.beans.Unidad">
                    <value>id,tipoAtributoCollection</value>
                </entry>
                <entry key="com.palermotenis.model.beans.presentaciones.Presentacion">
                    <value>productos,precios,stocks</value>
                </entry>
                <entry key="com.palermotenis.model.beans.presentaciones.tipos.TipoPresentacion">
                    <value>id,tipoProducto,presentaciones,presentacionesByProd</value>
                </entry>
                <entry key="com.palermotenis.model.beans.precios.pks.PrecioProductoPK">
                    <value>producto,orden</value>
                </entry>
                <entry key="com.palermotenis.model.beans.precios.pks.PrecioPresentacionPK">
                    <value>producto,orden</value>
                </entry>
                <entry key="com.palermotenis.model.beans.Moneda">
                    <value>contrario,paises</value>
                </entry>
                <entry key="com.palermotenis.model.beans.compras.Costo">
                    <value>id,producto,proveedor,moneda</value>
                </entry>
                <entry key="com.palermotenis.model.beans.Sucursal">
                    <value>stocks</value>
                </entry>
            </map>
        </property>
    </bean>-->
    <!-- END XStream -->

    <!-- Currency Convertor -->
    <bean class="com.palermotenis.util.Convertor" id="convertor" >
        <property name="currencyConvertor" ref="currencyConvertor"/>        
    </bean>
    <!-- END Currency Convertor -->

    <!-- Carrito -->
    <bean class="com.palermotenis.controller.carrito.CarritoImpl" id="carrito" scope="session">
        <property name="pagoService" ref="pagoService"/>
        <property name="convertor" ref="convertor"/>
        <aop:scoped-proxy/>
    </bean>

    <bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
        <property name="attributes">
            <map>
                <entry key="domain" value="www.palermotenis.com.ar"/>
            </map>
        </property>
    </bean>

    <!-- Mail -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.palermotenis.com.ar" />
        <property name="protocol" value="smtp" />
        <property name="port" value="25" />
        <property name="username" value="noreply@palermotenis.com.ar" />
        <property name="password" value="La2Hb8Fd" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.starttls.enable">false</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.debug">true</prop>
                <prop key="mail.mime.charset">ISO-8859-1</prop>
            </props>
        </property>
    </bean>

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>

    <!-- Messages Bundle -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="com/palermotenis/resources/security/messages/messages"/>
    </bean>

    <!-- HIBERNATE -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
        <property name="jpaPropertyMap">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.jdbc.use_get_generated_keys">false</prop>
                <prop key="hibernate.connection.isolation">1</prop>
                <prop key="hibernate.connection.release_mode">on_close</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
            </props>
        </property>
    </bean>

    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource" destroy-method="close">
        <property name="driverClass" value="org.gjt.mm.mysql.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/palermotenis"/>
        <property name="user" value="root"/>
        <property name="password" value="policapo"/>
        <property name="acquireIncrement" value="5" />
        <property name="acquireRetryAttempts" value="50" />
        <property name="acquireRetryDelay" value="1000" />
        <property name="breakAfterAcquireFailure" value="true" />
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="maxConnectionAge" value="18000" />
        <property name="maxIdleTimeExcessConnections" value="3600" />
        <property name="maxIdleTime" value="7200" />
        <property name="debugUnreturnedConnectionStackTraces" value="true" />
        <property name="idleConnectionTestPeriod" value="360" />
        <property name="preferredTestQuery" value="SELECT 1" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="numHelperThreads" value="5" />
    </bean>

    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="jtaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="jtaTransactionManager" />

    <import resource="/applicationContext-jobs.xml" />

</beans>
