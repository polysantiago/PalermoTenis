<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_22) on Thu Nov 18 13:26:45 GMT 2010 -->
<TITLE>
KeyBasedPersistenceTokenService (Spring Security 3.0.5.RELEASE API)
</TITLE>

<META NAME="date" CONTENT="2010-11-18">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="KeyBasedPersistenceTokenService (Spring Security 3.0.5.RELEASE API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/security/core/token/DefaultToken.html" title="class in org.springframework.security.core.token"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/security/core/token/SecureRandomFactoryBean.html" title="class in org.springframework.security.core.token"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/security/core/token/KeyBasedPersistenceTokenService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="KeyBasedPersistenceTokenService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.security.core.token</FONT>
<BR>
Class KeyBasedPersistenceTokenService</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.security.core.token.KeyBasedPersistenceTokenService</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>org.springframework.beans.factory.InitializingBean, <A HREF="../../../../../org/springframework/security/core/token/TokenService.html" title="interface in org.springframework.security.core.token">TokenService</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>KeyBasedPersistenceTokenService</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../../../org/springframework/security/core/token/TokenService.html" title="interface in org.springframework.security.core.token">TokenService</A>, org.springframework.beans.factory.InitializingBean</DL>
</PRE>

<P>
Basic implementation of <A HREF="../../../../../org/springframework/security/core/token/TokenService.html" title="interface in org.springframework.security.core.token"><CODE>TokenService</CODE></A> that is compatible with clusters and across machine restarts,
 without requiring database persistence.

 <p>
 Keys are produced in the format:
 </p>

 <p>
 Base64(creationTime + ":" + hex(pseudoRandomNumber) + ":" + extendedInformation + ":" +
 Sha512Hex(creationTime + ":" + hex(pseudoRandomNumber) + ":" + extendedInformation + ":" + serverSecret) )
 </p>

 <p>
 In the above, <code>creationTime</code>, <code>tokenKey</code> and <code>extendedInformation</code>
 are equal to that stored in <A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token"><CODE>Token</CODE></A>. The <code>Sha512Hex</code> includes the same payload,
 plus a <code>serverSecret</code>.
 </p>

 <p>
 The <code>serverSecret</code> varies every millisecond. It relies on two static server-side secrets. The first
 is a password, and the second is a server integer. Both of these must remain the same for any issued keys
 to subsequently be recognised. The applicable <code>serverSecret</code> in any millisecond is computed by
 <code>password</code> + ":" + (<code>creationTime</code> % <code>serverInteger</code>). This approach
 further obfuscates the actual server secret and renders attempts to compute the server secret more
 limited in usefulness (as any false tokens would be forced to have a <code>creationTime</code> equal
 to the computed hash). Recall that framework features depending on token services should reject tokens
 that are relatively old in any event.
 </p>

 <p>
 A further consideration of this class is the requirement for cryptographically strong pseudo-random numbers.
 To this end, the use of <A HREF="../../../../../org/springframework/security/core/token/SecureRandomFactoryBean.html" title="class in org.springframework.security.core.token"><CODE>SecureRandomFactoryBean</CODE></A> is recommended to inject the property.
 </p>

 <p>
 This implementation uses UTF-8 encoding internally for string manipulation.
 </p>
<P>

<P>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#KeyBasedPersistenceTokenService()">KeyBasedPersistenceTokenService</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#afterPropertiesSet()">afterPropertiesSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token">Token</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#allocateToken(java.lang.String)">allocateToken</A></B>(java.lang.String&nbsp;extendedInformation)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Forces the allocation of a new <A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token"><CODE>Token</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#setPseudoRandomNumberBits(int)">setPseudoRandomNumberBits</A></B>(int&nbsp;pseudoRandomNumberBits)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#setSecureRandom(java.security.SecureRandom)">setSecureRandom</A></B>(java.security.SecureRandom&nbsp;secureRandom)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#setServerInteger(java.lang.Integer)">setServerInteger</A></B>(java.lang.Integer&nbsp;serverInteger)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#setServerSecret(java.lang.String)">setServerSecret</A></B>(java.lang.String&nbsp;serverSecret)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token">Token</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/security/core/token/KeyBasedPersistenceTokenService.html#verifyToken(java.lang.String)">verifyToken</A></B>(java.lang.String&nbsp;key)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Permits verification the <<A HREF="../../../../../org/springframework/security/core/token/Token.html#getKey()"><CODE>Token.getKey()</CODE></A> was issued by this <code>TokenService</code> and
 reconstructs the corresponding <code>Token</code>.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="KeyBasedPersistenceTokenService()"><!-- --></A><H3>
KeyBasedPersistenceTokenService</H3>
<PRE>
public <B>KeyBasedPersistenceTokenService</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="allocateToken(java.lang.String)"><!-- --></A><H3>
allocateToken</H3>
<PRE>
public <A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token">Token</A> <B>allocateToken</B>(java.lang.String&nbsp;extendedInformation)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html#allocateToken(java.lang.String)">TokenService</A></CODE></B></DD>
<DD>Forces the allocation of a new <A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token"><CODE>Token</CODE></A>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html#allocateToken(java.lang.String)">allocateToken</A></CODE> in interface <CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html" title="interface in org.springframework.security.core.token">TokenService</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>extendedInformation</CODE> - the extended information desired in the token
          (cannot be <code>null</code>, but can be empty)
<DT><B>Returns:</B><DD>a new token that has not been issued previously, and is guaranteed to be recognised
          by this implementation's <A HREF="../../../../../org/springframework/security/core/token/TokenService.html#verifyToken(java.lang.String)"><CODE>TokenService.verifyToken(String)</CODE></A> at any future time.</DL>
</DD>
</DL>
<HR>

<A NAME="verifyToken(java.lang.String)"><!-- --></A><H3>
verifyToken</H3>
<PRE>
public <A HREF="../../../../../org/springframework/security/core/token/Token.html" title="interface in org.springframework.security.core.token">Token</A> <B>verifyToken</B>(java.lang.String&nbsp;key)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html#verifyToken(java.lang.String)">TokenService</A></CODE></B></DD>
<DD>Permits verification the <<A HREF="../../../../../org/springframework/security/core/token/Token.html#getKey()"><CODE>Token.getKey()</CODE></A> was issued by this <code>TokenService</code> and
 reconstructs the corresponding <code>Token</code>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html#verifyToken(java.lang.String)">verifyToken</A></CODE> in interface <CODE><A HREF="../../../../../org/springframework/security/core/token/TokenService.html" title="interface in org.springframework.security.core.token">TokenService</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>key</CODE> - as obtained from <A HREF="../../../../../org/springframework/security/core/token/Token.html#getKey()"><CODE>Token.getKey()</CODE></A> and created by this implementation
<DT><B>Returns:</B><DD>the token, or <code>null</code> if the token was not issued by this <code>TokenService</code></DL>
</DD>
</DL>
<HR>

<A NAME="setServerSecret(java.lang.String)"><!-- --></A><H3>
setServerSecret</H3>
<PRE>
public void <B>setServerSecret</B>(java.lang.String&nbsp;serverSecret)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>serverSecret</CODE> - the new secret, which can contain a ":" if desired (never being sent to the client)</DL>
</DD>
</DL>
<HR>

<A NAME="setSecureRandom(java.security.SecureRandom)"><!-- --></A><H3>
setSecureRandom</H3>
<PRE>
public void <B>setSecureRandom</B>(java.security.SecureRandom&nbsp;secureRandom)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPseudoRandomNumberBits(int)"><!-- --></A><H3>
setPseudoRandomNumberBits</H3>
<PRE>
public void <B>setPseudoRandomNumberBits</B>(int&nbsp;pseudoRandomNumberBits)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pseudoRandomNumberBits</CODE> - changes the number of bits issued (must be >= 0; defaults to 256)</DL>
</DD>
</DL>
<HR>

<A NAME="setServerInteger(java.lang.Integer)"><!-- --></A><H3>
setServerInteger</H3>
<PRE>
public void <B>setServerInteger</B>(java.lang.Integer&nbsp;serverInteger)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="afterPropertiesSet()"><!-- --></A><H3>
afterPropertiesSet</H3>
<PRE>
public void <B>afterPropertiesSet</B>()
                        throws java.lang.Exception</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>afterPropertiesSet</CODE> in interface <CODE>org.springframework.beans.factory.InitializingBean</CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.lang.Exception</CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/security/core/token/DefaultToken.html" title="class in org.springframework.security.core.token"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/security/core/token/SecureRandomFactoryBean.html" title="class in org.springframework.security.core.token"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/security/core/token/KeyBasedPersistenceTokenService.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="KeyBasedPersistenceTokenService.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
