<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_22) on Thu Nov 18 13:26:44 GMT 2010 -->
<TITLE>
FilterChainProxy (Spring Security 3.0.5.RELEASE API)
</TITLE>

<META NAME="date" CONTENT="2010-11-18">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="FilterChainProxy (Spring Security 3.0.5.RELEASE API)";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/security/web/DefaultRedirectStrategy.html" title="class in org.springframework.security.web"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/security/web/FilterChainProxy.FilterChainValidator.html" title="interface in org.springframework.security.web"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/security/web/FilterChainProxy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FilterChainProxy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.security.web</FONT>
<BR>
Class FilterChainProxy</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by ">org.springframework.web.filter.GenericFilterBean
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.security.web.FilterChainProxy</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>javax.servlet.Filter, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.DisposableBean, org.springframework.beans.factory.InitializingBean, org.springframework.web.context.ServletContextAware</DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>FilterChainProxy</B><DT>extends org.springframework.web.filter.GenericFilterBean</DL>
</PRE>

<P>
Delegates <code>Filter</code> requests to a list of Spring-managed filter beans.
 As of version 2.0, you shouldn't need to explicitly configure a <code>FilterChainProxy</code> bean in your application
 context unless you need very fine control over the filter chain contents. Most cases should be adequately covered
 by the default <tt>&lt;security:http /&gt;</tt> namespace configuration options.

 <p>The <code>FilterChainProxy</code> is loaded via a standard Spring <CODE>DelegatingFilterProxy</CODE> declaration in
 <code>web.xml</code>. <code>FilterChainProxy</code> will then pass <CODE>GenericFilterBean.init(FilterConfig)</CODE>, <CODE>GenericFilterBean.destroy()</CODE>
 and <A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"><CODE>doFilter(ServletRequest, ServletResponse, FilterChain)</CODE></A> invocations through to each <code>Filter</code>
 defined against <code>FilterChainProxy</code>.

 <p>As of version 2.0, <tt>FilterChainProxy</tt> is configured using an ordered Map of path patterns to <tt>List</tt>s
 of <tt>Filter</tt> objects. In previous
 versions, a <A HREF="../../../../org/springframework/security/web/access/intercept/FilterInvocationSecurityMetadataSource.html" title="interface in org.springframework.security.web.access.intercept"><CODE>FilterInvocationSecurityMetadataSource</CODE></A> was used. This is now deprecated in favour of namespace-based
 configuration which provides a more robust and simplfied syntax.  The Map instance will normally be
 created while parsing the namespace configuration, so doesn't have to be set explicitly.
 Instead the &lt;filter-chain-map&gt; element should be used within the FilterChainProxy bean declaration.
 This in turn should have a list of child &lt;filter-chain&gt; elements which each define a URI pattern and the list
 of filters (as comma-separated bean names) which should be applied to requests which match the pattern.
 An example configuration might look like this:

 <pre>
 &lt;bean id="myfilterChainProxy" class="org.springframework.security.util.FilterChainProxy">
     &lt;security:filter-chain-map pathType="ant">
         &lt;security:filter-chain pattern="/do/not/filter" filters="none"/>
         &lt;security:filter-chain pattern="/**" filters="filter1,filter2,filter3"/>
     &lt;/security:filter-chain-map>
 &lt;/bean>
 </pre>

 The names "filter1", "filter2", "filter3" should be the bean names of <code>Filter</code> instances defined in the
 application context. The order of the names defines the order in which the filters will be applied. As shown above,
 use of the value "none" for the "filters" can be used to exclude
 Please consult the security namespace schema file for a full list of available configuration options.

 <p>
 Each possible URI pattern that <code>FilterChainProxy</code> should service must be entered.
 The first matching URI pattern for a given request will be used to define all of the
 <code>Filter</code>s that apply to that request. NB: This means you must put most specific URI patterns at the top
 of the list, and ensure all <code>Filter</code>s that should apply for a given URI pattern are entered against the
 respective entry. The <code>FilterChainProxy</code> will not iterate the remainder of the URI patterns to locate
 additional <code>Filter</code>s.

 <p><code>FilterChainProxy</code> respects normal handling of <code>Filter</code>s that elect not to call <CODE>Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse,
 javax.servlet.FilterChain)</CODE>, in that the remainder of the original or <code>FilterChainProxy</code>-declared filter
 chain will not be called.

 <h3>Request Firewalling</h3>

 An <A HREF="../../../../org/springframework/security/web/firewall/HttpFirewall.html" title="interface in org.springframework.security.web.firewall"><CODE>HttpFirewall</CODE></A> instance is used to validate incoming requests and create a wrapped request which provides
 consistent path values for matching against. See <A HREF="../../../../org/springframework/security/web/firewall/DefaultHttpFirewall.html" title="class in org.springframework.security.web.firewall"><CODE>DefaultHttpFirewall</CODE></A>, for more information on the type of
 attacks which the default implementation protects against. A custom implementation can be injected to provide
 stricter control over the request contents or if an application needs to support certain types of request which
 are rejected by default.
 <p>
 Note that this means that you must use the Spring Security filters in combination with a <code>FilterChainProxy</code>
 if you want this protection. Don't define them explicitly in your <code>web.xml</code> file.
 <p>
 <code>FilterChainProxy</code> will use the firewall instance to obtain both request and response objects which will be
 fed down the filter chain, so it is also possible to use this functionality to control the functionality of the
 response. When the request has passed through the security filter chain, the <code>reset</code> method will be called.
 With the default implementation this means that the original values of <code>servletPath</code> and <code>pathInfo</code> will
 be returned thereafter, instead of the modified ones used for security pattern matching.

 <h2>Filter Lifecycle</h2>
 <p>
 Note the <code>Filter</code> lifecycle mismatch between the servlet container and IoC
 container. As described in the <CODE>DelegatingFilterProxy</CODE> Javadocs, we recommend you allow the IoC
 container to manage the lifecycle instead of the servlet container. <code>FilterChainProxy</code> does not invoke the
 standard filter lifecycle methods on any filter beans that you add to the application context.
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;interface</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.FilterChainValidator.html" title="interface in org.springframework.security.web">FilterChainProxy.FilterChainValidator</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#TOKEN_NONE">TOKEN_NONE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#FilterChainProxy()">FilterChainProxy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#afterPropertiesSet()">afterPropertiesSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)">doFilter</A></B>(javax.servlet.ServletRequest&nbsp;request,
         javax.servlet.ServletResponse&nbsp;response,
         javax.servlet.FilterChain&nbsp;chain)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Map&lt;java.lang.String,java.util.List&lt;javax.servlet.Filter&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#getFilterChainMap()">getFilterChainMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a copy of the underlying filter chain map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;javax.servlet.Filter&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#getFilters(java.lang.String)">getFilters</A></B>(java.lang.String&nbsp;url)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the first filter chain matching the supplied URL.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/security/web/util/UrlMatcher.html" title="interface in org.springframework.security.web.util">UrlMatcher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#getMatcher()">getMatcher</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.util.Collection&lt;javax.servlet.Filter&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#obtainAllDefinedFilters()">obtainAllDefinedFilters</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Obtains all of the <b>unique</b><code>Filter</code> instances registered in the map of
 filter chains.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#setFilterChainMap(java.util.Map)">setFilterChainMap</A></B>(java.util.Map&nbsp;filterChainMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the mapping of URL patterns to filter chains.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#setFilterChainValidator(org.springframework.security.web.FilterChainProxy.FilterChainValidator)">setFilterChainValidator</A></B>(<A HREF="../../../../org/springframework/security/web/FilterChainProxy.FilterChainValidator.html" title="interface in org.springframework.security.web">FilterChainProxy.FilterChainValidator</A>&nbsp;filterChainValidator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Used (internally) to specify a validation strategy for the filters in each configured chain.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#setFirewall(org.springframework.security.web.firewall.HttpFirewall)">setFirewall</A></B>(<A HREF="../../../../org/springframework/security/web/firewall/HttpFirewall.html" title="interface in org.springframework.security.web.firewall">HttpFirewall</A>&nbsp;firewall)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#setMatcher(org.springframework.security.web.util.UrlMatcher)">setMatcher</A></B>(<A HREF="../../../../org/springframework/security/web/util/UrlMatcher.html" title="interface in org.springframework.security.web.util">UrlMatcher</A>&nbsp;matcher)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#setStripQueryStringFromUrls(boolean)">setStripQueryStringFromUrls</A></B>(boolean&nbsp;stripQueryStringFromUrls)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If set to 'true', the query string will be stripped from the request URL before
 attempting to find a matching filter chain.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/security/web/FilterChainProxy.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.filter.GenericFilterBean"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.filter.GenericFilterBean</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>addRequiredProperty, destroy, getFilterConfig, getFilterName, getServletContext, init, initBeanWrapper, initFilterBean, setBeanName, setServletContext</CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TOKEN_NONE"><!-- --></A><H3>
TOKEN_NONE</H3>
<PRE>
public static final java.lang.String <B>TOKEN_NONE</B></PRE>
<DL>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.springframework.security.web.FilterChainProxy.TOKEN_NONE">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="FilterChainProxy()"><!-- --></A><H3>
FilterChainProxy</H3>
<PRE>
public <B>FilterChainProxy</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="afterPropertiesSet()"><!-- --></A><H3>
afterPropertiesSet</H3>
<PRE>
public void <B>afterPropertiesSet</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>afterPropertiesSet</CODE> in interface <CODE>org.springframework.beans.factory.InitializingBean</CODE><DT><B>Overrides:</B><DD><CODE>afterPropertiesSet</CODE> in class <CODE>org.springframework.web.filter.GenericFilterBean</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"><!-- --></A><H3>
doFilter</H3>
<PRE>
public void <B>doFilter</B>(javax.servlet.ServletRequest&nbsp;request,
                     javax.servlet.ServletResponse&nbsp;response,
                     javax.servlet.FilterChain&nbsp;chain)
              throws java.io.IOException,
                     javax.servlet.ServletException</PRE>
<DL>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>javax.servlet.ServletException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getFilters(java.lang.String)"><!-- --></A><H3>
getFilters</H3>
<PRE>
public java.util.List&lt;javax.servlet.Filter&gt; <B>getFilters</B>(java.lang.String&nbsp;url)</PRE>
<DL>
<DD>Returns the first filter chain matching the supplied URL.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>url</CODE> - the request URL
<DT><B>Returns:</B><DD>an ordered array of Filters defining the filter chain</DL>
</DD>
</DL>
<HR>

<A NAME="obtainAllDefinedFilters()"><!-- --></A><H3>
obtainAllDefinedFilters</H3>
<PRE>
protected java.util.Collection&lt;javax.servlet.Filter&gt; <B>obtainAllDefinedFilters</B>()</PRE>
<DL>
<DD>Obtains all of the <b>unique</b><code>Filter</code> instances registered in the map of
 filter chains.
 <p>This is useful in ensuring a <code>Filter</code> is not initialized or destroyed twice.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>all of the <code>Filter</code> instances in the application context which have an entry
         in the map (only one entry is included in the array for
         each <code>Filter</code> that actually exists in application context, even if a given
         <code>Filter</code> is defined multiples times in the filter chain map)</DL>
</DD>
</DL>
<HR>

<A NAME="setFilterChainMap(java.util.Map)"><!-- --></A><H3>
setFilterChainMap</H3>
<PRE>
public void <B>setFilterChainMap</B>(java.util.Map&nbsp;filterChainMap)</PRE>
<DL>
<DD>Sets the mapping of URL patterns to filter chains.

 The map keys should be the paths and the values should be arrays of <code>Filter</code> objects.
 It's VERY important that the type of map used preserves ordering - the order in which the iterator
 returns the entries must be the same as the order they were added to the map, otherwise you have no way
 of guaranteeing that the most specific patterns are returned before the more general ones. So make sure
 the Map used is an instance of <code>LinkedHashMap</code> or an equivalent, rather than a plain <code>HashMap</code>, for
 example.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filterChainMap</CODE> - the map of path Strings to <code>List&amp;lt;Filter&amp;gt;</code>s.</DL>
</DD>
</DL>
<HR>

<A NAME="getFilterChainMap()"><!-- --></A><H3>
getFilterChainMap</H3>
<PRE>
public java.util.Map&lt;java.lang.String,java.util.List&lt;javax.servlet.Filter&gt;&gt; <B>getFilterChainMap</B>()</PRE>
<DL>
<DD>Returns a copy of the underlying filter chain map. Modifications to the map contents
 will not affect the FilterChainProxy state - to change the map call <code>setFilterChainMap</code>.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the map of path pattern Strings to filter chain lists (with ordering guaranteed).</DL>
</DD>
</DL>
<HR>

<A NAME="setMatcher(org.springframework.security.web.util.UrlMatcher)"><!-- --></A><H3>
setMatcher</H3>
<PRE>
public void <B>setMatcher</B>(<A HREF="../../../../org/springframework/security/web/util/UrlMatcher.html" title="interface in org.springframework.security.web.util">UrlMatcher</A>&nbsp;matcher)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMatcher()"><!-- --></A><H3>
getMatcher</H3>
<PRE>
public <A HREF="../../../../org/springframework/security/web/util/UrlMatcher.html" title="interface in org.springframework.security.web.util">UrlMatcher</A> <B>getMatcher</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setFirewall(org.springframework.security.web.firewall.HttpFirewall)"><!-- --></A><H3>
setFirewall</H3>
<PRE>
public void <B>setFirewall</B>(<A HREF="../../../../org/springframework/security/web/firewall/HttpFirewall.html" title="interface in org.springframework.security.web.firewall">HttpFirewall</A>&nbsp;firewall)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setStripQueryStringFromUrls(boolean)"><!-- --></A><H3>
setStripQueryStringFromUrls</H3>
<PRE>
public void <B>setStripQueryStringFromUrls</B>(boolean&nbsp;stripQueryStringFromUrls)</PRE>
<DL>
<DD>If set to 'true', the query string will be stripped from the request URL before
 attempting to find a matching filter chain. This is the default value.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setFilterChainValidator(org.springframework.security.web.FilterChainProxy.FilterChainValidator)"><!-- --></A><H3>
setFilterChainValidator</H3>
<PRE>
public void <B>setFilterChainValidator</B>(<A HREF="../../../../org/springframework/security/web/FilterChainProxy.FilterChainValidator.html" title="interface in org.springframework.security.web">FilterChainProxy.FilterChainValidator</A>&nbsp;filterChainValidator)</PRE>
<DL>
<DD>Used (internally) to specify a validation strategy for the filters in each configured chain.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filterChainValidator</CODE> - </DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/security/web/DefaultRedirectStrategy.html" title="class in org.springframework.security.web"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/security/web/FilterChainProxy.FilterChainValidator.html" title="interface in org.springframework.security.web"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/security/web/FilterChainProxy.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FilterChainProxy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_class_summary">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
