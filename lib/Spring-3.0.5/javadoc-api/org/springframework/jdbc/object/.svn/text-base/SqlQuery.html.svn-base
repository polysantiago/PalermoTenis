<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:44 BST 2010 -->
<TITLE>
SqlQuery
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SqlQuery";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/jdbc/object/SqlQuery.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SqlQuery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.jdbc.object.RdbmsOperation">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.jdbc.object</FONT>
<BR>
Class SqlQuery&lt;T&gt;</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">org.springframework.jdbc.object.RdbmsOperation</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object">org.springframework.jdbc.object.SqlOperation</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.jdbc.object.SqlQuery&lt;T&gt;</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../org/springframework/jdbc/object/GenericSqlQuery.html" title="class in org.springframework.jdbc.object">GenericSqlQuery</A>, <A HREF="../../../../org/springframework/jdbc/object/MappingSqlQueryWithParameters.html" title="class in org.springframework.jdbc.object">MappingSqlQueryWithParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="class in org.springframework.jdbc.object">UpdatableSqlQuery</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>SqlQuery&lt;T&gt;</B><DT>extends <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object">SqlOperation</A></DL>
</PRE>

<P>
Reusable operation object representing a SQL query.

 <p>Subclasses must implement the <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#newRowMapper(java.lang.Object[], java.util.Map)"><CODE>newRowMapper(java.lang.Object[], java.util.Map)</CODE></A> method to provide
 an object that can extract the results of iterating over the
 <code>ResultSet</code> created during the execution of the query.

 <p>This class provides a number of public <code>execute</code> methods that are
 analogous to the different convenient JDO query execute methods. Subclasses
 can either rely on one of these inherited methods, or can add their own
 custom execution methods, with meaningful names and typed parameters
 (definitely a best practice). Each custom query method will invoke one of
 this class's untyped query methods.

 <p>Like all <code>RdbmsOperation</code> classes that ship with the Spring
 Framework, <code>SqlQuery</code> instances are thread-safe after their
 initialization is complete. That is, after they are constructed and configured
 via their setter methods, they can be used safely from multiple threads.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Juergen Hoeller, Thomas Risberg</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object"><CODE>SqlUpdate</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.jdbc.object.RdbmsOperation"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.jdbc.object.<A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#SqlQuery()">SqlQuery</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor to allow use as a JavaBean.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#SqlQuery(javax.sql.DataSource, java.lang.String)">SqlQuery</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/DataSource.html?is-external=true" title="class or interface in javax.sql">DataSource</A>&nbsp;ds,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient constructor with a <code>DataSource</code> and SQL string.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute()">execute</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute without parameters nor context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(int)">execute</A></B>(int&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single int parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(int, int)">execute</A></B>(int&nbsp;p1,
        int&nbsp;p2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with two int parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(int, int, java.util.Map)">execute</A></B>(int&nbsp;p1,
        int&nbsp;p2,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with two int parameters and context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(int, java.util.Map)">execute</A></B>(int&nbsp;p1,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single int parameter and context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(long)">execute</A></B>(long&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single long parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(long, java.util.Map)">execute</A></B>(long&nbsp;p1,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single long parameter and context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.util.Map)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute without parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.lang.Object...)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>...&nbsp;params)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute without context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.lang.Object[], java.util.Map)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;params,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Central execution method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.lang.String)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single String parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.lang.String, java.util.Map)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute with a single String parameter and context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#executeByNamedParam(java.util.Map)">executeByNamedParam</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute without context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#executeByNamedParam(java.util.Map, java.util.Map)">executeByNamedParam</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Central execution method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(int)">findObject</A></B>(int&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single int parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(int, int)">findObject</A></B>(int&nbsp;p1,
           int&nbsp;p2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given two int parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(int, int, java.util.Map)">findObject</A></B>(int&nbsp;p1,
           int&nbsp;p2,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given two int parameters
 and a context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(int, java.util.Map)">findObject</A></B>(int&nbsp;p1,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single int parameter
 and a context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(long)">findObject</A></B>(long&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single long parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(long, java.util.Map)">findObject</A></B>(long&nbsp;p1,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single long parameter
 and a context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(java.lang.Object...)">findObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>...&nbsp;params)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object without context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(java.lang.Object[], java.util.Map)">findObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;params,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic object finder method, used by all other <code>findObject</code> methods.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(java.lang.String)">findObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single String parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObject(java.lang.String, java.util.Map)">findObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to find a single object given a single String parameter
 and a context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObjectByNamedParam(java.util.Map)">findObjectByNamedParam</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient method to execute without context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#findObjectByNamedParam(java.util.Map, java.util.Map)">findObjectByNamedParam</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic object finder method for named parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#getRowsExpected()">getRowsExpected</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the number of rows expected.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;<A HREF="../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#newRowMapper(java.lang.Object[], java.util.Map)">newRowMapper</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;parameters,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses must implement this method to extract an object per row, to be
 returned by the <cod>execute</code> method as an aggregated <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util"><CODE>List</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#setRowsExpected(int)">setRowsExpected</A></B>(int&nbsp;rowsExpected)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the number of rows expected.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jdbc.object.SqlOperation"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jdbc.object.<A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object">SqlOperation</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#compileInternal()">compileInternal</A>, <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#getParsedSql()">getParsedSql</A>, <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#newPreparedStatementCreator(java.lang.Object[])">newPreparedStatementCreator</A>, <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#newPreparedStatementCreator(java.lang.String, java.lang.Object[])">newPreparedStatementCreator</A>, <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#newPreparedStatementSetter(java.lang.Object[])">newPreparedStatementSetter</A>, <A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html#onCompileInternal()">onCompileInternal</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jdbc.object.RdbmsOperation"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jdbc.object.<A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#afterPropertiesSet()">afterPropertiesSet</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#allowsUnusedParameters()">allowsUnusedParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#checkCompiled()">checkCompiled</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#compile()">compile</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#declareParameter(org.springframework.jdbc.core.SqlParameter)">declareParameter</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getDeclaredParameters()">getDeclaredParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getGeneratedKeysColumnNames()">getGeneratedKeysColumnNames</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getJdbcTemplate()">getJdbcTemplate</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getResultSetType()">getResultSetType</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getSql()">getSql</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#isCompiled()">isCompiled</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#isReturnGeneratedKeys()">isReturnGeneratedKeys</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#isUpdatableResults()">isUpdatableResults</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setDataSource(javax.sql.DataSource)">setDataSource</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setFetchSize(int)">setFetchSize</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setGeneratedKeysColumnNames(java.lang.String[])">setGeneratedKeysColumnNames</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)">setJdbcTemplate</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setMaxRows(int)">setMaxRows</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setParameters(org.springframework.jdbc.core.SqlParameter[])">setParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setQueryTimeout(int)">setQueryTimeout</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setResultSetType(int)">setResultSetType</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setReturnGeneratedKeys(boolean)">setReturnGeneratedKeys</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setSql(java.lang.String)">setSql</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setTypes(int[])">setTypes</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#setUpdatableResults(boolean)">setUpdatableResults</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#supportsLobParameters()">supportsLobParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#validateNamedParameters(java.util.Map)">validateNamedParameters</A>, <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#validateParameters(java.lang.Object[])">validateParameters</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SqlQuery()"><!-- --></A><H3>
SqlQuery</H3>
<PRE>
public <B>SqlQuery</B>()</PRE>
<DL>
<DD>Constructor to allow use as a JavaBean.
 <p>The <code>DataSource</code> and SQL must be supplied before
 compilation and use.
<P>
</DL>
<HR>

<A NAME="SqlQuery(javax.sql.DataSource, java.lang.String)"><!-- --></A><H3>
SqlQuery</H3>
<PRE>
public <B>SqlQuery</B>(<A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/DataSource.html?is-external=true" title="class or interface in javax.sql">DataSource</A>&nbsp;ds,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql)</PRE>
<DL>
<DD>Convenient constructor with a <code>DataSource</code> and SQL string.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>ds</CODE> - the <code>DataSource</code> to use to get connections<DD><CODE>sql</CODE> - the SQL to execute; SQL can also be supplied at runtime
 by overriding the <A HREF="../../../../org/springframework/jdbc/object/RdbmsOperation.html#getSql()"><CODE>RdbmsOperation.getSql()</CODE></A> method.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setRowsExpected(int)"><!-- --></A><H3>
setRowsExpected</H3>
<PRE>
public void <B>setRowsExpected</B>(int&nbsp;rowsExpected)</PRE>
<DL>
<DD>Set the number of rows expected.
 <p>This can be used to ensure efficient storage of results. The
 default behavior is not to expect any specific number of rows.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getRowsExpected()"><!-- --></A><H3>
getRowsExpected</H3>
<PRE>
public int <B>getRowsExpected</B>()</PRE>
<DL>
<DD>Get the number of rows expected.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.Object[], java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;params,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Central execution method. All un-named parameter execution goes through this method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>params</CODE> - parameters, similar to JDO query parameters.
 Primitive parameters must be represented by their Object wrapper type.
 The ordering of parameters is significant.<DD><CODE>context</CODE> - contextual information passed to the <code>mapRow</code>
 callback method. The JDBC operation itself doesn't rely on this parameter,
 but it can be useful for creating the objects of the result list.
<DT><B>Returns:</B><DD>a List of objects, one per row of the ResultSet. Normally all these
 will be of the same class, although it is possible to use different types.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.Object...)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>...&nbsp;params)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute without context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>params</CODE> - parameters for the query. Primitive parameters must
 be represented by their Object wrapper type. The ordering of parameters is
 significant.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute without parameters.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - the contextual information for object creation
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute()"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>()
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute without parameters nor context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(int, java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(int&nbsp;p1,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single int parameter and context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single int parameter<DD><CODE>context</CODE> - the contextual information for object creation
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(int)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(int&nbsp;p1)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single int parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single int parameter
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(int, int, java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(int&nbsp;p1,
                       int&nbsp;p2,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with two int parameters and context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - first int parameter<DD><CODE>p2</CODE> - second int parameter<DD><CODE>context</CODE> - the contextual information for object creation
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(int, int)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(int&nbsp;p1,
                       int&nbsp;p2)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with two int parameters.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - first int parameter<DD><CODE>p2</CODE> - second int parameter
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(long, java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(long&nbsp;p1,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single long parameter and context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single long parameter<DD><CODE>context</CODE> - the contextual information for object creation
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(long)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(long&nbsp;p1)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single long parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single long parameter
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.String, java.util.Map)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single String parameter and context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single String parameter<DD><CODE>context</CODE> - the contextual information for object creation
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.String)"><!-- --></A><H3>
execute</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1)
                throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute with a single String parameter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>p1</CODE> - single String parameter
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="executeByNamedParam(java.util.Map, java.util.Map)"><!-- --></A><H3>
executeByNamedParam</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>executeByNamedParam</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                            throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Central execution method. All named parameter execution goes through this method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMap</CODE> - parameters associated with the name specified while declaring
 the SqlParameters. Primitive parameters must be represented by their Object wrapper
 type. The ordering of parameters is not significant since they are supplied in a
 SqlParameterMap which is an implementation of the Map interface.<DD><CODE>context</CODE> - contextual information passed to the <code>mapRow</code>
 callback method. The JDBC operation itself doesn't rely on this parameter,
 but it can be useful for creating the objects of the result list.
<DT><B>Returns:</B><DD>a List of objects, one per row of the ResultSet. Normally all these
 will be of the same class, although it is possible to use different types.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="executeByNamedParam(java.util.Map)"><!-- --></A><H3>
executeByNamedParam</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>executeByNamedParam</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                            throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute without context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMap</CODE> - parameters associated with the name specified while declaring
 the SqlParameters. Primitive parameters must be represented by their Object wrapper
 type. The ordering of parameters is not significant.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(java.lang.Object[], java.util.Map)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;params,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Generic object finder method, used by all other <code>findObject</code> methods.
 Object finder methods are like EJB entity bean finders, in that it is
 considered an error if they return more than one result.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the result object, or <code>null</code> if not found. Subclasses may
 choose to treat this as an error and throw an exception.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/dao/support/DataAccessUtils.html#singleResult(java.util.Collection)"><CODE>DataAccessUtils.singleResult(java.util.Collection<T>)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(java.lang.Object...)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>...&nbsp;params)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object without context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(int, java.util.Map)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(int&nbsp;p1,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single int parameter
 and a context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(int)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(int&nbsp;p1)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single int parameter.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(int, int, java.util.Map)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(int&nbsp;p1,
                    int&nbsp;p2,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given two int parameters
 and a context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(int, int)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(int&nbsp;p1,
                    int&nbsp;p2)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given two int parameters.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(long, java.util.Map)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(long&nbsp;p1,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single long parameter
 and a context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(long)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(long&nbsp;p1)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single long parameter.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(java.lang.String, java.util.Map)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single String parameter
 and a context.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObject(java.lang.String)"><!-- --></A><H3>
findObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;p1)
             throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to find a single object given a single String parameter.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObjectByNamedParam(java.util.Map, java.util.Map)"><!-- --></A><H3>
findObjectByNamedParam</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObjectByNamedParam</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)
                         throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Generic object finder method for named parameters.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMap</CODE> - Map of parameter name to parameter object,
 matching named parameters specified in the SQL statement.
 Ordering is not significant.<DD><CODE>context</CODE> - contextual information passed to the <code>mapRow</code>
 callback method. The JDBC operation itself doesn't rely on this parameter,
 but it can be useful for creating the objects of the result list.
<DT><B>Returns:</B><DD>a List of objects, one per row of the ResultSet. Normally all these
 will be of the same class, although it is possible to use different types.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="findObjectByNamedParam(java.util.Map)"><!-- --></A><H3>
findObjectByNamedParam</H3>
<PRE>
public <A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A> <B>findObjectByNamedParam</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                         throws <A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Convenient method to execute without context.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>paramMap</CODE> - Map of parameter name to parameter object,
 matching named parameters specified in the SQL statement.
 Ordering is not significant.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="newRowMapper(java.lang.Object[], java.util.Map)"><!-- --></A><H3>
newRowMapper</H3>
<PRE>
protected abstract <A HREF="../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;<A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html" title="type parameter in SqlQuery">T</A>&gt; <B>newRowMapper</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;parameters,
                                             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;context)</PRE>
<DL>
<DD>Subclasses must implement this method to extract an object per row, to be
 returned by the <cod>execute</code> method as an aggregated <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util"><CODE>List</CODE></A>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>parameters</CODE> - the parameters to the <code>execute()</code> method,
 in case subclass is interested; may be <code>null</code> if there
 were no parameters.<DD><CODE>context</CODE> - contextual information passed to the <code>mapRow</code>
 callback method. The JDBC operation itself doesn't rely on this parameter,
 but it can be useful for creating the objects of the result list.<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jdbc/object/SqlQuery.html#execute(java.lang.Object[], java.util.Map)"><CODE>execute(java.lang.Object[], java.util.Map)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/jdbc/object/SqlQuery.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SqlQuery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.jdbc.object.RdbmsOperation">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
