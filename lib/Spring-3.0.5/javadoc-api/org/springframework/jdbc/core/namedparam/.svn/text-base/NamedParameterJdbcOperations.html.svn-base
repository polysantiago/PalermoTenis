<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:39 BST 2010 -->
<TITLE>
NamedParameterJdbcOperations
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="NamedParameterJdbcOperations";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcDaoSupport.html" title="class in org.springframework.jdbc.core.namedparam"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NamedParameterJdbcOperations.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.jdbc.core.namedparam</FONT>
<BR>
Interface NamedParameterJdbcOperations</H2>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>NamedParameterJdbcOperations</B></DL>
</PRE>

<P>
Interface specifying a basic set of JDBC operations allowing the use
 of named parameters rather than the traditional '?' placeholders.

 <p>This is an alternative to the classic
 <A HREF="../../../../../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core"><CODE>JdbcOperations</CODE></A> interface,
 implemented by <A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam"><CODE>NamedParameterJdbcTemplate</CODE></A>. This interface is not
 often used directly, but provides a useful option to enhance testability,
 as it can easily be mocked or stubbed.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Thomas Risberg, Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam"><CODE>NamedParameterJdbcTemplate</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core"><CODE>JdbcOperations</CODE></A></DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#batchUpdate(java.lang.String, java.util.Map[])">batchUpdate</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;[]&nbsp;batchValues)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Executes a batch using the supplied SQL statement with the batch of supplied arguments.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])">batchUpdate</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>[]&nbsp;batchArgs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Execute a batch using the supplied SQL statement with the batch of supplied arguments.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#execute(java.lang.String, java.util.Map, org.springframework.jdbc.core.PreparedStatementCallback)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
        <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
        <A HREF="../../../../../org/springframework/jdbc/core/PreparedStatementCallback.html" title="interface in org.springframework.jdbc.core">PreparedStatementCallback</A>&lt;T&gt;&nbsp;action)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Execute a JDBC data access operation, implemented as callback action
 working on a JDBC PreparedStatement.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#execute(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.PreparedStatementCallback)">execute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
        <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
        <A HREF="../../../../../org/springframework/jdbc/core/PreparedStatementCallback.html" title="interface in org.springframework.jdbc.core">PreparedStatementCallback</A>&lt;T&gt;&nbsp;action)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Execute a JDBC data access operation, implemented as callback action
 working on a JDBC PreparedStatement.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#getJdbcOperations()">getJdbcOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Expose the classic Spring JdbcTemplate to allow invocation of
 classic JDBC operations.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, java.util.Map, org.springframework.jdbc.core.ResultSetExtractor)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
      <A HREF="../../../../../org/springframework/jdbc/core/ResultSetExtractor.html" title="interface in org.springframework.jdbc.core">ResultSetExtractor</A>&lt;T&gt;&nbsp;rse)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, reading the ResultSet with a
 ResultSetExtractor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowCallbackHandler)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
      <A HREF="../../../../../org/springframework/jdbc/core/RowCallbackHandler.html" title="interface in org.springframework.jdbc.core">RowCallbackHandler</A>&nbsp;rch)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list of
 arguments to bind to the query, reading the ResultSet on a per-row basis
 with a RowCallbackHandler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
      <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping each row to a Java object
 via a RowMapper.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.ResultSetExtractor)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
      <A HREF="../../../../../org/springframework/jdbc/core/ResultSetExtractor.html" title="interface in org.springframework.jdbc.core">ResultSetExtractor</A>&lt;T&gt;&nbsp;rse)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, reading the ResultSet with a
 ResultSetExtractor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowCallbackHandler)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
      <A HREF="../../../../../org/springframework/jdbc/core/RowCallbackHandler.html" title="interface in org.springframework.jdbc.core">RowCallbackHandler</A>&nbsp;rch)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list of
 arguments to bind to the query, reading the ResultSet on a per-row basis
 with a RowCallbackHandler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowMapper)">query</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
      <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
      <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping each row to a Java object
 via a RowMapper.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForInt(java.lang.String, java.util.Map)">queryForInt</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in an int value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForInt(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">queryForInt</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in an int value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForList(java.lang.String, java.util.Map)">queryForList</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForList(java.lang.String, java.util.Map, java.lang.Class)">queryForList</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;elementType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForList(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">queryForList</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForList(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.lang.Class)">queryForList</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;elementType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForLong(java.lang.String, java.util.Map)">queryForLong</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in a long value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForLong(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">queryForLong</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
             <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in a long value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForMap(java.lang.String, java.util.Map)">queryForMap</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result Map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForMap(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">queryForMap</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result Map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForObject(java.lang.String, java.util.Map, java.lang.Class)">queryForObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper)">queryForObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
               <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping a single result row to a
 Java object via a RowMapper.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForObject(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.lang.Class)">queryForObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForObject(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowMapper)">queryForObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
               <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping a single result row to a
 Java object via a RowMapper.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForRowSet(java.lang.String, java.util.Map)">queryForRowSet</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a SqlRowSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#queryForRowSet(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">queryForRowSet</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
               <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a SqlRowSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, java.util.Map)">update</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issue an update via a prepared statement, binding the given arguments.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)">update</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
       <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issue an update via a prepared statement, binding the given arguments.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)">update</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
       <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
       <A HREF="../../../../../org/springframework/jdbc/support/KeyHolder.html" title="interface in org.springframework.jdbc.support">KeyHolder</A>&nbsp;generatedKeyHolder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])">update</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
       <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
       <A HREF="../../../../../org/springframework/jdbc/support/KeyHolder.html" title="interface in org.springframework.jdbc.support">KeyHolder</A>&nbsp;generatedKeyHolder,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]&nbsp;keyColumnNames)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getJdbcOperations()"><!-- --></A><H3>
getJdbcOperations</H3>
<PRE>
<A HREF="../../../../../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A> <B>getJdbcOperations</B>()</PRE>
<DL>
<DD>Expose the classic Spring JdbcTemplate to allow invocation of
 classic JDBC operations.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.PreparedStatementCallback)"><!-- --></A><H3>
execute</H3>
<PRE>
&lt;T&gt; T <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
              <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
              <A HREF="../../../../../org/springframework/jdbc/core/PreparedStatementCallback.html" title="interface in org.springframework.jdbc.core">PreparedStatementCallback</A>&lt;T&gt;&nbsp;action)
          throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Execute a JDBC data access operation, implemented as callback action
 working on a JDBC PreparedStatement. This allows for implementing arbitrary
 data access operations on a single Statement, within Spring's managed
 JDBC environment: that is, participating in Spring-managed transactions
 and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy.
 <p>The callback action can return a result object, for example a
 domain object or a collection of domain objects.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>action</CODE> - callback object that specifies the action
<DT><B>Returns:</B><DD>a result object returned by the action, or <code>null</code>
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem</DL>
</DD>
</DL>
<HR>

<A NAME="execute(java.lang.String, java.util.Map, org.springframework.jdbc.core.PreparedStatementCallback)"><!-- --></A><H3>
execute</H3>
<PRE>
&lt;T&gt; T <B>execute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
              <A HREF="../../../../../org/springframework/jdbc/core/PreparedStatementCallback.html" title="interface in org.springframework.jdbc.core">PreparedStatementCallback</A>&lt;T&gt;&nbsp;action)
          throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Execute a JDBC data access operation, implemented as callback action
 working on a JDBC PreparedStatement. This allows for implementing arbitrary
 data access operations on a single Statement, within Spring's managed
 JDBC environment: that is, participating in Spring-managed transactions
 and converting JDBC SQLExceptions into Spring's DataAccessException hierarchy.
 <p>The callback action can return a result object, for example a
 domain object or a collection of domain objects.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>action</CODE> - callback object that specifies the action
<DT><B>Returns:</B><DD>a result object returned by the action, or <code>null</code>
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.ResultSetExtractor)"><!-- --></A><H3>
query</H3>
<PRE>
&lt;T&gt; T <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
            <A HREF="../../../../../org/springframework/jdbc/core/ResultSetExtractor.html" title="interface in org.springframework.jdbc.core">ResultSetExtractor</A>&lt;T&gt;&nbsp;rse)
        throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, reading the ResultSet with a
 ResultSetExtractor.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>rse</CODE> - object that will extract results
<DT><B>Returns:</B><DD>an arbitrary result object, as returned by the ResultSetExtractor
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, java.util.Map, org.springframework.jdbc.core.ResultSetExtractor)"><!-- --></A><H3>
query</H3>
<PRE>
&lt;T&gt; T <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
            <A HREF="../../../../../org/springframework/jdbc/core/ResultSetExtractor.html" title="interface in org.springframework.jdbc.core">ResultSetExtractor</A>&lt;T&gt;&nbsp;rse)
        throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, reading the ResultSet with a
 ResultSetExtractor.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>rse</CODE> - object that will extract results
<DT><B>Returns:</B><DD>an arbitrary result object, as returned by the ResultSetExtractor
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowCallbackHandler)"><!-- --></A><H3>
query</H3>
<PRE>
void <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
           <A HREF="../../../../../org/springframework/jdbc/core/RowCallbackHandler.html" title="interface in org.springframework.jdbc.core">RowCallbackHandler</A>&nbsp;rch)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list of
 arguments to bind to the query, reading the ResultSet on a per-row basis
 with a RowCallbackHandler.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>rch</CODE> - object that will extract results, one row at a time
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowCallbackHandler)"><!-- --></A><H3>
query</H3>
<PRE>
void <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
           <A HREF="../../../../../org/springframework/jdbc/core/RowCallbackHandler.html" title="interface in org.springframework.jdbc.core">RowCallbackHandler</A>&nbsp;rch)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list of
 arguments to bind to the query, reading the ResultSet on a per-row basis
 with a RowCallbackHandler.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>rch</CODE> - object that will extract results, one row at a time
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowMapper)"><!-- --></A><H3>
query</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt; <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
                  <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)
              throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping each row to a Java object
 via a RowMapper.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>rowMapper</CODE> - object that will map one object per row
<DT><B>Returns:</B><DD>the result List, containing mapped objects
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="query(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper)"><!-- --></A><H3>
query</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt; <B>query</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                  <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)
              throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping each row to a Java object
 via a RowMapper.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>rowMapper</CODE> - object that will map one object per row
<DT><B>Returns:</B><DD>the result List, containing mapped objects
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="queryForObject(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.core.RowMapper)"><!-- --></A><H3>
queryForObject</H3>
<PRE>
&lt;T&gt; T <B>queryForObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                     <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
                     <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)
                 throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping a single result row to a
 Java object via a RowMapper.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>rowMapper</CODE> - object that will map one object per row
<DT><B>Returns:</B><DD>the single mapped object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="queryForObject(java.lang.String, java.util.Map, org.springframework.jdbc.core.RowMapper)"><!-- --></A><H3>
queryForObject</H3>
<PRE>
&lt;T&gt; T <B>queryForObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                     <A HREF="../../../../../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core">RowMapper</A>&lt;T&gt;&nbsp;rowMapper)
                 throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a list
 of arguments to bind to the query, mapping a single result row to a
 Java object via a RowMapper.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>rowMapper</CODE> - object that will map one object per row
<DT><B>Returns:</B><DD>the single mapped object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails</DL>
</DD>
</DL>
<HR>

<A NAME="queryForObject(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.lang.Class)"><!-- --></A><H3>
queryForObject</H3>
<PRE>
&lt;T&gt; T <B>queryForObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                     <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)
                 throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result object.
 <p>The query is expected to be a single row/single column query; the returned
 result will be directly mapped to the corresponding object type.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>requiredType</CODE> - the type that the result object is expected to match
<DT><B>Returns:</B><DD>the result object of the required type, or <code>null</code> in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForObject(java.lang.String, java.lang.Class)"><CODE>JdbcTemplate.queryForObject(String, Class)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForObject(java.lang.String, java.util.Map, java.lang.Class)"><!-- --></A><H3>
queryForObject</H3>
<PRE>
&lt;T&gt; T <B>queryForObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)
                 throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result object.
 <p>The query is expected to be a single row/single column query; the returned
 result will be directly mapped to the corresponding object type.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>requiredType</CODE> - the type that the result object is expected to match
<DT><B>Returns:</B><DD>the result object of the required type, or <code>null</code> in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForObject(java.lang.String, java.lang.Class)"><CODE>JdbcTemplate.queryForObject(String, Class)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForMap(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
queryForMap</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>queryForMap</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                               <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
                               throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result Map.
 <p>The query is expected to be a single row query; the result row will be
 mapped to a Map (one entry for each column, using the column name as the key).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query
<DT><B>Returns:</B><DD>the result Map (one entry for each column, using the column name as the key)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForMap(java.lang.String)"><CODE>JdbcTemplate.queryForMap(String)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/ColumnMapRowMapper.html" title="class in org.springframework.jdbc.core"><CODE>ColumnMapRowMapper</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForMap(java.lang.String, java.util.Map)"><!-- --></A><H3>
queryForMap</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>queryForMap</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                               throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result Map.
 The queryForMap() methods defined by this interface are appropriate
 when you don't have a domain model. Otherwise, consider using
 one of the queryForObject() methods.
 <p>The query is expected to be a single row query; the result row will be
 mapped to a Map (one entry for each column, using the column name as the key).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>the result Map (one entry for each column, using the column name as the key)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForMap(java.lang.String)"><CODE>JdbcTemplate.queryForMap(String)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/ColumnMapRowMapper.html" title="class in org.springframework.jdbc.core"><CODE>ColumnMapRowMapper</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForLong(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
queryForLong</H3>
<PRE>
long <B>queryForLong</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
                  throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in a long value.
 <p>The query is expected to be a single row/single column query that
 results in a long value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query
<DT><B>Returns:</B><DD>the long value, or 0 in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForLong(java.lang.String)"><CODE>JdbcTemplate.queryForLong(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForLong(java.lang.String, java.util.Map)"><!-- --></A><H3>
queryForLong</H3>
<PRE>
long <B>queryForLong</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                  throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in a long value.
 <p>The query is expected to be a single row/single column query that
 results in a long value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>the long value, or 0 in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return exactly one row, or does not return exactly
 one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForLong(java.lang.String)"><CODE>JdbcTemplate.queryForLong(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForInt(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
queryForInt</H3>
<PRE>
int <B>queryForInt</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
                throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in an int value.
 <p>The query is expected to be a single row/single column query that
 results in an int value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query
<DT><B>Returns:</B><DD>the int value, or 0 in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return
 exactly one row, or does not return exactly one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForInt(java.lang.String)"><CODE>JdbcTemplate.queryForInt(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForInt(java.lang.String, java.util.Map)"><!-- --></A><H3>
queryForInt</H3>
<PRE>
int <B>queryForInt</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, resulting in an int value.
 <p>The query is expected to be a single row/single column query that
 results in an int value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>the int value, or 0 in case of SQL NULL
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A></CODE> - if the query does not return
 exactly one row, or does not return exactly one column in that row
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForInt(java.lang.String)"><CODE>JdbcTemplate.queryForInt(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForList(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.lang.Class)"><!-- --></A><H3>
queryForList</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt; <B>queryForList</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                         <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;elementType)
                     throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.
 <p>The results will be mapped to a List (one entry for each row) of
 result objects, each of them matching the specified element type.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query<DD><CODE>elementType</CODE> - the required type of element in the result list
 (for example, <code>Integer.class</code>)
<DT><B>Returns:</B><DD>a List of objects that match the specified element type
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForList(java.lang.String, java.lang.Class)"><CODE>JdbcTemplate.queryForList(String, Class)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/SingleColumnRowMapper.html" title="class in org.springframework.jdbc.core"><CODE>SingleColumnRowMapper</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForList(java.lang.String, java.util.Map, java.lang.Class)"><!-- --></A><H3>
queryForList</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;T&gt; <B>queryForList</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;elementType)
                     throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.
 <p>The results will be mapped to a List (one entry for each row) of
 result objects, each of them matching the specified element type.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)<DD><CODE>elementType</CODE> - the required type of element in the result list
 (for example, <code>Integer.class</code>)
<DT><B>Returns:</B><DD>a List of objects that match the specified element type
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForList(java.lang.String, java.lang.Class)"><CODE>JdbcTemplate.queryForList(String, Class)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/SingleColumnRowMapper.html" title="class in org.springframework.jdbc.core"><CODE>SingleColumnRowMapper</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForList(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
queryForList</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&gt; <B>queryForList</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                                      <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
                                      throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.
 <p>The results will be mapped to a List (one entry for each row) of
 Maps (one entry for each column, using the column name as the key).
 Thus  Each element in the list will be of the form returned by this interface's
 queryForMap() methods.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query
<DT><B>Returns:</B><DD>a List that contains a Map per row
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForList(java.lang.String)"><CODE>JdbcTemplate.queryForList(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForList(java.lang.String, java.util.Map)"><!-- --></A><H3>
queryForList</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&gt; <B>queryForList</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                                      <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                                      throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a result list.
 <p>The results will be mapped to a List (one entry for each row) of
 Maps (one entry for each column, using the column name as the key).
 Each element in the list will be of the form returned by this interface's
 queryForMap() methods.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>a List that contains a Map per row
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if the query fails<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForList(java.lang.String)"><CODE>JdbcTemplate.queryForList(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForRowSet(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
queryForRowSet</H3>
<PRE>
<A HREF="../../../../../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A> <B>queryForRowSet</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                         <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
                         throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a SqlRowSet.
 <p>The results will be mapped to an SqlRowSet which holds the data in a
 disconnected fashion. This wrapper will translate any SQLExceptions thrown.
 <p>Note that that, for the default implementation, JDBC RowSet support needs to
 be available at runtime: by default, Sun's <code>com.sun.rowset.CachedRowSetImpl</code>
 class is used, which is part of JDK 1.5+ and also available separately as part of
 Sun's JDBC RowSet Implementations download (rowset.jar).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramSource</CODE> - container of arguments to bind to the query
<DT><B>Returns:</B><DD>a SqlRowSet representation (possibly a wrapper around a
 <code>javax.sql.rowset.CachedRowSet</code>)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem executing the query<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForRowSet(java.lang.String)"><CODE>JdbcTemplate.queryForRowSet(String)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html" title="class in org.springframework.jdbc.core"><CODE>SqlRowSetResultSetExtractor</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/rowset/CachedRowSet.html?is-external=true" title="class or interface in javax.sql.rowset"><CODE>CachedRowSet</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="queryForRowSet(java.lang.String, java.util.Map)"><!-- --></A><H3>
queryForRowSet</H3>
<PRE>
<A HREF="../../../../../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A> <B>queryForRowSet</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                         <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
                         throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Query given SQL to create a prepared statement from SQL and a
 list of arguments to bind to the query, expecting a SqlRowSet.
 <p>The results will be mapped to an SqlRowSet which holds the data in a
 disconnected fashion. This wrapper will translate any SQLExceptions thrown.
 <p>Note that that, for the default implementation, JDBC RowSet support needs to
 be available at runtime: by default, Sun's <code>com.sun.rowset.CachedRowSetImpl</code>
 class is used, which is part of JDK 1.5+ and also available separately as part of
 Sun's JDBC RowSet Implementations download (rowset.jar).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL query to execute<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>a SqlRowSet representation (possibly a wrapper around a
 <code>javax.sql.rowset.CachedRowSet</code>)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem executing the query<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/JdbcTemplate.html#queryForRowSet(java.lang.String)"><CODE>JdbcTemplate.queryForRowSet(String)</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html" title="class in org.springframework.jdbc.core"><CODE>SqlRowSetResultSetExtractor</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/rowset/CachedRowSet.html?is-external=true" title="class or interface in javax.sql.rowset"><CODE>CachedRowSet</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><!-- --></A><H3>
update</H3>
<PRE>
int <B>update</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Issue an update via a prepared statement, binding the given arguments.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL containing named parameters<DD><CODE>paramSource</CODE> - container of arguments and SQL types to bind to the query
<DT><B>Returns:</B><DD>the number of rows affected
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem issuing the update</DL>
</DD>
</DL>
<HR>

<A NAME="update(java.lang.String, java.util.Map)"><!-- --></A><H3>
update</H3>
<PRE>
int <B>update</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;paramMap)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Issue an update via a prepared statement, binding the given arguments.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL containing named parameters<DD><CODE>paramMap</CODE> - map of parameters to bind to the query
 (leaving it to the PreparedStatement to guess the corresponding SQL type)
<DT><B>Returns:</B><DD>the number of rows affected
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem issuing the update</DL>
</DD>
</DL>
<HR>

<A NAME="update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)"><!-- --></A><H3>
update</H3>
<PRE>
int <B>update</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
           <A HREF="../../../../../org/springframework/jdbc/support/KeyHolder.html" title="interface in org.springframework.jdbc.support">KeyHolder</A>&nbsp;generatedKeyHolder)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL containing named parameters<DD><CODE>paramSource</CODE> - container of arguments and SQL types to bind to the query<DD><CODE>generatedKeyHolder</CODE> - KeyHolder that will hold the generated keys
<DT><B>Returns:</B><DD>the number of rows affected
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem issuing the update<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam"><CODE>MapSqlParameterSource</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/support/GeneratedKeyHolder.html" title="class in org.springframework.jdbc.support"><CODE>GeneratedKeyHolder</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])"><!-- --></A><H3>
update</H3>
<PRE>
int <B>update</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
           <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>&nbsp;paramSource,
           <A HREF="../../../../../org/springframework/jdbc/support/KeyHolder.html" title="interface in org.springframework.jdbc.support">KeyHolder</A>&nbsp;generatedKeyHolder,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]&nbsp;keyColumnNames)
           throws <A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></PRE>
<DL>
<DD>Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - SQL containing named parameters<DD><CODE>paramSource</CODE> - container of arguments and SQL types to bind to the query<DD><CODE>generatedKeyHolder</CODE> - KeyHolder that will hold the generated keys<DD><CODE>keyColumnNames</CODE> - names of the columns that will have keys generated for them
<DT><B>Returns:</B><DD>the number of rows affected
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../../org/springframework/dao/DataAccessException.html" title="class in org.springframework.dao">DataAccessException</A></CODE> - if there is any problem issuing the update<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/jdbc/core/namedparam/MapSqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam"><CODE>MapSqlParameterSource</CODE></A>, 
<A HREF="../../../../../org/springframework/jdbc/support/GeneratedKeyHolder.html" title="class in org.springframework.jdbc.support"><CODE>GeneratedKeyHolder</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="batchUpdate(java.lang.String, java.util.Map[])"><!-- --></A><H3>
batchUpdate</H3>
<PRE>
int[] <B>batchUpdate</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;[]&nbsp;batchValues)</PRE>
<DL>
<DD>Executes a batch using the supplied SQL statement with the batch of supplied arguments.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - the SQL statement to execute<DD><CODE>batchValues</CODE> - the array of Maps containing the batch of arguments for the query
<DT><B>Returns:</B><DD>an array containing the numbers of rows affected by each update in the batch</DL>
</DD>
</DL>
<HR>

<A NAME="batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])"><!-- --></A><H3>
batchUpdate</H3>
<PRE>
int[] <B>batchUpdate</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;sql,
                  <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam">SqlParameterSource</A>[]&nbsp;batchArgs)</PRE>
<DL>
<DD>Execute a batch using the supplied SQL statement with the batch of supplied arguments.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sql</CODE> - the SQL statement to execute<DD><CODE>batchArgs</CODE> - the array of <A HREF="../../../../../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam"><CODE>SqlParameterSource</CODE></A> containing the batch of arguments for the query
<DT><B>Returns:</B><DD>an array containing the numbers of rows affected by each update in the batch</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcDaoSupport.html" title="class in org.springframework.jdbc.core.namedparam"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="NamedParameterJdbcOperations.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
