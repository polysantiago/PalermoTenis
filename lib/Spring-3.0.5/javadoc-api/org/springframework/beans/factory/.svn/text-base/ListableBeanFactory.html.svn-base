<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:22:40 BST 2010 -->
<TITLE>
ListableBeanFactory
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ListableBeanFactory";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/beans/factory/NamedBean.html" title="interface in org.springframework.beans.factory"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/beans/factory/ListableBeanFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ListableBeanFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.beans.factory</FONT>
<BR>
Interface ListableBeanFactory</H2>
<DL>
<DT><B>All Superinterfaces:</B> <DD><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A></DD>
</DL>
<DL>
<DT><B>All Known Subinterfaces:</B> <DD><A HREF="../../../../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context">ApplicationContext</A>, <A HREF="../../../../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>, <A HREF="../../../../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>, <A HREF="../../../../org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html" title="interface in org.springframework.web.portlet.context">ConfigurablePortletApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/ConfigurableWebApplicationContext.html" title="interface in org.springframework.web.context">ConfigurableWebApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context">WebApplicationContext</A></DD>
</DL>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableConfigApplicationContext</A>, <A HREF="../../../../org/springframework/web/portlet/context/AbstractRefreshablePortletApplicationContext.html" title="class in org.springframework.web.portlet.context">AbstractRefreshablePortletApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/support/AbstractRefreshableWebApplicationContext.html" title="class in org.springframework.web.context.support">AbstractRefreshableWebApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/AbstractXmlApplicationContext.html" title="class in org.springframework.context.support">AbstractXmlApplicationContext</A>, <A HREF="../../../../org/springframework/context/annotation/AnnotationConfigApplicationContext.html" title="class in org.springframework.context.annotation">AnnotationConfigApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/support/AnnotationConfigWebApplicationContext.html" title="class in org.springframework.web.context.support">AnnotationConfigWebApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>, <A HREF="../../../../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>, <A HREF="../../../../org/springframework/context/support/FileSystemXmlApplicationContext.html" title="class in org.springframework.context.support">FileSystemXmlApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/support/GenericWebApplicationContext.html" title="class in org.springframework.web.context.support">GenericWebApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/GenericXmlApplicationContext.html" title="class in org.springframework.context.support">GenericXmlApplicationContext</A>, <A HREF="../../../../org/springframework/jca/context/ResourceAdapterApplicationContext.html" title="class in org.springframework.jca.context">ResourceAdapterApplicationContext</A>, <A HREF="../../../../org/springframework/context/support/StaticApplicationContext.html" title="class in org.springframework.context.support">StaticApplicationContext</A>, <A HREF="../../../../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>, <A HREF="../../../../org/springframework/web/portlet/context/StaticPortletApplicationContext.html" title="class in org.springframework.web.portlet.context">StaticPortletApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/support/StaticWebApplicationContext.html" title="class in org.springframework.web.context.support">StaticWebApplicationContext</A>, <A HREF="../../../../org/springframework/beans/factory/xml/XmlBeanFactory.html" title="class in org.springframework.beans.factory.xml">XmlBeanFactory</A>, <A HREF="../../../../org/springframework/web/portlet/context/XmlPortletApplicationContext.html" title="class in org.springframework.web.portlet.context">XmlPortletApplicationContext</A>, <A HREF="../../../../org/springframework/web/context/support/XmlWebApplicationContext.html" title="class in org.springframework.web.context.support">XmlWebApplicationContext</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>ListableBeanFactory</B><DT>extends <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A></DL>
</PRE>

<P>
Extension of the <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A> interface to be implemented by bean factories
 that can enumerate all their bean instances, rather than attempting bean lookup
 by name one by one as requested by clients. BeanFactory implementations that
 preload all their bean definitions (such as XML-based factories) may implement
 this interface.

 <p>If this is a <A HREF="../../../../org/springframework/beans/factory/HierarchicalBeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>HierarchicalBeanFactory</CODE></A>, the return values will <i>not</i>
 take any BeanFactory hierarchy into account, but will relate only to the beans
 defined in the current factory. Use the <A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory"><CODE>BeanFactoryUtils</CODE></A> helper class
 to consider beans in ancestor factories too.

 <p>The methods in this interface will just respect bean definitions of this factory.
 They will ignore any singleton beans that have been registered by other means like
 <A HREF="../../../../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><CODE>ConfigurableBeanFactory</CODE></A>'s
 <code>registerSingleton</code> method, with the exception of
 <code>getBeanNamesOfType</code> and <code>getBeansOfType</code> which will check
 such manually registered singletons too. Of course, BeanFactory's <code>getBean</code>
 does allow transparent access to such special beans as well. However, in typical
 scenarios, all beans will be defined by external bean definitions anyway, so most
 applications don't need to worry about this differentation.

 <p><b>NOTE:</b> With the exception of <code>getBeanDefinitionCount</code>
 and <code>containsBeanDefinition</code>, the methods in this interface
 are not designed for frequent invocation. Implementations may be slow.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>16 April 2001</DD>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/HierarchicalBeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>HierarchicalBeanFactory</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory"><CODE>BeanFactoryUtils</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.beans.factory.BeanFactory"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.beans.factory.<A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#FACTORY_BEAN_PREFIX">FACTORY_BEAN_PREFIX</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#containsBeanDefinition(java.lang.String)">containsBeanDefinition</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if this bean factory contains a bean definition with the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;A extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt; 
<BR>
A</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#findAnnotationOnBean(java.lang.String, java.lang.Class)">findAnnotationOnBean</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;A&gt;&nbsp;annotationType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find a <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>Annotation</CODE></A> of <code>annotationType</code> on the specified
 bean, traversing its interfaces and super classes if no annotation can be
 found on the given class itself.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanDefinitionCount()">getBeanDefinitionCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the number of beans defined in the factory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanDefinitionNames()">getBeanDefinitionNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the names of all beans defined in this factory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanNamesForType(java.lang.Class)">getBeanNamesForType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the names of beans matching the given type (including subclasses),
 judging from either bean definitions or the value of <code>getObjectType</code>
 in the case of FactoryBeans.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanNamesForType(java.lang.Class, boolean, boolean)">getBeanNamesForType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type,
                    boolean&nbsp;includeNonSingletons,
                    boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the names of beans matching the given type (including subclasses),
 judging from either bean definitions or the value of <code>getObjectType</code>
 in the case of FactoryBeans.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeansOfType(java.lang.Class)">getBeansOfType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the bean instances that match the given object type (including
 subclasses), judging from either bean definitions or the value of
 <code>getObjectType</code> in the case of FactoryBeans.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeansOfType(java.lang.Class, boolean, boolean)">getBeansOfType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
               boolean&nbsp;includeNonSingletons,
               boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the bean instances that match the given object type (including
 subclasses), judging from either bean definitions or the value of
 <code>getObjectType</code> in the case of FactoryBeans.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeansWithAnnotation(java.lang.Class)">getBeansWithAnnotation</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt;&nbsp;annotationType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find all beans whose <code>Class</code> has the supplied <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>Annotation</CODE></A> type.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.factory.BeanFactory"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.factory.<A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#containsBean(java.lang.String)">containsBean</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getAliases(java.lang.String)">getAliases</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.Class)">getBean</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String)">getBean</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String, java.lang.Class)">getBean</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String, java.lang.Object...)">getBean</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#getType(java.lang.String)">getType</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#isPrototype(java.lang.String)">isPrototype</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#isSingleton(java.lang.String)">isSingleton</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#isTypeMatch(java.lang.String, java.lang.Class)">isTypeMatch</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="containsBeanDefinition(java.lang.String)"><!-- --></A><H3>
containsBeanDefinition</H3>
<PRE>
boolean <B>containsBeanDefinition</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD>Check if this bean factory contains a bean definition with the given name.
 <p>Does not consider any hierarchy this factory may participate in,
 and ignores any singleton beans that have been registered by
 other means than bean definitions.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean to look for
<DT><B>Returns:</B><DD>if this bean factory contains a bean definition with the given name<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#containsBean(java.lang.String)"><CODE>BeanFactory.containsBean(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBeanDefinitionCount()"><!-- --></A><H3>
getBeanDefinitionCount</H3>
<PRE>
int <B>getBeanDefinitionCount</B>()</PRE>
<DL>
<DD>Return the number of beans defined in the factory.
 <p>Does not consider any hierarchy this factory may participate in,
 and ignores any singleton beans that have been registered by
 other means than bean definitions.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the number of beans defined in the factory</DL>
</DD>
</DL>
<HR>

<A NAME="getBeanDefinitionNames()"><!-- --></A><H3>
getBeanDefinitionNames</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>getBeanDefinitionNames</B>()</PRE>
<DL>
<DD>Return the names of all beans defined in this factory.
 <p>Does not consider any hierarchy this factory may participate in,
 and ignores any singleton beans that have been registered by
 other means than bean definitions.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the names of all beans defined in this factory,
 or an empty array if none defined</DL>
</DD>
</DL>
<HR>

<A NAME="getBeanNamesForType(java.lang.Class)"><!-- --></A><H3>
getBeanNamesForType</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>getBeanNamesForType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type)</PRE>
<DL>
<DD>Return the names of beans matching the given type (including subclasses),
 judging from either bean definitions or the value of <code>getObjectType</code>
 in the case of FactoryBeans.
 <p><b>NOTE: This method introspects top-level beans only.</b> It does <i>not</i>
 check nested beans which might match the specified type as well.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p>Does not consider any hierarchy this factory may participate in.
 Use BeanFactoryUtils' <code>beanNamesForTypeIncludingAncestors</code>
 to include beans in ancestor factories too.
 <p>Note: Does <i>not</i> ignore singleton beans that have been registered
 by other means than bean definitions.
 <p>This version of <code>getBeanNamesForType</code> matches all kinds of beans,
 be it singletons, prototypes, or FactoryBeans. In most implementations, the
 result will be the same as for <code>getBeanNamesOfType(type, true, true)</code>.
 <p>Bean names returned by this method should always return bean names <i>in the
 order of definition</i> in the backend configuration, as far as possible.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the class or interface to match, or <code>null</code> for all bean names
<DT><B>Returns:</B><DD>the names of beans (or objects created by FactoryBeans) matching
 the given object type (including subclasses), or an empty array if none<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()"><CODE>FactoryBean.getObjectType()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><CODE>BeanFactoryUtils.beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBeanNamesForType(java.lang.Class, boolean, boolean)"><!-- --></A><H3>
getBeanNamesForType</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>getBeanNamesForType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type,
                             boolean&nbsp;includeNonSingletons,
                             boolean&nbsp;allowEagerInit)</PRE>
<DL>
<DD>Return the names of beans matching the given type (including subclasses),
 judging from either bean definitions or the value of <code>getObjectType</code>
 in the case of FactoryBeans.
 <p><b>NOTE: This method introspects top-level beans only.</b> It does <i>not</i>
 check nested beans which might match the specified type as well.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,
 which means that FactoryBeans will get initialized. If the object created by the
 FactoryBean doesn't match, the raw FactoryBean itself will be matched against the
 type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked
 (which doesn't require initialization of each FactoryBean).
$        * <p>Does not consider any hierarchy this factory may participate in.
 Use BeanFactoryUtils' <code>beanNamesForTypeIncludingAncestors</code>
 to include beans in ancestor factories too.
 <p>Note: Does <i>not</i> ignore singleton beans that have been registered
 by other means than bean definitions.
 <p>Bean names returned by this method should always return bean names <i>in the
 order of definition</i> in the backend configuration, as far as possible.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the class or interface to match, or <code>null</code> for all bean names<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.
<DT><B>Returns:</B><DD>the names of beans (or objects created by FactoryBeans) matching
 the given object type (including subclasses), or an empty array if none<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()"><CODE>FactoryBean.getObjectType()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><CODE>BeanFactoryUtils.beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBeansOfType(java.lang.Class)"><!-- --></A><H3>
getBeansOfType</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt; <B>getBeansOfType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)
                             throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return the bean instances that match the given object type (including
 subclasses), judging from either bean definitions or the value of
 <code>getObjectType</code> in the case of FactoryBeans.
 <p><b>NOTE: This method introspects top-level beans only.</b> It does <i>not</i>
 check nested beans which might match the specified type as well.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p>Does not consider any hierarchy this factory may participate in.
 Use BeanFactoryUtils' <code>beansOfTypeIncludingAncestors</code>
 to include beans in ancestor factories too.
 <p>Note: Does <i>not</i> ignore singleton beans that have been registered
 by other means than bean definitions.
 <p>This version of getBeansOfType matches all kinds of beans, be it
 singletons, prototypes, or FactoryBeans. In most implementations, the
 result will be the same as for <code>getBeansOfType(type, true, true)</code>.
 <p>The Map returned by this method should always return bean names and
 corresponding bean instances <i>in the order of definition</i> in the
 backend configuration, as far as possible.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the class or interface to match, or <code>null</code> for all concrete beans
<DT><B>Returns:</B><DD>a Map with the matching beans, containing the bean names as
 keys and the corresponding bean instances as values
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if a bean could not be created<DT><B>Since:</B></DT>
  <DD>1.1.2</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()"><CODE>FactoryBean.getObjectType()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><CODE>BeanFactoryUtils.beansOfTypeIncludingAncestors(ListableBeanFactory, Class)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBeansOfType(java.lang.Class, boolean, boolean)"><!-- --></A><H3>
getBeansOfType</H3>
<PRE>
&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt; <B>getBeansOfType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                                 boolean&nbsp;includeNonSingletons,
                                 boolean&nbsp;allowEagerInit)
                             throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return the bean instances that match the given object type (including
 subclasses), judging from either bean definitions or the value of
 <code>getObjectType</code> in the case of FactoryBeans.
 <p><b>NOTE: This method introspects top-level beans only.</b> It does <i>not</i>
 check nested beans which might match the specified type as well.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,
 which means that FactoryBeans will get initialized. If the object created by the
 FactoryBean doesn't match, the raw FactoryBean itself will be matched against the
 type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked
 (which doesn't require initialization of each FactoryBean).
 <p>Does not consider any hierarchy this factory may participate in.
 Use BeanFactoryUtils' <code>beansOfTypeIncludingAncestors</code>
 to include beans in ancestor factories too.
 <p>Note: Does <i>not</i> ignore singleton beans that have been registered
 by other means than bean definitions.
 <p>The Map returned by this method should always return bean names and
 corresponding bean instances <i>in the order of definition</i> in the
 backend configuration, as far as possible.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>type</CODE> - the class or interface to match, or <code>null</code> for all concrete beans<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.
<DT><B>Returns:</B><DD>a Map with the matching beans, containing the bean names as
 keys and the corresponding bean instances as values
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if a bean could not be created<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()"><CODE>FactoryBean.getObjectType()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><CODE>BeanFactoryUtils.beansOfTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getBeansWithAnnotation(java.lang.Class)"><!-- --></A><H3>
getBeansWithAnnotation</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>getBeansWithAnnotation</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt;&nbsp;annotationType)
                                          throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Find all beans whose <code>Class</code> has the supplied <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>Annotation</CODE></A> type.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>annotationType</CODE> - the type of annotation to look for
<DT><B>Returns:</B><DD>a Map with the matching beans, containing the bean names as
 keys and the corresponding bean instances as values
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if a bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="findAnnotationOnBean(java.lang.String, java.lang.Class)"><!-- --></A><H3>
findAnnotationOnBean</H3>
<PRE>
&lt;A extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation">Annotation</A>&gt; A <B>findAnnotationOnBean</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;A&gt;&nbsp;annotationType)</PRE>
<DL>
<DD>Find a <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>Annotation</CODE></A> of <code>annotationType</code> on the specified
 bean, traversing its interfaces and super classes if no annotation can be
 found on the given class itself.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean to look for annotations on<DD><CODE>annotationType</CODE> - the annotation class to look for
<DT><B>Returns:</B><DD>the annotation of the given type found, or <code>null</code></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/beans/factory/NamedBean.html" title="interface in org.springframework.beans.factory"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/beans/factory/ListableBeanFactory.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ListableBeanFactory.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
