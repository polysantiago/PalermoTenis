<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:22:39 BST 2010 -->
<TITLE>
BeanFactoryUtils
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="BeanFactoryUtils";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/beans/factory/BeanFactoryUtils.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BeanFactoryUtils.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.beans.factory</FONT>
<BR>
Class BeanFactoryUtils</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.beans.factory.BeanFactoryUtils</B>
</PRE>
<HR>
<DL>
<DT><PRE>public abstract class <B>BeanFactoryUtils</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
Convenience methods operating on bean factories, in particular
 on the <A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>ListableBeanFactory</CODE></A> interface.

 <p>Returns bean counts, bean names or bean instances,
 taking into account the nesting hierarchy of a bean factory
 (which the methods defined on the ListableBeanFactory interface don't,
 in contrast to the methods defined on the BeanFactory interface).
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>04.07.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Juergen Hoeller</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#GENERATED_BEAN_NAME_SEPARATOR">GENERATED_BEAN_NAME_SEPARATOR</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Separator for generated bean names.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#BeanFactoryUtils()">BeanFactoryUtils</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)">beanNamesForTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all bean names for the given type, including those defined in ancestor
 factories.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)">beanNamesForTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type,
                                   boolean&nbsp;includeNonSingletons,
                                   boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all bean names for the given type, including those defined in ancestor
 factories.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)">beanNamesIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return all bean names in the factory, including ancestor factories.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)">beanOfType</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a single bean of the given type or subtypes, not looking in ancestor
 factories.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)">beanOfType</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
           boolean&nbsp;includeNonSingletons,
           boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a single bean of the given type or subtypes, not looking in ancestor
 factories.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)">beanOfTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)">beanOfTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                             boolean&nbsp;includeNonSingletons,
                             boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)">beansOfTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt;</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)">beansOfTypeIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                              boolean&nbsp;includeNonSingletons,
                              boolean&nbsp;allowEagerInit)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#countBeansIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)">countBeansIncludingAncestors</A></B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Count all beans in any hierarchy in which this factory participates.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#isFactoryDereference(java.lang.String)">isFactoryDereference</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether the given name is a factory dereference
 (beginning with the factory dereference prefix).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#isGeneratedBeanName(java.lang.String)">isGeneratedBeanName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether the given name is a bean name which has been generated
 by the default naming strategy (containing a "#..." part).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#originalBeanName(java.lang.String)">originalBeanName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extract the "raw" bean name from the given (potentially generated) bean name,
 excluding any "#..." suffixes which might have been added for uniqueness.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#transformedBeanName(java.lang.String)">transformedBeanName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the actual bean name, stripping out the factory dereference
 prefix (if any, also stripping repeated factory prefixes if found).</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="GENERATED_BEAN_NAME_SEPARATOR"><!-- --></A><H3>
GENERATED_BEAN_NAME_SEPARATOR</H3>
<PRE>
public static final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>GENERATED_BEAN_NAME_SEPARATOR</B></PRE>
<DL>
<DD>Separator for generated bean names. If a class name or parent name is not
 unique, "#1", "#2" etc will be appended, until the name becomes unique.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.springframework.beans.factory.BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="BeanFactoryUtils()"><!-- --></A><H3>
BeanFactoryUtils</H3>
<PRE>
public <B>BeanFactoryUtils</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="isFactoryDereference(java.lang.String)"><!-- --></A><H3>
isFactoryDereference</H3>
<PRE>
public static boolean <B>isFactoryDereference</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
<DL>
<DD>Return whether the given name is a factory dereference
 (beginning with the factory dereference prefix).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the bean
<DT><B>Returns:</B><DD>whether the given name is a factory dereference<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#FACTORY_BEAN_PREFIX"><CODE>BeanFactory.FACTORY_BEAN_PREFIX</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="transformedBeanName(java.lang.String)"><!-- --></A><H3>
transformedBeanName</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>transformedBeanName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
<DL>
<DD>Return the actual bean name, stripping out the factory dereference
 prefix (if any, also stripping repeated factory prefixes if found).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the bean
<DT><B>Returns:</B><DD>the transformed name<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactory.html#FACTORY_BEAN_PREFIX"><CODE>BeanFactory.FACTORY_BEAN_PREFIX</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isGeneratedBeanName(java.lang.String)"><!-- --></A><H3>
isGeneratedBeanName</H3>
<PRE>
public static boolean <B>isGeneratedBeanName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
<DL>
<DD>Return whether the given name is a bean name which has been generated
 by the default naming strategy (containing a "#..." part).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the name of the bean
<DT><B>Returns:</B><DD>whether the given name is a generated bean name<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#GENERATED_BEAN_NAME_SEPARATOR"><CODE>GENERATED_BEAN_NAME_SEPARATOR</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html#generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)"><CODE>BeanDefinitionReaderUtils.generateBeanName(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/support/DefaultBeanNameGenerator.html" title="class in org.springframework.beans.factory.support"><CODE>DefaultBeanNameGenerator</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="originalBeanName(java.lang.String)"><!-- --></A><H3>
originalBeanName</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>originalBeanName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</PRE>
<DL>
<DD>Extract the "raw" bean name from the given (potentially generated) bean name,
 excluding any "#..." suffixes which might have been added for uniqueness.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the potentially generated bean name
<DT><B>Returns:</B><DD>the raw bean name<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#GENERATED_BEAN_NAME_SEPARATOR"><CODE>GENERATED_BEAN_NAME_SEPARATOR</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="countBeansIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)"><!-- --></A><H3>
countBeansIncludingAncestors</H3>
<PRE>
public static int <B>countBeansIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf)</PRE>
<DL>
<DD>Count all beans in any hierarchy in which this factory participates.
 Includes counts of ancestor bean factories.
 <p>Beans that are "overridden" (specified in a descendant factory
 with the same name) are only counted once.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory
<DT><B>Returns:</B><DD>count of beans including those defined in ancestor factories</DL>
</DD>
</DL>
<HR>

<A NAME="beanNamesIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)"><!-- --></A><H3>
beanNamesIncludingAncestors</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>beanNamesIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf)</PRE>
<DL>
<DD>Return all bean names in the factory, including ancestor factories.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory
<DT><B>Returns:</B><DD>the array of matching bean names, or an empty array if none<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><CODE>beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><!-- --></A><H3>
beanNamesForTypeIncludingAncestors</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>beanNamesForTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type)</PRE>
<DL>
<DD>Get all bean names for the given type, including those defined in ancestor
 factories. Will return unique names in case of overridden bean definitions.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p>This version of <code>beanNamesForTypeIncludingAncestors</code> automatically
 includes prototypes and FactoryBeans.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - the type that beans must match
<DT><B>Returns:</B><DD>the array of matching bean names, or an empty array if none</DL>
</DD>
</DL>
<HR>

<A NAME="beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><!-- --></A><H3>
beanNamesForTypeIncludingAncestors</H3>
<PRE>
public static <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>beanNamesForTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;type,
                                                          boolean&nbsp;includeNonSingletons,
                                                          boolean&nbsp;allowEagerInit)</PRE>
<DL>
<DD>Get all bean names for the given type, including those defined in ancestor
 factories. Will return unique names in case of overridden bean definitions.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit"
 flag is set, which means that FactoryBeans will get initialized. If the
 object created by the FactoryBean doesn't match, the raw FactoryBean itself
 will be matched against the type. If "allowEagerInit" is not set,
 only raw FactoryBeans will be checked (which doesn't require initialization
 of each FactoryBean).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.<DD><CODE>type</CODE> - the type that beans must match
<DT><B>Returns:</B><DD>the array of matching bean names, or an empty array if none</DL>
</DD>
</DL>
<HR>

<A NAME="beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><!-- --></A><H3>
beansOfTypeIncludingAncestors</H3>
<PRE>
public static &lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt; <B>beansOfTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)
                                                   throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.
 The returned Map will only contain beans of this type.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,
 i.e. such beans will be returned from the lowest factory that they are being found in,
 hiding corresponding beans in ancestor factories.</b> This feature allows for
 'replacing' beans by explicitly choosing the same bean name in a child factory;
 the bean in the ancestor factory won't be visible then, not even for by-type lookups.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match
<DT><B>Returns:</B><DD>the Map of matching bean instances, or an empty Map if none
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if a bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><!-- --></A><H3>
beansOfTypeIncludingAncestors</H3>
<PRE>
public static &lt;T&gt; <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,T&gt; <B>beansOfTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                                                              boolean&nbsp;includeNonSingletons,
                                                              boolean&nbsp;allowEagerInit)
                                                   throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.
 The returned Map will only contain beans of this type.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,
 which means that FactoryBeans will get initialized. If the object created by the
 FactoryBean doesn't match, the raw FactoryBean itself will be matched against the
 type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked
 (which doesn't require initialization of each FactoryBean).
 <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,
 i.e. such beans will be returned from the lowest factory that they are being found in,
 hiding corresponding beans in ancestor factories.</b> This feature allows for
 'replacing' beans by explicitly choosing the same bean name in a child factory;
 the bean in the ancestor factory won't be visible then, not even for by-type lookups.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.
<DT><B>Returns:</B><DD>the Map of matching bean instances, or an empty Map if none
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if a bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><!-- --></A><H3>
beanOfTypeIncludingAncestors</H3>
<PRE>
public static &lt;T&gt; T <B>beanOfTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)
                                      throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory. Useful convenience method when we expect a
 single bean and don't care about the bean name.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p>This version of <code>beanOfTypeIncludingAncestors</code> automatically includes
 prototypes and FactoryBeans.
 <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,
 i.e. such beans will be returned from the lowest factory that they are being found in,
 hiding corresponding beans in ancestor factories.</b> This feature allows for
 'replacing' beans by explicitly choosing the same bean name in a child factory;
 the bean in the ancestor factory won't be visible then, not even for by-type lookups.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match
<DT><B>Returns:</B><DD>the matching bean instance
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/factory/NoSuchBeanDefinitionException.html" title="class in org.springframework.beans.factory">NoSuchBeanDefinitionException</A></CODE> - if 0 or more than 1 beans of the given type were found
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if the bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><!-- --></A><H3>
beanOfTypeIncludingAncestors</H3>
<PRE>
public static &lt;T&gt; T <B>beanOfTypeIncludingAncestors</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                                                 boolean&nbsp;includeNonSingletons,
                                                 boolean&nbsp;allowEagerInit)
                                      throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory. Useful convenience method when we expect a
 single bean and don't care about the bean name.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit" flag is set,
 which means that FactoryBeans will get initialized. If the object created by the
 FactoryBean doesn't match, the raw FactoryBean itself will be matched against the
 type. If "allowEagerInit" is not set, only raw FactoryBeans will be checked
 (which doesn't require initialization of each FactoryBean).
 <p><b>Note: Beans of the same name will take precedence at the 'lowest' factory level,
 i.e. such beans will be returned from the lowest factory that they are being found in,
 hiding corresponding beans in ancestor factories.</b> This feature allows for
 'replacing' beans by explicitly choosing the same bean name in a child factory;
 the bean in the ancestor factory won't be visible then, not even for by-type lookups.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.
<DT><B>Returns:</B><DD>the matching bean instance
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/factory/NoSuchBeanDefinitionException.html" title="class in org.springframework.beans.factory">NoSuchBeanDefinitionException</A></CODE> - if 0 or more than 1 beans of the given type were found
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if the bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><!-- --></A><H3>
beanOfType</H3>
<PRE>
public static &lt;T&gt; T <B>beanOfType</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type)
                    throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return a single bean of the given type or subtypes, not looking in ancestor
 factories. Useful convenience method when we expect a single bean and
 don't care about the bean name.
 <p>Does consider objects created by FactoryBeans, which means that FactoryBeans
 will get initialized. If the object created by the FactoryBean doesn't match,
 the raw FactoryBean itself will be matched against the type.
 <p>This version of <code>beanOfType</code> automatically includes
 prototypes and FactoryBeans.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match
<DT><B>Returns:</B><DD>the matching bean instance
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/factory/NoSuchBeanDefinitionException.html" title="class in org.springframework.beans.factory">NoSuchBeanDefinitionException</A></CODE> - if 0 or more than 1 beans of the given type were found
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if the bean could not be created</DL>
</DD>
</DL>
<HR>

<A NAME="beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><!-- --></A><H3>
beanOfType</H3>
<PRE>
public static &lt;T&gt; T <B>beanOfType</B>(<A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>&nbsp;lbf,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;type,
                               boolean&nbsp;includeNonSingletons,
                               boolean&nbsp;allowEagerInit)
                    throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Return a single bean of the given type or subtypes, not looking in ancestor
 factories. Useful convenience method when we expect a single bean and
 don't care about the bean name.
 <p>Does consider objects created by FactoryBeans if the "allowEagerInit"
 flag is set, which means that FactoryBeans will get initialized. If the
 object created by the FactoryBean doesn't match, the raw FactoryBean itself
 will be matched against the type. If "allowEagerInit" is not set,
 only raw FactoryBeans will be checked (which doesn't require initialization
 of each FactoryBean).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>lbf</CODE> - the bean factory<DD><CODE>type</CODE> - type of bean to match<DD><CODE>includeNonSingletons</CODE> - whether to include prototype or scoped beans too
 or just singletons (also applies to FactoryBeans)<DD><CODE>allowEagerInit</CODE> - whether to initialize <i>lazy-init singletons</i> and
 <i>objects created by FactoryBeans</i> (or by factory methods with a
 "factory-bean" reference) for the type check. Note that FactoryBeans need to be
 eagerly initialized to determine their type: So be aware that passing in "true"
 for this flag will initialize FactoryBeans and "factory-bean" references.
<DT><B>Returns:</B><DD>the matching bean instance
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/factory/NoSuchBeanDefinitionException.html" title="class in org.springframework.beans.factory">NoSuchBeanDefinitionException</A></CODE> - if 0 or more than 1 beans of the given type were found
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if the bean could not be created</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/beans/factory/BeanFactoryUtils.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BeanFactoryUtils.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
