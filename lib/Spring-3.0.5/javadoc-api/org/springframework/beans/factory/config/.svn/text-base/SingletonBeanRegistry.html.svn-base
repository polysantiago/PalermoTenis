<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:22:46 BST 2010 -->
<TITLE>
SingletonBeanRegistry
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SingletonBeanRegistry";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/beans/factory/config/SetFactoryBean.html" title="class in org.springframework.beans.factory.config"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/beans/factory/config/SingletonBeanRegistry.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SingletonBeanRegistry.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.beans.factory.config</FONT>
<BR>
Interface SingletonBeanRegistry</H2>
<DL>
<DT><B>All Known Subinterfaces:</B> <DD><A HREF="../../../../../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>, <A HREF="../../../../../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A></DD>
</DL>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>, <A HREF="../../../../../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>, <A HREF="../../../../../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>, <A HREF="../../../../../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>, <A HREF="../../../../../org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html" title="class in org.springframework.beans.factory.support">FactoryBeanRegistrySupport</A>, <A HREF="../../../../../org/springframework/beans/factory/xml/XmlBeanFactory.html" title="class in org.springframework.beans.factory.xml">XmlBeanFactory</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>SingletonBeanRegistry</B></DL>
</PRE>

<P>
Interface that defines a registry for shared bean instances.
 Can be implemented by <A HREF="../../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>
 implementations in order to expose their singleton management facility
 in a uniform manner.

 <p>The <A HREF="../../../../../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><CODE>ConfigurableBeanFactory</CODE></A> interface extends this interface.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><CODE>ConfigurableBeanFactory</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support"><CODE>DefaultSingletonBeanRegistry</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support"><CODE>AbstractBeanFactory</CODE></A></DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#containsSingleton(java.lang.String)">containsSingleton</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check if this registry contains a singleton instance with the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#getSingleton(java.lang.String)">getSingleton</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the (raw) singleton object registered under the given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#getSingletonCount()">getSingletonCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the number of singleton beans registered in this registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#getSingletonNames()">getSingletonNames</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the names of singleton beans registered in this registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)">registerSingleton</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;singletonObject)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register the given existing object as singleton in the bean registry,
 under the given bean name.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="registerSingleton(java.lang.String, java.lang.Object)"><!-- --></A><H3>
registerSingleton</H3>
<PRE>
void <B>registerSingleton</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;singletonObject)</PRE>
<DL>
<DD>Register the given existing object as singleton in the bean registry,
 under the given bean name.
 <p>The given instance is supposed to be fully initialized; the registry
 will not perform any initialization callbacks (in particular, it won't
 call InitializingBean's <code>afterPropertiesSet</code> method).
 The given instance will not receive any destruction callbacks
 (like DisposableBean's <code>destroy</code> method) either.
 <p>When running within a full BeanFactory: <b>Register a bean definition
 instead of an existing instance if your bean is supposed to receive
 initialization and/or destruction callbacks.</b>
 <p>Typically invoked during registry configuration, but can also be used
 for runtime registration of singletons. As a consequence, a registry
 implementation should synchronize singleton access; it will have to do
 this anyway if it supports a BeanFactory's lazy initialization of singletons.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean<DD><CODE>singletonObject</CODE> - the existing singleton object<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()"><CODE>InitializingBean.afterPropertiesSet()</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/DisposableBean.html#destroy()"><CODE>DisposableBean.destroy()</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><CODE>BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSingleton(java.lang.String)"><!-- --></A><H3>
getSingleton</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getSingleton</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD>Return the (raw) singleton object registered under the given name.
 <p>Only checks already instantiated singletons; does not return an Object
 for singleton bean definitions which have not been instantiated yet.
 <p>The main purpose of this method is to access manually registered singletons
 (see <A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>). Can also be used to access a singleton
 defined by a bean definition that already been created, in a raw fashion.
 <p><b>NOTE:</b> This lookup method is not aware of FactoryBean prefixes or aliases.
 You need to resolve the canonical bean name first before obtaining the singleton instance.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean to look for
<DT><B>Returns:</B><DD>the registered singleton object, or <code>null</code> if none found<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#getBeanDefinition(java.lang.String)"><CODE>ConfigurableListableBeanFactory.getBeanDefinition(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="containsSingleton(java.lang.String)"><!-- --></A><H3>
containsSingleton</H3>
<PRE>
boolean <B>containsSingleton</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD>Check if this registry contains a singleton instance with the given name.
 <p>Only checks already instantiated singletons; does not return <code>true</code>
 for singleton bean definitions which have not been instantiated yet.
 <p>The main purpose of this method is to check manually registered singletons
 (see <A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>). Can also be used to check whether a
 singleton defined by a bean definition has already been created.
 <p>To check whether a bean factory contains a bean definition with a given name,
 use ListableBeanFactory's <code>containsBeanDefinition</code>. Calling both
 <code>containsBeanDefinition</code> and <code>containsSingleton</code> answers
 whether a specific bean factory contains a local bean instance with the given name.
 <p>Use BeanFactory's <code>containsBean</code> for general checks whether the
 factory knows about a bean with a given name (whether manually registered singleton
 instance or created by bean definition), also checking ancestor factories.
 <p><b>NOTE:</b> This lookup method is not aware of FactoryBean prefixes or aliases.
 You need to resolve the canonical bean name first before checking the singleton status.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean to look for
<DT><B>Returns:</B><DD>if this bean factory contains a singleton instance with the given name<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/ListableBeanFactory.html#containsBeanDefinition(java.lang.String)"><CODE>ListableBeanFactory.containsBeanDefinition(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/BeanFactory.html#containsBean(java.lang.String)"><CODE>BeanFactory.containsBean(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSingletonNames()"><!-- --></A><H3>
getSingletonNames</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>getSingletonNames</B>()</PRE>
<DL>
<DD>Return the names of singleton beans registered in this registry.
 <p>Only checks already instantiated singletons; does not return names
 for singleton bean definitions which have not been instantiated yet.
 <p>The main purpose of this method is to check manually registered singletons
 (see <A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>). Can also be used to check which singletons
 defined by a bean definition have already been created.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the list of names as a String array (never <code>null</code>)<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#getBeanDefinitionNames()"><CODE>BeanDefinitionRegistry.getBeanDefinitionNames()</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanDefinitionNames()"><CODE>ListableBeanFactory.getBeanDefinitionNames()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSingletonCount()"><!-- --></A><H3>
getSingletonCount</H3>
<PRE>
int <B>getSingletonCount</B>()</PRE>
<DL>
<DD>Return the number of singleton beans registered in this registry.
 <p>Only checks already instantiated singletons; does not count
 singleton bean definitions which have not been instantiated yet.
 <p>The main purpose of this method is to check manually registered singletons
 (see <A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>). Can also be used to count the number of
 singletons defined by a bean definition that have already been created.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the number of singleton beans<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><CODE>registerSingleton(java.lang.String, java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#getBeanDefinitionCount()"><CODE>BeanDefinitionRegistry.getBeanDefinitionCount()</CODE></A>, 
<A HREF="../../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeanDefinitionCount()"><CODE>ListableBeanFactory.getBeanDefinitionCount()</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/beans/factory/config/SetFactoryBean.html" title="class in org.springframework.beans.factory.config"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/beans/factory/config/SingletonBeanRegistry.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SingletonBeanRegistry.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
