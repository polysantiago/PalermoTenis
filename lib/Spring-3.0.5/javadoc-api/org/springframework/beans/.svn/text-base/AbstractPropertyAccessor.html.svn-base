<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:22:36 BST 2010 -->
<TITLE>
AbstractPropertyAccessor
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="AbstractPropertyAccessor";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../org/springframework/beans/BeanInstantiationException.html" title="class in org.springframework.beans"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/beans/AbstractPropertyAccessor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AbstractPropertyAccessor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.beans</FONT>
<BR>
Class AbstractPropertyAccessor</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">org.springframework.beans.PropertyEditorRegistrySupport</A>
      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.beans.AbstractPropertyAccessor</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A>, <A HREF="../../../org/springframework/beans/TypeConverter.html" title="interface in org.springframework.beans">TypeConverter</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>, <A HREF="../../../org/springframework/beans/DirectFieldAccessor.html" title="class in org.springframework.beans">DirectFieldAccessor</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>AbstractPropertyAccessor</B><DT>extends <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A><DT>implements <A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A></DL>
</PRE>

<P>
Abstract implementation of the <A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans"><CODE>PropertyAccessor</CODE></A> interface.
 Provides base implementations of all convenience methods, with the
 implementation of actual property access left to subclasses.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#getPropertyValue(java.lang.String)"><CODE>getPropertyValue(java.lang.String)</CODE></A>, 
<A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValue(org.springframework.beans.PropertyValue)"><CODE>setPropertyValue(org.springframework.beans.PropertyValue)</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.beans.PropertyAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.beans.<A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#NESTED_PROPERTY_SEPARATOR">NESTED_PROPERTY_SEPARATOR</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#NESTED_PROPERTY_SEPARATOR_CHAR">NESTED_PROPERTY_SEPARATOR_CHAR</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#PROPERTY_KEY_PREFIX">PROPERTY_KEY_PREFIX</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#PROPERTY_KEY_PREFIX_CHAR">PROPERTY_KEY_PREFIX_CHAR</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#PROPERTY_KEY_SUFFIX">PROPERTY_KEY_SUFFIX</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#PROPERTY_KEY_SUFFIX_CHAR">PROPERTY_KEY_SUFFIX_CHAR</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#AbstractPropertyAccessor()">AbstractPropertyAccessor</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T&gt; T</CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#convertIfNecessary(java.lang.Object, java.lang.Class)">convertIfNecessary</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;value,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert the value to the required type (if necessary from a String).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#getPropertyType(java.lang.String)">getPropertyType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine the property type for the given property path.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#getPropertyValue(java.lang.String)">getPropertyValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Actually get the value of a property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#isExtractOldValueForEditor()">isExtractOldValueForEditor</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether to extract the old property value when applying a
 property editor to a new value for a property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setExtractOldValueForEditor(boolean)">setExtractOldValueForEditor</A></B>(boolean&nbsp;extractOldValueForEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to extract the old property value when applying a
 property editor to a new value for a property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValue(org.springframework.beans.PropertyValue)">setPropertyValue</A></B>(<A HREF="../../../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans">PropertyValue</A>&nbsp;pv)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the specified value as current property value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValue(java.lang.String, java.lang.Object)">setPropertyValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName,
                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Actually set a property value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValues(java.util.Map)">setPropertyValues</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;?,?&gt;&nbsp;map)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform a batch update from a Map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues)">setPropertyValues</A></B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The preferred way to perform a batch update.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean)">setPropertyValues</A></B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs,
                  boolean&nbsp;ignoreUnknown)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform a batch update with more control over behavior.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)">setPropertyValues</A></B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs,
                  boolean&nbsp;ignoreUnknown,
                  boolean&nbsp;ignoreInvalid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform a batch update with full control over behavior.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.PropertyEditorRegistrySupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.beans.<A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)">copyCustomEditorsTo</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)">copyDefaultEditorsTo</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#findCustomEditor(java.lang.Class, java.lang.String)">findCustomEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getConversionService()">getConversionService</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getDefaultEditor(java.lang.Class)">getDefaultEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#guessPropertyTypeFromEditors(java.lang.String)">guessPropertyTypeFromEditors</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#hasCustomEditorForElement(java.lang.Class, java.lang.String)">hasCustomEditorForElement</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#isSharedEditor(java.beans.PropertyEditor)">isSharedEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#overrideDefaultEditor(java.lang.Class, java.beans.PropertyEditor)">overrideDefaultEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)">registerCustomEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)">registerCustomEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerDefaultEditors()">registerDefaultEditors</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)">registerSharedEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#setConversionService(org.springframework.core.convert.ConversionService)">setConversionService</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#useConfigValueEditors()">useConfigValueEditors</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.ConfigurablePropertyAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.<A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#getConversionService()">getConversionService</A>, <A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#setConversionService(org.springframework.core.convert.ConversionService)">setConversionService</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.PropertyAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.<A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#getPropertyTypeDescriptor(java.lang.String)">getPropertyTypeDescriptor</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#isReadableProperty(java.lang.String)">isReadableProperty</A>, <A HREF="../../../org/springframework/beans/PropertyAccessor.html#isWritableProperty(java.lang.String)">isWritableProperty</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.PropertyEditorRegistry"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#findCustomEditor(java.lang.Class, java.lang.String)">findCustomEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)">registerCustomEditor</A>, <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)">registerCustomEditor</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.TypeConverter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.<A HREF="../../../org/springframework/beans/TypeConverter.html" title="interface in org.springframework.beans">TypeConverter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/beans/TypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)">convertIfNecessary</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="AbstractPropertyAccessor()"><!-- --></A><H3>
AbstractPropertyAccessor</H3>
<PRE>
public <B>AbstractPropertyAccessor</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setExtractOldValueForEditor(boolean)"><!-- --></A><H3>
setExtractOldValueForEditor</H3>
<PRE>
public void <B>setExtractOldValueForEditor</B>(boolean&nbsp;extractOldValueForEditor)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#setExtractOldValueForEditor(boolean)">ConfigurablePropertyAccessor</A></CODE></B></DD>
<DD>Set whether to extract the old property value when applying a
 property editor to a new value for a property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#setExtractOldValueForEditor(boolean)">setExtractOldValueForEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isExtractOldValueForEditor()"><!-- --></A><H3>
isExtractOldValueForEditor</H3>
<PRE>
public boolean <B>isExtractOldValueForEditor</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#isExtractOldValueForEditor()">ConfigurablePropertyAccessor</A></CODE></B></DD>
<DD>Return whether to extract the old property value when applying a
 property editor to a new value for a property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html#isExtractOldValueForEditor()">isExtractOldValueForEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValue(org.springframework.beans.PropertyValue)"><!-- --></A><H3>
setPropertyValue</H3>
<PRE>
public void <B>setPropertyValue</B>(<A HREF="../../../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans">PropertyValue</A>&nbsp;pv)
                      throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValue(org.springframework.beans.PropertyValue)">PropertyAccessor</A></CODE></B></DD>
<DD>Set the specified value as current property value.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValue(org.springframework.beans.PropertyValue)">setPropertyValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pv</CODE> - an object containing the new property value
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessException.html" title="class in org.springframework.beans">PropertyAccessException</A></CODE> - if the property was valid but the
 accessor method failed or a type mismatch occured
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValues(java.util.Map)"><!-- --></A><H3>
setPropertyValues</H3>
<PRE>
public void <B>setPropertyValues</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;?,?&gt;&nbsp;map)
                       throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(java.util.Map)">PropertyAccessor</A></CODE></B></DD>
<DD>Perform a batch update from a Map.
 <p>Bulk updates from PropertyValues are more powerful: This method is
 provided for convenience. Behavior will be identical to that of
 the <A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues)"><CODE>PropertyAccessor.setPropertyValues(PropertyValues)</CODE></A> method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(java.util.Map)">setPropertyValues</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>map</CODE> - Map to take properties from. Contains property value objects,
 keyed by property name
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans">PropertyBatchUpdateException</A></CODE> - if one or more PropertyAccessExceptions
 occured for specific properties during the batch update. This exception bundles
 all individual PropertyAccessExceptions. All other properties will have been
 successfully updated.
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValues(org.springframework.beans.PropertyValues)"><!-- --></A><H3>
setPropertyValues</H3>
<PRE>
public void <B>setPropertyValues</B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs)
                       throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues)">PropertyAccessor</A></CODE></B></DD>
<DD>The preferred way to perform a batch update.
 <p>Note that performing a batch update differs from performing a single update,
 in that an implementation of this class will continue to update properties
 if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an
 invalid field name or the like) is encountered, throwing a
 <A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans"><CODE>PropertyBatchUpdateException</CODE></A> containing all the individual errors.
 This exception can be examined later to see all binding errors.
 Properties that were successfully updated remain changed.
 <p>Does not allow unknown fields or invalid fields.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues)">setPropertyValues</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pvs</CODE> - PropertyValues to set on the target object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans">PropertyBatchUpdateException</A></CODE> - if one or more PropertyAccessExceptions
 occured for specific properties during the batch update. This exception bundles
 all individual PropertyAccessExceptions. All other properties will have been
 successfully updated.
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)"><CODE>PropertyAccessor.setPropertyValues(PropertyValues, boolean, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValues(org.springframework.beans.PropertyValues, boolean)"><!-- --></A><H3>
setPropertyValues</H3>
<PRE>
public void <B>setPropertyValues</B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs,
                              boolean&nbsp;ignoreUnknown)
                       throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean)">PropertyAccessor</A></CODE></B></DD>
<DD>Perform a batch update with more control over behavior.
 <p>Note that performing a batch update differs from performing a single update,
 in that an implementation of this class will continue to update properties
 if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an
 invalid field name or the like) is encountered, throwing a
 <A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans"><CODE>PropertyBatchUpdateException</CODE></A> containing all the individual errors.
 This exception can be examined later to see all binding errors.
 Properties that were successfully updated remain changed.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean)">setPropertyValues</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pvs</CODE> - PropertyValues to set on the target object<DD><CODE>ignoreUnknown</CODE> - should we ignore unknown properties (not found in the bean)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans">PropertyBatchUpdateException</A></CODE> - if one or more PropertyAccessExceptions
 occured for specific properties during the batch update. This exception bundles
 all individual PropertyAccessExceptions. All other properties will have been
 successfully updated.
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)"><CODE>PropertyAccessor.setPropertyValues(PropertyValues, boolean, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)"><!-- --></A><H3>
setPropertyValues</H3>
<PRE>
public void <B>setPropertyValues</B>(<A HREF="../../../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>&nbsp;pvs,
                              boolean&nbsp;ignoreUnknown,
                              boolean&nbsp;ignoreInvalid)
                       throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)">PropertyAccessor</A></CODE></B></DD>
<DD>Perform a batch update with full control over behavior.
 <p>Note that performing a batch update differs from performing a single update,
 in that an implementation of this class will continue to update properties
 if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an
 invalid field name or the like) is encountered, throwing a
 <A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans"><CODE>PropertyBatchUpdateException</CODE></A> containing all the individual errors.
 This exception can be examined later to see all binding errors.
 Properties that were successfully updated remain changed.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValues(org.springframework.beans.PropertyValues, boolean, boolean)">setPropertyValues</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pvs</CODE> - PropertyValues to set on the target object<DD><CODE>ignoreUnknown</CODE> - should we ignore unknown properties (not found in the bean)<DD><CODE>ignoreInvalid</CODE> - should we ignore invalid properties (found but not accessible)
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans">PropertyBatchUpdateException</A></CODE> - if one or more PropertyAccessExceptions
 occured for specific properties during the batch update. This exception bundles
 all individual PropertyAccessExceptions. All other properties will have been
 successfully updated.
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="convertIfNecessary(java.lang.Object, java.lang.Class)"><!-- --></A><H3>
convertIfNecessary</H3>
<PRE>
public &lt;T&gt; T <B>convertIfNecessary</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;value,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;T&gt;&nbsp;requiredType)
                     throws <A HREF="../../../org/springframework/beans/TypeMismatchException.html" title="class in org.springframework.beans">TypeMismatchException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/TypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class)">TypeConverter</A></CODE></B></DD>
<DD>Convert the value to the required type (if necessary from a String).
 <p>Conversions from String to any type will typically use the <code>setAsText</code>
 method of the PropertyEditor class. Note that a PropertyEditor must be registered
 for the given class for this to work; this is a standard JavaBeans API.
 A number of PropertyEditors are automatically registered.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/TypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class)">convertIfNecessary</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/TypeConverter.html" title="interface in org.springframework.beans">TypeConverter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - the value to convert<DD><CODE>requiredType</CODE> - the type we must convert to
 (or <code>null</code> if not known, for example in case of a collection element)
<DT><B>Returns:</B><DD>the new value, possibly the result of type conversion
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/TypeMismatchException.html" title="class in org.springframework.beans">TypeMismatchException</A></CODE> - if type conversion failed<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true#setAsText(java.lang.String)" title="class or interface in java.beans"><CODE>PropertyEditor.setAsText(String)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true#getValue()" title="class or interface in java.beans"><CODE>PropertyEditor.getValue()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getPropertyType(java.lang.String)"><!-- --></A><H3>
getPropertyType</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>getPropertyType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getPropertyType(java.lang.String)">PropertyEditorRegistrySupport</A></CODE></B></DD>
<DD>Determine the property type for the given property path.
 <p>Called by <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#findCustomEditor(java.lang.Class, java.lang.String)"><CODE>PropertyEditorRegistrySupport.findCustomEditor(java.lang.Class, java.lang.String)</CODE></A> if no required type has been specified,
 to be able to find a type-specific editor even if just given a property path.
 <p>The default implementation always returns <code>null</code>.
 BeanWrapperImpl overrides this with the standard <code>getPropertyType</code>
 method as defined by the BeanWrapper interface.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#getPropertyType(java.lang.String)">getPropertyType</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getPropertyType(java.lang.String)">getPropertyType</A></CODE> in class <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyPath</CODE> - the property path to determine the type for
<DT><B>Returns:</B><DD>the type of the property, or <code>null</code> if not determinable<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyAccessor.html#getPropertyType(java.lang.String)"><CODE>PropertyAccessor.getPropertyType(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getPropertyValue(java.lang.String)"><!-- --></A><H3>
getPropertyValue</H3>
<PRE>
public abstract <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getPropertyValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName)
                                 throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Actually get the value of a property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#getPropertyValue(java.lang.String)">getPropertyValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyName</CODE> - name of the property to get the value of
<DT><B>Returns:</B><DD>the value of the property
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't readable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessException.html" title="class in org.springframework.beans">PropertyAccessException</A></CODE> - if the property was valid but the
 accessor method failed
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="setPropertyValue(java.lang.String, java.lang.Object)"><!-- --></A><H3>
setPropertyValue</H3>
<PRE>
public abstract void <B>setPropertyValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName,
                                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;value)
                               throws <A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Actually set a property value.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html#setPropertyValue(java.lang.String, java.lang.Object)">setPropertyValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyName</CODE> - name of the property to set value of<DD><CODE>value</CODE> - the new value
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A></CODE> - if there is no such property or
 if the property isn't writable
<DD><CODE><A HREF="../../../org/springframework/beans/PropertyAccessException.html" title="class in org.springframework.beans">PropertyAccessException</A></CODE> - if the property was valid but the
 accessor method failed or a type mismatch occured
<DD><CODE><A HREF="../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../org/springframework/beans/BeanInstantiationException.html" title="class in org.springframework.beans"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/beans/AbstractPropertyAccessor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AbstractPropertyAccessor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
