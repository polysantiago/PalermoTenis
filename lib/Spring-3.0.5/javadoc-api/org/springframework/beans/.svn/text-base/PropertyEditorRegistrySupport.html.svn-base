<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:22:38 BST 2010 -->
<TITLE>
PropertyEditorRegistrySupport
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="PropertyEditorRegistrySupport";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/beans/PropertyEditorRegistrySupport.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PropertyEditorRegistrySupport.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.beans</FONT>
<BR>
Class PropertyEditorRegistrySupport</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.beans.PropertyEditorRegistrySupport</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../org/springframework/beans/AbstractPropertyAccessor.html" title="class in org.springframework.beans">AbstractPropertyAccessor</A>, <A HREF="../../../org/springframework/beans/SimpleTypeConverter.html" title="class in org.springframework.beans">SimpleTypeConverter</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>PropertyEditorRegistrySupport</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></DL>
</PRE>

<P>
Base implementation of the <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans"><CODE>PropertyEditorRegistry</CODE></A> interface.
 Provides management of default editors and custom editors.
 Mainly serves as base class for <A HREF="../../../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans"><CODE>BeanWrapperImpl</CODE></A>.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>1.2.6</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller, Rob Harrop</DD>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditorManager.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditorManager</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditorSupport.html?is-external=true#setAsText(java.lang.String)" title="class or interface in java.beans"><CODE>PropertyEditorSupport.setAsText(java.lang.String)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditorSupport.html?is-external=true#setValue(java.lang.Object)" title="class or interface in java.beans"><CODE>PropertyEditorSupport.setValue(java.lang.Object)</CODE></A></DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#PropertyEditorRegistrySupport()">PropertyEditorRegistrySupport</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)">copyCustomEditorsTo</A></B>(<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A>&nbsp;target,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;nestedProperty)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copy the custom editors registered in this instance to the given target registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)">copyDefaultEditorsTo</A></B>(<A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>&nbsp;target)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Copy the default editors registered in this instance to the given target registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#findCustomEditor(java.lang.Class, java.lang.String)">findCustomEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find a custom property editor for the given type and property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getConversionService()">getConversionService</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the associated ConversionService, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getDefaultEditor(java.lang.Class)">getDefaultEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the default editor for the given property type, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#getPropertyType(java.lang.String)">getPropertyType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine the property type for the given property path.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#guessPropertyTypeFromEditors(java.lang.String)">guessPropertyTypeFromEditors</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Guess the property type of the specified property from the registered
 custom editors (provided that they were registered for a specific type).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#hasCustomEditorForElement(java.lang.Class, java.lang.String)">hasCustomEditorForElement</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;elementType,
                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine whether this registry contains a custom editor
 for the specified array/collection element.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#isSharedEditor(java.beans.PropertyEditor)">isSharedEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Check whether the given editor instance is a shared editor, that is,
 whether the given editor instance might be used concurrently.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#overrideDefaultEditor(java.lang.Class, java.beans.PropertyEditor)">overrideDefaultEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                      <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Override the default editor for the specified type with the given property editor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)">registerCustomEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register the given custom property editor for all properties of the given type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)">registerCustomEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register the given custom property editor for the given type and
 property, or for all properties of the given type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerDefaultEditors()">registerDefaultEditors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Activate the default editors for this registry instance,
 allowing for lazily registering default editors when needed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)">registerSharedEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of PropertyEditorRegistrars or ConversionService usage</I></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#setConversionService(org.springframework.core.convert.ConversionService)">setConversionService</A></B>(<A HREF="../../../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>&nbsp;conversionService)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify a Spring 3.0 ConversionService to use for converting
 property values, as an alternative to JavaBeans PropertyEditors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#useConfigValueEditors()">useConfigValueEditors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Activate config value editors which are only intended for configuration purposes,
 such as <A HREF="../../../org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors"><CODE>StringArrayPropertyEditor</CODE></A>.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="PropertyEditorRegistrySupport()"><!-- --></A><H3>
PropertyEditorRegistrySupport</H3>
<PRE>
public <B>PropertyEditorRegistrySupport</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setConversionService(org.springframework.core.convert.ConversionService)"><!-- --></A><H3>
setConversionService</H3>
<PRE>
public void <B>setConversionService</B>(<A HREF="../../../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>&nbsp;conversionService)</PRE>
<DL>
<DD>Specify a Spring 3.0 ConversionService to use for converting
 property values, as an alternative to JavaBeans PropertyEditors.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getConversionService()"><!-- --></A><H3>
getConversionService</H3>
<PRE>
public <A HREF="../../../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A> <B>getConversionService</B>()</PRE>
<DL>
<DD>Return the associated ConversionService, if any.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="registerDefaultEditors()"><!-- --></A><H3>
registerDefaultEditors</H3>
<PRE>
protected void <B>registerDefaultEditors</B>()</PRE>
<DL>
<DD>Activate the default editors for this registry instance,
 allowing for lazily registering default editors when needed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="useConfigValueEditors()"><!-- --></A><H3>
useConfigValueEditors</H3>
<PRE>
public void <B>useConfigValueEditors</B>()</PRE>
<DL>
<DD>Activate config value editors which are only intended for configuration purposes,
 such as <A HREF="../../../org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors"><CODE>StringArrayPropertyEditor</CODE></A>.
 <p>Those editors are not registered by default simply because they are in
 general inappropriate for data binding purposes. Of course, you may register
 them individually in any case, through <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><CODE>registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="overrideDefaultEditor(java.lang.Class, java.beans.PropertyEditor)"><!-- --></A><H3>
overrideDefaultEditor</H3>
<PRE>
public void <B>overrideDefaultEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</PRE>
<DL>
<DD>Override the default editor for the specified type with the given property editor.
 <p>Note that this is different from registering a custom editor in that the editor
 semantically still is a default editor. A ConversionService will override such a
 default editor, whereas custom editors usually override the ConversionService.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - the type of the property<DD><CODE>propertyEditor</CODE> - the editor to register<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><CODE>registerCustomEditor(Class, PropertyEditor)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDefaultEditor(java.lang.Class)"><!-- --></A><H3>
getDefaultEditor</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A> <B>getDefaultEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType)</PRE>
<DL>
<DD>Retrieve the default editor for the given property type, if any.
 <p>Lazily registers the default editors, if they are active.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - type of the property
<DT><B>Returns:</B><DD>the default editor, or <code>null</code> if none found<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#registerDefaultEditors()"><CODE>registerDefaultEditors()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)"><!-- --></A><H3>
copyDefaultEditorsTo</H3>
<PRE>
protected void <B>copyDefaultEditorsTo</B>(<A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>&nbsp;target)</PRE>
<DL>
<DD>Copy the default editors registered in this instance to the given target registry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>target</CODE> - the target registry to copy to</DL>
</DD>
</DL>
<HR>

<A NAME="registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><!-- --></A><H3>
registerCustomEditor</H3>
<PRE>
public void <B>registerCustomEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)">PropertyEditorRegistry</A></CODE></B></DD>
<DD>Register the given custom property editor for all properties of the given type.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)">registerCustomEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - the type of the property<DD><CODE>propertyEditor</CODE> - the editor to register</DL>
</DD>
</DL>
<HR>

<A NAME="registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)"><!-- --></A><H3>
registerCustomEditor</H3>
<PRE>
public void <B>registerCustomEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath,
                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)">PropertyEditorRegistry</A></CODE></B></DD>
<DD>Register the given custom property editor for the given type and
 property, or for all properties of the given type.
 <p>If the property path denotes an array or Collection property,
 the editor will get applied either to the array/Collection itself
 (the <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditor</CODE></A> has to create an array or Collection value) or
 to each element (the <code>PropertyEditor</code> has to create the element type),
 depending on the specified required type.
 <p>Note: Only one single registered custom editor per property path
 is supported. In the case of a Collection/array, do not register an editor
 for both the Collection/array and each element on the same property.
 <p>For example, if you wanted to register an editor for "items[n].quantity"
 (for all values n), you would use "items.quantity" as the value of the
 'propertyPath' argument to this method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)">registerCustomEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - the type of the property. This may be <code>null</code>
 if a property is given but should be specified in any case, in particular in
 case of a Collection - making clear whether the editor is supposed to apply
 to the entire Collection itself or to each of its entries. So as a general rule:
 <b>Do not specify <code>null</code> here in case of a Collection/array!</b><DD><CODE>propertyPath</CODE> - the path of the property (name or nested path), or
 <code>null</code> if registering an editor for all properties of the given type<DD><CODE>propertyEditor</CODE> - editor to register</DL>
</DD>
</DL>
<HR>

<A NAME="registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)"><!-- --></A><H3>
registerSharedEditor</H3>
<PRE>
<FONT SIZE="-1"><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
</FONT>public void <B>registerSharedEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                                            <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of PropertyEditorRegistrars or ConversionService usage</I>
<P>
<DD>Register the given custom property editor for all properties
 of the given type, indicating that the given instance is a
 shared editor that might be used concurrently.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - the type of the property<DD><CODE>propertyEditor</CODE> - the shared editor to register</DL>
</DD>
</DL>
<HR>

<A NAME="isSharedEditor(java.beans.PropertyEditor)"><!-- --></A><H3>
isSharedEditor</H3>
<PRE>
public boolean <B>isSharedEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A>&nbsp;propertyEditor)</PRE>
<DL>
<DD>Check whether the given editor instance is a shared editor, that is,
 whether the given editor instance might be used concurrently.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyEditor</CODE> - the editor instance to check
<DT><B>Returns:</B><DD>whether the editor is a shared instance</DL>
</DD>
</DL>
<HR>

<A NAME="findCustomEditor(java.lang.Class, java.lang.String)"><!-- --></A><H3>
findCustomEditor</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A> <B>findCustomEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;requiredType,
                                       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#findCustomEditor(java.lang.Class, java.lang.String)">PropertyEditorRegistry</A></CODE></B></DD>
<DD>Find a custom property editor for the given type and property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html#findCustomEditor(java.lang.Class, java.lang.String)">findCustomEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>requiredType</CODE> - the type of the property (can be <code>null</code> if a property
 is given but should be specified in any case for consistency checking)<DD><CODE>propertyPath</CODE> - the path of the property (name or nested path), or
 <code>null</code> if looking for an editor for all properties of the given type
<DT><B>Returns:</B><DD>the registered editor, or <code>null</code> if none</DL>
</DD>
</DL>
<HR>

<A NAME="hasCustomEditorForElement(java.lang.Class, java.lang.String)"><!-- --></A><H3>
hasCustomEditorForElement</H3>
<PRE>
public boolean <B>hasCustomEditorForElement</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;elementType,
                                         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</PRE>
<DL>
<DD>Determine whether this registry contains a custom editor
 for the specified array/collection element.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>elementType</CODE> - the target type of the element
 (can be <code>null</code> if not known)<DD><CODE>propertyPath</CODE> - the property path (typically of the array/collection;
 can be <code>null</code> if not known)
<DT><B>Returns:</B><DD>whether a matching custom editor has been found</DL>
</DD>
</DL>
<HR>

<A NAME="getPropertyType(java.lang.String)"><!-- --></A><H3>
getPropertyType</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>getPropertyType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyPath)</PRE>
<DL>
<DD>Determine the property type for the given property path.
 <p>Called by <A HREF="../../../org/springframework/beans/PropertyEditorRegistrySupport.html#findCustomEditor(java.lang.Class, java.lang.String)"><CODE>findCustomEditor(java.lang.Class, java.lang.String)</CODE></A> if no required type has been specified,
 to be able to find a type-specific editor even if just given a property path.
 <p>The default implementation always returns <code>null</code>.
 BeanWrapperImpl overrides this with the standard <code>getPropertyType</code>
 method as defined by the BeanWrapper interface.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyPath</CODE> - the property path to determine the type for
<DT><B>Returns:</B><DD>the type of the property, or <code>null</code> if not determinable<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/beans/PropertyAccessor.html#getPropertyType(java.lang.String)"><CODE>PropertyAccessor.getPropertyType(String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="guessPropertyTypeFromEditors(java.lang.String)"><!-- --></A><H3>
guessPropertyTypeFromEditors</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>guessPropertyTypeFromEditors</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;propertyName)</PRE>
<DL>
<DD>Guess the property type of the specified property from the registered
 custom editors (provided that they were registered for a specific type).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>propertyName</CODE> - the name of the property
<DT><B>Returns:</B><DD>the property type, or <code>null</code> if not determinable</DL>
</DD>
</DL>
<HR>

<A NAME="copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)"><!-- --></A><H3>
copyCustomEditorsTo</H3>
<PRE>
protected void <B>copyCustomEditorsTo</B>(<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A>&nbsp;target,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;nestedProperty)</PRE>
<DL>
<DD>Copy the custom editors registered in this instance to the given target registry.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>target</CODE> - the target registry to copy to<DD><CODE>nestedProperty</CODE> - the nested property path of the target registry, if any.
 If this is non-null, only editors registered for a path below this nested property
 will be copied. If this is null, all editors will be copied.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/beans/PropertyEditorRegistrySupport.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PropertyEditorRegistrySupport.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
