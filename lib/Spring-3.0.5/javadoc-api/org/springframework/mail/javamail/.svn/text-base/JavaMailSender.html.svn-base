<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:59 BST 2010 -->
<TITLE>
JavaMailSender
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="JavaMailSender";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/mail/javamail/InternetAddressEditor.html" title="class in org.springframework.mail.javamail"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/mail/javamail/JavaMailSender.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JavaMailSender.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.mail.javamail</FONT>
<BR>
Interface JavaMailSender</H2>
<DL>
<DT><B>All Superinterfaces:</B> <DD><A HREF="../../../../org/springframework/mail/MailSender.html" title="interface in org.springframework.mail">MailSender</A></DD>
</DL>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail">JavaMailSenderImpl</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>JavaMailSender</B><DT>extends <A HREF="../../../../org/springframework/mail/MailSender.html" title="interface in org.springframework.mail">MailSender</A></DL>
</PRE>

<P>
Extended <A HREF="../../../../org/springframework/mail/MailSender.html" title="interface in org.springframework.mail"><CODE>MailSender</CODE></A> interface for JavaMail,
 supporting MIME messages both as direct arguments and through preparation
 callbacks. Typically used in conjunction with the <A HREF="../../../../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail"><CODE>MimeMessageHelper</CODE></A>
 class for convenient creation of JavaMail <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet"><CODE>MimeMessages</CODE></A>,
 including attachments etc.

 <p>Clients should talk to the mail sender through this interface if they need
 mail functionality beyond <A HREF="../../../../org/springframework/mail/SimpleMailMessage.html" title="class in org.springframework.mail"><CODE>SimpleMailMessage</CODE></A>.
 The production implementation is <A HREF="../../../../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail"><CODE>JavaMailSenderImpl</CODE></A>; for testing,
 mocks can be created based on this interface. Clients will typically receive
 the JavaMailSender reference through dependency injection.

 <p>The recommended way of using this interface is the <A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail"><CODE>MimeMessagePreparator</CODE></A>
 mechanism, possibly using a <A HREF="../../../../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail"><CODE>MimeMessageHelper</CODE></A> for populating the message.
 See <A HREF="../../../../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail"><CODE>MimeMessageHelper's javadoc</CODE></A> for an example.

 <p>The entire JavaMail <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/Session.html?is-external=true" title="class or interface in javax.mail"><CODE>Session</CODE></A> management is abstracted
 by the JavaMailSender. Client code should not deal with a Session in any way,
 rather leave the entire JavaMail configuration and resource handling to the
 JavaMailSender implementation. This also increases testability.

 <p>A JavaMailSender client is not as easy to test as a plain
 <A HREF="../../../../org/springframework/mail/MailSender.html" title="interface in org.springframework.mail"><CODE>MailSender</CODE></A> client, but still straightforward
 compared to traditional JavaMail code: Just let <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A>
 return a plain <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet"><CODE>MimeMessage</CODE></A> created with a
 <code>Session.getInstance(new Properties())</code> call, and check the passed-in
 messages in your mock implementations of the various <code>send</code> methods.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>07.10.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet"><CODE>MimeMessage</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/Session.html?is-external=true" title="class or interface in javax.mail"><CODE>Session</CODE></A>, 
<A HREF="../../../../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail"><CODE>JavaMailSenderImpl</CODE></A>, 
<A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail"><CODE>MimeMessagePreparator</CODE></A>, 
<A HREF="../../../../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail"><CODE>MimeMessageHelper</CODE></A></DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()">createMimeMessage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage(java.io.InputStream)">createMimeMessage</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;contentStream)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender, using the given input stream as the message source.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage)">send</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A>&nbsp;mimeMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send the given JavaMail MIME message.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage[])">send</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A>[]&nbsp;mimeMessages)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send the given array of JavaMail MIME messages in batch.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(org.springframework.mail.javamail.MimeMessagePreparator)">send</A></B>(<A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail">MimeMessagePreparator</A>&nbsp;mimeMessagePreparator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send the JavaMail MIME message prepared by the given MimeMessagePreparator.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(org.springframework.mail.javamail.MimeMessagePreparator[])">send</A></B>(<A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail">MimeMessagePreparator</A>[]&nbsp;mimeMessagePreparators)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send the JavaMail MIME messages prepared by the given MimeMessagePreparators.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.mail.MailSender"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.mail.<A HREF="../../../../org/springframework/mail/MailSender.html" title="interface in org.springframework.mail">MailSender</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/mail/MailSender.html#send(org.springframework.mail.SimpleMailMessage)">send</A>, <A HREF="../../../../org/springframework/mail/MailSender.html#send(org.springframework.mail.SimpleMailMessage[])">send</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="createMimeMessage()"><!-- --></A><H3>
createMimeMessage</H3>
<PRE>
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A> <B>createMimeMessage</B>()</PRE>
<DL>
<DD>Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender. Needs to be called to create MimeMessage instances
 that can be prepared by the client and passed to send(MimeMessage).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the new MimeMessage instance<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage)"><CODE>send(MimeMessage)</CODE></A>, 
<A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage[])"><CODE>send(MimeMessage[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createMimeMessage(java.io.InputStream)"><!-- --></A><H3>
createMimeMessage</H3>
<PRE>
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A> <B>createMimeMessage</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io">InputStream</A>&nbsp;contentStream)
                              throws <A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></PRE>
<DL>
<DD>Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender, using the given input stream as the message source.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>contentStream</CODE> - the raw MIME input stream for the message
<DT><B>Returns:</B><DD>the new MimeMessage instance
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/mail/MailParseException.html" title="class in org.springframework.mail">MailParseException</A></CODE> - in case of message creation failure
<DD><CODE><A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="send(javax.mail.internet.MimeMessage)"><!-- --></A><H3>
send</H3>
<PRE>
void <B>send</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A>&nbsp;mimeMessage)
          throws <A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></PRE>
<DL>
<DD>Send the given JavaMail MIME message.
 The message needs to have been created with <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mimeMessage</CODE> - message to send
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/mail/MailAuthenticationException.html" title="class in org.springframework.mail">MailAuthenticationException</A></CODE> - in case of authentication failure
<DD><CODE><A HREF="../../../../org/springframework/mail/MailSendException.html" title="class in org.springframework.mail">MailSendException</A></CODE> - in case of failure when sending the message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="send(javax.mail.internet.MimeMessage[])"><!-- --></A><H3>
send</H3>
<PRE>
void <B>send</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/mail/internet/MimeMessage.html?is-external=true" title="class or interface in javax.mail.internet">MimeMessage</A>[]&nbsp;mimeMessages)
          throws <A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></PRE>
<DL>
<DD>Send the given array of JavaMail MIME messages in batch.
 The messages need to have been created with <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mimeMessages</CODE> - messages to send
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/mail/MailAuthenticationException.html" title="class in org.springframework.mail">MailAuthenticationException</A></CODE> - in case of authentication failure
<DD><CODE><A HREF="../../../../org/springframework/mail/MailSendException.html" title="class in org.springframework.mail">MailSendException</A></CODE> - in case of failure when sending a message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="send(org.springframework.mail.javamail.MimeMessagePreparator)"><!-- --></A><H3>
send</H3>
<PRE>
void <B>send</B>(<A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail">MimeMessagePreparator</A>&nbsp;mimeMessagePreparator)
          throws <A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></PRE>
<DL>
<DD>Send the JavaMail MIME message prepared by the given MimeMessagePreparator.
 <p>Alternative way to prepare MimeMessage instances, instead of
 <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A> and <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage)"><CODE>send(MimeMessage)</CODE></A> calls.
 Takes care of proper exception conversion.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mimeMessagePreparator</CODE> - the preparator to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/mail/MailPreparationException.html" title="class in org.springframework.mail">MailPreparationException</A></CODE> - in case of failure when preparing the message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailParseException.html" title="class in org.springframework.mail">MailParseException</A></CODE> - in case of failure when parsing the message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailAuthenticationException.html" title="class in org.springframework.mail">MailAuthenticationException</A></CODE> - in case of authentication failure
<DD><CODE><A HREF="../../../../org/springframework/mail/MailSendException.html" title="class in org.springframework.mail">MailSendException</A></CODE> - in case of failure when sending the message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="send(org.springframework.mail.javamail.MimeMessagePreparator[])"><!-- --></A><H3>
send</H3>
<PRE>
void <B>send</B>(<A HREF="../../../../org/springframework/mail/javamail/MimeMessagePreparator.html" title="interface in org.springframework.mail.javamail">MimeMessagePreparator</A>[]&nbsp;mimeMessagePreparators)
          throws <A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></PRE>
<DL>
<DD>Send the JavaMail MIME messages prepared by the given MimeMessagePreparators.
 <p>Alternative way to prepare MimeMessage instances, instead of
 <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><CODE>createMimeMessage()</CODE></A> and <A HREF="../../../../org/springframework/mail/javamail/JavaMailSender.html#send(javax.mail.internet.MimeMessage[])"><CODE>send(MimeMessage[])</CODE></A> calls.
 Takes care of proper exception conversion.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mimeMessagePreparators</CODE> - the preparator to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/mail/MailPreparationException.html" title="class in org.springframework.mail">MailPreparationException</A></CODE> - in case of failure when preparing a message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailParseException.html" title="class in org.springframework.mail">MailParseException</A></CODE> - in case of failure when parsing a message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailAuthenticationException.html" title="class in org.springframework.mail">MailAuthenticationException</A></CODE> - in case of authentication failure
<DD><CODE><A HREF="../../../../org/springframework/mail/MailSendException.html" title="class in org.springframework.mail">MailSendException</A></CODE> - in case of failure when sending a message
<DD><CODE><A HREF="../../../../org/springframework/mail/MailException.html" title="class in org.springframework.mail">MailException</A></CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/mail/javamail/InternetAddressEditor.html" title="class in org.springframework.mail.javamail"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/mail/javamail/JavaMailSender.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JavaMailSender.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
