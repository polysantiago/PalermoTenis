<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:30 BST 2010 -->
<TITLE>
HttpMessageConverter
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="HttpMessageConverter";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/http/converter/HttpMessageConversionException.html" title="class in org.springframework.http.converter"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/http/converter/HttpMessageNotReadableException.html" title="class in org.springframework.http.converter"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/http/converter/HttpMessageConverter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="HttpMessageConverter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.http.converter</FONT>
<BR>
Interface HttpMessageConverter&lt;T&gt;</H2>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractJaxb2HttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html" title="class in org.springframework.http.converter.feed">AbstractWireFeedHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractXmlHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/feed/AtomFeedHttpMessageConverter.html" title="class in org.springframework.http.converter.feed">AtomFeedHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter">BufferedImageHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/ByteArrayHttpMessageConverter.html" title="class in org.springframework.http.converter">ByteArrayHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/FormHttpMessageConverter.html" title="class in org.springframework.http.converter">FormHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">Jaxb2RootElementHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html" title="class in org.springframework.http.converter.json">MappingJacksonHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">MarshallingHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter">ResourceHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html" title="class in org.springframework.http.converter.feed">RssChannelHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/SourceHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">SourceHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/StringHttpMessageConverter.html" title="class in org.springframework.http.converter">StringHttpMessageConverter</A>, <A HREF="../../../../org/springframework/http/converter/xml/XmlAwareFormHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">XmlAwareFormHttpMessageConverter</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>HttpMessageConverter&lt;T&gt;</B></DL>
</PRE>

<P>
Strategy interface that specifies a converter that can convert from and to HTTP requests and responses.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>3.0</DD>
<DT><B>Author:</B></DT>
  <DD>Arjen Poutsma, Juergen Hoeller</DD>
</DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)">canRead</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz,
        <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;mediaType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates whether the given class can be read by this converter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)">canWrite</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz,
         <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;mediaType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates whether the given class can be written by this converter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#getSupportedMediaTypes()">getSupportedMediaTypes</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the list of <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http"><CODE>MediaType</CODE></A> objects supported by this converter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)">read</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? extends <A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A>&gt;&nbsp;clazz,
     <A HREF="../../../../org/springframework/http/HttpInputMessage.html" title="interface in org.springframework.http">HttpInputMessage</A>&nbsp;inputMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Read an object of the given type form the given input message, and returns it.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)">write</A></B>(<A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A>&nbsp;t,
      <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;contentType,
      <A HREF="../../../../org/springframework/http/HttpOutputMessage.html" title="interface in org.springframework.http">HttpOutputMessage</A>&nbsp;outputMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write an given object to the given output message.</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="canRead(java.lang.Class, org.springframework.http.MediaType)"><!-- --></A><H3>
canRead</H3>
<PRE>
boolean <B>canRead</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz,
                <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;mediaType)</PRE>
<DL>
<DD>Indicates whether the given class can be read by this converter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>clazz</CODE> - the class to test for readability<DD><CODE>mediaType</CODE> - the media type to read, can be <code>null</code> if not specified.
 Typically the value of a <code>Content-Type</code> header.
<DT><B>Returns:</B><DD><code>true</code> if readable; <code>false</code> otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="canWrite(java.lang.Class, org.springframework.http.MediaType)"><!-- --></A><H3>
canWrite</H3>
<PRE>
boolean <B>canWrite</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;&nbsp;clazz,
                 <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;mediaType)</PRE>
<DL>
<DD>Indicates whether the given class can be written by this converter.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>clazz</CODE> - the class to test for writability<DD><CODE>mediaType</CODE> - the media type to write, can be <code>null</code> if not specified.
 Typically the value of an <code>Accept</code> header.
<DT><B>Returns:</B><DD><code>true</code> if writable; <code>false</code> otherwise</DL>
</DD>
</DL>
<HR>

<A NAME="getSupportedMediaTypes()"><!-- --></A><H3>
getSupportedMediaTypes</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A>&lt;<A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&gt; <B>getSupportedMediaTypes</B>()</PRE>
<DL>
<DD>Return the list of <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http"><CODE>MediaType</CODE></A> objects supported by this converter.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the list of supported media types</DL>
</DD>
</DL>
<HR>

<A NAME="read(java.lang.Class, org.springframework.http.HttpInputMessage)"><!-- --></A><H3>
read</H3>
<PRE>
<A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A> <B>read</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;? extends <A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A>&gt;&nbsp;clazz,
       <A HREF="../../../../org/springframework/http/HttpInputMessage.html" title="interface in org.springframework.http">HttpInputMessage</A>&nbsp;inputMessage)
       throws <A HREF="http://java.sun.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A>,
              <A HREF="../../../../org/springframework/http/converter/HttpMessageNotReadableException.html" title="class in org.springframework.http.converter">HttpMessageNotReadableException</A></PRE>
<DL>
<DD>Read an object of the given type form the given input message, and returns it.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>clazz</CODE> - the type of object to return. This type must have previously been passed to the
 <A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><CODE>canRead</CODE></A> method of this interface, which must have returned <code>true</code>.<DD><CODE>inputMessage</CODE> - the HTTP input message to read from
<DT><B>Returns:</B><DD>the converted object
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE> - in case of I/O errors
<DD><CODE><A HREF="../../../../org/springframework/http/converter/HttpMessageNotReadableException.html" title="class in org.springframework.http.converter">HttpMessageNotReadableException</A></CODE> - in case of conversion errors</DL>
</DD>
</DL>
<HR>

<A NAME="write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)"><!-- --></A><A NAME="write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)"><!-- --></A><H3>
write</H3>
<PRE>
void <B>write</B>(<A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html" title="type parameter in HttpMessageConverter">T</A>&nbsp;t,
           <A HREF="../../../../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>&nbsp;contentType,
           <A HREF="../../../../org/springframework/http/HttpOutputMessage.html" title="interface in org.springframework.http">HttpOutputMessage</A>&nbsp;outputMessage)
           throws <A HREF="http://java.sun.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A>,
                  <A HREF="../../../../org/springframework/http/converter/HttpMessageNotWritableException.html" title="class in org.springframework.http.converter">HttpMessageNotWritableException</A></PRE>
<DL>
<DD>Write an given object to the given output message.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>t</CODE> - the object to write to the output message. The type of this object must have previously been
 passed to the <A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><CODE>canWrite</CODE></A> method of this interface, which must have returned <code>true</code>.<DD><CODE>contentType</CODE> - the content type to use when writing. May be <code>null</code> to indicate that the
 default content type of the converter must be used. If not <code>null</code>, this media type must have
 previously been passed to the <A HREF="../../../../org/springframework/http/converter/HttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><CODE>canWrite</CODE></A> method of this interface, which must have
 returned <code>true</code>.<DD><CODE>outputMessage</CODE> - the message to write to
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io">IOException</A></CODE> - in case of I/O errors
<DD><CODE><A HREF="../../../../org/springframework/http/converter/HttpMessageNotWritableException.html" title="class in org.springframework.http.converter">HttpMessageNotWritableException</A></CODE> - in case of conversion errors</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/http/converter/HttpMessageConversionException.html" title="class in org.springframework.http.converter"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/http/converter/HttpMessageNotReadableException.html" title="class in org.springframework.http.converter"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/http/converter/HttpMessageConverter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="HttpMessageConverter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
