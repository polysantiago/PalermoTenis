<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:52 BST 2010 -->
<TITLE>
AbstractPollingMessageListenerContainer
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="AbstractPollingMessageListenerContainer";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AbstractPollingMessageListenerContainer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_classes_inherited_from_class_org.springframework.jms.listener.AbstractJmsListeningContainer">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.jms.listener</FONT>
<BR>
Class AbstractPollingMessageListenerContainer</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">org.springframework.jms.support.JmsAccessor</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html" title="class in org.springframework.jms.support.destination">org.springframework.jms.support.destination.JmsDestinationAccessor</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">org.springframework.jms.listener.AbstractJmsListeningContainer</A>
              <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">org.springframework.jms.listener.AbstractMessageListenerContainer</A>
                  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.jms.listener.AbstractPollingMessageListenerContainer</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A>, <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A>, <A HREF="../../../../org/springframework/context/Lifecycle.html" title="interface in org.springframework.context">Lifecycle</A>, <A HREF="../../../../org/springframework/context/Phased.html" title="interface in org.springframework.context">Phased</A>, <A HREF="../../../../org/springframework/context/SmartLifecycle.html" title="interface in org.springframework.context">SmartLifecycle</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>AbstractPollingMessageListenerContainer</B><DT>extends <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A><DT>implements <A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A></DL>
</PRE>

<P>
Base class for listener container implementations which are based on polling.
 Provides support for listener handling based on <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms"><CODE>MessageConsumer</CODE></A>,
 optionally participating in externally managed transactions.

 <p>This listener container variant is built for repeated polling attempts,
 each invoking the <A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)"><CODE>receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)</CODE></A> method. The MessageConsumer used
 may be reobtained fo reach attempt or cached inbetween attempts; this is up
 to the concrete implementation. The receive timeout for each attempt can be
 configured through the <A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setReceiveTimeout(long)"><CODE>"receiveTimeout"</CODE></A> property.

 <p>The underlying mechanism is based on standard JMS MessageConsumer handling,
 which is perfectly compatible with both native JMS and JMS in a J2EE environment.
 Neither the JMS <code>MessageConsumer.setMessageListener</code> facility
 nor the JMS ServerSessionPool facility is required. A further advantage
 of this approach is full control over the listening process, allowing for
 custom scaling and throttling and of concurrent message processing
 (which is up to concrete subclasses).

 <p>Message reception and listener execution can automatically be wrapped
 in transactions through passing a Spring
 <A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A> into the
 <A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionManager(org.springframework.transaction.PlatformTransactionManager)"><CODE>"transactionManager"</CODE></A> property. This will usually
 be a <A HREF="../../../../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta"><CODE>JtaTransactionManager</CODE></A> in a
 J2EE enviroment, in combination with a JTA-aware JMS ConnectionFactory obtained
 from JNDI (check your J2EE server's documentation).

 <p>This base class does not assume any specific mechanism for asynchronous
 execution of polling invokers. Check out <A HREF="../../../../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener"><CODE>DefaultMessageListenerContainer</CODE></A>
 for a concrete implementation which is based on Spring's
 <A HREF="../../../../org/springframework/core/task/TaskExecutor.html" title="interface in org.springframework.core.task"><CODE>TaskExecutor</CODE></A> abstraction,
 including dynamic scaling of concurrent consumers and automatic self recovery.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0.3</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#createListenerConsumer(javax.jms.Session)"><CODE>createListenerConsumer(javax.jms.Session)</CODE></A>, 
<A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)"><CODE>receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)</CODE></A>, 
<A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionManager(org.springframework.transaction.PlatformTransactionManager)"><CODE>setTransactionManager(org.springframework.transaction.PlatformTransactionManager)</CODE></A></DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->

<A NAME="nested_class_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Nested Class Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="nested_classes_inherited_from_class_org.springframework.jms.listener.AbstractJmsListeningContainer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Nested classes/interfaces inherited from class org.springframework.jms.listener.<A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.SharedConnectionNotInitializedException.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer.SharedConnectionNotInitializedException</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#DEFAULT_RECEIVE_TIMEOUT">DEFAULT_RECEIVE_TIMEOUT</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The default receive timeout: 1000 ms = 1 second.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.jms.listener.AbstractJmsListeningContainer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.jms.listener.<A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#lifecycleMonitor">lifecycleMonitor</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#sharedConnectionMonitor">sharedConnectionMonitor</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.jms.support.JmsAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.jms.support.<A HREF="../../../../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#AbstractPollingMessageListenerContainer()">AbstractPollingMessageListenerContainer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#createConsumer(javax.jms.Session, javax.jms.Destination)">createConsumer</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
               <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Destination.html?is-external=true" title="class or interface in javax.jms">Destination</A>&nbsp;destination)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a JMS MessageConsumer for the given Session and Destination.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#createListenerConsumer(javax.jms.Session)">createListenerConsumer</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a MessageConsumer for the given JMS Session,
 registering a MessageListener for the specified listener.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus)">doReceiveAndExecute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer,
                    <A HREF="../../../../org/springframework/transaction/TransactionStatus.html" title="interface in org.springframework.transaction">TransactionStatus</A>&nbsp;status)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Actually execute the listener for a message received from the given consumer,
 fetching all requires resources and invoking the listener.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html?is-external=true" title="class or interface in javax.jms">Connection</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#getConnection(org.springframework.jms.connection.JmsResourceHolder)">getConnection</A></B>(<A HREF="../../../../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>&nbsp;holder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetch an appropriate Connection from the given JmsResourceHolder.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#getSession(org.springframework.jms.connection.JmsResourceHolder)">getSession</A></B>(<A HREF="../../../../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>&nbsp;holder)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetch an appropriate Session from the given JmsResourceHolder.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#getTransactionManager()">getTransactionManager</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the Spring PlatformTransactionManager to use for transactional
 wrapping of message reception plus listener execution.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#initialize()">initialize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initialize this container.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#isPubSubNoLocal()">isPubSubNoLocal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether to inhibit the delivery of messages published by its own connection.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#isSessionLocallyTransacted(javax.jms.Session)">isSessionLocallyTransacted</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This implementation checks whether the Session is externally synchronized.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#messageReceived(java.lang.Object, javax.jms.Session)">messageReceived</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template method that gets called right when a new message has been received,
 before attempting to process it.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#noMessageReceived(java.lang.Object, javax.jms.Session)">noMessageReceived</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                  <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template method that gets called when <i>no</i> message has been received,
 before returning to the receive loop again.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)">receiveAndExecute</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                  <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
                  <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Execute the listener for a message received from the given consumer,
 wrapping the entire operation in an external transaction if demanded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Message.html?is-external=true" title="class or interface in javax.jms">Message</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveMessage(javax.jms.MessageConsumer)">receiveMessage</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Receive a message from the given consumer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setPubSubNoLocal(boolean)">setPubSubNoLocal</A></B>(boolean&nbsp;pubSubNoLocal)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to inhibit the delivery of messages published by its own connection.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setReceiveTimeout(long)">setReceiveTimeout</A></B>(long&nbsp;receiveTimeout)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the timeout to use for receive calls, in <b>milliseconds</b>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setSessionTransacted(boolean)">setSessionTransacted</A></B>(boolean&nbsp;sessionTransacted)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the transaction mode that is used when creating a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms"><CODE>Session</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionManager(org.springframework.transaction.PlatformTransactionManager)">setTransactionManager</A></B>(<A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A>&nbsp;transactionManager)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the Spring <A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A>
 to use for transactional wrapping of message reception plus listener execution.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionName(java.lang.String)">setTransactionName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;transactionName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the transaction name to use for transactional wrapping.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionTimeout(int)">setTransactionTimeout</A></B>(int&nbsp;transactionTimeout)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the transaction timeout to use for transactional wrapping, in <b>seconds</b>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#shouldCommitAfterNoMessageReceived(javax.jms.Session)">shouldCommitAfterNoMessageReceived</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine whether to trigger a commit after no message has been received.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jms.listener.AbstractMessageListenerContainer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jms.listener.<A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#checkMessageListener(java.lang.Object)">checkMessageListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#commitIfNecessary(javax.jms.Session, javax.jms.Message)">commitIfNecessary</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#doExecuteListener(javax.jms.Session, javax.jms.Message)">doExecuteListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#doInvokeListener(javax.jms.MessageListener, javax.jms.Message)">doInvokeListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#doInvokeListener(org.springframework.jms.listener.SessionAwareMessageListener, javax.jms.Session, javax.jms.Message)">doInvokeListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#executeListener(javax.jms.Session, javax.jms.Message)">executeListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getDefaultSubscriptionName(java.lang.Object)">getDefaultSubscriptionName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getDestination()">getDestination</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getDestinationDescription()">getDestinationDescription</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getDestinationName()">getDestinationName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getDurableSubscriptionName()">getDurableSubscriptionName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getExceptionListener()">getExceptionListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getMessageListener()">getMessageListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#getMessageSelector()">getMessageSelector</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#handleListenerException(java.lang.Throwable)">handleListenerException</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeErrorHandler(java.lang.Throwable)">invokeErrorHandler</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeExceptionListener(javax.jms.JMSException)">invokeExceptionListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeListener(javax.jms.Session, javax.jms.Message)">invokeListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isAcceptMessagesWhileStopping()">isAcceptMessagesWhileStopping</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isExposeListenerSession()">isExposeListenerSession</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isSubscriptionDurable()">isSubscriptionDurable</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#rollbackIfNecessary(javax.jms.Session)">rollbackIfNecessary</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#rollbackOnExceptionIfNecessary(javax.jms.Session, java.lang.Throwable)">rollbackOnExceptionIfNecessary</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setAcceptMessagesWhileStopping(boolean)">setAcceptMessagesWhileStopping</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setDestination(javax.jms.Destination)">setDestination</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setDestinationName(java.lang.String)">setDestinationName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setDurableSubscriptionName(java.lang.String)">setDurableSubscriptionName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setErrorHandler(org.springframework.util.ErrorHandler)">setErrorHandler</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setExceptionListener(javax.jms.ExceptionListener)">setExceptionListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setExposeListenerSession(boolean)">setExposeListenerSession</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setMessageListener(java.lang.Object)">setMessageListener</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setMessageSelector(java.lang.String)">setMessageSelector</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#setSubscriptionDurable(boolean)">setSubscriptionDurable</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#validateConfiguration()">validateConfiguration</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jms.listener.AbstractJmsListeningContainer"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jms.listener.<A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#afterPropertiesSet()">afterPropertiesSet</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#createSharedConnection()">createSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#destroy()">destroy</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doInitialize()">doInitialize</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doRescheduleTask(java.lang.Object)">doRescheduleTask</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doShutdown()">doShutdown</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doStart()">doStart</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doStop()">doStop</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#establishSharedConnection()">establishSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#getBeanName()">getBeanName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#getClientId()">getClientId</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#getPausedTaskCount()">getPausedTaskCount</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#getPhase()">getPhase</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#getSharedConnection()">getSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isActive()">isActive</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isAutoStartup()">isAutoStartup</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isRunning()">isRunning</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#logRejectedTask(java.lang.Object, java.lang.RuntimeException)">logRejectedTask</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#prepareSharedConnection(javax.jms.Connection)">prepareSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#refreshSharedConnection()">refreshSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#rescheduleTaskIfNecessary(java.lang.Object)">rescheduleTaskIfNecessary</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#resumePausedTasks()">resumePausedTasks</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#runningAllowed()">runningAllowed</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#setAutoStartup(boolean)">setAutoStartup</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#setBeanName(java.lang.String)">setBeanName</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#setClientId(java.lang.String)">setClientId</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#setPhase(int)">setPhase</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#sharedConnectionEnabled()">sharedConnectionEnabled</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#shutdown()">shutdown</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#start()">start</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#startSharedConnection()">startSharedConnection</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#stop()">stop</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#stop(java.lang.Runnable)">stop</A>, <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#stopSharedConnection()">stopSharedConnection</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jms.support.destination.JmsDestinationAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jms.support.destination.<A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html" title="class in org.springframework.jms.support.destination">JmsDestinationAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html#getDestinationResolver()">getDestinationResolver</A>, <A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html#isPubSubDomain()">isPubSubDomain</A>, <A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html#resolveDestinationName(javax.jms.Session, java.lang.String)">resolveDestinationName</A>, <A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html#setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)">setDestinationResolver</A>, <A HREF="../../../../org/springframework/jms/support/destination/JmsDestinationAccessor.html#setPubSubDomain(boolean)">setPubSubDomain</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jms.support.JmsAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jms.support.<A HREF="../../../../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#convertJmsAccessException(javax.jms.JMSException)">convertJmsAccessException</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#createConnection()">createConnection</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#createSession(javax.jms.Connection)">createSession</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#getConnectionFactory()">getConnectionFactory</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#getSessionAcknowledgeMode()">getSessionAcknowledgeMode</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#isClientAcknowledge(javax.jms.Session)">isClientAcknowledge</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#isSessionTransacted()">isSessionTransacted</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#setConnectionFactory(javax.jms.ConnectionFactory)">setConnectionFactory</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#setSessionAcknowledgeMode(int)">setSessionAcknowledgeMode</A>, <A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#setSessionAcknowledgeModeName(java.lang.String)">setSessionAcknowledgeModeName</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.factory.BeanNameAware"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.beans.factory.<A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html#setBeanName(java.lang.String)">setBeanName</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="DEFAULT_RECEIVE_TIMEOUT"><!-- --></A><H3>
DEFAULT_RECEIVE_TIMEOUT</H3>
<PRE>
public static final long <B>DEFAULT_RECEIVE_TIMEOUT</B></PRE>
<DL>
<DD>The default receive timeout: 1000 ms = 1 second.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.springframework.jms.listener.AbstractPollingMessageListenerContainer.DEFAULT_RECEIVE_TIMEOUT">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="AbstractPollingMessageListenerContainer()"><!-- --></A><H3>
AbstractPollingMessageListenerContainer</H3>
<PRE>
public <B>AbstractPollingMessageListenerContainer</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setSessionTransacted(boolean)"><!-- --></A><H3>
setSessionTransacted</H3>
<PRE>
public void <B>setSessionTransacted</B>(boolean&nbsp;sessionTransacted)</PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#setSessionTransacted(boolean)">JmsAccessor</A></CODE></B></DD>
<DD>Set the transaction mode that is used when creating a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms"><CODE>Session</CODE></A>.
 Default is "false".
 <p>Note that within a JTA transaction, the parameters passed to
 <code>create(Queue/Topic)Session(boolean transacted, int acknowledgeMode)</code>
 method are not taken into account. Depending on the J2EE transaction context,
 the container makes its own decisions on these values. Analogously, these
 parameters are not taken into account within a locally managed transaction
 either, since the accessor operates on an existing JMS Session in this case.
 <p>Setting this flag to "true" will use a short local JMS transaction
 when running outside of a managed transaction, and a synchronized local
 JMS transaction in case of a managed transaction (other than an XA
 transaction) being present. The latter has the effect of a local JMS
 transaction being managed alongside the main transaction (which might
 be a native JDBC transaction), with the JMS transaction committing
 right after the main transaction.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html#setSessionTransacted(boolean)">setSessionTransacted</A></CODE> in class <CODE><A HREF="../../../../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html?is-external=true#createSession(boolean, int)" title="class or interface in javax.jms"><CODE>Connection.createSession(boolean, int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setPubSubNoLocal(boolean)"><!-- --></A><H3>
setPubSubNoLocal</H3>
<PRE>
public void <B>setPubSubNoLocal</B>(boolean&nbsp;pubSubNoLocal)</PRE>
<DL>
<DD>Set whether to inhibit the delivery of messages published by its own connection.
 Default is "false".
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/TopicSession.html?is-external=true#createSubscriber(javax.jms.Topic, java.lang.String, boolean)" title="class or interface in javax.jms"><CODE>TopicSession.createSubscriber(javax.jms.Topic, String, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isPubSubNoLocal()"><!-- --></A><H3>
isPubSubNoLocal</H3>
<PRE>
protected boolean <B>isPubSubNoLocal</B>()</PRE>
<DL>
<DD>Return whether to inhibit the delivery of messages published by its own connection.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTransactionManager(org.springframework.transaction.PlatformTransactionManager)"><!-- --></A><H3>
setTransactionManager</H3>
<PRE>
public void <B>setTransactionManager</B>(<A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A>&nbsp;transactionManager)</PRE>
<DL>
<DD>Specify the Spring <A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A>
 to use for transactional wrapping of message reception plus listener execution.
 <p>Default is none, not performing any transactional wrapping.
 If specified, this will usually be a Spring
 <A HREF="../../../../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta"><CODE>JtaTransactionManager</CODE></A> or one
 of its subclasses, in combination with a JTA-aware ConnectionFactory that
 this message listener container obtains its Connections from.
 <p><b>Note: Consider the use of local JMS transactions instead.</b>
 Simply switch the <A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setSessionTransacted(boolean)"><CODE>"sessionTransacted"</CODE></A> flag
 to "true" in order to use a locally transacted JMS Session for the entire
 receive processing, including any Session operations performed by a
 <A HREF="../../../../org/springframework/jms/listener/SessionAwareMessageListener.html" title="interface in org.springframework.jms.listener"><CODE>SessionAwareMessageListener</CODE></A> (e.g. sending a response message).
 Alternatively, a <A HREF="../../../../org/springframework/jms/connection/JmsTransactionManager.html" title="class in org.springframework.jms.connection"><CODE>JmsTransactionManager</CODE></A>
 may be used for fully synchronized Spring transactions based on local JMS
 transactions. Check <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener"><CODE>AbstractMessageListenerContainer</CODE></A>'s javadoc for
 a discussion of transaction choices and message redelivery scenarios.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta"><CODE>JtaTransactionManager</CODE></A>, 
<A HREF="../../../../org/springframework/jms/connection/JmsTransactionManager.html" title="class in org.springframework.jms.connection"><CODE>JmsTransactionManager</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getTransactionManager()"><!-- --></A><H3>
getTransactionManager</H3>
<PRE>
protected final <A HREF="../../../../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A> <B>getTransactionManager</B>()</PRE>
<DL>
<DD>Return the Spring PlatformTransactionManager to use for transactional
 wrapping of message reception plus listener execution.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setTransactionName(java.lang.String)"><!-- --></A><H3>
setTransactionName</H3>
<PRE>
public void <B>setTransactionName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;transactionName)</PRE>
<DL>
<DD>Specify the transaction name to use for transactional wrapping.
 Default is the bean name of this listener container, if any.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/transaction/TransactionDefinition.html#getName()"><CODE>TransactionDefinition.getName()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setTransactionTimeout(int)"><!-- --></A><H3>
setTransactionTimeout</H3>
<PRE>
public void <B>setTransactionTimeout</B>(int&nbsp;transactionTimeout)</PRE>
<DL>
<DD>Specify the transaction timeout to use for transactional wrapping, in <b>seconds</b>.
 Default is none, using the transaction manager's default timeout.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/transaction/TransactionDefinition.html#getTimeout()"><CODE>TransactionDefinition.getTimeout()</CODE></A>, 
<A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setReceiveTimeout(long)"><CODE>setReceiveTimeout(long)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setReceiveTimeout(long)"><!-- --></A><H3>
setReceiveTimeout</H3>
<PRE>
public void <B>setReceiveTimeout</B>(long&nbsp;receiveTimeout)</PRE>
<DL>
<DD>Set the timeout to use for receive calls, in <b>milliseconds</b>.
 The default is 1000 ms, that is, 1 second.
 <p><b>NOTE:</b> This value needs to be smaller than the transaction
 timeout used by the transaction manager (in the appropriate unit,
 of course). -1 indicates no timeout at all; however, this is only
 feasible if not running within a transaction manager.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true#receive(long)" title="class or interface in javax.jms"><CODE>MessageConsumer.receive(long)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true#receive()" title="class or interface in javax.jms"><CODE>MessageConsumer.receive()</CODE></A>, 
<A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#setTransactionTimeout(int)"><CODE>setTransactionTimeout(int)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="initialize()"><!-- --></A><H3>
initialize</H3>
<PRE>
public void <B>initialize</B>()</PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#initialize()">AbstractJmsListeningContainer</A></CODE></B></DD>
<DD>Initialize this container.
 <p>Creates a JMS Connection, starts the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html?is-external=true" title="class or interface in javax.jms"><CODE>Connection</CODE></A>
 (if <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#setAutoStartup(boolean)"><CODE>"autoStartup"</CODE></A> hasn't been turned off),
 and calls <A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#doInitialize()"><CODE>AbstractJmsListeningContainer.doInitialize()</CODE></A>.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html#initialize()">initialize</A></CODE> in class <CODE><A HREF="../../../../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="createListenerConsumer(javax.jms.Session)"><!-- --></A><H3>
createListenerConsumer</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A> <B>createListenerConsumer</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)
                                          throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></PRE>
<DL>
<DD>Create a MessageConsumer for the given JMS Session,
 registering a MessageListener for the specified listener.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the JMS Session to work on
<DT><B>Returns:</B><DD>the MessageConsumer
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></CODE> - if thrown by JMS methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)"><CODE>receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)"><!-- --></A><H3>
receiveAndExecute</H3>
<PRE>
protected boolean <B>receiveAndExecute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
                                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer)
                             throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></PRE>
<DL>
<DD>Execute the listener for a message received from the given consumer,
 wrapping the entire operation in an external transaction if demanded.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the JMS Session to work on<DD><CODE>consumer</CODE> - the MessageConsumer to work on
<DT><B>Returns:</B><DD>whether a message has been received
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></CODE> - if thrown by JMS methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus)"><CODE>doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus)"><!-- --></A><H3>
doReceiveAndExecute</H3>
<PRE>
protected boolean <B>doReceiveAndExecute</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                                      <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
                                      <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer,
                                      <A HREF="../../../../org/springframework/transaction/TransactionStatus.html" title="interface in org.springframework.transaction">TransactionStatus</A>&nbsp;status)
                               throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></PRE>
<DL>
<DD>Actually execute the listener for a message received from the given consumer,
 fetching all requires resources and invoking the listener.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the JMS Session to work on<DD><CODE>consumer</CODE> - the MessageConsumer to work on<DD><CODE>status</CODE> - the TransactionStatus (may be <code>null</code>)
<DT><B>Returns:</B><DD>whether a message has been received
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></CODE> - if thrown by JMS methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#doExecuteListener(javax.jms.Session, javax.jms.Message)"><CODE>AbstractMessageListenerContainer.doExecuteListener(javax.jms.Session, javax.jms.Message)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isSessionLocallyTransacted(javax.jms.Session)"><!-- --></A><H3>
isSessionLocallyTransacted</H3>
<PRE>
protected boolean <B>isSessionLocallyTransacted</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</PRE>
<DL>
<DD>This implementation checks whether the Session is externally synchronized.
 In this case, the Session is not locally transacted, despite the listener
 container's "sessionTransacted" flag being set to "true".
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isSessionLocallyTransacted(javax.jms.Session)">isSessionLocallyTransacted</A></CODE> in class <CODE><A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the Session to check
<DT><B>Returns:</B><DD>whether the given Session is locally transacted<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection"><CODE>JmsResourceHolder</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="shouldCommitAfterNoMessageReceived(javax.jms.Session)"><!-- --></A><H3>
shouldCommitAfterNoMessageReceived</H3>
<PRE>
protected boolean <B>shouldCommitAfterNoMessageReceived</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</PRE>
<DL>
<DD>Determine whether to trigger a commit after no message has been received.
 This is a good idea on any JMS provider other than Tibco, which is what
 this default implementation checks for.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the current JMS Session which received no message
<DT><B>Returns:</B><DD>whether to call <A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html#commitIfNecessary(javax.jms.Session, javax.jms.Message)"><CODE>AbstractMessageListenerContainer.commitIfNecessary(javax.jms.Session, javax.jms.Message)</CODE></A> on the given Session</DL>
</DD>
</DL>
<HR>

<A NAME="receiveMessage(javax.jms.MessageConsumer)"><!-- --></A><H3>
receiveMessage</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Message.html?is-external=true" title="class or interface in javax.jms">Message</A> <B>receiveMessage</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A>&nbsp;consumer)
                          throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></PRE>
<DL>
<DD>Receive a message from the given consumer.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>consumer</CODE> - the MessageConsumer to use
<DT><B>Returns:</B><DD>the Message, or <code>null</code> if none
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></CODE> - if thrown by JMS methods</DL>
</DD>
</DL>
<HR>

<A NAME="messageReceived(java.lang.Object, javax.jms.Session)"><!-- --></A><H3>
messageReceived</H3>
<PRE>
protected void <B>messageReceived</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                               <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</PRE>
<DL>
<DD>Template method that gets called right when a new message has been received,
 before attempting to process it. Allows subclasses to react to the event
 of an actual incoming message, for example adapting their consumer count.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>invoker</CODE> - the invoker object (passed through)<DD><CODE>session</CODE> - the receiving JMS Session</DL>
</DD>
</DL>
<HR>

<A NAME="noMessageReceived(java.lang.Object, javax.jms.Session)"><!-- --></A><H3>
noMessageReceived</H3>
<PRE>
protected void <B>noMessageReceived</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;invoker,
                                 <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session)</PRE>
<DL>
<DD>Template method that gets called when <i>no</i> message has been received,
 before returning to the receive loop again. Allows subclasses to react to
 the event of no incoming message, for example marking the invoker as idle.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>invoker</CODE> - the invoker object (passed through)<DD><CODE>session</CODE> - the receiving JMS Session</DL>
</DD>
</DL>
<HR>

<A NAME="getConnection(org.springframework.jms.connection.JmsResourceHolder)"><!-- --></A><H3>
getConnection</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Connection.html?is-external=true" title="class or interface in javax.jms">Connection</A> <B>getConnection</B>(<A HREF="../../../../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>&nbsp;holder)</PRE>
<DL>
<DD>Fetch an appropriate Connection from the given JmsResourceHolder.
 <p>This implementation accepts any JMS 1.1 Connection.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>holder</CODE> - the JmsResourceHolder
<DT><B>Returns:</B><DD>an appropriate Connection fetched from the holder,
 or <code>null</code> if none found</DL>
</DD>
</DL>
<HR>

<A NAME="getSession(org.springframework.jms.connection.JmsResourceHolder)"><!-- --></A><H3>
getSession</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A> <B>getSession</B>(<A HREF="../../../../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>&nbsp;holder)</PRE>
<DL>
<DD>Fetch an appropriate Session from the given JmsResourceHolder.
 <p>This implementation accepts any JMS 1.1 Session.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>holder</CODE> - the JmsResourceHolder
<DT><B>Returns:</B><DD>an appropriate Session fetched from the holder,
 or <code>null</code> if none found</DL>
</DD>
</DL>
<HR>

<A NAME="createConsumer(javax.jms.Session, javax.jms.Destination)"><!-- --></A><H3>
createConsumer</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageConsumer.html?is-external=true" title="class or interface in javax.jms">MessageConsumer</A> <B>createConsumer</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms">Session</A>&nbsp;session,
                                         <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Destination.html?is-external=true" title="class or interface in javax.jms">Destination</A>&nbsp;destination)
                                  throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></PRE>
<DL>
<DD>Create a JMS MessageConsumer for the given Session and Destination.
 <p>This implementation uses JMS 1.1 API.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>session</CODE> - the JMS Session to create a MessageConsumer for<DD><CODE>destination</CODE> - the JMS Destination to create a MessageConsumer for
<DT><B>Returns:</B><DD>the new JMS MessageConsumer
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms">JMSException</A></CODE> - if thrown by JMS API methods</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AbstractPollingMessageListenerContainer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;<A HREF="#nested_classes_inherited_from_class_org.springframework.jms.listener.AbstractJmsListeningContainer">NESTED</A>&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
