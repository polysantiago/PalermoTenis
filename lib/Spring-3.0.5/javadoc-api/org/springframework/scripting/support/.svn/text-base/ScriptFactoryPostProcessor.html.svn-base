<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:26 BST 2010 -->
<TITLE>
ScriptFactoryPostProcessor
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ScriptFactoryPostProcessor";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/scripting/support/StaticScriptSource.html" title="class in org.springframework.scripting.support"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/scripting/support/ScriptFactoryPostProcessor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ScriptFactoryPostProcessor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.scripting.support</FONT>
<BR>
Class ScriptFactoryPostProcessor</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.scripting.support.ScriptFactoryPostProcessor</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A>, <A HREF="../../../../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config">BeanPostProcessor</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessor</A>, <A HREF="../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config">SmartInstantiationAwareBeanPostProcessor</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A>, <A HREF="../../../../org/springframework/context/ResourceLoaderAware.html" title="interface in org.springframework.context">ResourceLoaderAware</A>, <A HREF="../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>ScriptFactoryPostProcessor</B><DT>extends <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessorAdapter</A><DT>implements <A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A>, <A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A>, <A HREF="../../../../org/springframework/context/ResourceLoaderAware.html" title="interface in org.springframework.context">ResourceLoaderAware</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A>, <A HREF="../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></DL>
</PRE>

<P>
<A HREF="../../../../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> that
 handles <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> definitions,
 replacing each factory with the actual scripted Java object generated by it.

 <p>This is similar to the
 <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> mechanism, but is
 specifically tailored for scripts and not built into Spring's core
 container itself but rather implemented as an extension.

 <p><b>NOTE:</b> The most important characteristic of this post-processor
 is that constructor arguments are applied to the
 <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> instance
 while bean property values are applied to the generated scripted object.
 Typically, constructor arguments include a script source locator and
 potentially script interfaces, while bean property values include
 references and config values to inject into the scripted object itself.

 <p>The following <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> will automatically
 be applied to the two
 <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> definitions below.
 At runtime, the actual scripted objects will be exposed for
 "bshMessenger" and "groovyMessenger", rather than the
 <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> instances. Both of
 those are supposed to be castable to the example's <code>Messenger</code>
 interfaces here.

 <pre class="code">&lt;bean class="org.springframework.scripting.support.ScriptFactoryPostProcessor"/&gt;

 &lt;bean id="bshMessenger" class="org.springframework.scripting.bsh.BshScriptFactory"&gt;
   &lt;constructor-arg value="classpath:mypackage/Messenger.bsh"/&gt;
   &lt;constructor-arg value="mypackage.Messenger"/&gt;
   &lt;property name="message" value="Hello World!"/&gt;
 &lt;/bean&gt;

 &lt;bean id="groovyMessenger" class="org.springframework.scripting.bsh.GroovyScriptFactory"&gt;
   &lt;constructor-arg value="classpath:mypackage/Messenger.groovy"/&gt;
   &lt;property name="message" value="Hello World!"/&gt;
 &lt;/bean&gt;</pre>

 <p><b>NOTE:</b> Please note that the above excerpt from a Spring
 XML bean definition file uses just the &lt;bean/&gt;-style syntax
 (in an effort to illustrate using the <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> itself).
 In reality, you would never create a &lt;bean/&gt; definition for a
 <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> explicitly; rather you would import the
 tags from the <code>'lang'</code> namespace and simply create scripted
 beans using the tags in that namespace... as part of doing so, a
 <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> will implicitly be created for you.

 <p>The Spring reference documentation contains numerous examples of using
 tags in the <code>'lang'</code> namespace; by way of an example, find below
 a Groovy-backed bean defined using the <code>'lang:groovy'</code> tag.

 <pre class="code">
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:lang="http://www.springframework.org/schema/lang"&gt;

   &lt;!-- this is the bean definition for the Groovy-backed Messenger implementation --&gt;
   &lt;lang:groovy id="messenger" script-source="classpath:Messenger.groovy"&gt;
     &lt;lang:property name="message" value="I Can Do The Frug" /&gt;
   &lt;/lang:groovy&gt;

   &lt;!-- an otherwise normal bean that will be injected by the Groovy-backed Messenger --&gt;
   &lt;bean id="bookingService" class="x.y.DefaultBookingService"&gt;
     &lt;property name="messenger" ref="messenger" /&gt;
   &lt;/bean&gt;

 &lt;/beans&gt;</pre>
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller, Rob Harrop, Rick Evans, Mark Fisher</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#INLINE_SCRIPT_PREFIX">INLINE_SCRIPT_PREFIX</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The <A HREF="../../../../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A>-style prefix that denotes
 an inline script.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#logger">logger</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logger available to subclasses</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#REFRESH_CHECK_DELAY_ATTRIBUTE">REFRESH_CHECK_DELAY_ATTRIBUTE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.core.Ordered"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.core.<A HREF="../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/core/Ordered.html#HIGHEST_PRECEDENCE">HIGHEST_PRECEDENCE</A>, <A HREF="../../../../org/springframework/core/Ordered.html#LOWEST_PRECEDENCE">LOWEST_PRECEDENCE</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#ScriptFactoryPostProcessor()">ScriptFactoryPostProcessor</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)">convertToScriptSource</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptSourceLocator,
                      <A HREF="../../../../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io">ResourceLoader</A>&nbsp;resourceLoader)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert the given script source locator to a ScriptSource instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createCompositeInterface(java.lang.Class[])">createCompositeInterface</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createConfigInterface(org.springframework.beans.factory.config.BeanDefinition, java.lang.Class[])">createConfigInterface</A></B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a config interface for the given bean definition, defining setter
 methods for the defined property values as well as an init method and
 a destroy method (if defined).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createRefreshableProxy(org.springframework.aop.TargetSource, java.lang.Class[])">createRefreshableProxy</A></B>(<A HREF="../../../../org/springframework/aop/TargetSource.html" title="interface in org.springframework.aop">TargetSource</A>&nbsp;ts,
                       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a refreshable proxy for the given AOP TargetSource.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createScriptedObjectBeanDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, org.springframework.scripting.ScriptSource, java.lang.Class[])">createScriptedObjectBeanDefinition</A></B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptFactoryBeanName,
                                   <A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A>&nbsp;scriptSource,
                                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a bean definition for the scripted object, based on the given script
 definition, extracting the definition data that is relevant for the scripted
 object (that is, everything but bean class and constructor arguments).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createScriptFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)">createScriptFactoryBeanDefinition</A></B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a ScriptFactory bean definition based on the given script definition,
 extracting only the definition data that is relevant for the ScriptFactory
 (that is, only bean class and constructor arguments).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#destroy()">destroy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Destroy the inner bean factory (used for scripts) on shutdown.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#getOrder()">getOrder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the order value of this object, with a
 higher value meaning greater in terms of sorting.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#getScriptSource(java.lang.String, java.lang.String)">getScriptSource</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptSourceLocator)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Obtain a ScriptSource for the given bean, lazily creating it
 if not cached already.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)">postProcessBeforeInstantiation</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;beanClass,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Apply this BeanPostProcessor <i>before the target bean gets instantiated</i>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#predictBeanType(java.lang.Class, java.lang.String)">predictBeanType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;beanClass,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Predict the type of the bean to be eventually returned from this
 processor's <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)"><CODE>InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation(java.lang.Class<?>, java.lang.String)</CODE></A> callback.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#prepareScriptBeans(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String)">prepareScriptBeans</A></B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptFactoryBeanName,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptedObjectBeanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prepare the script beans in the internal BeanFactory that this
 post-processor uses.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#resolveRefreshCheckDelay(org.springframework.beans.factory.config.BeanDefinition)">resolveRefreshCheckDelay</A></B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;beanDefinition)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the refresh check delay for the given <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> <A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#setBeanClassLoader(java.lang.ClassLoader)">setBeanClassLoader</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang">ClassLoader</A>&nbsp;classLoader)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback that supplies the bean <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>class loader</CODE></A> to
 a bean instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">setBeanFactory</A></B>(<A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>&nbsp;beanFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback that supplies the owning factory to a bean instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#setDefaultRefreshCheckDelay(long)">setDefaultRefreshCheckDelay</A></B>(long&nbsp;defaultRefreshCheckDelay)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the delay between refresh checks, in milliseconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#setResourceLoader(org.springframework.core.io.ResourceLoader)">setResourceLoader</A></B>(<A HREF="../../../../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io">ResourceLoader</A>&nbsp;resourceLoader)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the ResourceLoader that this object runs in.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.beans.factory.config.<A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessorAdapter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#determineCandidateConstructors(java.lang.Class, java.lang.String)">determineCandidateConstructors</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#getEarlyBeanReference(java.lang.Object, java.lang.String)">getEarlyBeanReference</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#postProcessAfterInitialization(java.lang.Object, java.lang.String)">postProcessAfterInitialization</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#postProcessAfterInstantiation(java.lang.Object, java.lang.String)">postProcessAfterInstantiation</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#postProcessBeforeInitialization(java.lang.Object, java.lang.String)">postProcessBeforeInitialization</A>, <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#postProcessPropertyValues(org.springframework.beans.PropertyValues, java.beans.PropertyDescriptor[], java.lang.Object, java.lang.String)">postProcessPropertyValues</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="INLINE_SCRIPT_PREFIX"><!-- --></A><H3>
INLINE_SCRIPT_PREFIX</H3>
<PRE>
public static final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>INLINE_SCRIPT_PREFIX</B></PRE>
<DL>
<DD>The <A HREF="../../../../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A>-style prefix that denotes
 an inline script.
 <p>An inline script is a script that is defined right there in the (typically XML)
 configuration, as opposed to being defined in an external file.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.springframework.scripting.support.ScriptFactoryPostProcessor.INLINE_SCRIPT_PREFIX">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="REFRESH_CHECK_DELAY_ATTRIBUTE"><!-- --></A><H3>
REFRESH_CHECK_DELAY_ATTRIBUTE</H3>
<PRE>
public static final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>REFRESH_CHECK_DELAY_ATTRIBUTE</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="logger"><!-- --></A><H3>
logger</H3>
<PRE>
protected final <A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A> <B>logger</B></PRE>
<DL>
<DD>Logger available to subclasses
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="ScriptFactoryPostProcessor()"><!-- --></A><H3>
ScriptFactoryPostProcessor</H3>
<PRE>
public <B>ScriptFactoryPostProcessor</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setDefaultRefreshCheckDelay(long)"><!-- --></A><H3>
setDefaultRefreshCheckDelay</H3>
<PRE>
public void <B>setDefaultRefreshCheckDelay</B>(long&nbsp;defaultRefreshCheckDelay)</PRE>
<DL>
<DD>Set the delay between refresh checks, in milliseconds.
 Default is -1, indicating no refresh checks at all.
 <p>Note that an actual refresh will only happen when
 the <A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting"><CODE>ScriptSource</CODE></A> indicates
 that it has been modified.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/scripting/ScriptSource.html#isModified()"><CODE>ScriptSource.isModified()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setBeanClassLoader(java.lang.ClassLoader)"><!-- --></A><H3>
setBeanClassLoader</H3>
<PRE>
public void <B>setBeanClassLoader</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang">ClassLoader</A>&nbsp;classLoader)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html#setBeanClassLoader(java.lang.ClassLoader)">BeanClassLoaderAware</A></CODE></B></DD>
<DD>Callback that supplies the bean <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>class loader</CODE></A> to
 a bean instance.
 <p>Invoked <i>after</i> the population of normal bean properties but
 <i>before</i> an initialization callback such as
 <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory"><CODE>InitializingBean's</CODE></A>
 <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()"><CODE>InitializingBean.afterPropertiesSet()</CODE></A>
 method or a custom init-method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html#setBeanClassLoader(java.lang.ClassLoader)">setBeanClassLoader</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>classLoader</CODE> - the owning class loader; may be <code>null</code> in
 which case a default <code>ClassLoader</code> must be used, for example
 the <code>ClassLoader</code> obtained via
 <A HREF="../../../../org/springframework/util/ClassUtils.html#getDefaultClassLoader()"><CODE>ClassUtils.getDefaultClassLoader()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setBeanFactory(org.springframework.beans.factory.BeanFactory)"><!-- --></A><H3>
setBeanFactory</H3>
<PRE>
public void <B>setBeanFactory</B>(<A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>&nbsp;beanFactory)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">BeanFactoryAware</A></CODE></B></DD>
<DD>Callback that supplies the owning factory to a bean instance.
 <p>Invoked after the population of normal bean properties
 but before an initialization callback such as
 <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()"><CODE>InitializingBean.afterPropertiesSet()</CODE></A> or a custom init-method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">setBeanFactory</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanFactory</CODE> - owning BeanFactory (never <code>null</code>).
 The bean can immediately call methods on the factory.<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory"><CODE>BeanInitializationException</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setResourceLoader(org.springframework.core.io.ResourceLoader)"><!-- --></A><H3>
setResourceLoader</H3>
<PRE>
public void <B>setResourceLoader</B>(<A HREF="../../../../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io">ResourceLoader</A>&nbsp;resourceLoader)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/context/ResourceLoaderAware.html#setResourceLoader(org.springframework.core.io.ResourceLoader)">ResourceLoaderAware</A></CODE></B></DD>
<DD>Set the ResourceLoader that this object runs in.
 <p>This might be a ResourcePatternResolver, which can be checked
 through <code>instanceof ResourcePatternResolver</code>. See also the
 <code>ResourcePatternUtils.getResourcePatternResolver</code> method.
 <p>Invoked after population of normal bean properties but before an init callback
 like InitializingBean's <code>afterPropertiesSet</code> or a custom init-method.
 Invoked before ApplicationContextAware's <code>setApplicationContext</code>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/context/ResourceLoaderAware.html#setResourceLoader(org.springframework.core.io.ResourceLoader)">setResourceLoader</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/context/ResourceLoaderAware.html" title="interface in org.springframework.context">ResourceLoaderAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>resourceLoader</CODE> - ResourceLoader object to be used by this object<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/core/io/support/ResourcePatternResolver.html" title="interface in org.springframework.core.io.support"><CODE>ResourcePatternResolver</CODE></A>, 
<A HREF="../../../../org/springframework/core/io/support/ResourcePatternUtils.html#getResourcePatternResolver(org.springframework.core.io.ResourceLoader)"><CODE>ResourcePatternUtils.getResourcePatternResolver(org.springframework.core.io.ResourceLoader)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getOrder()"><!-- --></A><H3>
getOrder</H3>
<PRE>
public int <B>getOrder</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/core/Ordered.html#getOrder()">Ordered</A></CODE></B></DD>
<DD>Return the order value of this object, with a
 higher value meaning greater in terms of sorting.
 <p>Normally starting with 0, with <code>Integer.MAX_VALUE</code>
 indicating the greatest value. Same order values will result
 in arbitrary positions for the affected objects.
 <p>Higher values can be interpreted as lower priority. As a
 consequence, the object with the lowest value has highest priority
 (somewhat analogous to Servlet "load-on-startup" values).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/core/Ordered.html#getOrder()">getOrder</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the order value</DL>
</DD>
</DL>
<HR>

<A NAME="predictBeanType(java.lang.Class, java.lang.String)"><!-- --></A><H3>
predictBeanType</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>predictBeanType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;beanClass,
                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html#predictBeanType(java.lang.Class, java.lang.String)">SmartInstantiationAwareBeanPostProcessor</A></CODE></B></DD>
<DD>Predict the type of the bean to be eventually returned from this
 processor's <A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)"><CODE>InstantiationAwareBeanPostProcessor.postProcessBeforeInstantiation(java.lang.Class<?>, java.lang.String)</CODE></A> callback.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html#predictBeanType(java.lang.Class, java.lang.String)">predictBeanType</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config">SmartInstantiationAwareBeanPostProcessor</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#predictBeanType(java.lang.Class, java.lang.String)">predictBeanType</A></CODE> in class <CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessorAdapter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanClass</CODE> - the raw class of the bean<DD><CODE>beanName</CODE> - the name of the bean
<DT><B>Returns:</B><DD>the type of the bean, or <code>null</code> if not predictable</DL>
</DD>
</DL>
<HR>

<A NAME="postProcessBeforeInstantiation(java.lang.Class, java.lang.String)"><!-- --></A><H3>
postProcessBeforeInstantiation</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>postProcessBeforeInstantiation</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;beanClass,
                                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)">InstantiationAwareBeanPostProcessor</A></CODE></B></DD>
<DD>Apply this BeanPostProcessor <i>before the target bean gets instantiated</i>.
 The returned bean object may be a proxy to use instead of the target bean,
 effectively suppressing default instantiation of the target bean.
 <p>If a non-null object is returned by this method, the bean creation process
 will be short-circuited. The only further processing applied is the
 <A HREF="../../../../org/springframework/beans/factory/config/BeanPostProcessor.html#postProcessAfterInitialization(java.lang.Object, java.lang.String)"><CODE>BeanPostProcessor.postProcessAfterInitialization(java.lang.Object, java.lang.String)</CODE></A> callback from the configured
 <A HREF="../../../../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessors</CODE></A>.
 <p>This callback will only be applied to bean definitions with a bean class.
 In particular, it will not be applied to beans with a "factory-method".
 <p>Post-processors may implement the extended
 <A HREF="../../../../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>SmartInstantiationAwareBeanPostProcessor</CODE></A> interface in order
 to predict the type of the bean object that they are going to return here.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)">postProcessBeforeInstantiation</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessor</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#postProcessBeforeInstantiation(java.lang.Class, java.lang.String)">postProcessBeforeInstantiation</A></CODE> in class <CODE><A HREF="../../../../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessorAdapter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanClass</CODE> - the class of the bean to be instantiated<DD><CODE>beanName</CODE> - the name of the bean
<DT><B>Returns:</B><DD>the bean object to expose instead of a default instance of the target bean,
 or <code>null</code> to proceed with default instantiation<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/support/AbstractBeanDefinition.html#hasBeanClass()"><CODE>AbstractBeanDefinition.hasBeanClass()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/support/AbstractBeanDefinition.html#getFactoryMethodName()"><CODE>AbstractBeanDefinition.getFactoryMethodName()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="prepareScriptBeans(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String)"><!-- --></A><H3>
prepareScriptBeans</H3>
<PRE>
protected void <B>prepareScriptBeans</B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptFactoryBeanName,
                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptedObjectBeanName)</PRE>
<DL>
<DD>Prepare the script beans in the internal BeanFactory that this
 post-processor uses. Each original bean definition will be split
 into a ScriptFactory definition and a scripted object definition.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bd</CODE> - the original bean definition in the main BeanFactory<DD><CODE>scriptFactoryBeanName</CODE> - the name of the internal ScriptFactory bean<DD><CODE>scriptedObjectBeanName</CODE> - the name of the internal scripted object bean</DL>
</DD>
</DL>
<HR>

<A NAME="resolveRefreshCheckDelay(org.springframework.beans.factory.config.BeanDefinition)"><!-- --></A><H3>
resolveRefreshCheckDelay</H3>
<PRE>
protected long <B>resolveRefreshCheckDelay</B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;beanDefinition)</PRE>
<DL>
<DD>Get the refresh check delay for the given <A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> <A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A>.
 If the <A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A> has a
 <A HREF="../../../../org/springframework/core/AttributeAccessor.html" title="interface in org.springframework.core"><CODE>metadata attribute</CODE></A>
 under the key <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#REFRESH_CHECK_DELAY_ATTRIBUTE"><CODE>REFRESH_CHECK_DELAY_ATTRIBUTE</CODE></A> which is a valid <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Number.html?is-external=true" title="class or interface in java.lang"><CODE>Number</CODE></A>
 type, then this value is used. Otherwise, the the <A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#defaultRefreshCheckDelay"><CODE>defaultRefreshCheckDelay</CODE></A>
 value is used.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanDefinition</CODE> - the BeanDefinition to check
<DT><B>Returns:</B><DD>the refresh check delay</DL>
</DD>
</DL>
<HR>

<A NAME="createScriptFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)"><!-- --></A><H3>
createScriptFactoryBeanDefinition</H3>
<PRE>
protected <A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A> <B>createScriptFactoryBeanDefinition</B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd)</PRE>
<DL>
<DD>Create a ScriptFactory bean definition based on the given script definition,
 extracting only the definition data that is relevant for the ScriptFactory
 (that is, only bean class and constructor arguments).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bd</CODE> - the full script bean definition
<DT><B>Returns:</B><DD>the extracted ScriptFactory bean definition<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getScriptSource(java.lang.String, java.lang.String)"><!-- --></A><H3>
getScriptSource</H3>
<PRE>
protected <A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A> <B>getScriptSource</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                                       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptSourceLocator)</PRE>
<DL>
<DD>Obtain a ScriptSource for the given bean, lazily creating it
 if not cached already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the scripted bean<DD><CODE>scriptSourceLocator</CODE> - the script source locator associated with the bean
<DT><B>Returns:</B><DD>the corresponding ScriptSource instance<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)"><CODE>convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)"><!-- --></A><H3>
convertToScriptSource</H3>
<PRE>
protected <A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A> <B>convertToScriptSource</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName,
                                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptSourceLocator,
                                             <A HREF="../../../../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io">ResourceLoader</A>&nbsp;resourceLoader)</PRE>
<DL>
<DD>Convert the given script source locator to a ScriptSource instance.
 <p>By default, supported locators are Spring resource locations
 (such as "file:C:/myScript.bsh" or "classpath:myPackage/myScript.bsh")
 and inline scripts ("inline:myScriptText...").
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the scripted bean<DD><CODE>scriptSourceLocator</CODE> - the script source locator<DD><CODE>resourceLoader</CODE> - the ResourceLoader to use (if necessary)
<DT><B>Returns:</B><DD>the ScriptSource instance</DL>
</DD>
</DL>
<HR>

<A NAME="createConfigInterface(org.springframework.beans.factory.config.BeanDefinition, java.lang.Class[])"><!-- --></A><H3>
createConfigInterface</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>createConfigInterface</B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</PRE>
<DL>
<DD>Create a config interface for the given bean definition, defining setter
 methods for the defined property values as well as an init method and
 a destroy method (if defined).
 <p>This implementation creates the interface via CGLIB's InterfaceMaker,
 determining the property types from the given interfaces (as far as possible).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bd</CODE> - the bean definition (property values etc) to create a
 config interface for<DD><CODE>interfaces</CODE> - the interfaces to check against (might define
 getters corresponding to the setters we're supposed to generate)
<DT><B>Returns:</B><DD>the config interface<DT><B>See Also:</B><DD><A HREF="http://cglib.sourceforge.net/apidocs/net/sf/cglib/proxy/InterfaceMaker.html?is-external=true" title="class or interface in net.sf.cglib.proxy"><CODE>InterfaceMaker</CODE></A>, 
<A HREF="../../../../org/springframework/beans/BeanUtils.html#findPropertyType(java.lang.String, java.lang.Class[])"><CODE>BeanUtils.findPropertyType(java.lang.String, java.lang.Class<?>[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createCompositeInterface(java.lang.Class[])"><!-- --></A><H3>
createCompositeInterface</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>createCompositeInterface</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</PRE>
<DL>
<DD>Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.
 <p>The default implementation builds a JDK proxy class
 for the given interfaces.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interfaces</CODE> - the interfaces to merge
<DT><B>Returns:</B><DD>the merged interface as Class<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Proxy.html?is-external=true#getProxyClass(java.lang.ClassLoader, java.lang.Class...)" title="class or interface in java.lang.reflect"><CODE>Proxy.getProxyClass(java.lang.ClassLoader, java.lang.Class<?>...)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createScriptedObjectBeanDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, org.springframework.scripting.ScriptSource, java.lang.Class[])"><!-- --></A><H3>
createScriptedObjectBeanDefinition</H3>
<PRE>
protected <A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A> <B>createScriptedObjectBeanDefinition</B>(<A HREF="../../../../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>&nbsp;bd,
                                                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;scriptFactoryBeanName,
                                                            <A HREF="../../../../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A>&nbsp;scriptSource,
                                                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</PRE>
<DL>
<DD>Create a bean definition for the scripted object, based on the given script
 definition, extracting the definition data that is relevant for the scripted
 object (that is, everything but bean class and constructor arguments).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bd</CODE> - the full script bean definition<DD><CODE>scriptFactoryBeanName</CODE> - the name of the internal ScriptFactory bean<DD><CODE>scriptSource</CODE> - the ScriptSource for the scripted bean<DD><CODE>interfaces</CODE> - the interfaces that the scripted bean is supposed to implement
<DT><B>Returns:</B><DD>the extracted ScriptFactory bean definition<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/scripting/ScriptFactory.html#getScriptedObject(org.springframework.scripting.ScriptSource, java.lang.Class[])"><CODE>ScriptFactory.getScriptedObject(org.springframework.scripting.ScriptSource, java.lang.Class[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createRefreshableProxy(org.springframework.aop.TargetSource, java.lang.Class[])"><!-- --></A><H3>
createRefreshableProxy</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>createRefreshableProxy</B>(<A HREF="../../../../org/springframework/aop/TargetSource.html" title="interface in org.springframework.aop">TargetSource</A>&nbsp;ts,
                                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>[]&nbsp;interfaces)</PRE>
<DL>
<DD>Create a refreshable proxy for the given AOP TargetSource.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ts</CODE> - the refreshable TargetSource<DD><CODE>interfaces</CODE> - the proxy interfaces (may be <code>null</code> to
 indicate proxying of all interfaces implemented by the target class)
<DT><B>Returns:</B><DD>the generated proxy<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/scripting/support/RefreshableScriptTargetSource.html" title="class in org.springframework.scripting.support"><CODE>RefreshableScriptTargetSource</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="destroy()"><!-- --></A><H3>
destroy</H3>
<PRE>
public void <B>destroy</B>()</PRE>
<DL>
<DD>Destroy the inner bean factory (used for scripts) on shutdown.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html#destroy()">destroy</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/scripting/support/StaticScriptSource.html" title="class in org.springframework.scripting.support"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/scripting/support/ScriptFactoryPostProcessor.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ScriptFactoryPostProcessor.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
