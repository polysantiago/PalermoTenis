<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:20 BST 2010 -->
<TITLE>
RmiServiceExporter
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RmiServiceExporter";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/remoting/rmi/RmiServiceExporter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RmiServiceExporter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.remoting.support.RemotingSupport">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.remoting.rmi</FONT>
<BR>
Class RmiServiceExporter</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support">org.springframework.remoting.support.RemotingSupport</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support">org.springframework.remoting.support.RemoteExporter</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support">org.springframework.remoting.support.RemoteInvocationBasedExporter</A>
              <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi">org.springframework.remoting.rmi.RmiBasedExporter</A>
                  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.remoting.rmi.RmiServiceExporter</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A>, <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>RmiServiceExporter</B><DT>extends <A HREF="../../../../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi">RmiBasedExporter</A><DT>implements <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A></DL>
</PRE>

<P>
RMI exporter that exposes the specified service as RMI object with the specified name.
 Such services can be accessed via plain RMI or via <A HREF="../../../../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi"><CODE>RmiProxyFactoryBean</CODE></A>.
 Also supports exposing any non-RMI service via RMI invokers, to be accessed via
 <A HREF="../../../../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi"><CODE>RmiClientInterceptor</CODE></A> / <A HREF="../../../../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi"><CODE>RmiProxyFactoryBean</CODE></A>'s automatic detection
 of such invokers.

 <p>With an RMI invoker, RMI communication works on the <A HREF="../../../../org/springframework/remoting/rmi/RmiInvocationHandler.html" title="interface in org.springframework.remoting.rmi"><CODE>RmiInvocationHandler</CODE></A>
 level, needing only one stub for any service. Service interfaces do not have to
 extend <code>java.rmi.Remote</code> or throw <code>java.rmi.RemoteException</code>
 on all methods, but in and out parameters have to be serializable.

 <p>The major advantage of RMI, compared to Hessian and Burlap, is serialization.
 Effectively, any serializable Java object can be transported without hassle.
 Hessian and Burlap have their own (de-)serialization mechanisms, but are
 HTTP-based and thus much easier to setup than RMI. Alternatively, consider
 Spring's HTTP invoker to combine Java serialization with HTTP-based transport.

 <p>Note: RMI makes a best-effort attempt to obtain the fully qualified host name.
 If one cannot be determined, it will fall back and use the IP address. Depending
 on your network configuration, in some cases it will resolve the IP to the loopback
 address. To ensure that RMI will use the host name bound to the correct network
 interface, you should pass the <code>java.rmi.server.hostname</code> property to the
 JVM that will export the registry and/or the service using the "-D" JVM argument.
 For example: <code>-Djava.rmi.server.hostname=myserver.com</code>
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>13.05.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi"><CODE>RmiClientInterceptor</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi"><CODE>RmiProxyFactoryBean</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/Remote.html?is-external=true" title="class or interface in java.rmi"><CODE>Remote</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi"><CODE>RemoteException</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/caucho/HessianServiceExporter.html" title="class in org.springframework.remoting.caucho"><CODE>HessianServiceExporter</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/caucho/BurlapServiceExporter.html" title="class in org.springframework.remoting.caucho"><CODE>BurlapServiceExporter</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html" title="class in org.springframework.remoting.httpinvoker"><CODE>HttpInvokerServiceExporter</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.remoting.support.RemotingSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.remoting.support.<A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support">RemotingSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#RmiServiceExporter()">RmiServiceExporter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#afterPropertiesSet()">afterPropertiesSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invoked by a BeanFactory after it has set all bean properties supplied
 (and satisfied BeanFactoryAware and ApplicationContextAware).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#destroy()">destroy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unbind the RMI service from the registry on bean factory shutdown.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#getRegistry(int)">getRegistry</A></B>(int&nbsp;registryPort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Locate or create the RMI registry for this exporter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#getRegistry(int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)">getRegistry</A></B>(int&nbsp;registryPort,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Locate or create the RMI registry for this exporter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#getRegistry(java.lang.String, int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)">getRegistry</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;registryHost,
            int&nbsp;registryPort,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Locate or create the RMI registry for this exporter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#prepare()">prepare</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initialize this service exporter, registering the service as RMI object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setAlwaysCreateRegistry(boolean)">setAlwaysCreateRegistry</A></B>(boolean&nbsp;alwaysCreateRegistry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to always create the registry in-process,
 not attempting to locate an existing registry at the specified port.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)">setClientSocketFactory</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom RMI client socket factory to use for exporting the service.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistry(java.rmi.registry.Registry)">setRegistry</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A>&nbsp;registry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the RMI registry to register the exported service with.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)">setRegistryClientSocketFactory</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;registryClientSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom RMI client socket factory to use for the RMI registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryHost(java.lang.String)">setRegistryHost</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;registryHost)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the host of the registry for the exported RMI service,
 i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryPort(int)">setRegistryPort</A></B>(int&nbsp;registryPort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the port of the registry for the exported RMI service,
 i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)">setRegistryServerSocketFactory</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;registryServerSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom RMI server socket factory to use for the RMI registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setReplaceExistingBinding(boolean)">setReplaceExistingBinding</A></B>(boolean&nbsp;replaceExistingBinding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to replace an existing binding in the RMI registry,
 that is, whether to simply override an existing binding with the
 specified service in case of a naming conflict in the registry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)">setServerSocketFactory</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom RMI server socket factory to use for exporting the service.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setServiceName(java.lang.String)">setServiceName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;serviceName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the name of the exported RMI service,
 i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setServicePort(int)">setServicePort</A></B>(int&nbsp;servicePort)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the port that the exported RMI service will use.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#testRegistry(java.rmi.registry.Registry)">testRegistry</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A>&nbsp;registry)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test the given RMI registry, calling some operation on it to
 check whether it is still active.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.remoting.rmi.RmiBasedExporter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.remoting.rmi.<A HREF="../../../../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi">RmiBasedExporter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/remoting/rmi/RmiBasedExporter.html#getObjectToExport()">getObjectToExport</A>, <A HREF="../../../../org/springframework/remoting/rmi/RmiBasedExporter.html#invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)">invoke</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.remoting.support.RemoteInvocationBasedExporter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.remoting.support.<A HREF="../../../../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedExporter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#getRemoteInvocationExecutor()">getRemoteInvocationExecutor</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)">invokeAndCreateResult</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#setRemoteInvocationExecutor(org.springframework.remoting.support.RemoteInvocationExecutor)">setRemoteInvocationExecutor</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.remoting.support.RemoteExporter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.remoting.support.<A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support">RemoteExporter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#checkService()">checkService</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#checkServiceInterface()">checkServiceInterface</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#getExporterName()">getExporterName</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#getProxyForService()">getProxyForService</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#getService()">getService</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#getServiceInterface()">getServiceInterface</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#setInterceptors(java.lang.Object[])">setInterceptors</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#setRegisterTraceInterceptor(boolean)">setRegisterTraceInterceptor</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#setService(java.lang.Object)">setService</A>, <A HREF="../../../../org/springframework/remoting/support/RemoteExporter.html#setServiceInterface(java.lang.Class)">setServiceInterface</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.remoting.support.RemotingSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.remoting.support.<A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support">RemotingSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html#getBeanClassLoader()">getBeanClassLoader</A>, <A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html#overrideThreadContextClassLoader()">overrideThreadContextClassLoader</A>, <A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html#resetThreadContextClassLoader(java.lang.ClassLoader)">resetThreadContextClassLoader</A>, <A HREF="../../../../org/springframework/remoting/support/RemotingSupport.html#setBeanClassLoader(java.lang.ClassLoader)">setBeanClassLoader</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="RmiServiceExporter()"><!-- --></A><H3>
RmiServiceExporter</H3>
<PRE>
public <B>RmiServiceExporter</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setServiceName(java.lang.String)"><!-- --></A><H3>
setServiceName</H3>
<PRE>
public void <B>setServiceName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;serviceName)</PRE>
<DL>
<DD>Set the name of the exported RMI service,
 i.e. <code>rmi://host:port/NAME</code>
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setServicePort(int)"><!-- --></A><H3>
setServicePort</H3>
<PRE>
public void <B>setServicePort</B>(int&nbsp;servicePort)</PRE>
<DL>
<DD>Set the port that the exported RMI service will use.
 <p>Default is 0 (anonymous port).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)"><!-- --></A><H3>
setClientSocketFactory</H3>
<PRE>
public void <B>setClientSocketFactory</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory)</PRE>
<DL>
<DD>Set a custom RMI client socket factory to use for exporting the service.
 <p>If the given object also implements <code>java.rmi.server.RMIServerSocketFactory</code>,
 it will automatically be registered as server socket factory too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)"><CODE>setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIClientSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIServerSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/UnicastRemoteObject.html?is-external=true#exportObject(java.rmi.Remote, int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)" title="class or interface in java.rmi.server"><CODE>UnicastRemoteObject.exportObject(Remote, int, RMIClientSocketFactory, RMIServerSocketFactory)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)"><!-- --></A><H3>
setServerSocketFactory</H3>
<PRE>
public void <B>setServerSocketFactory</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)</PRE>
<DL>
<DD>Set a custom RMI server socket factory to use for exporting the service.
 <p>Only needs to be specified when the client socket factory does not
 implement <code>java.rmi.server.RMIServerSocketFactory</code> already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)"><CODE>setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIClientSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIServerSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/UnicastRemoteObject.html?is-external=true#exportObject(java.rmi.Remote, int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)" title="class or interface in java.rmi.server"><CODE>UnicastRemoteObject.exportObject(Remote, int, RMIClientSocketFactory, RMIServerSocketFactory)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setRegistry(java.rmi.registry.Registry)"><!-- --></A><H3>
setRegistry</H3>
<PRE>
public void <B>setRegistry</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A>&nbsp;registry)</PRE>
<DL>
<DD>Specify the RMI registry to register the exported service with.
 Typically used in combination with RmiRegistryFactoryBean.
 <p>Alternatively, you can specify all registry properties locally.
 This exporter will then try to locate the specified registry,
 automatically creating a new local one if appropriate.
 <p>Default is a local registry at the default port (1099),
 created on the fly if necessary.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi"><CODE>RmiRegistryFactoryBean</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryHost(java.lang.String)"><CODE>setRegistryHost(java.lang.String)</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryPort(int)"><CODE>setRegistryPort(int)</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)"><CODE>setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</CODE></A>, 
<A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)"><CODE>setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setRegistryHost(java.lang.String)"><!-- --></A><H3>
setRegistryHost</H3>
<PRE>
public void <B>setRegistryHost</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;registryHost)</PRE>
<DL>
<DD>Set the host of the registry for the exported RMI service,
 i.e. <code>rmi://HOST:port/name</code>
 <p>Default is localhost.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setRegistryPort(int)"><!-- --></A><H3>
setRegistryPort</H3>
<PRE>
public void <B>setRegistryPort</B>(int&nbsp;registryPort)</PRE>
<DL>
<DD>Set the port of the registry for the exported RMI service,
 i.e. <code>rmi://host:PORT/name</code>
 <p>Default is <code>Registry.REGISTRY_PORT</code> (1099).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true#REGISTRY_PORT" title="class or interface in java.rmi.registry"><CODE>Registry.REGISTRY_PORT</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)"><!-- --></A><H3>
setRegistryClientSocketFactory</H3>
<PRE>
public void <B>setRegistryClientSocketFactory</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;registryClientSocketFactory)</PRE>
<DL>
<DD>Set a custom RMI client socket factory to use for the RMI registry.
 <p>If the given object also implements <code>java.rmi.server.RMIServerSocketFactory</code>,
 it will automatically be registered as server socket factory too.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)"><CODE>setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIClientSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIServerSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/LocateRegistry.html?is-external=true#getRegistry(java.lang.String, int, java.rmi.server.RMIClientSocketFactory)" title="class or interface in java.rmi.registry"><CODE>LocateRegistry.getRegistry(String, int, RMIClientSocketFactory)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)"><!-- --></A><H3>
setRegistryServerSocketFactory</H3>
<PRE>
public void <B>setRegistryServerSocketFactory</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;registryServerSocketFactory)</PRE>
<DL>
<DD>Set a custom RMI server socket factory to use for the RMI registry.
 <p>Only needs to be specified when the client socket factory does not
 implement <code>java.rmi.server.RMIServerSocketFactory</code> already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/remoting/rmi/RmiServiceExporter.html#setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)"><CODE>setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIClientSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server"><CODE>RMIServerSocketFactory</CODE></A>, 
<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/LocateRegistry.html?is-external=true#createRegistry(int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)" title="class or interface in java.rmi.registry"><CODE>LocateRegistry.createRegistry(int, RMIClientSocketFactory, RMIServerSocketFactory)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setAlwaysCreateRegistry(boolean)"><!-- --></A><H3>
setAlwaysCreateRegistry</H3>
<PRE>
public void <B>setAlwaysCreateRegistry</B>(boolean&nbsp;alwaysCreateRegistry)</PRE>
<DL>
<DD>Set whether to always create the registry in-process,
 not attempting to locate an existing registry at the specified port.
 <p>Default is "false". Switch this flag to "true" in order to avoid
 the overhead of locating an existing registry when you always
 intend to create a new registry in any case.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setReplaceExistingBinding(boolean)"><!-- --></A><H3>
setReplaceExistingBinding</H3>
<PRE>
public void <B>setReplaceExistingBinding</B>(boolean&nbsp;replaceExistingBinding)</PRE>
<DL>
<DD>Set whether to replace an existing binding in the RMI registry,
 that is, whether to simply override an existing binding with the
 specified service in case of a naming conflict in the registry.
 <p>Default is "true", assuming that an existing binding for this
 exporter's service name is an accidental leftover from a previous
 execution. Switch this to "false" to make the exporter fail in such
 a scenario, indicating that there was already an RMI object bound.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="afterPropertiesSet()"><!-- --></A><H3>
afterPropertiesSet</H3>
<PRE>
public void <B>afterPropertiesSet</B>()
                        throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()">InitializingBean</A></CODE></B></DD>
<DD>Invoked by a BeanFactory after it has set all bean properties supplied
 (and satisfied BeanFactoryAware and ApplicationContextAware).
 <p>This method allows the bean instance to perform initialization only
 possible when all bean properties have been set and to throw an
 exception in the event of misconfiguration.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()">afterPropertiesSet</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="prepare()"><!-- --></A><H3>
prepare</H3>
<PRE>
public void <B>prepare</B>()
             throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Initialize this service exporter, registering the service as RMI object.
 <p>Creates an RMI registry on the specified port if none exists.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE> - if service registration failed</DL>
</DD>
</DL>
<HR>

<A NAME="getRegistry(java.lang.String, int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)"><!-- --></A><H3>
getRegistry</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A> <B>getRegistry</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;registryHost,
                               int&nbsp;registryPort,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)
                        throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Locate or create the RMI registry for this exporter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>registryHost</CODE> - the registry host to use (if this is specified,
 no implicit creation of a RMI registry will happen)<DD><CODE>registryPort</CODE> - the registry port to use<DD><CODE>clientSocketFactory</CODE> - the RMI client socket factory for the registry (if any)<DD><CODE>serverSocketFactory</CODE> - the RMI server socket factory for the registry (if any)
<DT><B>Returns:</B><DD>the RMI registry
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE> - if the registry couldn't be located or created</DL>
</DD>
</DL>
<HR>

<A NAME="getRegistry(int, java.rmi.server.RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory)"><!-- --></A><H3>
getRegistry</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A> <B>getRegistry</B>(int&nbsp;registryPort,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIClientSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIClientSocketFactory</A>&nbsp;clientSocketFactory,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/server/RMIServerSocketFactory.html?is-external=true" title="class or interface in java.rmi.server">RMIServerSocketFactory</A>&nbsp;serverSocketFactory)
                        throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Locate or create the RMI registry for this exporter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>registryPort</CODE> - the registry port to use<DD><CODE>clientSocketFactory</CODE> - the RMI client socket factory for the registry (if any)<DD><CODE>serverSocketFactory</CODE> - the RMI server socket factory for the registry (if any)
<DT><B>Returns:</B><DD>the RMI registry
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE> - if the registry couldn't be located or created</DL>
</DD>
</DL>
<HR>

<A NAME="getRegistry(int)"><!-- --></A><H3>
getRegistry</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A> <B>getRegistry</B>(int&nbsp;registryPort)
                        throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Locate or create the RMI registry for this exporter.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>registryPort</CODE> - the registry port to use
<DT><B>Returns:</B><DD>the RMI registry
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE> - if the registry couldn't be located or created</DL>
</DD>
</DL>
<HR>

<A NAME="testRegistry(java.rmi.registry.Registry)"><!-- --></A><H3>
testRegistry</H3>
<PRE>
protected void <B>testRegistry</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry">Registry</A>&nbsp;registry)
                     throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Test the given RMI registry, calling some operation on it to
 check whether it is still active.
 <p>Default implementation calls <code>Registry.list()</code>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>registry</CODE> - the RMI registry to test
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE> - if thrown by registry methods<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true#list()" title="class or interface in java.rmi.registry"><CODE>Registry.list()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="destroy()"><!-- --></A><H3>
destroy</H3>
<PRE>
public void <B>destroy</B>()
             throws <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></PRE>
<DL>
<DD>Unbind the RMI service from the registry on bean factory shutdown.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html#destroy()">destroy</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/RemoteException.html?is-external=true" title="class or interface in java.rmi">RemoteException</A></CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/remoting/rmi/RmiServiceExporter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="RmiServiceExporter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.remoting.support.RemotingSupport">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
