<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:23 BST 2010 -->
<TITLE>
LocalStatelessSessionProxyFactoryBean
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="LocalStatelessSessionProxyFactoryBean";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LocalStatelessSessionProxyFactoryBean.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.jndi.JndiLocatorSupport">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.ejb.access</FONT>
<BR>
Class LocalStatelessSessionProxyFactoryBean</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jndi/JndiAccessor.html" title="class in org.springframework.jndi">org.springframework.jndi.JndiAccessor</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">org.springframework.jndi.JndiLocatorSupport</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html" title="class in org.springframework.jndi">org.springframework.jndi.JndiObjectLocator</A>
              <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">org.springframework.ejb.access.AbstractSlsbInvokerInterceptor</A>
                  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">org.springframework.ejb.access.LocalSlsbInvokerInterceptor</A>
                      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/aop/Advice.html?is-external=true" title="class or interface in org.aopalliance.aop">Advice</A>, <A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/Interceptor.html?is-external=true" title="class or interface in org.aopalliance.intercept">Interceptor</A>, <A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/MethodInterceptor.html?is-external=true" title="class or interface in org.aopalliance.intercept">MethodInterceptor</A>, <A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A>, <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;, <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>LocalStatelessSessionProxyFactoryBean</B><DT>extends <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">LocalSlsbInvokerInterceptor</A><DT>implements <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;, <A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A></DL>
</PRE>

<P>
Convenient <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> for local Stateless Session Bean (SLSB) proxies.
 Designed for EJB 2.x, but works for EJB 3 Session Beans as well.

 <p>See <A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html" title="class in org.springframework.jndi"><CODE>JndiObjectLocator</CODE></A> for info on
 how to specify the JNDI location of the target EJB.
 
 <p>If you want control over interceptor chaining, use an AOP ProxyFactoryBean
 with LocalSlsbInvokerInterceptor rather than rely on this class.

 <p>In a bean container, this class is normally best used as a singleton. However,
 if that bean container pre-instantiates singletons (as do the XML ApplicationContext
 variants) you may have a problem if the bean container is loaded before the EJB
 container loads the target EJB. That is because by default the JNDI lookup will be
 performed in the init method of this class and cached, but the EJB will not have been
 bound at the target location yet. The best solution is to set the "lookupHomeOnStartup"
 property to "false", in which case the home will be fetched on first access to the EJB.
 (This flag is only true by default for backwards compatibility reasons).
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>09.05.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Colin Sampaleanu</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setLookupHomeOnStartup(boolean)"><CODE>AbstractSlsbInvokerInterceptor.setLookupHomeOnStartup(boolean)</CODE></A>, 
<A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setCacheHome(boolean)"><CODE>AbstractSlsbInvokerInterceptor.setCacheHome(boolean)</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.jndi.JndiLocatorSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.jndi.<A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">JndiLocatorSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#CONTAINER_PREFIX">CONTAINER_PREFIX</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.jndi.JndiAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.jndi.<A HREF="../../../../org/springframework/jndi/JndiAccessor.html" title="class in org.springframework.jndi">JndiAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jndi/JndiAccessor.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#LocalStatelessSessionProxyFactoryBean()">LocalStatelessSessionProxyFactoryBean</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#afterPropertiesSet()">afterPropertiesSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fetches EJB home on startup, if necessary.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#getBusinessInterface()">getBusinessInterface</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the business interface of the EJB we're proxying.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#getObject()">getObject</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return an instance (possibly shared or independent) of the object
 managed by this factory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#getObjectType()">getObjectType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the type of object that this FactoryBean creates,
 or <code>null</code> if not known in advance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#isSingleton()">isSingleton</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Is the object managed by this factory a singleton? That is,
 will <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObject()"><CODE>FactoryBean.getObject()</CODE></A> always return the same object
 (a reference that can be cached)?</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#setBeanClassLoader(java.lang.ClassLoader)">setBeanClassLoader</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang">ClassLoader</A>&nbsp;classLoader)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback that supplies the bean <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>class loader</CODE></A> to
 a bean instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#setBusinessInterface(java.lang.Class)">setBusinessInterface</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;businessInterface)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the business interface of the EJB we're proxying.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.ejb.access.LocalSlsbInvokerInterceptor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.ejb.access.<A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">LocalSlsbInvokerInterceptor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#getCreateMethod(java.lang.Object)">getCreateMethod</A>, <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#getSessionBeanInstance()">getSessionBeanInstance</A>, <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#invokeInContext(org.aopalliance.intercept.MethodInvocation)">invokeInContext</A>, <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#newSessionBeanInstance()">newSessionBeanInstance</A>, <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#releaseSessionBeanInstance(javax.ejb.EJBLocalObject)">releaseSessionBeanInstance</A>, <A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#removeSessionBeanInstance(javax.ejb.EJBLocalObject)">removeSessionBeanInstance</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.ejb.access.AbstractSlsbInvokerInterceptor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.ejb.access.<A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#create()">create</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#getHome()">getHome</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)">invoke</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#isHomeRefreshable()">isHomeRefreshable</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#refreshHome()">refreshHome</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setCacheHome(boolean)">setCacheHome</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setExposeAccessContext(boolean)">setExposeAccessContext</A>, <A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setLookupHomeOnStartup(boolean)">setLookupHomeOnStartup</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jndi.JndiObjectLocator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jndi.<A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html" title="class in org.springframework.jndi">JndiObjectLocator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html#getExpectedType()">getExpectedType</A>, <A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html#getJndiName()">getJndiName</A>, <A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html#lookup()">lookup</A>, <A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html#setExpectedType(java.lang.Class)">setExpectedType</A>, <A HREF="../../../../org/springframework/jndi/JndiObjectLocator.html#setJndiName(java.lang.String)">setJndiName</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jndi.JndiLocatorSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jndi.<A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">JndiLocatorSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#convertJndiName(java.lang.String)">convertJndiName</A>, <A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#isResourceRef()">isResourceRef</A>, <A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#lookup(java.lang.String)">lookup</A>, <A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#lookup(java.lang.String, java.lang.Class)">lookup</A>, <A HREF="../../../../org/springframework/jndi/JndiLocatorSupport.html#setResourceRef(boolean)">setResourceRef</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.jndi.JndiAccessor"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.jndi.<A HREF="../../../../org/springframework/jndi/JndiAccessor.html" title="class in org.springframework.jndi">JndiAccessor</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/jndi/JndiAccessor.html#getJndiEnvironment()">getJndiEnvironment</A>, <A HREF="../../../../org/springframework/jndi/JndiAccessor.html#getJndiTemplate()">getJndiTemplate</A>, <A HREF="../../../../org/springframework/jndi/JndiAccessor.html#setJndiEnvironment(java.util.Properties)">setJndiEnvironment</A>, <A HREF="../../../../org/springframework/jndi/JndiAccessor.html#setJndiTemplate(org.springframework.jndi.JndiTemplate)">setJndiTemplate</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="LocalStatelessSessionProxyFactoryBean()"><!-- --></A><H3>
LocalStatelessSessionProxyFactoryBean</H3>
<PRE>
public <B>LocalStatelessSessionProxyFactoryBean</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setBusinessInterface(java.lang.Class)"><!-- --></A><H3>
setBusinessInterface</H3>
<PRE>
public void <B>setBusinessInterface</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;businessInterface)</PRE>
<DL>
<DD>Set the business interface of the EJB we're proxying.
 This will normally be a super-interface of the EJB local component interface.
 Using a business methods interface is a best practice when implementing EJBs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>businessInterface</CODE> - set the business interface of the EJB</DL>
</DD>
</DL>
<HR>

<A NAME="getBusinessInterface()"><!-- --></A><H3>
getBusinessInterface</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>getBusinessInterface</B>()</PRE>
<DL>
<DD>Return the business interface of the EJB we're proxying.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setBeanClassLoader(java.lang.ClassLoader)"><!-- --></A><H3>
setBeanClassLoader</H3>
<PRE>
public void <B>setBeanClassLoader</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang">ClassLoader</A>&nbsp;classLoader)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html#setBeanClassLoader(java.lang.ClassLoader)">BeanClassLoaderAware</A></CODE></B></DD>
<DD>Callback that supplies the bean <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>class loader</CODE></A> to
 a bean instance.
 <p>Invoked <i>after</i> the population of normal bean properties but
 <i>before</i> an initialization callback such as
 <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory"><CODE>InitializingBean's</CODE></A>
 <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()"><CODE>InitializingBean.afterPropertiesSet()</CODE></A>
 method or a custom init-method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html#setBeanClassLoader(java.lang.ClassLoader)">setBeanClassLoader</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory">BeanClassLoaderAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>classLoader</CODE> - the owning class loader; may be <code>null</code> in
 which case a default <code>ClassLoader</code> must be used, for example
 the <code>ClassLoader</code> obtained via
 <A HREF="../../../../org/springframework/util/ClassUtils.html#getDefaultClassLoader()"><CODE>ClassUtils.getDefaultClassLoader()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="afterPropertiesSet()"><!-- --></A><H3>
afterPropertiesSet</H3>
<PRE>
public void <B>afterPropertiesSet</B>()
                        throws <A HREF="http://java.sun.com/javase/6/docs/api/javax/naming/NamingException.html?is-external=true" title="class or interface in javax.naming">NamingException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#afterPropertiesSet()">AbstractSlsbInvokerInterceptor</A></CODE></B></DD>
<DD>Fetches EJB home on startup, if necessary.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()">afterPropertiesSet</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></CODE><DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#afterPropertiesSet()">afterPropertiesSet</A></CODE> in class <CODE><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/javax/naming/NamingException.html?is-external=true" title="class or interface in javax.naming">NamingException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#setLookupHomeOnStartup(boolean)"><CODE>AbstractSlsbInvokerInterceptor.setLookupHomeOnStartup(boolean)</CODE></A>, 
<A HREF="../../../../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#refreshHome()"><CODE>AbstractSlsbInvokerInterceptor.refreshHome()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getObject()"><!-- --></A><H3>
getObject</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getObject</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObject()">FactoryBean</A></CODE></B></DD>
<DD>Return an instance (possibly shared or independent) of the object
 managed by this factory.
 <p>As with a <A HREF="../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>, this allows support for both the
 Singleton and Prototype design pattern.
 <p>If this FactoryBean is not fully initialized yet at the time of
 the call (for example because it is involved in a circular reference),
 throw a corresponding <A HREF="../../../../org/springframework/beans/factory/FactoryBeanNotInitializedException.html" title="class in org.springframework.beans.factory"><CODE>FactoryBeanNotInitializedException</CODE></A>.
 <p>As of Spring 2.0, FactoryBeans are allowed to return <code>null</code>
 objects. The factory will consider this as normal value to be used; it
 will not throw a FactoryBeanNotInitializedException in this case anymore.
 FactoryBean implementations are encouraged to throw
 FactoryBeanNotInitializedException themselves now, as appropriate.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObject()">getObject</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an instance of the bean (can be <code>null</code>)<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBeanNotInitializedException.html" title="class in org.springframework.beans.factory"><CODE>FactoryBeanNotInitializedException</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getObjectType()"><!-- --></A><H3>
getObjectType</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt; <B>getObjectType</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()">FactoryBean</A></CODE></B></DD>
<DD>Return the type of object that this FactoryBean creates,
 or <code>null</code> if not known in advance.
 <p>This allows one to check for specific types of beans without
 instantiating objects, for example on autowiring.
 <p>In the case of implementations that are creating a singleton object,
 this method should try to avoid singleton creation as far as possible;
 it should rather estimate the type in advance.
 For prototypes, returning a meaningful type here is advisable too.
 <p>This method can be called <i>before</i> this FactoryBean has
 been fully initialized. It must not rely on state created during
 initialization; of course, it can still use such state if available.
 <p><b>NOTE:</b> Autowiring will simply ignore FactoryBeans that return
 <code>null</code> here. Therefore it is highly recommended to implement
 this method properly, using the current state of the FactoryBean.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObjectType()">getObjectType</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the type of object that this FactoryBean creates,
 or <code>null</code> if not known at the time of the call<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/ListableBeanFactory.html#getBeansOfType(java.lang.Class)"><CODE>ListableBeanFactory.getBeansOfType(java.lang.Class<T>)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isSingleton()"><!-- --></A><H3>
isSingleton</H3>
<PRE>
public boolean <B>isSingleton</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#isSingleton()">FactoryBean</A></CODE></B></DD>
<DD>Is the object managed by this factory a singleton? That is,
 will <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObject()"><CODE>FactoryBean.getObject()</CODE></A> always return the same object
 (a reference that can be cached)?
 <p><b>NOTE:</b> If a FactoryBean indicates to hold a singleton object,
 the object returned from <code>getObject()</code> might get cached
 by the owning BeanFactory. Hence, do not return <code>true</code>
 unless the FactoryBean always exposes the same reference.
 <p>The singleton status of the FactoryBean itself will generally
 be provided by the owning BeanFactory; usually, it has to be
 defined as singleton there.
 <p><b>NOTE:</b> This method returning <code>false</code> does not
 necessarily indicate that returned objects are independent instances.
 An implementation of the extended <A HREF="../../../../org/springframework/beans/factory/SmartFactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>SmartFactoryBean</CODE></A> interface
 may explicitly indicate independent instances through its
 <A HREF="../../../../org/springframework/beans/factory/SmartFactoryBean.html#isPrototype()"><CODE>SmartFactoryBean.isPrototype()</CODE></A> method. Plain <A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A>
 implementations which do not implement this extended interface are
 simply assumed to always return independent instances if the
 <code>isSingleton()</code> implementation returns <code>false</code>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#isSingleton()">isSingleton</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>whether the exposed object is a singleton<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/FactoryBean.html#getObject()"><CODE>FactoryBean.getObject()</CODE></A>, 
<A HREF="../../../../org/springframework/beans/factory/SmartFactoryBean.html#isPrototype()"><CODE>SmartFactoryBean.isPrototype()</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="LocalStatelessSessionProxyFactoryBean.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.jndi.JndiLocatorSupport">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
