<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:43 BST 2010 -->
<TITLE>
BindException
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="BindException";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/springframework/validation/BindingErrorProcessor.html" title="interface in org.springframework.validation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/validation/BindException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BindException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.validation</FONT>
<BR>
Class BindException</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">java.lang.Throwable</A>
      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">java.lang.Exception</A>
          <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.validation.BindException</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://java.sun.com/javase/6/docs/api/java/io/Serializable.html?is-external=true" title="class or interface in java.io">Serializable</A>, <A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A>, <A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>BindException</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A><DT>implements <A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></DL>
</PRE>

<P>
Thrown when binding errors are considered fatal. Implements the
 <A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><CODE>BindingResult</CODE></A> interface (and its super-interface <A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A>)
 to allow for the direct analysis of binding errors.

 <p>As of Spring 2.0, this is a special-purpose class. Normally,
 application code will work with the <A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><CODE>BindingResult</CODE></A> interface,
 or with a <A HREF="../../../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation"><CODE>DataBinder</CODE></A> that in turn exposes a BindingResult via
 <A HREF="../../../org/springframework/validation/DataBinder.html#getBindingResult()"><CODE>DataBinder.getBindingResult()</CODE></A>.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Juergen Hoeller, Rob Harrop</DD>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><CODE>BindingResult</CODE></A>, 
<A HREF="../../../org/springframework/validation/DataBinder.html#getBindingResult()"><CODE>DataBinder.getBindingResult()</CODE></A>, 
<A HREF="../../../org/springframework/validation/DataBinder.html#close()"><CODE>DataBinder.close()</CODE></A>, 
<A HREF="../../../serialized-form.html#org.springframework.validation.BindException">Serialized Form</A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.validation.BindingResult"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.validation.<A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#MODEL_KEY_PREFIX">MODEL_KEY_PREFIX</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.validation.Errors"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.validation.<A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../org/springframework/validation/Errors.html#NESTED_PATH_SEPARATOR">NESTED_PATH_SEPARATOR</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#BindException(org.springframework.validation.BindingResult)">BindException</A></B>(<A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A>&nbsp;bindingResult)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new BindException instance for a BindingResult.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#BindException(java.lang.Object, java.lang.String)">BindException</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;target,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;objectName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new BindException instance for a target bean.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#addAllErrors(org.springframework.validation.Errors)">addAllErrors</A></B>(<A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add all errors from the given <code>Errors</code> instance to this
 <code>Errors</code> instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#addError(org.springframework.validation.ObjectError)">addError</A></B>(<A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation">ObjectError</A>&nbsp;error)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add a custom <A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation"><CODE>ObjectError</CODE></A> or <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation"><CODE>FieldError</CODE></A> to the errors list.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#equals(java.lang.Object)">equals</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;other)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#findEditor(java.lang.String, java.lang.Class)">findEditor</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;valueType)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find a custom property editor for the given type and property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getAllErrors()">getAllErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all errors, both global and field ones.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getBindingResult()">getBindingResult</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the BindingResult that this BindException wraps.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getErrorCount()">getErrorCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the total number of errors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation">FieldError</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldError()">getFieldError</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the <i>first</i> error associated with a field, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation">FieldError</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldError(java.lang.String)">getFieldError</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the first error associated with the given field, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldErrorCount()">getFieldErrorCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the number of errors associated with a field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldErrorCount(java.lang.String)">getFieldErrorCount</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the number of errors associated with the given field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldErrors()">getFieldErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all errors associated with a field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldErrors(java.lang.String)">getFieldErrors</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all errors associated with the given field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldType(java.lang.String)">getFieldType</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the type of a given field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getFieldValue(java.lang.String)">getFieldValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the current value of the given field, either the current
 bean property value or a rejected update from the last binding.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation">ObjectError</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getGlobalError()">getGlobalError</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the <i>first</i> global error, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getGlobalErrorCount()">getGlobalErrorCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the number of global errors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getGlobalErrors()">getGlobalErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get all global errors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getMessage()">getMessage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns diagnostic information about the errors held in this object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getModel()">getModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a model Map for the obtained state, exposing a BindingResult
 instance as '<A HREF="../../../org/springframework/validation/BindingResult.html#MODEL_KEY_PREFIX"><CODE>MODEL_KEY_PREFIX</CODE></A> + objectName'
 and the object itself as 'objectName'.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getNestedPath()">getNestedPath</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the current nested path of this <A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getObjectName()">getObjectName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the name of the bound root object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getPropertyEditorRegistry()">getPropertyEditorRegistry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the underlying PropertyEditorRegistry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getRawFieldValue(java.lang.String)">getRawFieldValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extract the raw field value for the given field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getSuppressedFields()">getSuppressedFields</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the list of fields that were suppressed during the bind process.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#getTarget()">getTarget</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the wrapped target object, which may be a bean, an object with
 public fields, a Map - depending on the concrete binding strategy.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#hasErrors()">hasErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return if there were any errors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#hasFieldErrors()">hasFieldErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Are there any field errors?</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#hasFieldErrors(java.lang.String)">hasFieldErrors</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Are there any errors associated with the given field?</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#hasGlobalErrors()">hasGlobalErrors</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Are there any global errors?</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#hashCode()">hashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#popNestedPath()">popNestedPath</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Pop the former nested path from the nested path stack.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#pushNestedPath(java.lang.String)">pushNestedPath</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;subPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Push the given sub path onto the nested path stack.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#recordSuppressedField(java.lang.String)">recordSuppressedField</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mark the specified disallowed field as suppressed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#reject(java.lang.String)">reject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a global error for the entire target object,
 using the given error description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#reject(java.lang.String, java.lang.Object[], java.lang.String)">reject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;errorArgs,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a global error for the entire target object,
 using the given error description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#reject(java.lang.String, java.lang.String)">reject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a global error for the entire target object,
 using the given error description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String)">rejectValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)">rejectValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;errorArgs,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)">rejectValue</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#resolveMessageCodes(java.lang.String, java.lang.String)">resolveMessageCodes</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Resolve the given error code into message codes for the given field.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../org/springframework/validation/BindException.html#setNestedPath(java.lang.String)">setNestedPath</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;nestedPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow context to be changed so that standard validators can validate
 subtrees.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Throwable"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#fillInStackTrace()" title="class or interface in java.lang">fillInStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#getCause()" title="class or interface in java.lang">getCause</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#getLocalizedMessage()" title="class or interface in java.lang">getLocalizedMessage</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#getStackTrace()" title="class or interface in java.lang">getStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#initCause(java.lang.Throwable)" title="class or interface in java.lang">initCause</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace()" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintStream)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#printStackTrace(java.io.PrintWriter)" title="class or interface in java.lang">printStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#setStackTrace(java.lang.StackTraceElement[])" title="class or interface in java.lang">setStackTrace</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="BindException(org.springframework.validation.BindingResult)"><!-- --></A><H3>
BindException</H3>
<PRE>
public <B>BindException</B>(<A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A>&nbsp;bindingResult)</PRE>
<DL>
<DD>Create a new BindException instance for a BindingResult.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>bindingResult</CODE> - the BindingResult instance to wrap</DL>
</DL>
<HR>

<A NAME="BindException(java.lang.Object, java.lang.String)"><!-- --></A><H3>
BindException</H3>
<PRE>
public <B>BindException</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;target,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;objectName)</PRE>
<DL>
<DD>Create a new BindException instance for a target bean.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>target</CODE> - target bean to bind onto<DD><CODE>objectName</CODE> - the name of the target object<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><CODE>BeanPropertyBindingResult</CODE></A></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getBindingResult()"><!-- --></A><H3>
getBindingResult</H3>
<PRE>
public final <A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A> <B>getBindingResult</B>()</PRE>
<DL>
<DD>Return the BindingResult that this BindException wraps.
 Will typically be a BeanPropertyBindingResult.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><CODE>BeanPropertyBindingResult</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getObjectName()"><!-- --></A><H3>
getObjectName</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getObjectName</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getObjectName()">Errors</A></CODE></B></DD>
<DD>Return the name of the bound root object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getObjectName()">getObjectName</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setNestedPath(java.lang.String)"><!-- --></A><H3>
setNestedPath</H3>
<PRE>
public void <B>setNestedPath</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;nestedPath)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#setNestedPath(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Allow context to be changed so that standard validators can validate
 subtrees. Reject calls prepend the given path to the field names.
 <p>For example, an address validator could validate the subobject
 "address" of a customer object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#setNestedPath(java.lang.String)">setNestedPath</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>nestedPath</CODE> - nested path within this object,
 e.g. "address" (defaults to "", <code>null</code> is also acceptable).
 Can end with a dot: both "address" and "address." are valid.</DL>
</DD>
</DL>
<HR>

<A NAME="getNestedPath()"><!-- --></A><H3>
getNestedPath</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getNestedPath</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getNestedPath()">Errors</A></CODE></B></DD>
<DD>Return the current nested path of this <A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A> object.
 <p>Returns a nested path with a dot, i.e. "address.", for easy
 building of concatenated paths. Default is an empty String.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getNestedPath()">getNestedPath</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="pushNestedPath(java.lang.String)"><!-- --></A><H3>
pushNestedPath</H3>
<PRE>
public void <B>pushNestedPath</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;subPath)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#pushNestedPath(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Push the given sub path onto the nested path stack.
 <p>A <A HREF="../../../org/springframework/validation/Errors.html#popNestedPath()"><CODE>Errors.popNestedPath()</CODE></A> call will reset the original
 nested path before the corresponding
 <code>pushNestedPath(String)</code> call.
 <p>Using the nested path stack allows to set temporary nested paths
 for subobjects without having to worry about a temporary path holder.
 <p>For example: current path "spouse.", pushNestedPath("child") ->
 result path "spouse.child."; popNestedPath() -> "spouse." again.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#pushNestedPath(java.lang.String)">pushNestedPath</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>subPath</CODE> - the sub path to push onto the nested path stack<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#popNestedPath()"><CODE>Errors.popNestedPath()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="popNestedPath()"><!-- --></A><H3>
popNestedPath</H3>
<PRE>
public void <B>popNestedPath</B>()
                   throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#popNestedPath()">Errors</A></CODE></B></DD>
<DD>Pop the former nested path from the nested path stack.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#popNestedPath()">popNestedPath</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/IllegalStateException.html?is-external=true" title="class or interface in java.lang">IllegalStateException</A></CODE> - if there is no former nested path on the stack<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#pushNestedPath(java.lang.String)"><CODE>Errors.pushNestedPath(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="reject(java.lang.String)"><!-- --></A><H3>
reject</H3>
<PRE>
public void <B>reject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a global error for the entire target object,
 using the given error description.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String)">reject</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorCode</CODE> - error code, interpretable as a message key</DL>
</DD>
</DL>
<HR>

<A NAME="reject(java.lang.String, java.lang.String)"><!-- --></A><H3>
reject</H3>
<PRE>
public void <B>reject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a global error for the entire target object,
 using the given error description.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.String)">reject</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorCode</CODE> - error code, interpretable as a message key<DD><CODE>defaultMessage</CODE> - fallback default message</DL>
</DD>
</DL>
<HR>

<A NAME="reject(java.lang.String, java.lang.Object[], java.lang.String)"><!-- --></A><H3>
reject</H3>
<PRE>
public void <B>reject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;errorArgs,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.Object[], java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a global error for the entire target object,
 using the given error description.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.Object[], java.lang.String)">reject</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorCode</CODE> - error code, interpretable as a message key<DD><CODE>errorArgs</CODE> - error arguments, for argument binding via MessageFormat
 (can be <code>null</code>)<DD><CODE>defaultMessage</CODE> - fallback default message</DL>
</DD>
</DL>
<HR>

<A NAME="rejectValue(java.lang.String, java.lang.String)"><!-- --></A><H3>
rejectValue</H3>
<PRE>
public void <B>rejectValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
 <p>The field name may be <code>null</code> or empty String to indicate
 the current object itself rather than a field of it. This may result
 in a corresponding field error within the nested object graph or a
 global error if the current object is the top object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String)">rejectValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name (may be <code>null</code> or empty String)<DD><CODE>errorCode</CODE> - error code, interpretable as a message key<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getNestedPath()"><CODE>Errors.getNestedPath()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="rejectValue(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
rejectValue</H3>
<PRE>
public void <B>rejectValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
 <p>The field name may be <code>null</code> or empty String to indicate
 the current object itself rather than a field of it. This may result
 in a corresponding field error within the nested object graph or a
 global error if the current object is the top object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)">rejectValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name (may be <code>null</code> or empty String)<DD><CODE>errorCode</CODE> - error code, interpretable as a message key<DD><CODE>defaultMessage</CODE> - fallback default message<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getNestedPath()"><CODE>Errors.getNestedPath()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><!-- --></A><H3>
rejectValue</H3>
<PRE>
public void <B>rejectValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>[]&nbsp;errorArgs,
                        <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;defaultMessage)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)">Errors</A></CODE></B></DD>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
 <p>The field name may be <code>null</code> or empty String to indicate
 the current object itself rather than a field of it. This may result
 in a corresponding field error within the nested object graph or a
 global error if the current object is the top object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)">rejectValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name (may be <code>null</code> or empty String)<DD><CODE>errorCode</CODE> - error code, interpretable as a message key<DD><CODE>errorArgs</CODE> - error arguments, for argument binding via MessageFormat
 (can be <code>null</code>)<DD><CODE>defaultMessage</CODE> - fallback default message<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getNestedPath()"><CODE>Errors.getNestedPath()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addAllErrors(org.springframework.validation.Errors)"><!-- --></A><H3>
addAllErrors</H3>
<PRE>
public void <B>addAllErrors</B>(<A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>&nbsp;errors)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#addAllErrors(org.springframework.validation.Errors)">Errors</A></CODE></B></DD>
<DD>Add all errors from the given <code>Errors</code> instance to this
 <code>Errors</code> instance.
 <p>This is a onvenience method to avoid repeated <code>reject(..)</code>
 calls for merging an <code>Errors</code> instance into another
 <code>Errors</code> instance.
 <p>Note that the passed-in <code>Errors</code> instance is supposed
 to refer to the same target object, or at least contain compatible errors
 that apply to the target object of this <code>Errors</code> instance.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#addAllErrors(org.springframework.validation.Errors)">addAllErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errors</CODE> - the <code>Errors</code> instance to merge in</DL>
</DD>
</DL>
<HR>

<A NAME="hasErrors()"><!-- --></A><H3>
hasErrors</H3>
<PRE>
public boolean <B>hasErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#hasErrors()">Errors</A></CODE></B></DD>
<DD>Return if there were any errors.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#hasErrors()">hasErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getErrorCount()"><!-- --></A><H3>
getErrorCount</H3>
<PRE>
public int <B>getErrorCount</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getErrorCount()">Errors</A></CODE></B></DD>
<DD>Return the total number of errors.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getErrorCount()">getErrorCount</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAllErrors()"><!-- --></A><H3>
getAllErrors</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A> <B>getAllErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getAllErrors()">Errors</A></CODE></B></DD>
<DD>Get all errors, both global and field ones.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getAllErrors()">getAllErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>List of <A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation"><CODE>ObjectError</CODE></A> instances</DL>
</DD>
</DL>
<HR>

<A NAME="hasGlobalErrors()"><!-- --></A><H3>
hasGlobalErrors</H3>
<PRE>
public boolean <B>hasGlobalErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#hasGlobalErrors()">Errors</A></CODE></B></DD>
<DD>Are there any global errors?
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#hasGlobalErrors()">hasGlobalErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if there are any global errors<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#hasFieldErrors()"><CODE>Errors.hasFieldErrors()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getGlobalErrorCount()"><!-- --></A><H3>
getGlobalErrorCount</H3>
<PRE>
public int <B>getGlobalErrorCount</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalErrorCount()">Errors</A></CODE></B></DD>
<DD>Return the number of global errors.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalErrorCount()">getGlobalErrorCount</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the number of global errors<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrorCount()"><CODE>Errors.getFieldErrorCount()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getGlobalErrors()"><!-- --></A><H3>
getGlobalErrors</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A> <B>getGlobalErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalErrors()">Errors</A></CODE></B></DD>
<DD>Get all global errors.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalErrors()">getGlobalErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>List of ObjectError instances</DL>
</DD>
</DL>
<HR>

<A NAME="getGlobalError()"><!-- --></A><H3>
getGlobalError</H3>
<PRE>
public <A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation">ObjectError</A> <B>getGlobalError</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalError()">Errors</A></CODE></B></DD>
<DD>Get the <i>first</i> global error, if any.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getGlobalError()">getGlobalError</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the global error, or <code>null</code></DL>
</DD>
</DL>
<HR>

<A NAME="hasFieldErrors()"><!-- --></A><H3>
hasFieldErrors</H3>
<PRE>
public boolean <B>hasFieldErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#hasFieldErrors()">Errors</A></CODE></B></DD>
<DD>Are there any field errors?
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#hasFieldErrors()">hasFieldErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD><code>true</code> if there are any errors associated with a field<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#hasGlobalErrors()"><CODE>Errors.hasGlobalErrors()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getFieldErrorCount()"><!-- --></A><H3>
getFieldErrorCount</H3>
<PRE>
public int <B>getFieldErrorCount</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrorCount()">Errors</A></CODE></B></DD>
<DD>Return the number of errors associated with a field.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrorCount()">getFieldErrorCount</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the number of errors associated with a field<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getGlobalErrorCount()"><CODE>Errors.getGlobalErrorCount()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getFieldErrors()"><!-- --></A><H3>
getFieldErrors</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A> <B>getFieldErrors</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrors()">Errors</A></CODE></B></DD>
<DD>Get all errors associated with a field.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrors()">getFieldErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a List of <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation"><CODE>FieldError</CODE></A> instances</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldError()"><!-- --></A><H3>
getFieldError</H3>
<PRE>
public <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation">FieldError</A> <B>getFieldError</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldError()">Errors</A></CODE></B></DD>
<DD>Get the <i>first</i> error associated with a field, if any.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldError()">getFieldError</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the field-specific error, or <code>null</code></DL>
</DD>
</DL>
<HR>

<A NAME="hasFieldErrors(java.lang.String)"><!-- --></A><H3>
hasFieldErrors</H3>
<PRE>
public boolean <B>hasFieldErrors</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#hasFieldErrors(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Are there any errors associated with the given field?
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#hasFieldErrors(java.lang.String)">hasFieldErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD><code>true</code> if there were any errors associated with the given field</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldErrorCount(java.lang.String)"><!-- --></A><H3>
getFieldErrorCount</H3>
<PRE>
public int <B>getFieldErrorCount</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrorCount(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Return the number of errors associated with the given field.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrorCount(java.lang.String)">getFieldErrorCount</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD>the number of errors associated with the given field</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldErrors(java.lang.String)"><!-- --></A><H3>
getFieldErrors</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/List.html?is-external=true" title="class or interface in java.util">List</A> <B>getFieldErrors</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrors(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Get all errors associated with the given field.
 <p>Implementations should support not only full field names like
 "name" but also pattern matches like "na*" or "address.*".
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldErrors(java.lang.String)">getFieldErrors</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD>a List of <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation"><CODE>FieldError</CODE></A> instances</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldError(java.lang.String)"><!-- --></A><H3>
getFieldError</H3>
<PRE>
public <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation">FieldError</A> <B>getFieldError</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldError(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Get the first error associated with the given field, if any.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldError(java.lang.String)">getFieldError</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD>the field-specific error, or <code>null</code></DL>
</DD>
</DL>
<HR>

<A NAME="getFieldValue(java.lang.String)"><!-- --></A><H3>
getFieldValue</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getFieldValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldValue(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Return the current value of the given field, either the current
 bean property value or a rejected update from the last binding.
 <p>Allows for convenient access to user-specified field values,
 even if there were type mismatches.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldValue(java.lang.String)">getFieldValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD>the current value of the given field</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldType(java.lang.String)"><!-- --></A><H3>
getFieldType</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A> <B>getFieldType</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldType(java.lang.String)">Errors</A></CODE></B></DD>
<DD>Return the type of a given field.
 <p>Implementations should be able to determine the type even
 when the field value is <code>null</code>, for example from some
 associated descriptor.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/Errors.html#getFieldType(java.lang.String)">getFieldType</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field name
<DT><B>Returns:</B><DD>the type of the field, or <code>null</code> if not determinable</DL>
</DD>
</DL>
<HR>

<A NAME="getTarget()"><!-- --></A><H3>
getTarget</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getTarget</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getTarget()">BindingResult</A></CODE></B></DD>
<DD>Return the wrapped target object, which may be a bean, an object with
 public fields, a Map - depending on the concrete binding strategy.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getTarget()">getTarget</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getModel()"><!-- --></A><H3>
getModel</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>getModel</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getModel()">BindingResult</A></CODE></B></DD>
<DD>Return a model Map for the obtained state, exposing a BindingResult
 instance as '<A HREF="../../../org/springframework/validation/BindingResult.html#MODEL_KEY_PREFIX"><CODE>MODEL_KEY_PREFIX</CODE></A> + objectName'
 and the object itself as 'objectName'.
 <p>Note that the Map is constructed every time you're calling this method.
 Adding things to the map and then re-calling this method will not work.
 <p>The attributes in the model Map returned by this method are usually
 included in the <A HREF="../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet"><CODE>ModelAndView</CODE></A>
 for a form view that uses Spring's <code>bind</code> tag in a JSP,
 which needs access to the BindingResult instance. Spring's pre-built
 form controllers will do this for you when rendering a form view.
 When building the ModelAndView instance yourself, you need to include
 the attributes from the model Map returned by this method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getModel()">getModel</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/Errors.html#getObjectName()"><CODE>Errors.getObjectName()</CODE></A>, 
<A HREF="../../../org/springframework/validation/BindingResult.html#MODEL_KEY_PREFIX"><CODE>BindingResult.MODEL_KEY_PREFIX</CODE></A>, 
<A HREF="../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet"><CODE>ModelAndView</CODE></A>, 
<A HREF="../../../org/springframework/web/servlet/tags/BindTag.html" title="class in org.springframework.web.servlet.tags"><CODE>BindTag</CODE></A>, 
<A HREF="../../../org/springframework/web/servlet/mvc/SimpleFormController.html" title="class in org.springframework.web.servlet.mvc"><CODE>SimpleFormController</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getRawFieldValue(java.lang.String)"><!-- --></A><H3>
getRawFieldValue</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getRawFieldValue</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getRawFieldValue(java.lang.String)">BindingResult</A></CODE></B></DD>
<DD>Extract the raw field value for the given field.
 Typically used for comparison purposes.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getRawFieldValue(java.lang.String)">getRawFieldValue</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the field to check
<DT><B>Returns:</B><DD>the current value of the field in its raw form,
 or <code>null</code> if not known</DL>
</DD>
</DL>
<HR>

<A NAME="findEditor(java.lang.String, java.lang.Class)"><!-- --></A><H3>
findEditor</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans">PropertyEditor</A> <B>findEditor</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field,
                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&nbsp;valueType)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#findEditor(java.lang.String, java.lang.Class)">BindingResult</A></CODE></B></DD>
<DD>Find a custom property editor for the given type and property.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#findEditor(java.lang.String, java.lang.Class)">findEditor</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>field</CODE> - the path of the property (name or nested path), or
 <code>null</code> if looking for an editor for all properties of the given type<DD><CODE>valueType</CODE> - the type of the property (can be <code>null</code> if a property
 is given but should be specified in any case for consistency checking)
<DT><B>Returns:</B><DD>the registered editor, or <code>null</code> if none</DL>
</DD>
</DL>
<HR>

<A NAME="getPropertyEditorRegistry()"><!-- --></A><H3>
getPropertyEditorRegistry</H3>
<PRE>
public <A HREF="../../../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A> <B>getPropertyEditorRegistry</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getPropertyEditorRegistry()">BindingResult</A></CODE></B></DD>
<DD>Return the underlying PropertyEditorRegistry.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getPropertyEditorRegistry()">getPropertyEditorRegistry</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the PropertyEditorRegistry, or <code>null</code> if none
 available for this BindingResult</DL>
</DD>
</DL>
<HR>

<A NAME="addError(org.springframework.validation.ObjectError)"><!-- --></A><H3>
addError</H3>
<PRE>
public void <B>addError</B>(<A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation">ObjectError</A>&nbsp;error)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#addError(org.springframework.validation.ObjectError)">BindingResult</A></CODE></B></DD>
<DD>Add a custom <A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation"><CODE>ObjectError</CODE></A> or <A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation"><CODE>FieldError</CODE></A> to the errors list.
 <p>Intended to be used by cooperating strategies such as <A HREF="../../../org/springframework/validation/BindingErrorProcessor.html" title="interface in org.springframework.validation"><CODE>BindingErrorProcessor</CODE></A>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#addError(org.springframework.validation.ObjectError)">addError</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/ObjectError.html" title="class in org.springframework.validation"><CODE>ObjectError</CODE></A>, 
<A HREF="../../../org/springframework/validation/FieldError.html" title="class in org.springframework.validation"><CODE>FieldError</CODE></A>, 
<A HREF="../../../org/springframework/validation/BindingErrorProcessor.html" title="interface in org.springframework.validation"><CODE>BindingErrorProcessor</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="resolveMessageCodes(java.lang.String, java.lang.String)"><!-- --></A><H3>
resolveMessageCodes</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>resolveMessageCodes</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;errorCode,
                                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#resolveMessageCodes(java.lang.String, java.lang.String)">BindingResult</A></CODE></B></DD>
<DD>Resolve the given error code into message codes for the given field.
 <p>Calls the configured <A HREF="../../../org/springframework/validation/MessageCodesResolver.html" title="interface in org.springframework.validation"><CODE>MessageCodesResolver</CODE></A> with appropriate parameters.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#resolveMessageCodes(java.lang.String, java.lang.String)">resolveMessageCodes</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorCode</CODE> - the error code to resolve into message codes<DD><CODE>field</CODE> - the field to resolve message codes for
<DT><B>Returns:</B><DD>the resolved message codes</DL>
</DD>
</DL>
<HR>

<A NAME="recordSuppressedField(java.lang.String)"><!-- --></A><H3>
recordSuppressedField</H3>
<PRE>
public void <B>recordSuppressedField</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;field)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#recordSuppressedField(java.lang.String)">BindingResult</A></CODE></B></DD>
<DD>Mark the specified disallowed field as suppressed.
 <p>The data binder invokes this for each field value that was
 detected to target a disallowed field.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#recordSuppressedField(java.lang.String)">recordSuppressedField</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/DataBinder.html#setAllowedFields(java.lang.String...)"><CODE>DataBinder.setAllowedFields(java.lang.String...)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getSuppressedFields()"><!-- --></A><H3>
getSuppressedFields</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[] <B>getSuppressedFields</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getSuppressedFields()">BindingResult</A></CODE></B></DD>
<DD>Return the list of fields that were suppressed during the bind process.
 <p>Can be used to determine whether any field values were targeting
 disallowed fields.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../org/springframework/validation/BindingResult.html#getSuppressedFields()">getSuppressedFields</A></CODE> in interface <CODE><A HREF="../../../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../org/springframework/validation/DataBinder.html#setAllowedFields(java.lang.String...)"><CODE>DataBinder.setAllowedFields(java.lang.String...)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getMessage()"><!-- --></A><H3>
getMessage</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getMessage</B>()</PRE>
<DL>
<DD>Returns diagnostic information about the errors held in this object.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true#getMessage()" title="class or interface in java.lang">getMessage</A></CODE> in class <CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang">Throwable</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <B>equals</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;other)</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A></CODE> in class <CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="hashCode()"><!-- --></A><H3>
hashCode</H3>
<PRE>
public int <B>hashCode</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A></CODE> in class <CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../org/springframework/validation/BindingErrorProcessor.html" title="interface in org.springframework.validation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?org/springframework/validation/BindException.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="BindException.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
