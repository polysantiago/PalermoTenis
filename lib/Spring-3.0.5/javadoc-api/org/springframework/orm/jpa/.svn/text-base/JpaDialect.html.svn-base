<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:12 BST 2010 -->
<TITLE>
JpaDialect
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="JpaDialect";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/orm/jpa/JpaCallback.html" title="interface in org.springframework.orm.jpa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/orm/jpa/JpaInterceptor.html" title="class in org.springframework.orm.jpa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/orm/jpa/JpaDialect.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JpaDialect.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.orm.jpa</FONT>
<BR>
Interface JpaDialect</H2>
<DL>
<DT><B>All Superinterfaces:</B> <DD><A HREF="../../../../org/springframework/dao/support/PersistenceExceptionTranslator.html" title="interface in org.springframework.dao.support">PersistenceExceptionTranslator</A></DD>
</DL>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../org/springframework/orm/jpa/DefaultJpaDialect.html" title="class in org.springframework.orm.jpa">DefaultJpaDialect</A>, <A HREF="../../../../org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">EclipseLinkJpaDialect</A>, <A HREF="../../../../org/springframework/orm/jpa/vendor/HibernateJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">HibernateJpaDialect</A>, <A HREF="../../../../org/springframework/orm/jpa/vendor/OpenJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">OpenJpaDialect</A>, <A HREF="../../../../org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">TopLinkJpaDialect</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>JpaDialect</B><DT>extends <A HREF="../../../../org/springframework/dao/support/PersistenceExceptionTranslator.html" title="interface in org.springframework.dao.support">PersistenceExceptionTranslator</A></DL>
</PRE>

<P>
SPI strategy that encapsulates certain functionality that standard JPA 1.0
 does not offer, such as access to the underlying JDBC Connection. This
 strategy is mainly intended for standalone usage of a JPA provider; most
 of its functionality is not relevant when running with JTA transactions.
 
 <p>Also allows for the provision of value-added methods for portable yet
 more capable EntityManager and EntityManagerFactory subinterfaces offered
 by Spring.

 <p>In general, it is recommended to derive from DefaultJpaDialect instead of
 implementing this interface directly. This allows for inheriting common
 behavior (present and future) from DefaultJpaDialect, only overriding
 specific hooks to plug in concrete vendor-specific behavior.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller, Rod Johnson</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/DefaultJpaDialect.html" title="class in org.springframework.orm.jpa"><CODE>DefaultJpaDialect</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/JpaAccessor.html#setJpaDialect(org.springframework.orm.jpa.JpaDialect)"><CODE>JpaAccessor.setJpaDialect(org.springframework.orm.jpa.JpaDialect)</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/JpaTransactionManager.html#setJpaDialect(org.springframework.orm.jpa.JpaDialect)"><CODE>JpaTransactionManager.setJpaDialect(org.springframework.orm.jpa.JpaDialect)</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/JpaVendorAdapter.html#getJpaDialect()"><CODE>JpaVendorAdapter.getJpaDialect()</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html#setJpaDialect(org.springframework.orm.jpa.JpaDialect)"><CODE>AbstractEntityManagerFactoryBean.setJpaDialect(org.springframework.orm.jpa.JpaDialect)</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html#setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)"><CODE>AbstractEntityManagerFactoryBean.setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)</CODE></A></DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)">beginTransaction</A></B>(javax.persistence.EntityManager&nbsp;entityManager,
                 <A HREF="../../../../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>&nbsp;definition)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Begin the given JPA transaction, applying the semantics specified by the
 given Spring transaction definition (in particular, an isolation level
 and a timeout).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#cleanupTransaction(java.lang.Object)">cleanupTransaction</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;transactionData)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clean up the transaction via the given transaction data.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/orm/jpa/EntityManagerFactoryPlusOperations.html" title="interface in org.springframework.orm.jpa">EntityManagerFactoryPlusOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#getEntityManagerFactoryPlusOperations(javax.persistence.EntityManagerFactory)">getEntityManagerFactoryPlusOperations</A></B>(javax.persistence.EntityManagerFactory&nbsp;rawEntityManager)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return an EntityManagerFactoryPlusOperations implementation for
 the given raw EntityManagerFactory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/orm/jpa/EntityManagerPlusOperations.html" title="interface in org.springframework.orm.jpa">EntityManagerPlusOperations</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#getEntityManagerPlusOperations(javax.persistence.EntityManager)">getEntityManagerPlusOperations</A></B>(javax.persistence.EntityManager&nbsp;rawEntityManager)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return an EntityManagerPlusOperations implementation for
 the given raw EntityManager.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource">ConnectionHandle</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#getJdbcConnection(javax.persistence.EntityManager, boolean)">getJdbcConnection</A></B>(javax.persistence.EntityManager&nbsp;entityManager,
                  boolean&nbsp;readOnly)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrieve the JDBC Connection that the given JPA EntityManager uses underneath,
 if accessing a relational database.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#prepareTransaction(javax.persistence.EntityManager, boolean, java.lang.String)">prepareTransaction</A></B>(javax.persistence.EntityManager&nbsp;entityManager,
                   boolean&nbsp;readOnly,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prepare a JPA transaction, applying the specified semantics.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)">releaseJdbcConnection</A></B>(<A HREF="../../../../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource">ConnectionHandle</A>&nbsp;conHandle,
                      javax.persistence.EntityManager&nbsp;entityManager)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Release the given JDBC Connection, which has originally been retrieved
 via <code>getJdbcConnection</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#supportsEntityManagerFactoryPlusOperations()">supportsEntityManagerFactoryPlusOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether the EntityManagerFactoryPlus(Operations) interface is
 supported by this provider.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#supportsEntityManagerPlusOperations()">supportsEntityManagerPlusOperations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether the EntityManagerPlus(Operations) interface is
 supported by this provider.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.dao.support.PersistenceExceptionTranslator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface org.springframework.dao.support.<A HREF="../../../../org/springframework/dao/support/PersistenceExceptionTranslator.html" title="interface in org.springframework.dao.support">PersistenceExceptionTranslator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/springframework/dao/support/PersistenceExceptionTranslator.html#translateExceptionIfPossible(java.lang.RuntimeException)">translateExceptionIfPossible</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="supportsEntityManagerFactoryPlusOperations()"><!-- --></A><H3>
supportsEntityManagerFactoryPlusOperations</H3>
<PRE>
boolean <B>supportsEntityManagerFactoryPlusOperations</B>()</PRE>
<DL>
<DD>Return whether the EntityManagerFactoryPlus(Operations) interface is
 supported by this provider.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/EntityManagerFactoryPlusOperations.html" title="interface in org.springframework.orm.jpa"><CODE>EntityManagerFactoryPlusOperations</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/EntityManagerFactoryPlus.html" title="interface in org.springframework.orm.jpa"><CODE>EntityManagerFactoryPlus</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="supportsEntityManagerPlusOperations()"><!-- --></A><H3>
supportsEntityManagerPlusOperations</H3>
<PRE>
boolean <B>supportsEntityManagerPlusOperations</B>()</PRE>
<DL>
<DD>Return whether the EntityManagerPlus(Operations) interface is
 supported by this provider.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/EntityManagerPlusOperations.html" title="interface in org.springframework.orm.jpa"><CODE>EntityManagerPlusOperations</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/EntityManagerPlus.html" title="interface in org.springframework.orm.jpa"><CODE>EntityManagerPlus</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getEntityManagerFactoryPlusOperations(javax.persistence.EntityManagerFactory)"><!-- --></A><H3>
getEntityManagerFactoryPlusOperations</H3>
<PRE>
<A HREF="../../../../org/springframework/orm/jpa/EntityManagerFactoryPlusOperations.html" title="interface in org.springframework.orm.jpa">EntityManagerFactoryPlusOperations</A> <B>getEntityManagerFactoryPlusOperations</B>(javax.persistence.EntityManagerFactory&nbsp;rawEntityManager)</PRE>
<DL>
<DD>Return an EntityManagerFactoryPlusOperations implementation for
 the given raw EntityManagerFactory. This operations object can be
 used to serve the additional operations behind a proxy that
 implements the EntityManagerFactoryPlus interface.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rawEntityManager</CODE> - the raw provider-specific EntityManagerFactory
<DT><B>Returns:</B><DD>the EntityManagerFactoryPlusOperations implementation</DL>
</DD>
</DL>
<HR>

<A NAME="getEntityManagerPlusOperations(javax.persistence.EntityManager)"><!-- --></A><H3>
getEntityManagerPlusOperations</H3>
<PRE>
<A HREF="../../../../org/springframework/orm/jpa/EntityManagerPlusOperations.html" title="interface in org.springframework.orm.jpa">EntityManagerPlusOperations</A> <B>getEntityManagerPlusOperations</B>(javax.persistence.EntityManager&nbsp;rawEntityManager)</PRE>
<DL>
<DD>Return an EntityManagerPlusOperations implementation for
 the given raw EntityManager. This operations object can be
 used to serve the additional operations behind a proxy that
 implements the EntityManagerPlus interface.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rawEntityManager</CODE> - the raw provider-specific EntityManagerFactory
<DT><B>Returns:</B><DD>the EntityManagerFactoryPlusOperations implementation</DL>
</DD>
</DL>
<HR>

<A NAME="beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><!-- --></A><H3>
beginTransaction</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>beginTransaction</B>(javax.persistence.EntityManager&nbsp;entityManager,
                        <A HREF="../../../../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>&nbsp;definition)
                        throws javax.persistence.PersistenceException,
                               <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A>,
                               <A HREF="../../../../org/springframework/transaction/TransactionException.html" title="class in org.springframework.transaction">TransactionException</A></PRE>
<DL>
<DD>Begin the given JPA transaction, applying the semantics specified by the
 given Spring transaction definition (in particular, an isolation level
 and a timeout). Called by JpaTransactionManager on transaction begin.
 <p>An implementation can configure the JPA Transaction object and then
 invoke <code>begin</code>, or invoke a special begin method that takes,
 for example, an isolation level.
 <p>An implementation can apply the read-only flag as flush mode. In that case,
 a transaction data object can be returned that holds the previous flush mode
 (and possibly other data), to be reset in <code>cleanupTransaction</code>.
 It may also apply the read-only flag and isolation level to the underlying
 JDBC Connection before beginning the transaction.
 <p>Implementations can also use the Spring transaction name, as exposed by the
 passed-in TransactionDefinition, to optimize for specific data access use cases
 (effectively using the current transaction name as use case identifier).
 <p>This method also allows for exposing savepoint capabilities if supported by
 the persistence provider, through returning an Object that implements Spring's
 <A HREF="../../../../org/springframework/transaction/SavepointManager.html" title="interface in org.springframework.transaction"><CODE>SavepointManager</CODE></A> interface.
 <A HREF="../../../../org/springframework/orm/jpa/JpaTransactionManager.html" title="class in org.springframework.orm.jpa"><CODE>JpaTransactionManager</CODE></A> will use this capability if needed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>entityManager</CODE> - the EntityManager to begin a JPA transaction on<DD><CODE>definition</CODE> - the Spring transaction definition that defines semantics
<DT><B>Returns:</B><DD>an arbitrary object that holds transaction data, if any
 (to be passed into <A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#cleanupTransaction(java.lang.Object)"><CODE>cleanupTransaction(java.lang.Object)</CODE></A>). May implement the
 <A HREF="../../../../org/springframework/transaction/SavepointManager.html" title="interface in org.springframework.transaction"><CODE>SavepointManager</CODE></A> interface.
<DT><B>Throws:</B>
<DD><CODE>javax.persistence.PersistenceException</CODE> - if thrown by JPA methods
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A></CODE> - if thrown by JDBC methods
<DD><CODE><A HREF="../../../../org/springframework/transaction/TransactionException.html" title="class in org.springframework.transaction">TransactionException</A></CODE> - in case of invalid arguments<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#cleanupTransaction(java.lang.Object)"><CODE>cleanupTransaction(java.lang.Object)</CODE></A>, 
<CODE>EntityTransaction.begin()</CODE>, 
<A HREF="../../../../org/springframework/jdbc/datasource/DataSourceUtils.html#prepareConnectionForTransaction(java.sql.Connection, org.springframework.transaction.TransactionDefinition)"><CODE>DataSourceUtils.prepareConnectionForTransaction(java.sql.Connection, org.springframework.transaction.TransactionDefinition)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="prepareTransaction(javax.persistence.EntityManager, boolean, java.lang.String)"><!-- --></A><H3>
prepareTransaction</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>prepareTransaction</B>(javax.persistence.EntityManager&nbsp;entityManager,
                          boolean&nbsp;readOnly,
                          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;name)
                          throws javax.persistence.PersistenceException</PRE>
<DL>
<DD>Prepare a JPA transaction, applying the specified semantics. Called by
 EntityManagerFactoryUtils when enlisting an EntityManager in a JTA transaction.
 <p>An implementation can apply the read-only flag as flush mode. In that case,
 a transaction data object can be returned that holds the previous flush mode
 (and possibly other data), to be reset in <code>cleanupTransaction</code>.
 <p>Implementations can also use the Spring transaction name, as exposed by the
 passed-in TransactionDefinition, to optimize for specific data access use cases
 (effectively using the current transaction name as use case identifier).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>entityManager</CODE> - the EntityManager to begin a JPA transaction on<DD><CODE>readOnly</CODE> - whether the transaction is supposed to be read-only<DD><CODE>name</CODE> - the name of the transaction (if any)
<DT><B>Returns:</B><DD>an arbitrary object that holds transaction data, if any
 (to be passed into cleanupTransaction)
<DT><B>Throws:</B>
<DD><CODE>javax.persistence.PersistenceException</CODE> - if thrown by JPA methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#cleanupTransaction(java.lang.Object)"><CODE>cleanupTransaction(java.lang.Object)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="cleanupTransaction(java.lang.Object)"><!-- --></A><H3>
cleanupTransaction</H3>
<PRE>
void <B>cleanupTransaction</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;transactionData)</PRE>
<DL>
<DD>Clean up the transaction via the given transaction data. Called by
 JpaTransactionManager and EntityManagerFactoryUtils on transaction cleanup.
 <p>An implementation can, for example, reset read-only flag and
 isolation level of the underlying JDBC Connection. Furthermore,
 an exposed data access use case can be reset here.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>transactionData</CODE> - arbitrary object that holds transaction data, if any
 (as returned by beginTransaction or prepareTransaction)<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><CODE>beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)</CODE></A>, 
<A HREF="../../../../org/springframework/jdbc/datasource/DataSourceUtils.html#resetConnectionAfterTransaction(java.sql.Connection, java.lang.Integer)"><CODE>DataSourceUtils.resetConnectionAfterTransaction(java.sql.Connection, java.lang.Integer)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getJdbcConnection(javax.persistence.EntityManager, boolean)"><!-- --></A><H3>
getJdbcConnection</H3>
<PRE>
<A HREF="../../../../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource">ConnectionHandle</A> <B>getJdbcConnection</B>(javax.persistence.EntityManager&nbsp;entityManager,
                                   boolean&nbsp;readOnly)
                                   throws javax.persistence.PersistenceException,
                                          <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A></PRE>
<DL>
<DD>Retrieve the JDBC Connection that the given JPA EntityManager uses underneath,
 if accessing a relational database. This method will just get invoked if actually
 needing access to the underlying JDBC Connection, usually within an active JPA
 transaction (for example, by JpaTransactionManager). The returned handle will
 be passed into the <code>releaseJdbcConnection</code> method when not needed anymore.
 <p>This strategy is necessary as JPA 1.0 does not provide a standard way to retrieve
 the underlying JDBC Connection (due to the fact that a JPA implementation might not
 work with a relational database at all).
 <p>Implementations are encouraged to return an unwrapped Connection object, i.e.
 the Connection as they got it from the connection pool. This makes it easier for
 application code to get at the underlying native JDBC Connection, like an
 OracleConnection, which is sometimes necessary for LOB handling etc. We assume
 that calling code knows how to properly handle the returned Connection object.
 <p>In a simple case where the returned Connection will be auto-closed with the
 EntityManager or can be released via the Connection object itself, an
 implementation can return a SimpleConnectionHandle that just contains the
 Connection. If some other object is needed in <code>releaseJdbcConnection</code>,
 an implementation should use a special handle that references that other object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>entityManager</CODE> - the current JPA EntityManager<DD><CODE>readOnly</CODE> - whether the Connection is only needed for read-only purposes
<DT><B>Returns:</B><DD>a handle for the JDBC Connection, to be passed into
 <code>releaseJdbcConnection</code>, or <code>null</code>
 if no JDBC Connection can be retrieved
<DT><B>Throws:</B>
<DD><CODE>javax.persistence.PersistenceException</CODE> - if thrown by JPA methods
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A></CODE> - if thrown by JDBC methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)"><CODE>releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)</CODE></A>, 
<A HREF="../../../../org/springframework/jdbc/datasource/ConnectionHandle.html#getConnection()"><CODE>ConnectionHandle.getConnection()</CODE></A>, 
<A HREF="../../../../org/springframework/jdbc/datasource/SimpleConnectionHandle.html" title="class in org.springframework.jdbc.datasource"><CODE>SimpleConnectionHandle</CODE></A>, 
<A HREF="../../../../org/springframework/orm/jpa/JpaTransactionManager.html#setDataSource(javax.sql.DataSource)"><CODE>JpaTransactionManager.setDataSource(javax.sql.DataSource)</CODE></A>, 
<A HREF="../../../../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc"><CODE>NativeJdbcExtractor</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)"><!-- --></A><H3>
releaseJdbcConnection</H3>
<PRE>
void <B>releaseJdbcConnection</B>(<A HREF="../../../../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource">ConnectionHandle</A>&nbsp;conHandle,
                           javax.persistence.EntityManager&nbsp;entityManager)
                           throws javax.persistence.PersistenceException,
                                  <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A></PRE>
<DL>
<DD>Release the given JDBC Connection, which has originally been retrieved
 via <code>getJdbcConnection</code>. This should be invoked in any case,
 to allow for proper release of the retrieved Connection handle.
 <p>An implementation might simply do nothing, if the Connection returned
 by <code>getJdbcConnection</code> will be implicitly closed when the JPA
 transaction completes or when the EntityManager is closed.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>conHandle</CODE> - the JDBC Connection handle to release<DD><CODE>entityManager</CODE> - the current JPA EntityManager
<DT><B>Throws:</B>
<DD><CODE>javax.persistence.PersistenceException</CODE> - if thrown by JPA methods
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql">SQLException</A></CODE> - if thrown by JDBC methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/orm/jpa/JpaDialect.html#getJdbcConnection(javax.persistence.EntityManager, boolean)"><CODE>getJdbcConnection(javax.persistence.EntityManager, boolean)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/orm/jpa/JpaCallback.html" title="interface in org.springframework.orm.jpa"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/orm/jpa/JpaInterceptor.html" title="class in org.springframework.orm.jpa"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/orm/jpa/JpaDialect.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="JpaDialect.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
