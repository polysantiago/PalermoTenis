<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:59 BST 2010 -->
<TITLE>
ModelAndView
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ModelAndView";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/web/portlet/HandlerMapping.html" title="interface in org.springframework.web.portlet"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/web/portlet/ModelAndViewDefiningException.html" title="class in org.springframework.web.portlet"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/web/portlet/ModelAndView.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ModelAndView.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.web.portlet</FONT>
<BR>
Class ModelAndView</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.web.portlet.ModelAndView</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>ModelAndView</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
Holder for both Model and View in the web MVC framework.
 Note that these are entirely distinct. This class merely holds
 both to make it possible for a controller to return both model
 and view in a single return value.

 <p>Represents a model and view returned by a handler, to be resolved
 by a DispatcherPortlet. The view can take the form of a String
 view name which will need to be resolved by a ViewResolver object;
 alternatively a view object can be specified directly. The model
 is a Map, allowing the use of multiple objects keyed by name.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.0</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet"><CODE>DispatcherPortlet</CODE></A>, 
<A HREF="../../../../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet"><CODE>ViewResolver</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/HandlerAdapter.html" title="interface in org.springframework.web.portlet"><CODE>HandlerAdapter</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/mvc/Controller.html" title="interface in org.springframework.web.portlet.mvc"><CODE>Controller</CODE></A></DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView()">ModelAndView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Default constructor for bean-style usage: populating bean
 properties instead of passing in constructor arguments.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.Object)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient constructor when there is no model data to expose.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.Object, java.util.Map)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;model)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new ModelAndView given a View object and a model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.Object, java.lang.String, java.lang.Object)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modelName,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;modelObject)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient constructor to take a single model object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.String)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient constructor when there is no model data to expose.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.String, java.util.Map)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;model)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new ModelAndView given a view name and a model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#ModelAndView(java.lang.String, java.lang.String, java.lang.Object)">ModelAndView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modelName,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;modelObject)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convenient constructor to take a single model object.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#addAllObjects(java.util.Map)">addAllObjects</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;modelMap)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add all attributes contained in the provided Map to the model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#addObject(java.lang.Object)">addObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;attributeValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add an attribute to the model using parameter name generation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#addObject(java.lang.String, java.lang.Object)">addObject</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;attributeName,
          <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;attributeValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add an attribute to the model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#clear()">clear</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear the state of this ModelAndView object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModel()">getModel</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the model map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModelInternal()">getModelInternal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the model map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/ui/ModelMap.html" title="class in org.springframework.ui">ModelMap</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModelMap()">getModelMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the underlying <code>ModelMap</code> instance (never <code>null</code>).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getView()">getView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the View object, or <code>null</code> if we are using a view name
 to be resolved by the DispatcherPortlet via a ViewResolver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getViewName()">getViewName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the view name to be resolved by the DispatcherPortlet
 via a ViewResolver, or <code>null</code> if we are using a view object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#hasView()">hasView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicate whether or not this <code>ModelAndView</code> has a view, either
 as a view name or as a direct view instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#isEmpty()">isEmpty</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether this ModelAndView object is empty,
 i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#isReference()">isReference</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether we use a view reference, i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#setView(java.lang.Object)">setView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a View object for this ModelAndView.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#setViewName(java.lang.String)">setViewName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a view name for this ModelAndView, to be resolved by the
 DispatcherPortlet via a ViewResolver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return diagnostic information about this model and view.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#wasCleared()">wasCleared</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return whether this ModelAndView object is empty as a result of a call to <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#clear()"><CODE>clear()</CODE></A>
 i.e.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="ModelAndView()"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>()</PRE>
<DL>
<DD>Default constructor for bean-style usage: populating bean
 properties instead of passing in constructor arguments.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#setView(java.lang.Object)"><CODE>setView(Object)</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#setViewName(java.lang.String)"><CODE>setViewName(String)</CODE></A></DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.String)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName)</PRE>
<DL>
<DD>Convenient constructor when there is no model data to expose.
 Can also be used in conjunction with <code>addObject</code>.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>viewName</CODE> - name of the View to render, to be resolved
 by the DispatcherPortlet's ViewResolver<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#addObject(java.lang.String, java.lang.Object)"><CODE>addObject(java.lang.String, java.lang.Object)</CODE></A></DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.Object)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view)</PRE>
<DL>
<DD>Convenient constructor when there is no model data to expose.
 Can also be used in conjunction with <code>addObject</code>.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>view</CODE> - View object to render (usually a Servlet MVC View object)<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#addObject(java.lang.String, java.lang.Object)"><CODE>addObject(java.lang.String, java.lang.Object)</CODE></A></DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.String, java.util.Map)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;model)</PRE>
<DL>
<DD>Create a new ModelAndView given a view name and a model.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>viewName</CODE> - name of the View to render, to be resolved
 by the DispatcherPortlet's ViewResolver<DD><CODE>model</CODE> - Map of model names (Strings) to model objects
 (Objects). Model entries may not be <code>null</code>, but the
 model Map may be <code>null</code> if there is no model data.</DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.Object, java.util.Map)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;model)</PRE>
<DL>
<DD>Create a new ModelAndView given a View object and a model.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>view</CODE> - View object to render (usually a Servlet MVC View object)<DD><CODE>model</CODE> - Map of model names (Strings) to model objects
 (Objects). Model entries may not be <code>null</code>, but the
 model Map may be <code>null</code> if there is no model data.</DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.String, java.lang.String, java.lang.Object)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modelName,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;modelObject)</PRE>
<DL>
<DD>Convenient constructor to take a single model object.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>viewName</CODE> - name of the View to render, to be resolved
 by the DispatcherPortlet's ViewResolver<DD><CODE>modelName</CODE> - name of the single entry in the model<DD><CODE>modelObject</CODE> - the single model object</DL>
</DL>
<HR>

<A NAME="ModelAndView(java.lang.Object, java.lang.String, java.lang.Object)"><!-- --></A><H3>
ModelAndView</H3>
<PRE>
public <B>ModelAndView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;modelName,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;modelObject)</PRE>
<DL>
<DD>Convenient constructor to take a single model object.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>view</CODE> - View object to render (usually a Servlet MVC View object)<DD><CODE>modelName</CODE> - name of the single entry in the model<DD><CODE>modelObject</CODE> - the single model object</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setViewName(java.lang.String)"><!-- --></A><H3>
setViewName</H3>
<PRE>
public void <B>setViewName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;viewName)</PRE>
<DL>
<DD>Set a view name for this ModelAndView, to be resolved by the
 DispatcherPortlet via a ViewResolver. Will override any
 pre-existing view name or View.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getViewName()"><!-- --></A><H3>
getViewName</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getViewName</B>()</PRE>
<DL>
<DD>Return the view name to be resolved by the DispatcherPortlet
 via a ViewResolver, or <code>null</code> if we are using a view object.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setView(java.lang.Object)"><!-- --></A><H3>
setView</H3>
<PRE>
public void <B>setView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;view)</PRE>
<DL>
<DD>Set a View object for this ModelAndView. Will override any
 pre-existing view name or View.
 <p>The given View object will usually be a Servlet MVC View object.
 This is nevertheless typed as Object to avoid a Servlet API dependency
 in the Portlet ModelAndView class.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getView()"><!-- --></A><H3>
getView</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getView</B>()</PRE>
<DL>
<DD>Return the View object, or <code>null</code> if we are using a view name
 to be resolved by the DispatcherPortlet via a ViewResolver.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="hasView()"><!-- --></A><H3>
hasView</H3>
<PRE>
public boolean <B>hasView</B>()</PRE>
<DL>
<DD>Indicate whether or not this <code>ModelAndView</code> has a view, either
 as a view name or as a direct view instance.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isReference()"><!-- --></A><H3>
isReference</H3>
<PRE>
public boolean <B>isReference</B>()</PRE>
<DL>
<DD>Return whether we use a view reference, i.e. <code>true</code>
 if the view has been specified via a name to be resolved by the
 DispatcherPortlet via a ViewResolver.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getModelInternal()"><!-- --></A><H3>
getModelInternal</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>getModelInternal</B>()</PRE>
<DL>
<DD>Return the model map. May return <code>null</code>.
 Called by DispatcherPortlet for evaluation of the model.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getModelMap()"><!-- --></A><H3>
getModelMap</H3>
<PRE>
public <A HREF="../../../../org/springframework/ui/ModelMap.html" title="class in org.springframework.ui">ModelMap</A> <B>getModelMap</B>()</PRE>
<DL>
<DD>Return the underlying <code>ModelMap</code> instance (never <code>null</code>).
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getModel()"><!-- --></A><H3>
getModel</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt; <B>getModel</B>()</PRE>
<DL>
<DD>Return the model map. Never returns <code>null</code>.
 To be called by application code for modifying the model.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addObject(java.lang.String, java.lang.Object)"><!-- --></A><H3>
addObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A> <B>addObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;attributeName,
                              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;attributeValue)</PRE>
<DL>
<DD>Add an attribute to the model.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>attributeName</CODE> - name of the object to add to the model<DD><CODE>attributeValue</CODE> - object to add to the model (never <code>null</code>)<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/ui/ModelMap.html#addAttribute(java.lang.String, java.lang.Object)"><CODE>ModelMap.addAttribute(String, Object)</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModelMap()"><CODE>getModelMap()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addObject(java.lang.Object)"><!-- --></A><H3>
addObject</H3>
<PRE>
public <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A> <B>addObject</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;attributeValue)</PRE>
<DL>
<DD>Add an attribute to the model using parameter name generation.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>attributeValue</CODE> - the object to add to the model (never <code>null</code>)<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/ui/ModelMap.html#addAttribute(java.lang.Object)"><CODE>ModelMap.addAttribute(Object)</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModelMap()"><CODE>getModelMap()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addAllObjects(java.util.Map)"><!-- --></A><H3>
addAllObjects</H3>
<PRE>
public <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A> <B>addAllObjects</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,?&gt;&nbsp;modelMap)</PRE>
<DL>
<DD>Add all attributes contained in the provided Map to the model.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>modelMap</CODE> - a Map of attributeName -> attributeValue pairs<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/ui/ModelMap.html#addAllAttributes(java.util.Map)"><CODE>ModelMap.addAllAttributes(Map)</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#getModelMap()"><CODE>getModelMap()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="clear()"><!-- --></A><H3>
clear</H3>
<PRE>
public void <B>clear</B>()</PRE>
<DL>
<DD>Clear the state of this ModelAndView object.
 The object will be empty afterwards.
 <p>Can be used to suppress rendering of a given ModelAndView object
 in the <code>postHandleRender</code> method of a HandlerInterceptor.
<P>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#isEmpty()"><CODE>isEmpty()</CODE></A>, 
<A HREF="../../../../org/springframework/web/portlet/HandlerInterceptor.html#postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)"><CODE>HandlerInterceptor.postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isEmpty()"><!-- --></A><H3>
isEmpty</H3>
<PRE>
public boolean <B>isEmpty</B>()</PRE>
<DL>
<DD>Return whether this ModelAndView object is empty,
 i.e. whether it does not hold any view and does not contain a model.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="wasCleared()"><!-- --></A><H3>
wasCleared</H3>
<PRE>
public boolean <B>wasCleared</B>()</PRE>
<DL>
<DD>Return whether this ModelAndView object is empty as a result of a call to <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#clear()"><CODE>clear()</CODE></A>
 i.e. whether it does not hold any view and does not contain a model.
 Returns <code>false</code> if any additional state was added to the instance
 <strong>after</strong> the call to <A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#clear()"><CODE>clear()</CODE></A>.
<P>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/portlet/ModelAndView.html#clear()"><CODE>clear()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toString</B>()</PRE>
<DL>
<DD>Return diagnostic information about this model and view.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A></CODE> in class <CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/web/portlet/HandlerMapping.html" title="interface in org.springframework.web.portlet"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/web/portlet/ModelAndViewDefiningException.html" title="class in org.springframework.web.portlet"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/web/portlet/ModelAndView.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ModelAndView.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
