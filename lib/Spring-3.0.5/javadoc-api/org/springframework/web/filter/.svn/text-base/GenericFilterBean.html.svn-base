<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:24:56 BST 2010 -->
<TITLE>
GenericFilterBean
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="GenericFilterBean";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/web/filter/HiddenHttpMethodFilter.html" title="class in org.springframework.web.filter"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/web/filter/GenericFilterBean.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GenericFilterBean.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.web.filter</FONT>
<BR>
Class GenericFilterBean</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.web.filter.GenericFilterBean</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet">Filter</A>, <A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A>, <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A>, <A HREF="../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter">DelegatingFilterProxy</A>, <A HREF="../../../../org/springframework/web/filter/OncePerRequestFilter.html" title="class in org.springframework.web.filter">OncePerRequestFilter</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>GenericFilterBean</B><DT>extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A><DT>implements <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet">Filter</A>, <A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A>, <A HREF="../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A>, <A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A>, <A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A></DL>
</PRE>

<P>
Simple base implementation of <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet"><CODE>Filter</CODE></A> which treats
 its config parameters (<code>init-param</code> entries within the
 <code>filter</code> tag in <code>web.xml</code>) as bean properties.

 <p>A handy superclass for any type of filter. Type conversion of config
 parameters is automatic, with the corresponding setter method getting
 invoked with the converted value. It is also possible for subclasses to
 specify required properties. Parameters without matching bean property
 setter will simply be ignored.

 <p>This filter leaves actual filtering to subclasses, which have to
 implement the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)" title="class or interface in javax.servlet"><CODE>Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</CODE></A> method.

 <p>This generic filter base class has no dependency on the Spring
 <A HREF="../../../../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A> concept.
 Filters usually don't load their own context but rather access service
 beans from the Spring root application context, accessible via the
 filter's <A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getServletContext()"><CODE>ServletContext</CODE></A> (see
 <A HREF="../../../../org/springframework/web/context/support/WebApplicationContextUtils.html" title="class in org.springframework.web.context.support"><CODE>WebApplicationContextUtils</CODE></A>).
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>06.12.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#addRequiredProperty(java.lang.String)"><CODE>addRequiredProperty(java.lang.String)</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#initFilterBean()"><CODE>initFilterBean()</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)" title="class or interface in javax.servlet"><CODE>Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#logger">logger</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logger available to subclasses</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#GenericFilterBean()">GenericFilterBean</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#addRequiredProperty(java.lang.String)">addRequiredProperty</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses can invoke this method to specify that this property
 (which must match a JavaBean property they expose) is mandatory,
 and must be supplied as a config parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#afterPropertiesSet()">afterPropertiesSet</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calls the <code>initFilterBean()</code> method that might
 contain custom initialization of a subclass.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#destroy()">destroy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses may override this to perform custom filter shutdown.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true" title="class or interface in javax.servlet">FilterConfig</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getFilterConfig()">getFilterConfig</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make the FilterConfig of this filter available, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getFilterName()">getFilterName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make the name of this filter available to subclasses.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getServletContext()">getServletContext</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Make the ServletContext of this filter available to subclasses.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#init(javax.servlet.FilterConfig)">init</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true" title="class or interface in javax.servlet">FilterConfig</A>&nbsp;filterConfig)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Standard way of initializing this filter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#initBeanWrapper(org.springframework.beans.BeanWrapper)">initBeanWrapper</A></B>(<A HREF="../../../../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans">BeanWrapper</A>&nbsp;bw)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initialize the BeanWrapper for this GenericFilterBean,
 possibly with custom editors.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#initFilterBean()">initFilterBean</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses may override this to perform custom initialization.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#setBeanName(java.lang.String)">setBeanName</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stores the bean name as defined in the Spring bean factory.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#setServletContext(javax.servlet.ServletContext)">setServletContext</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A>&nbsp;servletContext)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stores the ServletContext that the bean factory runs in.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_javax.servlet.Filter"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from interface javax.servlet.<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet">Filter</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)" title="class or interface in javax.servlet">doFilter</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="logger"><!-- --></A><H3>
logger</H3>
<PRE>
protected final <A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A> <B>logger</B></PRE>
<DL>
<DD>Logger available to subclasses
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="GenericFilterBean()"><!-- --></A><H3>
GenericFilterBean</H3>
<PRE>
public <B>GenericFilterBean</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setBeanName(java.lang.String)"><!-- --></A><H3>
setBeanName</H3>
<PRE>
public final void <B>setBeanName</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;beanName)</PRE>
<DL>
<DD>Stores the bean name as defined in the Spring bean factory.
 <p>Only relevant in case of initialization as bean, to have a name as
 fallback to the filter name usually provided by a FilterConfig instance.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html#setBeanName(java.lang.String)">setBeanName</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanName</CODE> - the name of the bean in the factory.
 Note that this name is the actual bean name used in the factory, which may
 differ from the originally specified name: in particular for inner bean
 names, the actual bean name might have been made unique through appending
 "#..." suffixes. Use the <A HREF="../../../../org/springframework/beans/factory/BeanFactoryUtils.html#originalBeanName(java.lang.String)"><CODE>BeanFactoryUtils.originalBeanName(String)</CODE></A>
 method to extract the original bean name (without suffix), if desired.<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory"><CODE>BeanNameAware</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getFilterName()"><CODE>getFilterName()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setServletContext(javax.servlet.ServletContext)"><!-- --></A><H3>
setServletContext</H3>
<PRE>
public final void <B>setServletContext</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A>&nbsp;servletContext)</PRE>
<DL>
<DD>Stores the ServletContext that the bean factory runs in.
 <p>Only relevant in case of initialization as bean, to have a ServletContext
 as fallback to the context usually provided by a FilterConfig instance.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/web/context/ServletContextAware.html#setServletContext(javax.servlet.ServletContext)">setServletContext</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>servletContext</CODE> - ServletContext object to be used by this object<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context"><CODE>ServletContextAware</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getServletContext()"><CODE>getServletContext()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="afterPropertiesSet()"><!-- --></A><H3>
afterPropertiesSet</H3>
<PRE>
public void <B>afterPropertiesSet</B>()
                        throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></PRE>
<DL>
<DD>Calls the <code>initFilterBean()</code> method that might
 contain custom initialization of a subclass.
 <p>Only relevant in case of initialization as bean, where the
 standard <code>init(FilterConfig)</code> method won't be called.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()">afterPropertiesSet</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></CODE><DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#initFilterBean()"><CODE>initFilterBean()</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#init(javax.servlet.FilterConfig)"><CODE>init(javax.servlet.FilterConfig)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="addRequiredProperty(java.lang.String)"><!-- --></A><H3>
addRequiredProperty</H3>
<PRE>
protected final void <B>addRequiredProperty</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;property)</PRE>
<DL>
<DD>Subclasses can invoke this method to specify that this property
 (which must match a JavaBean property they expose) is mandatory,
 and must be supplied as a config parameter. This should be called
 from the constructor of a subclass.
 <p>This method is only relevant in case of traditional initialization
 driven by a FilterConfig instance.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>property</CODE> - name of the required property</DL>
</DD>
</DL>
<HR>

<A NAME="init(javax.servlet.FilterConfig)"><!-- --></A><H3>
init</H3>
<PRE>
public final void <B>init</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true" title="class or interface in javax.servlet">FilterConfig</A>&nbsp;filterConfig)
                throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></PRE>
<DL>
<DD>Standard way of initializing this filter.
 Map config parameters onto bean properties of this filter, and
 invoke subclass initialization.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true#init(javax.servlet.FilterConfig)" title="class or interface in javax.servlet">init</A></CODE> in interface <CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet">Filter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>filterConfig</CODE> - the configuration for this filter
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></CODE> - if bean properties are invalid (or required
 properties are missing), or if subclass initialization fails.<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#initFilterBean()"><CODE>initFilterBean()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="initBeanWrapper(org.springframework.beans.BeanWrapper)"><!-- --></A><H3>
initBeanWrapper</H3>
<PRE>
protected void <B>initBeanWrapper</B>(<A HREF="../../../../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans">BeanWrapper</A>&nbsp;bw)
                        throws <A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></PRE>
<DL>
<DD>Initialize the BeanWrapper for this GenericFilterBean,
 possibly with custom editors.
 <p>This default implementation is empty.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>bw</CODE> - the BeanWrapper to initialize
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A></CODE> - if thrown by BeanWrapper methods<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><CODE>PropertyEditorRegistry.registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getFilterConfig()"><!-- --></A><H3>
getFilterConfig</H3>
<PRE>
public final <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true" title="class or interface in javax.servlet">FilterConfig</A> <B>getFilterConfig</B>()</PRE>
<DL>
<DD>Make the FilterConfig of this filter available, if any.
 Analogous to GenericServlet's <code>getServletConfig()</code>.
 <p>Public to resemble the <code>getFilterConfig()</code> method
 of the Servlet Filter version that shipped with WebLogic 6.1.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the FilterConfig instance, or <code>null</code> if none available<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/GenericServlet.html?is-external=true#getServletConfig()" title="class or interface in javax.servlet"><CODE>GenericServlet.getServletConfig()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getFilterName()"><!-- --></A><H3>
getFilterName</H3>
<PRE>
protected final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getFilterName</B>()</PRE>
<DL>
<DD>Make the name of this filter available to subclasses.
 Analogous to GenericServlet's <code>getServletName()</code>.
 <p>Takes the FilterConfig's filter name by default.
 If initialized as bean in a Spring application context,
 it falls back to the bean name as defined in the bean factory.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the filter name, or <code>null</code> if none available<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/GenericServlet.html?is-external=true#getServletName()" title="class or interface in javax.servlet"><CODE>GenericServlet.getServletName()</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true#getFilterName()" title="class or interface in javax.servlet"><CODE>FilterConfig.getFilterName()</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#setBeanName(java.lang.String)"><CODE>setBeanName(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getServletContext()"><!-- --></A><H3>
getServletContext</H3>
<PRE>
protected final <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A> <B>getServletContext</B>()</PRE>
<DL>
<DD>Make the ServletContext of this filter available to subclasses.
 Analogous to GenericServlet's <code>getServletContext()</code>.
 <p>Takes the FilterConfig's ServletContext by default.
 If initialized as bean in a Spring application context,
 it falls back to the ServletContext that the bean factory runs in.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the ServletContext instance, or <code>null</code> if none available<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/GenericServlet.html?is-external=true#getServletContext()" title="class or interface in javax.servlet"><CODE>GenericServlet.getServletContext()</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/FilterConfig.html?is-external=true#getServletContext()" title="class or interface in javax.servlet"><CODE>FilterConfig.getServletContext()</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#setServletContext(javax.servlet.ServletContext)"><CODE>setServletContext(javax.servlet.ServletContext)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="initFilterBean()"><!-- --></A><H3>
initFilterBean</H3>
<PRE>
protected void <B>initFilterBean</B>()
                       throws <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></PRE>
<DL>
<DD>Subclasses may override this to perform custom initialization.
 All bean properties of this filter will have been set before this
 method is invoked.
 <p>Note: This method will be called from standard filter initialization
 as well as filter bean initialization in a Spring application context.
 Filter name and ServletContext will be available in both cases.
 <p>This default implementation is empty.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletException.html?is-external=true" title="class or interface in javax.servlet">ServletException</A></CODE> - if subclass initialization fails<DT><B>See Also:</B><DD><A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getFilterName()"><CODE>getFilterName()</CODE></A>, 
<A HREF="../../../../org/springframework/web/filter/GenericFilterBean.html#getServletContext()"><CODE>getServletContext()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="destroy()"><!-- --></A><H3>
destroy</H3>
<PRE>
public void <B>destroy</B>()</PRE>
<DL>
<DD>Subclasses may override this to perform custom filter shutdown.
 <p>Note: This method will be called from standard filter destruction
 as well as filter bean destruction in a Spring application context.
 <p>This default implementation is empty.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true#destroy()" title="class or interface in javax.servlet">destroy</A></CODE> in interface <CODE><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/Filter.html?is-external=true" title="class or interface in javax.servlet">Filter</A></CODE><DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html#destroy()">destroy</A></CODE> in interface <CODE><A HREF="../../../../org/springframework/beans/factory/DisposableBean.html" title="interface in org.springframework.beans.factory">DisposableBean</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/web/filter/HiddenHttpMethodFilter.html" title="class in org.springframework.web.filter"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/web/filter/GenericFilterBean.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="GenericFilterBean.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
