<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:25:15 BST 2010 -->
<TITLE>
AnnotationMethodHandlerAdapter
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="AnnotationMethodHandlerAdapter";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../index.html?org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AnnotationMethodHandlerAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.web.servlet.mvc.annotation</FONT>
<BR>
Class AnnotationMethodHandlerAdapter</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">org.springframework.context.support.ApplicationObjectSupport</A>
      <IMG SRC="../../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">org.springframework.web.context.support.WebApplicationObjectSupport</A>
          <IMG SRC="../../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">org.springframework.web.servlet.support.WebContentGenerator</A>
              <IMG SRC="../../../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A>, <A HREF="../../../../../../org/springframework/context/ApplicationContextAware.html" title="interface in org.springframework.context">ApplicationContextAware</A>, <A HREF="../../../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A>, <A HREF="../../../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A>, <A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet">HandlerAdapter</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>AnnotationMethodHandlerAdapter</B><DT>extends <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A><DT>implements <A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet">HandlerAdapter</A>, <A HREF="../../../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A>, <A HREF="../../../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A></DL>
</PRE>

<P>
Implementation of the <A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet"><CODE>HandlerAdapter</CODE></A> interface
 that maps handler methods based on HTTP paths, HTTP methods and request parameters
 expressed through the <A HREF="../../../../../../org/springframework/web/bind/annotation/RequestMapping.html" title="annotation in org.springframework.web.bind.annotation"><CODE>RequestMapping</CODE></A> annotation.

 <p>Supports request parameter binding through the <A HREF="../../../../../../org/springframework/web/bind/annotation/RequestParam.html" title="annotation in org.springframework.web.bind.annotation"><CODE>RequestParam</CODE></A> annotation.
 Also supports the <A HREF="../../../../../../org/springframework/web/bind/annotation/ModelAttribute.html" title="annotation in org.springframework.web.bind.annotation"><CODE>ModelAttribute</CODE></A> annotation for exposing model attribute
 values to the view, as well as <A HREF="../../../../../../org/springframework/web/bind/annotation/InitBinder.html" title="annotation in org.springframework.web.bind.annotation"><CODE>InitBinder</CODE></A> for binder initialization methods
 and <A HREF="../../../../../../org/springframework/web/bind/annotation/SessionAttributes.html" title="annotation in org.springframework.web.bind.annotation"><CODE>SessionAttributes</CODE></A> for automatic session management of specific attributes.

 <p>This adapter can be customized through various bean properties.
 A common use case is to apply shared binder initialization logic through
 a custom <A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)"><CODE>WebBindingInitializer</CODE></A>.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>2.5</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller, Arjen Poutsma</DD>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setPathMatcher(org.springframework.util.PathMatcher)"><CODE>setPathMatcher(org.springframework.util.PathMatcher)</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)"><CODE>setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)"><CODE>setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)"><CODE>setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#PAGE_NOT_FOUND_LOG_CATEGORY">PAGE_NOT_FOUND_LOG_CATEGORY</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log category to use when no mapped handler is found for a request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;<A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#pageNotFoundLogger">pageNotFoundLogger</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Additional logger to use when no mapped handler is found for a request.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.web.servlet.support.WebContentGenerator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.web.servlet.support.<A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_GET">METHOD_GET</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_HEAD">METHOD_HEAD</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_POST">METHOD_POST</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.context.support.<A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.core.Ordered"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.core.<A HREF="../../../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/core/Ordered.html#HIGHEST_PRECEDENCE">HIGHEST_PRECEDENCE</A>, <A HREF="../../../../../../org/springframework/core/Ordered.html#LOWEST_PRECEDENCE">LOWEST_PRECEDENCE</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#AnnotationMethodHandlerAdapter()">AnnotationMethodHandlerAdapter</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../org/springframework/web/bind/ServletRequestDataBinder.html" title="class in org.springframework.web.bind">ServletRequestDataBinder</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.String)">createBinder</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;target,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;objectName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template method for creating a new ServletRequestDataBinder instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../org/springframework/http/HttpInputMessage.html" title="interface in org.springframework.http">HttpInputMessage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createHttpInputMessage(javax.servlet.http.HttpServletRequest)">createHttpInputMessage</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;servletRequest)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template method for creating a new HttpInputMessage instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../org/springframework/http/HttpOutputMessage.html" title="interface in org.springframework.http">HttpOutputMessage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createHttpOutputMessage(javax.servlet.http.HttpServletResponse)">createHttpOutputMessage</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;servletResponse)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Template method for creating a new HttpOuputMessage instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;long</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#getLastModified(javax.servlet.http.HttpServletRequest, java.lang.Object)">getLastModified</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Same contract as for HttpServlet's <code>getLastModified</code> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>&lt;?&gt;[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#getMessageConverters()">getMessageConverters</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the message body converters that this adapter has been configured with.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#getOrder()">getOrder</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the order value of this object, with a
 higher value meaning greater in terms of sorting.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)">handle</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
       <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
       <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use the given handler to handle this request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)">invokeHandlerMethod</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setAlwaysUseFullPath(boolean)">setAlwaysUseFullPath</A></B>(boolean&nbsp;alwaysUseFullPath)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set if URL lookup should always use the full path within the current servlet
 context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">setBeanFactory</A></B>(<A HREF="../../../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>&nbsp;beanFactory)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback that supplies the owning factory to a bean instance.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setCacheSecondsForSessionAttributeHandlers(int)">setCacheSecondsForSessionAttributeHandlers</A></B>(int&nbsp;cacheSecondsForSessionAttributeHandlers)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cache content produced by <code>@SessionAttributes</code> annotated handlers
 for the given number of seconds.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)">setCustomArgumentResolver</A></B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>&nbsp;argumentResolver)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom WebArgumentResolvers to use for special method parameter types.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])">setCustomArgumentResolvers</A></B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>[]&nbsp;argumentResolvers)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set one or more custom WebArgumentResolvers to use for special method parameter types.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver)">setCustomModelAndViewResolver</A></B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>&nbsp;customModelAndViewResolver)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set a custom ModelAndViewResolvers to use for special method return types.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])">setCustomModelAndViewResolvers</A></B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>[]&nbsp;customModelAndViewResolvers)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set one or more custom ModelAndViewResolvers to use for special method return types.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])">setMessageConverters</A></B>(<A HREF="../../../../../../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>&lt;?&gt;[]&nbsp;messageConverters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the message body converters to use.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)">setMethodNameResolver</A></B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/multiaction/MethodNameResolver.html" title="interface in org.springframework.web.servlet.mvc.multiaction">MethodNameResolver</A>&nbsp;methodNameResolver)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the MethodNameResolver to use for resolving default handler methods
 (carrying an empty <code>@RequestMapping</code> annotation).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setOrder(int)">setOrder</A></B>(int&nbsp;order)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the order value for this HandlerAdapter bean.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)">setParameterNameDiscoverer</A></B>(<A HREF="../../../../../../org/springframework/core/ParameterNameDiscoverer.html" title="interface in org.springframework.core">ParameterNameDiscoverer</A>&nbsp;parameterNameDiscoverer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the ParameterNameDiscoverer to use for resolving method parameter names if needed
 (e.g.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setPathMatcher(org.springframework.util.PathMatcher)">setPathMatcher</A></B>(<A HREF="../../../../../../org/springframework/util/PathMatcher.html" title="interface in org.springframework.util">PathMatcher</A>&nbsp;pathMatcher)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the PathMatcher implementation to use for matching URL paths against registered URL patterns.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)">setSessionAttributeStore</A></B>(<A HREF="../../../../../../org/springframework/web/bind/support/SessionAttributeStore.html" title="interface in org.springframework.web.bind.support">SessionAttributeStore</A>&nbsp;sessionAttributeStore)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the strategy to store session attributes with.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setSynchronizeOnSession(boolean)">setSynchronizeOnSession</A></B>(boolean&nbsp;synchronizeOnSession)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set if controller execution should be synchronized on the session,
 to serialize parallel invocations from the same client.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setUrlDecode(boolean)">setUrlDecode</A></B>(boolean&nbsp;urlDecode)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set if context path and request URI should be URL-decoded.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setUrlPathHelper(org.springframework.web.util.UrlPathHelper)">setUrlPathHelper</A></B>(<A HREF="../../../../../../org/springframework/web/util/UrlPathHelper.html" title="class in org.springframework.web.util">UrlPathHelper</A>&nbsp;urlPathHelper)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the UrlPathHelper to use for resolution of lookup paths.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)">setWebBindingInitializer</A></B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebBindingInitializer.html" title="interface in org.springframework.web.bind.support">WebBindingInitializer</A>&nbsp;webBindingInitializer)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify a WebBindingInitializer which will apply pre-configured
 configuration to every DataBinder that this controller uses.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#supports(java.lang.Object)">supports</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Given a handler instance, return whether or not this HandlerAdapter can
 support it.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.support.WebContentGenerator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.support.<A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#applyCacheSeconds(javax.servlet.http.HttpServletResponse, int)">applyCacheSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#applyCacheSeconds(javax.servlet.http.HttpServletResponse, int, boolean)">applyCacheSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int)">cacheForSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int, boolean)">cacheForSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)">checkAndPrepare</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, boolean)">checkAndPrepare</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#getCacheSeconds()">getCacheSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#getSupportedMethods()">getSupportedMethods</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isRequireSession()">isRequireSession</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlHeader()">isUseCacheControlHeader</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlNoStore()">isUseCacheControlNoStore</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseExpiresHeader()">isUseExpiresHeader</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#preventCaching(javax.servlet.http.HttpServletResponse)">preventCaching</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setCacheSeconds(int)">setCacheSeconds</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setRequireSession(boolean)">setRequireSession</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setSupportedMethods(java.lang.String[])">setSupportedMethods</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseCacheControlHeader(boolean)">setUseCacheControlHeader</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseCacheControlNoStore(boolean)">setUseCacheControlNoStore</A>, <A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseExpiresHeader(boolean)">setUseExpiresHeader</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.context.support.WebApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.context.support.<A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getServletContext()">getServletContext</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getTempDir()">getTempDir</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getWebApplicationContext()">getWebApplicationContext</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initApplicationContext(org.springframework.context.ApplicationContext)">initApplicationContext</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initServletContext(javax.servlet.ServletContext)">initServletContext</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#isContextRequired()">isContextRequired</A>, <A HREF="../../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#setServletContext(javax.servlet.ServletContext)">setServletContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.context.support.<A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getApplicationContext()">getApplicationContext</A>, <A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getMessageSourceAccessor()">getMessageSourceAccessor</A>, <A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#initApplicationContext()">initApplicationContext</A>, <A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#requiredContextClass()">requiredContextClass</A>, <A HREF="../../../../../../org/springframework/context/support/ApplicationObjectSupport.html#setApplicationContext(org.springframework.context.ApplicationContext)">setApplicationContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="PAGE_NOT_FOUND_LOG_CATEGORY"><!-- --></A><H3>
PAGE_NOT_FOUND_LOG_CATEGORY</H3>
<PRE>
public static final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>PAGE_NOT_FOUND_LOG_CATEGORY</B></PRE>
<DL>
<DD>Log category to use when no mapped handler is found for a request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#pageNotFoundLogger"><CODE>pageNotFoundLogger</CODE></A>, 
<A HREF="../../../../../../constant-values.html#org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.PAGE_NOT_FOUND_LOG_CATEGORY">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="pageNotFoundLogger"><!-- --></A><H3>
pageNotFoundLogger</H3>
<PRE>
protected static final <A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging">Log</A> <B>pageNotFoundLogger</B></PRE>
<DL>
<DD>Additional logger to use when no mapped handler is found for a request.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#PAGE_NOT_FOUND_LOG_CATEGORY"><CODE>PAGE_NOT_FOUND_LOG_CATEGORY</CODE></A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="AnnotationMethodHandlerAdapter()"><!-- --></A><H3>
AnnotationMethodHandlerAdapter</H3>
<PRE>
public <B>AnnotationMethodHandlerAdapter</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setAlwaysUseFullPath(boolean)"><!-- --></A><H3>
setAlwaysUseFullPath</H3>
<PRE>
public void <B>setAlwaysUseFullPath</B>(boolean&nbsp;alwaysUseFullPath)</PRE>
<DL>
<DD>Set if URL lookup should always use the full path within the current servlet
 context. Else, the path within the current servlet mapping is used if applicable
 (that is, in the case of a ".../*" servlet mapping in web.xml).
 <p>Default is "false".
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/util/UrlPathHelper.html#setAlwaysUseFullPath(boolean)"><CODE>UrlPathHelper.setAlwaysUseFullPath(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setUrlDecode(boolean)"><!-- --></A><H3>
setUrlDecode</H3>
<PRE>
public void <B>setUrlDecode</B>(boolean&nbsp;urlDecode)</PRE>
<DL>
<DD>Set if context path and request URI should be URL-decoded. Both are returned
 <i>undecoded</i> by the Servlet API, in contrast to the servlet path.
 <p>Uses either the request encoding or the default encoding according
 to the Servlet spec (ISO-8859-1).
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/util/UrlPathHelper.html#setUrlDecode(boolean)"><CODE>UrlPathHelper.setUrlDecode(boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setUrlPathHelper(org.springframework.web.util.UrlPathHelper)"><!-- --></A><H3>
setUrlPathHelper</H3>
<PRE>
public void <B>setUrlPathHelper</B>(<A HREF="../../../../../../org/springframework/web/util/UrlPathHelper.html" title="class in org.springframework.web.util">UrlPathHelper</A>&nbsp;urlPathHelper)</PRE>
<DL>
<DD>Set the UrlPathHelper to use for resolution of lookup paths.
 <p>Use this to override the default UrlPathHelper with a custom subclass,
 or to share common UrlPathHelper settings across multiple HandlerMappings and HandlerAdapters.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPathMatcher(org.springframework.util.PathMatcher)"><!-- --></A><H3>
setPathMatcher</H3>
<PRE>
public void <B>setPathMatcher</B>(<A HREF="../../../../../../org/springframework/util/PathMatcher.html" title="interface in org.springframework.util">PathMatcher</A>&nbsp;pathMatcher)</PRE>
<DL>
<DD>Set the PathMatcher implementation to use for matching URL paths against registered URL patterns.
 <p>Default is <A HREF="../../../../../../org/springframework/util/AntPathMatcher.html" title="class in org.springframework.util"><CODE>AntPathMatcher</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)"><!-- --></A><H3>
setMethodNameResolver</H3>
<PRE>
public void <B>setMethodNameResolver</B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/multiaction/MethodNameResolver.html" title="interface in org.springframework.web.servlet.mvc.multiaction">MethodNameResolver</A>&nbsp;methodNameResolver)</PRE>
<DL>
<DD>Set the MethodNameResolver to use for resolving default handler methods
 (carrying an empty <code>@RequestMapping</code> annotation).
 <p>Will only kick in when the handler method cannot be resolved uniquely
 through the annotation metadata already.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)"><!-- --></A><H3>
setWebBindingInitializer</H3>
<PRE>
public void <B>setWebBindingInitializer</B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebBindingInitializer.html" title="interface in org.springframework.web.bind.support">WebBindingInitializer</A>&nbsp;webBindingInitializer)</PRE>
<DL>
<DD>Specify a WebBindingInitializer which will apply pre-configured
 configuration to every DataBinder that this controller uses.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)"><!-- --></A><H3>
setSessionAttributeStore</H3>
<PRE>
public void <B>setSessionAttributeStore</B>(<A HREF="../../../../../../org/springframework/web/bind/support/SessionAttributeStore.html" title="interface in org.springframework.web.bind.support">SessionAttributeStore</A>&nbsp;sessionAttributeStore)</PRE>
<DL>
<DD>Specify the strategy to store session attributes with.
 <p>Default is <A HREF="../../../../../../org/springframework/web/bind/support/DefaultSessionAttributeStore.html" title="class in org.springframework.web.bind.support"><CODE>DefaultSessionAttributeStore</CODE></A>,
 storing session attributes in the HttpSession, using the same attribute name as in the model.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCacheSecondsForSessionAttributeHandlers(int)"><!-- --></A><H3>
setCacheSecondsForSessionAttributeHandlers</H3>
<PRE>
public void <B>setCacheSecondsForSessionAttributeHandlers</B>(int&nbsp;cacheSecondsForSessionAttributeHandlers)</PRE>
<DL>
<DD>Cache content produced by <code>@SessionAttributes</code> annotated handlers
 for the given number of seconds. Default is 0, preventing caching completely.
 <p>In contrast to the "cacheSeconds" property which will apply to all general handlers
 (but not to <code>@SessionAttributes</code> annotated handlers), this setting will
 apply to <code>@SessionAttributes</code> annotated handlers only.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setCacheSeconds(int)"><CODE>WebContentGenerator.setCacheSeconds(int)</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/bind/annotation/SessionAttributes.html" title="annotation in org.springframework.web.bind.annotation"><CODE>SessionAttributes</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSynchronizeOnSession(boolean)"><!-- --></A><H3>
setSynchronizeOnSession</H3>
<PRE>
public void <B>setSynchronizeOnSession</B>(boolean&nbsp;synchronizeOnSession)</PRE>
<DL>
<DD>Set if controller execution should be synchronized on the session,
 to serialize parallel invocations from the same client.
 <p>More specifically, the execution of the <code>handleRequestInternal</code>
 method will get synchronized if this flag is "true". The best available
 session mutex will be used for the synchronization; ideally, this will
 be a mutex exposed by HttpSessionMutexListener.
 <p>The session mutex is guaranteed to be the same object during
 the entire lifetime of the session, available under the key defined
 by the <code>SESSION_MUTEX_ATTRIBUTE</code> constant. It serves as a
 safe reference to synchronize on for locking on the current session.
 <p>In many cases, the HttpSession reference itself is a safe mutex
 as well, since it will always be the same object reference for the
 same active logical session. However, this is not guaranteed across
 different servlet containers; the only 100% safe way is a session mutex.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/util/HttpSessionMutexListener.html" title="class in org.springframework.web.util"><CODE>HttpSessionMutexListener</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/util/WebUtils.html#getSessionMutex(javax.servlet.http.HttpSession)"><CODE>WebUtils.getSessionMutex(javax.servlet.http.HttpSession)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)"><!-- --></A><H3>
setParameterNameDiscoverer</H3>
<PRE>
public void <B>setParameterNameDiscoverer</B>(<A HREF="../../../../../../org/springframework/core/ParameterNameDiscoverer.html" title="interface in org.springframework.core">ParameterNameDiscoverer</A>&nbsp;parameterNameDiscoverer)</PRE>
<DL>
<DD>Set the ParameterNameDiscoverer to use for resolving method parameter names if needed
 (e.g. for default attribute names).
 <p>Default is a <A HREF="../../../../../../org/springframework/core/LocalVariableTableParameterNameDiscoverer.html" title="class in org.springframework.core"><CODE>LocalVariableTableParameterNameDiscoverer</CODE></A>.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)"><!-- --></A><H3>
setCustomArgumentResolver</H3>
<PRE>
public void <B>setCustomArgumentResolver</B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>&nbsp;argumentResolver)</PRE>
<DL>
<DD>Set a custom WebArgumentResolvers to use for special method parameter types.
 <p>Such a custom WebArgumentResolver will kick in first, having a chance to resolve
 an argument value before the standard argument handling kicks in.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])"><!-- --></A><H3>
setCustomArgumentResolvers</H3>
<PRE>
public void <B>setCustomArgumentResolvers</B>(<A HREF="../../../../../../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>[]&nbsp;argumentResolvers)</PRE>
<DL>
<DD>Set one or more custom WebArgumentResolvers to use for special method parameter types.
 <p>Any such custom WebArgumentResolver will kick in first, having a chance to resolve
 an argument value before the standard argument handling kicks in.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver)"><!-- --></A><H3>
setCustomModelAndViewResolver</H3>
<PRE>
public void <B>setCustomModelAndViewResolver</B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>&nbsp;customModelAndViewResolver)</PRE>
<DL>
<DD>Set a custom ModelAndViewResolvers to use for special method return types.
 <p>Such a custom ModelAndViewResolver will kick in first, having a chance to resolve
 a return value before the standard ModelAndView handling kicks in.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])"><!-- --></A><H3>
setCustomModelAndViewResolvers</H3>
<PRE>
public void <B>setCustomModelAndViewResolvers</B>(<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>[]&nbsp;customModelAndViewResolvers)</PRE>
<DL>
<DD>Set one or more custom ModelAndViewResolvers to use for special method return types.
 <p>Any such custom ModelAndViewResolver will kick in first, having a chance to resolve
 a return value before the standard ModelAndView handling kicks in.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])"><!-- --></A><H3>
setMessageConverters</H3>
<PRE>
public void <B>setMessageConverters</B>(<A HREF="../../../../../../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>&lt;?&gt;[]&nbsp;messageConverters)</PRE>
<DL>
<DD>Set the message body converters to use.
 <p>These converters are used to convert from and to HTTP requests and responses.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getMessageConverters()"><!-- --></A><H3>
getMessageConverters</H3>
<PRE>
public <A HREF="../../../../../../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>&lt;?&gt;[] <B>getMessageConverters</B>()</PRE>
<DL>
<DD>Return the message body converters that this adapter has been configured with.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setOrder(int)"><!-- --></A><H3>
setOrder</H3>
<PRE>
public void <B>setOrder</B>(int&nbsp;order)</PRE>
<DL>
<DD>Specify the order value for this HandlerAdapter bean.
 <p>Default value is <code>Integer.MAX_VALUE</code>, meaning that it's non-ordered.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/core/Ordered.html#getOrder()"><CODE>Ordered.getOrder()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getOrder()"><!-- --></A><H3>
getOrder</H3>
<PRE>
public int <B>getOrder</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../../org/springframework/core/Ordered.html#getOrder()">Ordered</A></CODE></B></DD>
<DD>Return the order value of this object, with a
 higher value meaning greater in terms of sorting.
 <p>Normally starting with 0, with <code>Integer.MAX_VALUE</code>
 indicating the greatest value. Same order values will result
 in arbitrary positions for the affected objects.
 <p>Higher values can be interpreted as lower priority. As a
 consequence, the object with the lowest value has highest priority
 (somewhat analogous to Servlet "load-on-startup" values).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../org/springframework/core/Ordered.html#getOrder()">getOrder</A></CODE> in interface <CODE><A HREF="../../../../../../org/springframework/core/Ordered.html" title="interface in org.springframework.core">Ordered</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the order value</DL>
</DD>
</DL>
<HR>

<A NAME="setBeanFactory(org.springframework.beans.factory.BeanFactory)"><!-- --></A><H3>
setBeanFactory</H3>
<PRE>
public void <B>setBeanFactory</B>(<A HREF="../../../../../../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>&nbsp;beanFactory)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../../org/springframework/beans/factory/BeanFactoryAware.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">BeanFactoryAware</A></CODE></B></DD>
<DD>Callback that supplies the owning factory to a bean instance.
 <p>Invoked after the population of normal bean properties
 but before an initialization callback such as
 <A HREF="../../../../../../org/springframework/beans/factory/InitializingBean.html#afterPropertiesSet()"><CODE>InitializingBean.afterPropertiesSet()</CODE></A> or a custom init-method.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../org/springframework/beans/factory/BeanFactoryAware.html#setBeanFactory(org.springframework.beans.factory.BeanFactory)">setBeanFactory</A></CODE> in interface <CODE><A HREF="../../../../../../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory">BeanFactoryAware</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>beanFactory</CODE> - owning BeanFactory (never <code>null</code>).
 The bean can immediately call methods on the factory.<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory"><CODE>BeanInitializationException</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="supports(java.lang.Object)"><!-- --></A><H3>
supports</H3>
<PRE>
public boolean <B>supports</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#supports(java.lang.Object)">HandlerAdapter</A></CODE></B></DD>
<DD>Given a handler instance, return whether or not this HandlerAdapter can
 support it. Typical HandlerAdapters will base the decision on the handler
 type. HandlerAdapters will usually only support one handler type each.
 <p>A typical implementation:
 <p><code>
 return (handler instanceof MyHandler);
 </code>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#supports(java.lang.Object)">supports</A></CODE> in interface <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet">HandlerAdapter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>handler</CODE> - handler object to check
<DT><B>Returns:</B><DD>whether or not this object can use the given handler</DL>
</DD>
</DL>
<HR>

<A NAME="handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)"><!-- --></A><H3>
handle</H3>
<PRE>
public <A HREF="../../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>handle</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                           <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)
                    throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)">HandlerAdapter</A></CODE></B></DD>
<DD>Use the given handler to handle this request.
 The workflow that is required may vary widely.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)">handle</A></CODE> in interface <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet">HandlerAdapter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>response</CODE> - current HTTP response<DD><CODE>handler</CODE> - handler to use. This object must have previously been passed
 to the <code>supports</code> method of this interface, which must have
 returned <code>true</code>.
<DT><B>Returns:</B><DD>ModelAndView object with the name of the view and the required
 model data, or <code>null</code> if the request has been handled directly
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors</DL>
</DD>
</DL>
<HR>

<A NAME="invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)"><!-- --></A><H3>
invokeHandlerMethod</H3>
<PRE>
protected <A HREF="../../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>invokeHandlerMethod</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                           <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                                           <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)
                                    throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getLastModified(javax.servlet.http.HttpServletRequest, java.lang.Object)"><!-- --></A><H3>
getLastModified</H3>
<PRE>
public long <B>getLastModified</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;handler)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#getLastModified(javax.servlet.http.HttpServletRequest, java.lang.Object)">HandlerAdapter</A></CODE></B></DD>
<DD>Same contract as for HttpServlet's <code>getLastModified</code> method.
 Can simply return -1 if there's no support in the handler class.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html#getLastModified(javax.servlet.http.HttpServletRequest, java.lang.Object)">getLastModified</A></CODE> in interface <CODE><A HREF="../../../../../../org/springframework/web/servlet/HandlerAdapter.html" title="interface in org.springframework.web.servlet">HandlerAdapter</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>handler</CODE> - handler to use
<DT><B>Returns:</B><DD>the lastModified value for the given handler<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServlet.html?is-external=true#getLastModified(javax.servlet.http.HttpServletRequest)" title="class or interface in javax.servlet.http"><CODE>HttpServlet.getLastModified(javax.servlet.http.HttpServletRequest)</CODE></A>, 
<A HREF="../../../../../../org/springframework/web/servlet/mvc/LastModified.html#getLastModified(javax.servlet.http.HttpServletRequest)"><CODE>LastModified.getLastModified(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.String)"><!-- --></A><H3>
createBinder</H3>
<PRE>
protected <A HREF="../../../../../../org/springframework/web/bind/ServletRequestDataBinder.html" title="class in org.springframework.web.bind">ServletRequestDataBinder</A> <B>createBinder</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;target,
                                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;objectName)
                                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Template method for creating a new ServletRequestDataBinder instance.
 <p>The default implementation creates a standard ServletRequestDataBinder.
 This can be overridden for custom ServletRequestDataBinder subclasses.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>target</CODE> - the target object to bind onto (or <code>null</code>
 if the binder is just used to convert a plain parameter value)<DD><CODE>objectName</CODE> - the objectName of the target object
<DT><B>Returns:</B><DD>the ServletRequestDataBinder instance to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of invalid state or arguments<DT><B>See Also:</B><DD><A HREF="../../../../../../org/springframework/web/bind/ServletRequestDataBinder.html#bind(javax.servlet.ServletRequest)"><CODE>ServletRequestDataBinder.bind(javax.servlet.ServletRequest)</CODE></A>, 
<A HREF="../../../../../../org/springframework/validation/DataBinder.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><CODE>DataBinder.convertIfNecessary(Object, Class, org.springframework.core.MethodParameter)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createHttpInputMessage(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
createHttpInputMessage</H3>
<PRE>
protected <A HREF="../../../../../../org/springframework/http/HttpInputMessage.html" title="interface in org.springframework.http">HttpInputMessage</A> <B>createHttpInputMessage</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;servletRequest)
                                           throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Template method for creating a new HttpInputMessage instance.
 <p>The default implementation creates a standard <A HREF="../../../../../../org/springframework/http/server/ServletServerHttpRequest.html" title="class in org.springframework.http.server"><CODE>ServletServerHttpRequest</CODE></A>.
 This can be overridden for custom <code>HttpInputMessage</code> implementations
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>servletRequest</CODE> - current HTTP request
<DT><B>Returns:</B><DD>the HttpInputMessage instance to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors</DL>
</DD>
</DL>
<HR>

<A NAME="createHttpOutputMessage(javax.servlet.http.HttpServletResponse)"><!-- --></A><H3>
createHttpOutputMessage</H3>
<PRE>
protected <A HREF="../../../../../../org/springframework/http/HttpOutputMessage.html" title="interface in org.springframework.http">HttpOutputMessage</A> <B>createHttpOutputMessage</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;servletResponse)
                                             throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Template method for creating a new HttpOuputMessage instance.
 <p>The default implementation creates a standard <A HREF="../../../../../../org/springframework/http/server/ServletServerHttpResponse.html" title="class in org.springframework.http.server"><CODE>ServletServerHttpResponse</CODE></A>.
 This can be overridden for custom <code>HttpOutputMessage</code> implementations
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>servletResponse</CODE> - current HTTP response
<DT><B>Returns:</B><DD>the HttpInputMessage instance to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../../../../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../../index.html?org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="AnnotationMethodHandlerAdapter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
