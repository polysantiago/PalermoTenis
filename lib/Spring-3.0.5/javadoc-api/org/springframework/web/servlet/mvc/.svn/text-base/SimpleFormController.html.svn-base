<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:25:15 BST 2010 -->
<TITLE>
SimpleFormController
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SimpleFormController";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/mvc/UrlFilenameViewController.html" title="class in org.springframework.web.servlet.mvc"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/web/servlet/mvc/SimpleFormController.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SimpleFormController.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.web.servlet.mvc.BaseCommandController">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.web.servlet.mvc</FONT>
<BR>
Class SimpleFormController</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">org.springframework.context.support.ApplicationObjectSupport</A>
      <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">org.springframework.web.context.support.WebApplicationObjectSupport</A>
          <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">org.springframework.web.servlet.support.WebContentGenerator</A>
              <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractController.html" title="class in org.springframework.web.servlet.mvc">org.springframework.web.servlet.mvc.AbstractController</A>
                  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">org.springframework.web.servlet.mvc.BaseCommandController</A>
                      <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">org.springframework.web.servlet.mvc.AbstractFormController</A>
                          <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.web.servlet.mvc.SimpleFormController</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../../org/springframework/context/ApplicationContextAware.html" title="interface in org.springframework.context">ApplicationContextAware</A>, <A HREF="../../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/Controller.html" title="interface in org.springframework.web.servlet.mvc">Controller</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../../org/springframework/web/servlet/mvc/CancellableFormController.html" title="class in org.springframework.web.servlet.mvc">CancellableFormController</A></DD>
</DL>
<HR>
<B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of annotated controllers</I>
<P>
<DL>
<DT><PRE><FONT SIZE="-1"><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Deprecated.html?is-external=true" title="class or interface in java.lang">@Deprecated</A>
</FONT>public class <B>SimpleFormController</B><DT>extends <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A></DL>
</PRE>

<P>
<p>Concrete FormController implementation that provides configurable
 form and success views, and an onSubmit chain for convenient overriding.
 Automatically resubmits to the form view in case of validation errors,
 and renders the success view in case of a valid submission.</p>

 <p>The workflow of this Controller does not differ much from the one described
 in the <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc"><CODE>AbstractFormController</CODE></A>. The difference
 is that you do not need to implement <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm</CODE></A> and
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>processFormSubmission</CODE></A>: A form view and a
 success view can be configured declaratively.</p>

 <p><b><a name="workflow">Workflow
 (<a href="AbstractFormController.html#workflow">in addition to the superclass</a>):</b><br>
 <ol>
  <li>Call to <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>processFormSubmission</CODE></A> which inspects
      the <A HREF="../../../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A> object to see if
      any errors have occurred during binding and validation.</li>
  <li>If errors occured, the controller will return the configured formView,
      showing the form again (possibly rendering according error messages).</li>
  <li>If <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest</CODE></A> is overridden and returns
      true for the given request, the controller will return the formView too.
      In that case, the controller will also suppress validation. Before returning the formView,
      the controller will invoke <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</CODE></A>, giving sub-classes a chance
      to make modification to the command object.
      This is intended for requests that change the structure of the form,
      which should not cause validation and show the form in any case.</li>
  <li>If no errors occurred, the controller will call
      <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit</CODE></A>
      using all parameters, which in case of the default implementation delegates to
      <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit</CODE></A> with just the command object.
      The default implementation of the latter method will return the configured
      <code>successView</code>. Consider implementing <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(java.lang.Object)</CODE></A> doSubmitAction
      for simply performing a submit action and rendering the success view.</li>
  </ol>
 </p>

 <p>The submit behavior can be customized by overriding one of the
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit</CODE></A> methods. Submit actions can also perform
 custom validation if necessary (typically database-driven checks), calling
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm</CODE></A>
 in case of validation errors to show the form view again.</p>

 <p><b><a name="config">Exposed configuration properties</a>
 (<a href="AbstractFormController.html#config">and those defined by superclass</a>):</b><br>
 <table border="1">
  <tr>
      <td><b>name</b></td>
      <td><b>default</b></td>
      <td><b>description</b></td>
  </tr>
  <tr>
      <td>formView</td>
      <td><i>null</i></td>
      <td>Indicates what view to use when the user asks for a new form
          or when validation errors have occurred on form submission.</td>
  </tr>
  <tr>
      <td>successView</td>
      <td><i>null</i></td>
      <td>Indicates what view to use when successful form submissions have
          occurred. Such a success view could e.g. display a submission summary.
          More sophisticated actions can be implemented by overriding one of
          the <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit()</CODE></A> methods.</td>
  </tr>
 <table>
 </p>
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>05.05.2003</DD>
<DT><B>Author:</B></DT>
  <DD>Juergen Hoeller, Rob Harrop</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.web.servlet.mvc.BaseCommandController"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.web.servlet.mvc.<A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#DEFAULT_COMMAND_NAME">DEFAULT_COMMAND_NAME</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.web.servlet.support.WebContentGenerator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.web.servlet.support.<A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_GET">METHOD_GET</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_HEAD">METHOD_HEAD</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#METHOD_POST">METHOD_POST</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.context.support.<A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#SimpleFormController()">SimpleFormController</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Create a new SimpleFormController.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)">doSubmitAction</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Template method for submit actions.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#getFormView()">getFormView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Return the name of the view that should be used for form display.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#getSuccessView()">getSuccessView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Return the name of the view that should be shown on successful submit.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)">isFormChangeRequest</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Simpler <code>isFormChangeRequest</code> variant, called by the full
 variant <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest(HttpServletRequest, Object)</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)">isFormChangeRequest</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                    <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Determine whether the given request is a form change request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)">onFormChange</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
             <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Simpler <code>onFormChange</code> variant, called by the full variant
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onFormChange(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)">onFormChange</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
             <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
             <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Called during form submission if
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><CODE>isFormChangeRequest(javax.servlet.http.HttpServletRequest)</CODE></A>
 returns <code>true</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)">onSubmit</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
         <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
         <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Submit callback with all parameters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)">onSubmit</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Simplest <code>onSubmit</code> variant.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)">onSubmit</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
         <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Simpler <code>onSubmit</code> variant.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)">processFormSubmission</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                      <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                      <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;This implementation calls
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException)</CODE></A>
 in case of errors, and delegates to the full
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>'s
 variant else.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest)">referenceData</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Create a reference data map for the given request.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)">referenceData</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
              <A HREF="../../../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Create a reference data map for the given request and command,
 consisting of bean name/bean instance pairs as expected by ModelAndView.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setFormView(java.lang.String)">setFormView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;formView)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Set the name of the view that should be used for form display.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setSuccessView(java.lang.String)">setSuccessView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;successView)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;Set the name of the view that should be shown on successful submit.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)">showForm</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
         <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
         <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;This implementation shows the configured form view, delegating to the analogous
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException, Map)</CODE></A>
 variant with a "controlModel" argument.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)">showForm</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
         <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
         <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;controlModel)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;This implementation shows the configured form view.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)">suppressValidation</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                   <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>Deprecated.</B>&nbsp;This implementation delegates to <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest(HttpServletRequest, Object)</CODE></A>:
 A form change request changes the appearance of the form and should not get
 validated but just show the new form.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.mvc.AbstractFormController"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.mvc.<A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#currentFormObject(javax.servlet.http.HttpServletRequest, java.lang.Object)">currentFormObject</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#formBackingObject(javax.servlet.http.HttpServletRequest)">formBackingObject</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#getCommand(javax.servlet.http.HttpServletRequest)">getCommand</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#getErrorsForNewForm(javax.servlet.http.HttpServletRequest)">getErrorsForNewForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#getFormSessionAttributeName()">getFormSessionAttributeName</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#getFormSessionAttributeName(javax.servlet.http.HttpServletRequest)">getFormSessionAttributeName</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#handleInvalidSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">handleInvalidSubmit</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">handleRequestInternal</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#isBindOnNewForm()">isBindOnNewForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#isFormSubmission(javax.servlet.http.HttpServletRequest)">isFormSubmission</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#isSessionForm()">isSessionForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#onBindOnNewForm(javax.servlet.http.HttpServletRequest, java.lang.Object)">onBindOnNewForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#onBindOnNewForm(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.BindException)">onBindOnNewForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#setBindOnNewForm(boolean)">setBindOnNewForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#setSessionForm(boolean)">setSessionForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#showForm(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, java.lang.String)">showForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#showForm(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, java.lang.String, java.util.Map)">showForm</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#showNewForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">showNewForm</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.mvc.BaseCommandController"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.mvc.<A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#bindAndValidate(javax.servlet.http.HttpServletRequest, java.lang.Object)">bindAndValidate</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#checkCommand(java.lang.Object)">checkCommand</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object)">createBinder</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#createCommand()">createCommand</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getBindingErrorProcessor()">getBindingErrorProcessor</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getCommandClass()">getCommandClass</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getCommandName()">getCommandName</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getMessageCodesResolver()">getMessageCodesResolver</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getPropertyEditorRegistrars()">getPropertyEditorRegistrars</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getValidator()">getValidator</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getValidators()">getValidators</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#getWebBindingInitializer()">getWebBindingInitializer</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#initApplicationContext()">initApplicationContext</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#initBinder(javax.servlet.http.HttpServletRequest, org.springframework.web.bind.ServletRequestDataBinder)">initBinder</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#isValidateOnBinding()">isValidateOnBinding</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#onBind(javax.servlet.http.HttpServletRequest, java.lang.Object)">onBind</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#onBind(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.BindException)">onBind</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#onBindAndValidate(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.BindException)">onBindAndValidate</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#prepareBinder(org.springframework.web.bind.ServletRequestDataBinder)">prepareBinder</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)">setBindingErrorProcessor</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setCommandClass(java.lang.Class)">setCommandClass</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setCommandName(java.lang.String)">setCommandName</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)">setMessageCodesResolver</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)">setPropertyEditorRegistrar</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])">setPropertyEditorRegistrars</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setValidateOnBinding(boolean)">setValidateOnBinding</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setValidator(org.springframework.validation.Validator)">setValidator</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setValidators(org.springframework.validation.Validator[])">setValidators</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)">setWebBindingInitializer</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#suppressBinding(javax.servlet.http.HttpServletRequest)">suppressBinding</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#suppressValidation(javax.servlet.http.HttpServletRequest)">suppressValidation</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.BindException)">suppressValidation</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#useDirectFieldAccess()">useDirectFieldAccess</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.mvc.AbstractController"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.mvc.<A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractController.html" title="class in org.springframework.web.servlet.mvc">AbstractController</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractController.html#handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">handleRequest</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractController.html#isSynchronizeOnSession()">isSynchronizeOnSession</A>, <A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractController.html#setSynchronizeOnSession(boolean)">setSynchronizeOnSession</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.support.WebContentGenerator"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.support.<A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#applyCacheSeconds(javax.servlet.http.HttpServletResponse, int)">applyCacheSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#applyCacheSeconds(javax.servlet.http.HttpServletResponse, int, boolean)">applyCacheSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int)">cacheForSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int, boolean)">cacheForSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)">checkAndPrepare</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, boolean)">checkAndPrepare</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#getCacheSeconds()">getCacheSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#getSupportedMethods()">getSupportedMethods</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isRequireSession()">isRequireSession</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlHeader()">isUseCacheControlHeader</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlNoStore()">isUseCacheControlNoStore</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#isUseExpiresHeader()">isUseExpiresHeader</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#preventCaching(javax.servlet.http.HttpServletResponse)">preventCaching</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setCacheSeconds(int)">setCacheSeconds</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setRequireSession(boolean)">setRequireSession</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setSupportedMethods(java.lang.String[])">setSupportedMethods</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseCacheControlHeader(boolean)">setUseCacheControlHeader</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseCacheControlNoStore(boolean)">setUseCacheControlNoStore</A>, <A HREF="../../../../../org/springframework/web/servlet/support/WebContentGenerator.html#setUseExpiresHeader(boolean)">setUseExpiresHeader</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.context.support.WebApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.context.support.<A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getServletContext()">getServletContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getTempDir()">getTempDir</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getWebApplicationContext()">getWebApplicationContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initApplicationContext(org.springframework.context.ApplicationContext)">initApplicationContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initServletContext(javax.servlet.ServletContext)">initServletContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#isContextRequired()">isContextRequired</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#setServletContext(javax.servlet.ServletContext)">setServletContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.context.support.<A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getApplicationContext()">getApplicationContext</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getMessageSourceAccessor()">getMessageSourceAccessor</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#requiredContextClass()">requiredContextClass</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#setApplicationContext(org.springframework.context.ApplicationContext)">setApplicationContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="SimpleFormController()"><!-- --></A><H3>
SimpleFormController</H3>
<PRE>
public <B>SimpleFormController</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Create a new SimpleFormController.
 <p>Subclasses should set the following properties, either in the constructor
 or via a BeanFactory: commandName, commandClass, sessionForm, formView,
 successView. Note that commandClass doesn't need to be set when overriding
 <code>formBackingObject</code>, as this determines the class anyway.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setCommandClass(java.lang.Class)"><CODE>BaseCommandController.setCommandClass(java.lang.Class)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#setCommandName(java.lang.String)"><CODE>BaseCommandController.setCommandName(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#setSessionForm(boolean)"><CODE>AbstractFormController.setSessionForm(boolean)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setFormView(java.lang.String)"><CODE>setFormView(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setSuccessView(java.lang.String)"><CODE>setSuccessView(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#formBackingObject(javax.servlet.http.HttpServletRequest)"><CODE>AbstractFormController.formBackingObject(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setFormView(java.lang.String)"><!-- --></A><H3>
setFormView</H3>
<PRE>
public final void <B>setFormView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;formView)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Set the name of the view that should be used for form display.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getFormView()"><!-- --></A><H3>
getFormView</H3>
<PRE>
public final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getFormView</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Return the name of the view that should be used for form display.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSuccessView(java.lang.String)"><!-- --></A><H3>
setSuccessView</H3>
<PRE>
public final void <B>setSuccessView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;successView)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Set the name of the view that should be shown on successful submit.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSuccessView()"><!-- --></A><H3>
getSuccessView</H3>
<PRE>
public final <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getSuccessView</B>()</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Return the name of the view that should be shown on successful submit.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><!-- --></A><H3>
showForm</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>showForm</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                                <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)
                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>This implementation shows the configured form view, delegating to the analogous
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException, Map)</CODE></A>
 variant with a "controlModel" argument.
 <p>Can be called within
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>
 implementations, to redirect back to the form in case of custom validation errors
 (errors not determined by the validator).
 <p>Can be overridden in subclasses to show a custom view, writing directly
 to the response or preparing the response before rendering a view.
 <p>If calling showForm with a custom control model in subclasses, it's preferable
 to override the analogous showForm version with a controlModel argument
 (which will handle both standard form showing and custom form showing then).
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)">showForm</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>response</CODE> - current HTTP response<DD><CODE>errors</CODE> - validation errors holder
<DT><B>Returns:</B><DD>the prepared form view, or <code>null</code> if handled directly
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of invalid state or arguments<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setFormView(java.lang.String)"><CODE>setFormView(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException, Map)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException, java.util.Map)"><!-- --></A><H3>
showForm</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>showForm</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                                <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&nbsp;controlModel)
                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>This implementation shows the configured form view.
 <p>Can be called within
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>
 implementations, to redirect back to the form in case of custom validation errors
 (errors not determined by the validator).
 <p>Can be overridden in subclasses to show a custom view, writing directly
 to the response or preparing the response before rendering a view.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>errors</CODE> - validation errors holder<DD><CODE>controlModel</CODE> - model map containing controller-specific control data
 (e.g. current page in wizard-style controllers or special error message)
<DT><B>Returns:</B><DD>the prepared form view
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of invalid state or arguments<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setFormView(java.lang.String)"><CODE>setFormView(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><!-- --></A><H3>
referenceData</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A> <B>referenceData</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                            <A HREF="../../../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>&nbsp;errors)
                     throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Create a reference data map for the given request and command,
 consisting of bean name/bean instance pairs as expected by ModelAndView.
 <p>The default implementation delegates to <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest)"><CODE>referenceData(HttpServletRequest)</CODE></A>.
 Subclasses can override this to set reference data used in the view.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)">referenceData</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>command</CODE> - form object with request parameters bound onto it<DD><CODE>errors</CODE> - validation errors holder
<DT><B>Returns:</B><DD>a Map with reference data entries, or <code>null</code> if none
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of invalid state or arguments<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet"><CODE>ModelAndView</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="referenceData(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
referenceData</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A> <B>referenceData</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)
                     throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Create a reference data map for the given request.
 Called by the <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><CODE>referenceData(HttpServletRequest, Object, Errors)</CODE></A>
 variant with all parameters.
 <p>The default implementation returns <code>null</code>.
 Subclasses can override this to set reference data used in the view.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request
<DT><B>Returns:</B><DD>a Map with reference data entries, or <code>null</code> if none
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of invalid state or arguments<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><CODE>referenceData(HttpServletRequest, Object, Errors)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet"><CODE>ModelAndView</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><!-- --></A><H3>
processFormSubmission</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>processFormSubmission</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                             <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                                             <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                                             <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)
                                      throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>This implementation calls
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException)</CODE></A>
 in case of errors, and delegates to the full
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>'s
 variant else.
 <p>This can only be overridden to check for an action that should be executed
 without respect to binding errors, like a cancel action. To just handle successful
 submissions without binding errors, override one of the <code>onSubmit</code>
 methods or <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(java.lang.Object)</CODE></A>.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)">processFormSubmission</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current servlet request<DD><CODE>response</CODE> - current servlet response<DD><CODE>command</CODE> - form object with request parameters bound onto it<DD><CODE>errors</CODE> - holder without errors (subclass can add errors if it wants to)
<DT><B>Returns:</B><DD>the prepared model and view, or <code>null</code>
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm(HttpServletRequest, HttpServletResponse, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit(Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(Object)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)"><!-- --></A><H3>
suppressValidation</H3>
<PRE>
protected boolean <B>suppressValidation</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>This implementation delegates to <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest(HttpServletRequest, Object)</CODE></A>:
 A form change request changes the appearance of the form and should not get
 validated but just show the new form.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)">suppressValidation</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>command</CODE> - the command object to validate
<DT><B>Returns:</B><DD>whether to suppress validation for the given request<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><!-- --></A><H3>
isFormChangeRequest</H3>
<PRE>
protected boolean <B>isFormChangeRequest</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                      <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Determine whether the given request is a form change request.
 A form change request changes the appearance of the form
 and should always show the new form, without validation.
 <p>Gets called by <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</CODE></A> and <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</CODE></A>.
 Consequently, this single method determines to suppress validation
 <i>and</i> to show the form view in any case.
 <p>The default implementation delegates to
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><CODE>isFormChangeRequest(javax.servlet.http.HttpServletRequest)</CODE></A>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>command</CODE> - form object with request parameters bound onto it
<DT><B>Returns:</B><DD>whether the given request is a form change request<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
isFormChangeRequest</H3>
<PRE>
protected boolean <B>isFormChangeRequest</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Simpler <code>isFormChangeRequest</code> variant, called by the full
 variant <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>isFormChangeRequest(HttpServletRequest, Object)</CODE></A>.
 <p>The default implementation returns <code>false</code.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request
<DT><B>Returns:</B><DD>whether the given request is a form change request<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>suppressValidation(javax.servlet.http.HttpServletRequest, java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><!-- --></A><H3>
onFormChange</H3>
<PRE>
protected void <B>onFormChange</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                            <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                            <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)
                     throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Called during form submission if
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><CODE>isFormChangeRequest(javax.servlet.http.HttpServletRequest)</CODE></A>
 returns <code>true</code>. Allows subclasses to implement custom logic
 to modify the command object to directly modify data in the form.
 <p>The default implementation delegates to
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onFormChange(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current servlet request<DD><CODE>response</CODE> - current servlet response<DD><CODE>command</CODE> - form object with request parameters bound onto it<DD><CODE>errors</CODE> - validation errors holder, allowing for additional
 custom validation
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><CODE>isFormChangeRequest(HttpServletRequest)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)"><CODE>onFormChange(HttpServletRequest, HttpServletResponse, Object)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)"><!-- --></A><H3>
onFormChange</H3>
<PRE>
protected void <B>onFormChange</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                            <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                            <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)
                     throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Simpler <code>onFormChange</code> variant, called by the full variant
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onFormChange(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>.
 <p>The default implementation is empty.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current servlet request<DD><CODE>response</CODE> - current servlet response<DD><CODE>command</CODE> - form object with request parameters bound onto it
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onFormChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onFormChange(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><!-- --></A><H3>
onSubmit</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>onSubmit</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response,
                                <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                                <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)
                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Submit callback with all parameters. Called in case of submit without errors
 reported by the registered validator, or on every submit if no validator.
 <p>The default implementation delegates to <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A>.
 For simply performing a submit action and rendering the specified success
 view, consider implementing <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(java.lang.Object)</CODE></A> rather than an
 <code>onSubmit</code> variant.
 <p>Subclasses can override this to provide custom submission handling like storing
 the object to the database. Implementations can also perform custom validation and
 call showForm to return to the form. Do <i>not</i> implement multiple onSubmit
 methods: In that case, just this method will be called by the controller.
 <p>Call <code>errors.getModel()</code> to populate the ModelAndView model
 with the command and the Errors instance, under the specified command name,
 as expected by the "spring:bind" tag.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current servlet request<DD><CODE>response</CODE> - current servlet response<DD><CODE>command</CODE> - form object with request parameters bound onto it<DD><CODE>errors</CODE> - Errors instance without errors (subclass can add errors if it wants to)
<DT><B>Returns:</B><DD>the prepared model and view, or <code>null</code>
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)"><CODE>showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A>, 
<A HREF="../../../../../org/springframework/validation/BindException.html#getModel()"><CODE>BindException.getModel()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="onSubmit(java.lang.Object, org.springframework.validation.BindException)"><!-- --></A><H3>
onSubmit</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>onSubmit</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command,
                                <A HREF="../../../../../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>&nbsp;errors)
                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Simpler <code>onSubmit</code> variant.
 Called by the default implementation of the
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>
 variant with all parameters.
 <p>The default implementation calls <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit(Object)</CODE></A>, using the
 returned ModelAndView if actually implemented in a subclass. Else, the
 default behavior will apply: rendering the success view with the command
 and Errors instance as model.
 <p>Subclasses can override this to provide custom submission handling that
 does not need request and response.
 <p>Call <code>errors.getModel()</code> to populate the ModelAndView model
 with the command and the Errors instance, under the specified command name,
 as expected by the "spring:bind" tag.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>command</CODE> - form object with request parameters bound onto it<DD><CODE>errors</CODE> - Errors instance without errors
<DT><B>Returns:</B><DD>the prepared model and view
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(HttpServletRequest, HttpServletResponse, Object, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit(Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setSuccessView(java.lang.String)"><CODE>setSuccessView(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A>, 
<A HREF="../../../../../org/springframework/validation/BindException.html#getModel()"><CODE>BindException.getModel()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="onSubmit(java.lang.Object)"><!-- --></A><H3>
onSubmit</H3>
<PRE>
protected <A HREF="../../../../../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A> <B>onSubmit</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)
                         throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Simplest <code>onSubmit</code> variant. Called by the default implementation
 of the <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A> variant.
 <p>This implementation calls <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(Object)</CODE></A> and returns
 <code>null</code> as ModelAndView, making the calling <code>onSubmit</code>
 method perform its default rendering of the success view.
 <p>Subclasses can override this to provide custom submission handling
 that just depends on the command object. It's preferable to use either
 <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A> or <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(Object)</CODE></A>,
 though: Use the former when you want to build your own ModelAndView; use the
 latter when you want to perform an action and forward to the successView.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>command</CODE> - form object with request parameters bound onto it
<DT><B>Returns:</B><DD>the prepared model and view, or <code>null</code> for default
 (that is, rendering the configured "successView")
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object, org.springframework.validation.BindException)"><CODE>onSubmit(Object, BindException)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#doSubmitAction(java.lang.Object)"><CODE>doSubmitAction(java.lang.Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setSuccessView(java.lang.String)"><CODE>setSuccessView(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="doSubmitAction(java.lang.Object)"><!-- --></A><H3>
doSubmitAction</H3>
<PRE>
protected void <B>doSubmitAction</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;command)
                       throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD><B>Deprecated.</B>&nbsp;<DD>Template method for submit actions. Called by the default implementation
 of the simplest <A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit(Object)</CODE></A> variant.
 <p><b>This is the preferred submit callback to implement if you want to
 perform an action (like storing changes to the database) and then render
 the success view with the command and Errors instance as model.</b>
 You don't need to care about the success ModelAndView here.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>command</CODE> - form object with request parameters bound onto it
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - in case of errors<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#onSubmit(java.lang.Object)"><CODE>onSubmit(Object)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleFormController.html#setSuccessView(java.lang.String)"><CODE>setSuccessView(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/mvc/SimpleControllerHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/mvc/UrlFilenameViewController.html" title="class in org.springframework.web.servlet.mvc"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/web/servlet/mvc/SimpleFormController.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SimpleFormController.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.web.servlet.mvc.BaseCommandController">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
