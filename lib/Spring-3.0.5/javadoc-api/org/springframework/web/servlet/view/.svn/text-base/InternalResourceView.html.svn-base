<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:25:29 BST 2010 -->
<TITLE>
InternalResourceView
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="InternalResourceView";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html" title="class in org.springframework.web.servlet.view"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/web/servlet/view/InternalResourceView.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="InternalResourceView.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.web.servlet.view.AbstractView">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.web.servlet.view</FONT>
<BR>
Class InternalResourceView</H2>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">org.springframework.context.support.ApplicationObjectSupport</A>
      <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">org.springframework.web.context.support.WebApplicationObjectSupport</A>
          <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">org.springframework.web.servlet.view.AbstractView</A>
              <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html" title="class in org.springframework.web.servlet.view">org.springframework.web.servlet.view.AbstractUrlBasedView</A>
                  <IMG SRC="../../../../../resources/inherit.gif" ALT="extended by "><B>org.springframework.web.servlet.view.InternalResourceView</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../../../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory">BeanNameAware</A>, <A HREF="../../../../../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory">InitializingBean</A>, <A HREF="../../../../../org/springframework/context/ApplicationContextAware.html" title="interface in org.springframework.context">ApplicationContextAware</A>, <A HREF="../../../../../org/springframework/web/context/ServletContextAware.html" title="interface in org.springframework.web.context">ServletContextAware</A>, <A HREF="../../../../../org/springframework/web/servlet/View.html" title="interface in org.springframework.web.servlet">View</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../../../org/springframework/web/servlet/view/JstlView.html" title="class in org.springframework.web.servlet.view">JstlView</A>, <A HREF="../../../../../org/springframework/web/servlet/view/tiles/TilesView.html" title="class in org.springframework.web.servlet.view.tiles">TilesView</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>InternalResourceView</B><DT>extends <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html" title="class in org.springframework.web.servlet.view">AbstractUrlBasedView</A></DL>
</PRE>

<P>
Wrapper for a JSP or other resource within the same web application.
 Exposes model objects as request attributes and forwards the request to
 the specified resource URL using a <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true" title="class or interface in javax.servlet"><CODE>RequestDispatcher</CODE></A>.

 <p>A URL for this view is supposed to specify a resource within the web
 application, suitable for RequestDispatcher's <code>forward</code> or
 <code>include</code> method.

 <p>If operating within an already included request or within a response that
 has already been committed, this view will fall back to an include instead of
 a forward. This can be enforced by calling <code>response.flushBuffer()</code>
 (which will commit the response) before rendering the view.

 <p>Typical usage with <A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view"><CODE>InternalResourceViewResolver</CODE></A> looks as follows,
 from the perspective of the DispatcherServlet context definition:

 <pre class="code">&lt;bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"&gt;
   &lt;property name="prefix" value="/WEB-INF/jsp/"/&gt;
   &lt;property name="suffix" value=".jsp"/&gt;
 &lt;/bean&gt;</pre>

 Every view name returned from a handler will be translated to a JSP
 resource (for example: "myView" -> "/WEB-INF/jsp/myView.jsp"), using
 this view class by default.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Rod Johnson, Juergen Hoeller, Rob Harrop</DD>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletResponse.html?is-external=true#flushBuffer()" title="class or interface in javax.servlet"><CODE>ServletResponse.flushBuffer()</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view"><CODE>InternalResourceViewResolver</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/JstlView.html" title="class in org.springframework.web.servlet.view"><CODE>JstlView</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.web.servlet.view.AbstractView"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.web.servlet.view.<A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#DEFAULT_CONTENT_TYPE">DEFAULT_CONTENT_TYPE</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from class org.springframework.context.support.<A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#logger">logger</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.springframework.web.servlet.View"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Fields inherited from interface org.springframework.web.servlet.<A HREF="../../../../../org/springframework/web/servlet/View.html" title="interface in org.springframework.web.servlet">View</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/View.html#RESPONSE_STATUS_ATTRIBUTE">RESPONSE_STATUS_ATTRIBUTE</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView()">InternalResourceView</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor for use as a bean.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView(java.lang.String)">InternalResourceView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new InternalResourceView with the given URL.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView(java.lang.String, boolean)">InternalResourceView</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                     boolean&nbsp;alwaysInclude)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new InternalResourceView with the given URL.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)">exposeForwardRequestAttributes</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Expose the current request URI and paths as <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A>
 attributes under the keys defined in the Servlet 2.4 specification,
 for Servlet 2.3 containers as well as misbehaving Servlet 2.4 containers
 (such as OC4J).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#exposeHelpers(javax.servlet.http.HttpServletRequest)">exposeHelpers</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Expose helpers unique to each rendering operation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true" title="class or interface in javax.servlet">RequestDispatcher</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#getRequestDispatcher(javax.servlet.http.HttpServletRequest, java.lang.String)">getRequestDispatcher</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                     <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Obtain the RequestDispatcher to use for the forward/include.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#getRequestToExpose(javax.servlet.http.HttpServletRequest)">getRequestToExpose</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;originalRequest)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the request handle to expose to the RequestDispatcher, i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#initServletContext(javax.servlet.ServletContext)">initServletContext</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A>&nbsp;sc)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checks whether we need to explicitly expose the Servlet 2.4 request attributes
 by default.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#isContextRequired()">isContextRequired</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An ApplicationContext is not strictly required for InternalResourceView.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">prepareForRendering</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                    <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Prepare for rendering, and determine the request dispatcher path
 to forward to (or to include).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">renderMergedOutputModel</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&nbsp;model,
                        <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                        <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Render the internal resource given the specified model.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setAlwaysInclude(boolean)">setAlwaysInclude</A></B>(boolean&nbsp;alwaysInclude)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify whether to always include the view rather than forward to it.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposeContextBeansAsAttributes(boolean)">setExposeContextBeansAsAttributes</A></B>(boolean&nbsp;exposeContextBeansAsAttributes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to make all Spring beans in the application context accessible
 as request attributes, through lazy checking once an attribute gets accessed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposedContextBeanNames(java.lang.String[])">setExposedContextBeanNames</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]&nbsp;exposedContextBeanNames)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Specify the names of beans in the context which are supposed to be exposed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposeForwardAttributes(boolean)">setExposeForwardAttributes</A></B>(boolean&nbsp;exposeForwardAttributes)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to explictly expose the Servlet 2.4 forward request attributes
 when forwarding to the underlying view resource.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setPreventDispatchLoop(boolean)">setPreventDispatchLoop</A></B>(boolean&nbsp;preventDispatchLoop)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set whether to explicitly prevent dispatching back to the
 current handler path.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">useInclude</A></B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
           <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine whether to use RequestDispatcher's <code>include</code> or
 <code>forward</code> method.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.view.AbstractUrlBasedView"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.view.<A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html" title="class in org.springframework.web.servlet.view">AbstractUrlBasedView</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#afterPropertiesSet()">afterPropertiesSet</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#checkResource(java.util.Locale)">checkResource</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#getUrl()">getUrl</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#isUrlRequired()">isUrlRequired</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#setUrl(java.lang.String)">setUrl</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#toString()">toString</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.servlet.view.AbstractView"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.servlet.view.<A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#addStaticAttribute(java.lang.String, java.lang.Object)">addStaticAttribute</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#createRequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Map)">createRequestContext</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#createTemporaryOutputStream()">createTemporaryOutputStream</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#exposeModelAsRequestAttributes(java.util.Map, javax.servlet.http.HttpServletRequest)">exposeModelAsRequestAttributes</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#generatesDownloadContent()">generatesDownloadContent</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#getAttributesMap()">getAttributesMap</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#getBeanName()">getBeanName</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#getContentType()">getContentType</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#getRequestContextAttribute()">getRequestContextAttribute</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#getStaticAttributes()">getStaticAttributes</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#prepareResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">prepareResponse</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#render(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">render</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setAttributes(java.util.Properties)">setAttributes</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setAttributesCSV(java.lang.String)">setAttributesCSV</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setAttributesMap(java.util.Map)">setAttributesMap</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setBeanName(java.lang.String)">setBeanName</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setContentType(java.lang.String)">setContentType</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#setRequestContextAttribute(java.lang.String)">setRequestContextAttribute</A>, <A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#writeToResponse(javax.servlet.http.HttpServletResponse, java.io.ByteArrayOutputStream)">writeToResponse</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.web.context.support.WebApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.web.context.support.<A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getServletContext()">getServletContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getTempDir()">getTempDir</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getWebApplicationContext()">getWebApplicationContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initApplicationContext(org.springframework.context.ApplicationContext)">initApplicationContext</A>, <A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#setServletContext(javax.servlet.ServletContext)">setServletContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.springframework.context.support.ApplicationObjectSupport"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class org.springframework.context.support.<A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getApplicationContext()">getApplicationContext</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getMessageSourceAccessor()">getMessageSourceAccessor</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#initApplicationContext()">initApplicationContext</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#requiredContextClass()">requiredContextClass</A>, <A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#setApplicationContext(org.springframework.context.ApplicationContext)">setApplicationContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="InternalResourceView()"><!-- --></A><H3>
InternalResourceView</H3>
<PRE>
public <B>InternalResourceView</B>()</PRE>
<DL>
<DD>Constructor for use as a bean.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#setUrl(java.lang.String)"><CODE>AbstractUrlBasedView.setUrl(java.lang.String)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setAlwaysInclude(boolean)"><CODE>setAlwaysInclude(boolean)</CODE></A></DL>
</DL>
<HR>

<A NAME="InternalResourceView(java.lang.String)"><!-- --></A><H3>
InternalResourceView</H3>
<PRE>
public <B>InternalResourceView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url)</PRE>
<DL>
<DD>Create a new InternalResourceView with the given URL.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>url</CODE> - the URL to forward to<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setAlwaysInclude(boolean)"><CODE>setAlwaysInclude(boolean)</CODE></A></DL>
</DL>
<HR>

<A NAME="InternalResourceView(java.lang.String, boolean)"><!-- --></A><H3>
InternalResourceView</H3>
<PRE>
public <B>InternalResourceView</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;url,
                            boolean&nbsp;alwaysInclude)</PRE>
<DL>
<DD>Create a new InternalResourceView with the given URL.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>url</CODE> - the URL to forward to<DD><CODE>alwaysInclude</CODE> - whether to always include the view rather than forward to it</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="setAlwaysInclude(boolean)"><!-- --></A><H3>
setAlwaysInclude</H3>
<PRE>
public void <B>setAlwaysInclude</B>(boolean&nbsp;alwaysInclude)</PRE>
<DL>
<DD>Specify whether to always include the view rather than forward to it.
 <p>Default is "false". Switch this flag on to enforce the use of a
 Servlet include, even if a forward would be possible.
<P>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setExposeForwardAttributes(boolean)"><!-- --></A><H3>
setExposeForwardAttributes</H3>
<PRE>
public void <B>setExposeForwardAttributes</B>(boolean&nbsp;exposeForwardAttributes)</PRE>
<DL>
<DD>Set whether to explictly expose the Servlet 2.4 forward request attributes
 when forwarding to the underlying view resource.
 <p>Default is "true" on Servlet containers up until 2.4, and "false" for
 Servlet 2.5 and above. Note that Servlet containers at 2.4 level and above
 should expose those attributes automatically! This InternalResourceView
 feature exists for Servlet 2.3 containers and misbehaving 2.4 containers.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setExposeContextBeansAsAttributes(boolean)"><!-- --></A><H3>
setExposeContextBeansAsAttributes</H3>
<PRE>
public void <B>setExposeContextBeansAsAttributes</B>(boolean&nbsp;exposeContextBeansAsAttributes)</PRE>
<DL>
<DD>Set whether to make all Spring beans in the application context accessible
 as request attributes, through lazy checking once an attribute gets accessed.
 <p>This will make all such beans accessible in plain <code>${...}</code>
 expressions in a JSP 2.0 page, as well as in JSTL's <code>c:out</code>
 value expressions.
 <p>Default is "false". Switch this flag on to transparently expose all
 Spring beans in the request attribute namespace.
 <p><b>NOTE:</b> Context beans will override any custom request or session
 attributes of the same name that have been manually added. However, model
 attributes (as explicitly exposed to this view) of the same name will
 always override context beans.
<P>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#getRequestToExpose(javax.servlet.http.HttpServletRequest)"><CODE>getRequestToExpose(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setExposedContextBeanNames(java.lang.String[])"><!-- --></A><H3>
setExposedContextBeanNames</H3>
<PRE>
public void <B>setExposedContextBeanNames</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>[]&nbsp;exposedContextBeanNames)</PRE>
<DL>
<DD>Specify the names of beans in the context which are supposed to be exposed.
 If this is non-null, only the specified beans are eligible for exposure as
 attributes.
 <p>If you'd like to expose all Spring beans in the application context, switch
 the <A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposeContextBeansAsAttributes(boolean)"><CODE>"exposeContextBeansAsAttributes"</CODE></A>
 flag on but do not list specific bean names for this property.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setPreventDispatchLoop(boolean)"><!-- --></A><H3>
setPreventDispatchLoop</H3>
<PRE>
public void <B>setPreventDispatchLoop</B>(boolean&nbsp;preventDispatchLoop)</PRE>
<DL>
<DD>Set whether to explicitly prevent dispatching back to the
 current handler path.
 <p>Default is "false". Switch this to "true" for convention-based
 views where a dispatch back to the current handler path is a
 definitive error.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isContextRequired()"><!-- --></A><H3>
isContextRequired</H3>
<PRE>
protected boolean <B>isContextRequired</B>()</PRE>
<DL>
<DD>An ApplicationContext is not strictly required for InternalResourceView.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#isContextRequired()">isContextRequired</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getApplicationContext()"><CODE>ApplicationObjectSupport.getApplicationContext()</CODE></A>, 
<A HREF="../../../../../org/springframework/context/support/ApplicationObjectSupport.html#getMessageSourceAccessor()"><CODE>ApplicationObjectSupport.getMessageSourceAccessor()</CODE></A>, 
<A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getWebApplicationContext()"><CODE>WebApplicationObjectSupport.getWebApplicationContext()</CODE></A>, 
<A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getServletContext()"><CODE>WebApplicationObjectSupport.getServletContext()</CODE></A>, 
<A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#getTempDir()"><CODE>WebApplicationObjectSupport.getTempDir()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="initServletContext(javax.servlet.ServletContext)"><!-- --></A><H3>
initServletContext</H3>
<PRE>
protected void <B>initServletContext</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletContext.html?is-external=true" title="class or interface in javax.servlet">ServletContext</A>&nbsp;sc)</PRE>
<DL>
<DD>Checks whether we need to explicitly expose the Servlet 2.4 request attributes
 by default.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html#initServletContext(javax.servlet.ServletContext)">initServletContext</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>sc</CODE> - the ServletContext that this application object runs in
 (never <code>null</code>)<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposeForwardAttributes(boolean)"><CODE>setExposeForwardAttributes(boolean)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)"><CODE>exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><!-- --></A><H3>
renderMergedOutputModel</H3>
<PRE>
protected void <B>renderMergedOutputModel</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util">Map</A>&lt;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>,<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&gt;&nbsp;model,
                                       <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                       <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)
                                throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Render the internal resource given the specified model.
 This includes setting the model as request attributes.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)">renderMergedOutputModel</A></CODE> in class <CODE><A HREF="../../../../../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>model</CODE> - combined output Map (never <code>null</code>),
 with dynamic values taking precedence over static attributes<DD><CODE>request</CODE> - current HTTP request<DD><CODE>response</CODE> - current HTTP response
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - if rendering failed</DL>
</DD>
</DL>
<HR>

<A NAME="getRequestToExpose(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
getRequestToExpose</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A> <B>getRequestToExpose</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;originalRequest)</PRE>
<DL>
<DD>Get the request handle to expose to the RequestDispatcher, i.e. to the view.
 <p>The default implementation wraps the original request for exposure of
 Spring beans as request attributes (if demanded).
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>originalRequest</CODE> - the original servlet request as provided by the engine
<DT><B>Returns:</B><DD>the wrapped request, or the original request if no wrapping is necessary<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#setExposeContextBeansAsAttributes(boolean)"><CODE>setExposeContextBeansAsAttributes(boolean)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/context/support/ContextExposingHttpServletRequest.html" title="class in org.springframework.web.context.support"><CODE>ContextExposingHttpServletRequest</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="exposeHelpers(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
exposeHelpers</H3>
<PRE>
protected void <B>exposeHelpers</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)
                      throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Expose helpers unique to each rendering operation. This is necessary so that
 different rendering operations can't overwrite each other's contexts etc.
 <p>Called by <A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>renderMergedOutputModel(Map, HttpServletRequest, HttpServletResponse)</CODE></A>.
 The default implementation is empty. This method can be overridden to add
 custom helpers as request attributes.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - if there's a fatal error while we're adding attributes<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</CODE></A>, 
<A HREF="../../../../../org/springframework/web/servlet/view/JstlView.html#exposeHelpers(javax.servlet.http.HttpServletRequest)"><CODE>JstlView.exposeHelpers(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><!-- --></A><H3>
prepareForRendering</H3>
<PRE>
protected <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>prepareForRendering</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                     <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)
                              throws <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></PRE>
<DL>
<DD>Prepare for rendering, and determine the request dispatcher path
 to forward to (or to include).
 <p>This implementation simply returns the configured URL.
 Subclasses can override this to determine a resource to render,
 typically interpreting the URL in a different manner.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>response</CODE> - current HTTP response
<DT><B>Returns:</B><DD>the request dispatcher path to use
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang">Exception</A></CODE> - if preparations failed<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/servlet/view/AbstractUrlBasedView.html#getUrl()"><CODE>AbstractUrlBasedView.getUrl()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getRequestDispatcher(javax.servlet.http.HttpServletRequest, java.lang.String)"><!-- --></A><H3>
getRequestDispatcher</H3>
<PRE>
protected <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true" title="class or interface in javax.servlet">RequestDispatcher</A> <B>getRequestDispatcher</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                                                 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;path)</PRE>
<DL>
<DD>Obtain the RequestDispatcher to use for the forward/include.
 <p>The default implementation simply calls
 <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletRequest.html?is-external=true#getRequestDispatcher(java.lang.String)" title="class or interface in javax.servlet"><CODE>ServletRequest.getRequestDispatcher(String)</CODE></A>.
 Can be overridden in subclasses.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>path</CODE> - the target URL (as returned from <A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceView.html#prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>prepareForRendering(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)</CODE></A>)
<DT><B>Returns:</B><DD>a corresponding RequestDispatcher</DL>
</DD>
</DL>
<HR>

<A NAME="useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><!-- --></A><H3>
useInclude</H3>
<PRE>
protected boolean <B>useInclude</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request,
                             <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletResponse</A>&nbsp;response)</PRE>
<DL>
<DD>Determine whether to use RequestDispatcher's <code>include</code> or
 <code>forward</code> method.
 <p>Performs a check whether an include URI attribute is found in the request,
 indicating an include request, and whether the response has already been committed.
 In both cases, an include will be performed, as a forward is not possible anymore.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DD><CODE>response</CODE> - current HTTP response
<DT><B>Returns:</B><DD><code>true</code> for include, <code>false</code> for forward<DT><B>See Also:</B><DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/RequestDispatcher.html?is-external=true#include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)" title="class or interface in javax.servlet"><CODE>RequestDispatcher.include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)</CODE></A>, 
<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/ServletResponse.html?is-external=true#isCommitted()" title="class or interface in javax.servlet"><CODE>ServletResponse.isCommitted()</CODE></A>, 
<A HREF="../../../../../org/springframework/web/util/WebUtils.html#isIncludeRequest(javax.servlet.ServletRequest)"><CODE>WebUtils.isIncludeRequest(javax.servlet.ServletRequest)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)"><!-- --></A><H3>
exposeForwardRequestAttributes</H3>
<PRE>
protected void <B>exposeForwardRequestAttributes</B>(<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http">HttpServletRequest</A>&nbsp;request)</PRE>
<DL>
<DD>Expose the current request URI and paths as <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A>
 attributes under the keys defined in the Servlet 2.4 specification,
 for Servlet 2.3 containers as well as misbehaving Servlet 2.4 containers
 (such as OC4J).
 <p>Does not expose the attributes on Servlet 2.5 or above, mainly for
 GlassFish compatibility (GlassFish gets confused by pre-exposed attributes).
 In any case, Servlet 2.5 containers should finally properly support
 Servlet 2.4 features, shouldn't they...
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>request</CODE> - current HTTP request<DT><B>See Also:</B><DD><A HREF="../../../../../org/springframework/web/util/WebUtils.html#exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)"><CODE>WebUtils.exposeForwardRequestAttributes(javax.servlet.http.HttpServletRequest)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/view/DefaultRequestToViewNameTranslator.html" title="class in org.springframework.web.servlet.view"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../../index.html?org/springframework/web/servlet/view/InternalResourceView.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="InternalResourceView.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_org.springframework.web.servlet.view.AbstractView">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
