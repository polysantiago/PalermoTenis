<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:23:25 BST 2010 -->
<TITLE>
SpelNode
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="SpelNode";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/expression/spel/SpelMessage.Kind.html" title="enum in org.springframework.expression.spel"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/expression/spel/SpelParseException.html" title="class in org.springframework.expression.spel"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/expression/spel/SpelNode.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SpelNode.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.springframework.expression.spel</FONT>
<BR>
Interface SpelNode</H2>
<DL>
<DT><B>All Known Implementing Classes:</B> <DD><A HREF="../../../../org/springframework/expression/spel/ast/Assign.html" title="class in org.springframework.expression.spel.ast">Assign</A>, <A HREF="../../../../org/springframework/expression/spel/ast/BeanReference.html" title="class in org.springframework.expression.spel.ast">BeanReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/BooleanLiteral.html" title="class in org.springframework.expression.spel.ast">BooleanLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/CompoundExpression.html" title="class in org.springframework.expression.spel.ast">CompoundExpression</A>, <A HREF="../../../../org/springframework/expression/spel/ast/ConstructorReference.html" title="class in org.springframework.expression.spel.ast">ConstructorReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Elvis.html" title="class in org.springframework.expression.spel.ast">Elvis</A>, <A HREF="../../../../org/springframework/expression/spel/ast/FunctionReference.html" title="class in org.springframework.expression.spel.ast">FunctionReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Identifier.html" title="class in org.springframework.expression.spel.ast">Identifier</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Indexer.html" title="class in org.springframework.expression.spel.ast">Indexer</A>, <A HREF="../../../../org/springframework/expression/spel/ast/InlineList.html" title="class in org.springframework.expression.spel.ast">InlineList</A>, <A HREF="../../../../org/springframework/expression/spel/ast/IntLiteral.html" title="class in org.springframework.expression.spel.ast">IntLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Literal.html" title="class in org.springframework.expression.spel.ast">Literal</A>, <A HREF="../../../../org/springframework/expression/spel/ast/LongLiteral.html" title="class in org.springframework.expression.spel.ast">LongLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/MethodReference.html" title="class in org.springframework.expression.spel.ast">MethodReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/NullLiteral.html" title="class in org.springframework.expression.spel.ast">NullLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpAnd.html" title="class in org.springframework.expression.spel.ast">OpAnd</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpDivide.html" title="class in org.springframework.expression.spel.ast">OpDivide</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpEQ.html" title="class in org.springframework.expression.spel.ast">OpEQ</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Operator.html" title="class in org.springframework.expression.spel.ast">Operator</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OperatorBetween.html" title="class in org.springframework.expression.spel.ast">OperatorBetween</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OperatorInstanceof.html" title="class in org.springframework.expression.spel.ast">OperatorInstanceof</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OperatorMatches.html" title="class in org.springframework.expression.spel.ast">OperatorMatches</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OperatorNot.html" title="class in org.springframework.expression.spel.ast">OperatorNot</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OperatorPower.html" title="class in org.springframework.expression.spel.ast">OperatorPower</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpGE.html" title="class in org.springframework.expression.spel.ast">OpGE</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpGT.html" title="class in org.springframework.expression.spel.ast">OpGT</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpLE.html" title="class in org.springframework.expression.spel.ast">OpLE</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpLT.html" title="class in org.springframework.expression.spel.ast">OpLT</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpMinus.html" title="class in org.springframework.expression.spel.ast">OpMinus</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpModulus.html" title="class in org.springframework.expression.spel.ast">OpModulus</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpMultiply.html" title="class in org.springframework.expression.spel.ast">OpMultiply</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpNE.html" title="class in org.springframework.expression.spel.ast">OpNE</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpOr.html" title="class in org.springframework.expression.spel.ast">OpOr</A>, <A HREF="../../../../org/springframework/expression/spel/ast/OpPlus.html" title="class in org.springframework.expression.spel.ast">OpPlus</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Projection.html" title="class in org.springframework.expression.spel.ast">Projection</A>, <A HREF="../../../../org/springframework/expression/spel/ast/PropertyOrFieldReference.html" title="class in org.springframework.expression.spel.ast">PropertyOrFieldReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/QualifiedIdentifier.html" title="class in org.springframework.expression.spel.ast">QualifiedIdentifier</A>, <A HREF="../../../../org/springframework/expression/spel/ast/RealLiteral.html" title="class in org.springframework.expression.spel.ast">RealLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Selection.html" title="class in org.springframework.expression.spel.ast">Selection</A>, <A HREF="../../../../org/springframework/expression/spel/ast/SpelNodeImpl.html" title="class in org.springframework.expression.spel.ast">SpelNodeImpl</A>, <A HREF="../../../../org/springframework/expression/spel/ast/StringLiteral.html" title="class in org.springframework.expression.spel.ast">StringLiteral</A>, <A HREF="../../../../org/springframework/expression/spel/ast/Ternary.html" title="class in org.springframework.expression.spel.ast">Ternary</A>, <A HREF="../../../../org/springframework/expression/spel/ast/TypeReference.html" title="class in org.springframework.expression.spel.ast">TypeReference</A>, <A HREF="../../../../org/springframework/expression/spel/ast/VariableReference.html" title="class in org.springframework.expression.spel.ast">VariableReference</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public interface <B>SpelNode</B></DL>
</PRE>

<P>
Represents a node in the Ast for a parsed expression.
<P>

<P>
<DL>
<DT><B>Since:</B></DT>
  <DD>3.0</DD>
<DT><B>Author:</B></DT>
  <DD>Andy Clement</DD>
</DL>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/expression/spel/SpelNode.html" title="interface in org.springframework.expression.spel">SpelNode</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getChild(int)">getChild</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Helper method that returns a SpelNode rather than an Antlr Tree node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getChildCount()">getChildCount</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getEndPosition()">getEndPosition</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getObjectClass(java.lang.Object)">getObjectClass</A></B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;obj)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine the class of the object passed in, unless it is already a class object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getStartPosition()">getStartPosition</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/springframework/expression/TypedValue.html" title="class in org.springframework.expression">TypedValue</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getTypedValue(org.springframework.expression.spel.ExpressionState)">getTypedValue</A></B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate the expression node in the context of the supplied expression state and return the typed value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#getValue(org.springframework.expression.spel.ExpressionState)">getValue</A></B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate the expression node in the context of the supplied expression state and return the value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#isWritable(org.springframework.expression.spel.ExpressionState)">isWritable</A></B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine if this expression node will support a setValue() call.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)">setValue</A></B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState,
         <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;newValue)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate the expression to a node and then set the new value on that node.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/springframework/expression/spel/SpelNode.html#toStringAST()">toStringAST</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getValue(org.springframework.expression.spel.ExpressionState)"><!-- --></A><H3>
getValue</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>getValue</B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)
                throws <A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></PRE>
<DL>
<DD>Evaluate the expression node in the context of the supplied expression state and return the value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expressionState</CODE> - the current expression state (includes the context)
<DT><B>Returns:</B><DD>the value of this node evaluated against the specified state
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getTypedValue(org.springframework.expression.spel.ExpressionState)"><!-- --></A><H3>
getTypedValue</H3>
<PRE>
<A HREF="../../../../org/springframework/expression/TypedValue.html" title="class in org.springframework.expression">TypedValue</A> <B>getTypedValue</B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)
                         throws <A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></PRE>
<DL>
<DD>Evaluate the expression node in the context of the supplied expression state and return the typed value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expressionState</CODE> - the current expression state (includes the context)
<DT><B>Returns:</B><DD>the type value of this node evaluated against the specified state
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="isWritable(org.springframework.expression.spel.ExpressionState)"><!-- --></A><H3>
isWritable</H3>
<PRE>
boolean <B>isWritable</B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState)
                   throws <A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></PRE>
<DL>
<DD>Determine if this expression node will support a setValue() call.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expressionState</CODE> - the current expression state (includes the context)
<DT><B>Returns:</B><DD>true if the expression node will allow setValue()
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></CODE> - if something went wrong trying to determine if the node supports writing</DL>
</DD>
</DL>
<HR>

<A NAME="setValue(org.springframework.expression.spel.ExpressionState, java.lang.Object)"><!-- --></A><H3>
setValue</H3>
<PRE>
void <B>setValue</B>(<A HREF="../../../../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>&nbsp;expressionState,
              <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;newValue)
              throws <A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></PRE>
<DL>
<DD>Evaluate the expression to a node and then set the new value on that node. For example, if the expression
 evaluates to a property reference then the property will be set to the new value.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expressionState</CODE> - the current expression state (includes the context)<DD><CODE>newValue</CODE> - the new value
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/springframework/expression/EvaluationException.html" title="class in org.springframework.expression">EvaluationException</A></CODE> - if any problem occurs evaluating the expression or setting the new value</DL>
</DD>
</DL>
<HR>

<A NAME="toStringAST()"><!-- --></A><H3>
toStringAST</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>toStringAST</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>the string form of this AST node</DL>
</DD>
</DL>
<HR>

<A NAME="getChildCount()"><!-- --></A><H3>
getChildCount</H3>
<PRE>
int <B>getChildCount</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>the number of children under this node</DL>
</DD>
</DL>
<HR>

<A NAME="getChild(int)"><!-- --></A><H3>
getChild</H3>
<PRE>
<A HREF="../../../../org/springframework/expression/spel/SpelNode.html" title="interface in org.springframework.expression.spel">SpelNode</A> <B>getChild</B>(int&nbsp;index)</PRE>
<DL>
<DD>Helper method that returns a SpelNode rather than an Antlr Tree node.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the child node cast to a SpelNode</DL>
</DD>
</DL>
<HR>

<A NAME="getObjectClass(java.lang.Object)"><!-- --></A><H3>
getObjectClass</H3>
<PRE>
<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang">Class</A>&lt;?&gt; <B>getObjectClass</B>(<A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A>&nbsp;obj)</PRE>
<DL>
<DD>Determine the class of the object passed in, unless it is already a class object.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - the object that the caller wants the class of
<DT><B>Returns:</B><DD>the class of the object if it is not already a class object, or null if the object is null</DL>
</DD>
</DL>
<HR>

<A NAME="getStartPosition()"><!-- --></A><H3>
getStartPosition</H3>
<PRE>
int <B>getStartPosition</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>the start position of this Ast node in the expression string</DL>
</DD>
</DL>
<HR>

<A NAME="getEndPosition()"><!-- --></A><H3>
getEndPosition</H3>
<PRE>
int <B>getEndPosition</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>the end position of this Ast node in the expression string</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/springframework/expression/spel/SpelMessage.Kind.html" title="enum in org.springframework.expression.spel"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/springframework/expression/spel/SpelParseException.html" title="class in org.springframework.expression.spel"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?org/springframework/expression/spel/SpelNode.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="SpelNode.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
