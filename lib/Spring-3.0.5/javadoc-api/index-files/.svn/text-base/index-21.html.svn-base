<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:26:34 BST 2010 -->
<TITLE>
U-Index
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="U-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-20.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-22.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-21.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-21.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>
<A NAME="_U_"><!-- --></A><H2>
<B>U</B></H2>
<DL>
<DT><A HREF="../org/springframework/ui/context/support/UiApplicationContextUtils.html" title="class in org.springframework.ui.context.support"><B>UiApplicationContextUtils</B></A> - Class in <A HREF="../org/springframework/ui/context/support/package-summary.html">org.springframework.ui.context.support</A><DD>Utility class for UI application context implementations.<DT><A HREF="../org/springframework/ui/context/support/UiApplicationContextUtils.html#UiApplicationContextUtils()"><B>UiApplicationContextUtils()</B></A> - 
Constructor for class org.springframework.ui.context.support.<A HREF="../org/springframework/ui/context/support/UiApplicationContextUtils.html" title="class in org.springframework.ui.context.support">UiApplicationContextUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/AopProxyUtils.html#ultimateTargetClass(java.lang.Object)"><B>ultimateTargetClass(Object)</B></A> - 
Static method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AopProxyUtils.html" title="class in org.springframework.aop.framework">AopProxyUtils</A>
<DD>Determine the ultimate target class of the given bean instance, traversing
 not only a top-level proxy but any number of nested proxies as well -
 as long as possible without side effects, that is, just for singleton targets.
<DT><A HREF="../org/springframework/jmx/export/UnableToRegisterMBeanException.html" title="class in org.springframework.jmx.export"><B>UnableToRegisterMBeanException</B></A> - Exception in <A HREF="../org/springframework/jmx/export/package-summary.html">org.springframework.jmx.export</A><DD>Exception thrown when we are unable to register an MBean,
 for example because of a naming conflict.<DT><A HREF="../org/springframework/jmx/export/UnableToRegisterMBeanException.html#UnableToRegisterMBeanException(java.lang.String)"><B>UnableToRegisterMBeanException(String)</B></A> - 
Constructor for exception org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/UnableToRegisterMBeanException.html" title="class in org.springframework.jmx.export">UnableToRegisterMBeanException</A>
<DD>Create a new <code>UnableToRegisterMBeanException</code> with the
 specified error message.
<DT><A HREF="../org/springframework/jmx/export/UnableToRegisterMBeanException.html#UnableToRegisterMBeanException(java.lang.String, java.lang.Throwable)"><B>UnableToRegisterMBeanException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/UnableToRegisterMBeanException.html" title="class in org.springframework.jmx.export">UnableToRegisterMBeanException</A>
<DD>Create a new <code>UnableToRegisterMBeanException</code> with the
 specified error message and root cause.
<DT><A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html" title="class in org.springframework.jmx.export.notification"><B>UnableToSendNotificationException</B></A> - Exception in <A HREF="../org/springframework/jmx/export/notification/package-summary.html">org.springframework.jmx.export.notification</A><DD>Thrown when a JMX <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/Notification.html?is-external=true" title="class or interface in javax.management"><CODE>Notification</CODE></A> is unable to be sent.<DT><A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html#UnableToSendNotificationException(java.lang.String)"><B>UnableToSendNotificationException(String)</B></A> - 
Constructor for exception org.springframework.jmx.export.notification.<A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html" title="class in org.springframework.jmx.export.notification">UnableToSendNotificationException</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html" title="class in org.springframework.jmx.export.notification"><CODE>UnableToSendNotificationException</CODE></A>
 class with the specified error message.
<DT><A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html#UnableToSendNotificationException(java.lang.String, java.lang.Throwable)"><B>UnableToSendNotificationException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.jmx.export.notification.<A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html" title="class in org.springframework.jmx.export.notification">UnableToSendNotificationException</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jmx/export/notification/UnableToSendNotificationException.html" title="class in org.springframework.jmx.export.notification"><CODE>UnableToSendNotificationException</CODE></A>
 with the specified error message and root cause.
<DT><A HREF="../org/springframework/jndi/JndiTemplate.html#unbind(java.lang.String)"><B>unbind(String)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiTemplate.html" title="class in org.springframework.jndi">JndiTemplate</A>
<DD>Remove the binding for the given name from the current JNDI context.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#unbind(java.lang.String)"><B>unbind(String)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#unbind(javax.naming.Name)"><B>unbind(Name)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#unbindResource(java.lang.Object)"><B>unbindResource(Object)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Unbind a resource for the given key from the current thread.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#unbindResourceIfPossible(java.lang.Object)"><B>unbindResourceIfPossible(Object)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Unbind a resource for the given key from the current thread.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolder.html#unbound()"><B>unbound()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support">ResourceHolder</A>
<DD>Notify this holder that it has been unbound from transaction synchronization.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#unbound()"><B>unbound()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/task/SimpleAsyncTaskExecutor.html#UNBOUNDED_CONCURRENCY"><B>UNBOUNDED_CONCURRENCY</B></A> - 
Static variable in class org.springframework.core.task.<A HREF="../org/springframework/core/task/SimpleAsyncTaskExecutor.html" title="class in org.springframework.core.task">SimpleAsyncTaskExecutor</A>
<DD>Permit any number of concurrent invocations: that is, don't throttle concurrency.
<DT><A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html#UNBOUNDED_CONCURRENCY"><B>UNBOUNDED_CONCURRENCY</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html" title="class in org.springframework.util">ConcurrencyThrottleSupport</A>
<DD>Permit any number of concurrent invocations: that is, don't throttle concurrency.
<DT><A HREF="../org/springframework/util/StringUtils.html#uncapitalize(java.lang.String)"><B>uncapitalize(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Uncapitalize a <code>String</code>, changing the first letter to
 lower case as per <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Character.html?is-external=true#toLowerCase(char)" title="class or interface in java.lang"><CODE>Character.toLowerCase(char)</CODE></A>.
<DT><A HREF="../org/springframework/dao/UncategorizedDataAccessException.html" title="class in org.springframework.dao"><B>UncategorizedDataAccessException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Normal superclass when we can't distinguish anything more specific
 than "something went wrong with the underlying resource": for example,
 a SQLException from JDBC we can't pinpoint more precisely.<DT><A HREF="../org/springframework/dao/UncategorizedDataAccessException.html#UncategorizedDataAccessException(java.lang.String, java.lang.Throwable)"><B>UncategorizedDataAccessException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/UncategorizedDataAccessException.html" title="class in org.springframework.dao">UncategorizedDataAccessException</A>
<DD>Constructor for UncategorizedDataAccessException.
<DT><A HREF="../org/springframework/jms/UncategorizedJmsException.html" title="class in org.springframework.jms"><B>UncategorizedJmsException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>JmsException to be thrown when no other matching subclass found.<DT><A HREF="../org/springframework/jms/UncategorizedJmsException.html#UncategorizedJmsException(java.lang.String)"><B>UncategorizedJmsException(String)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/UncategorizedJmsException.html" title="class in org.springframework.jms">UncategorizedJmsException</A>
<DD>Constructor that takes a message.
<DT><A HREF="../org/springframework/jms/UncategorizedJmsException.html#UncategorizedJmsException(java.lang.String, java.lang.Throwable)"><B>UncategorizedJmsException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/UncategorizedJmsException.html" title="class in org.springframework.jms">UncategorizedJmsException</A>
<DD>Constructor that takes a message and a root cause.
<DT><A HREF="../org/springframework/jms/UncategorizedJmsException.html#UncategorizedJmsException(java.lang.Throwable)"><B>UncategorizedJmsException(Throwable)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/UncategorizedJmsException.html" title="class in org.springframework.jms">UncategorizedJmsException</A>
<DD>Constructor that takes a root cause only.
<DT><A HREF="../org/springframework/oxm/UncategorizedMappingException.html" title="class in org.springframework.oxm"><B>UncategorizedMappingException</B></A> - Exception in <A HREF="../org/springframework/oxm/package-summary.html">org.springframework.oxm</A><DD>Exception that indicates that the cause cannot be distinguished further.<DT><A HREF="../org/springframework/oxm/UncategorizedMappingException.html#UncategorizedMappingException(java.lang.String, java.lang.Throwable)"><B>UncategorizedMappingException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.oxm.<A HREF="../org/springframework/oxm/UncategorizedMappingException.html" title="class in org.springframework.oxm">UncategorizedMappingException</A>
<DD>Construct an <code>UncategorizedMappingException</code> with the specified detail message
 and nested exception.
<DT><A HREF="../org/springframework/jdbc/UncategorizedSQLException.html" title="class in org.springframework.jdbc"><B>UncategorizedSQLException</B></A> - Exception in <A HREF="../org/springframework/jdbc/package-summary.html">org.springframework.jdbc</A><DD>Exception thrown when we can't classify a SQLException into 
 one of our generic data access exceptions.<DT><A HREF="../org/springframework/jdbc/UncategorizedSQLException.html#UncategorizedSQLException(java.lang.String, java.lang.String, java.sql.SQLException)"><B>UncategorizedSQLException(String, String, SQLException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/UncategorizedSQLException.html" title="class in org.springframework.jdbc">UncategorizedSQLException</A>
<DD>Constructor for UncategorizedSQLException.
<DT><A HREF="../org/springframework/core/ControlFlow.html#under(java.lang.Class)"><B>under(Class)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ControlFlow.html" title="interface in org.springframework.core">ControlFlow</A>
<DD>Detect whether we're under the given class,
 according to the current stack trace.
<DT><A HREF="../org/springframework/core/ControlFlow.html#under(java.lang.Class, java.lang.String)"><B>under(Class, String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ControlFlow.html" title="interface in org.springframework.core">ControlFlow</A>
<DD>Detect whether we're under the given class and method,
 according to the current stack trace.
<DT><A HREF="../org/springframework/core/ControlFlow.html#underToken(java.lang.String)"><B>underToken(String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ControlFlow.html" title="interface in org.springframework.core">ControlFlow</A>
<DD>Detect whether the current stack trace contains the given token.
<DT><A HREF="../org/springframework/util/DefaultPropertiesPersister.html#unescape(java.lang.String)"><B>unescape(String)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/DefaultPropertiesPersister.html" title="class in org.springframework.util">DefaultPropertiesPersister</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/UnexpectedRollbackException.html" title="class in org.springframework.transaction"><B>UnexpectedRollbackException</B></A> - Exception in <A HREF="../org/springframework/transaction/package-summary.html">org.springframework.transaction</A><DD>Thrown when an attempt to commit a transaction resulted
 in an unexpected rollback.<DT><A HREF="../org/springframework/transaction/UnexpectedRollbackException.html#UnexpectedRollbackException(java.lang.String)"><B>UnexpectedRollbackException(String)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/UnexpectedRollbackException.html" title="class in org.springframework.transaction">UnexpectedRollbackException</A>
<DD>Constructor for UnexpectedRollbackException.
<DT><A HREF="../org/springframework/transaction/UnexpectedRollbackException.html#UnexpectedRollbackException(java.lang.String, java.lang.Throwable)"><B>UnexpectedRollbackException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/UnexpectedRollbackException.html" title="class in org.springframework.transaction">UnexpectedRollbackException</A>
<DD>Constructor for UnexpectedRollbackException.
<DT><A HREF="../org/springframework/aop/support/ClassFilters.html#union(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter)"><B>union(ClassFilter, ClassFilter)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support">ClassFilters</A>
<DD>Match all classes that <i>either</i> (or both) of the given ClassFilters matches.
<DT><A HREF="../org/springframework/aop/support/ClassFilters.html#union(org.springframework.aop.ClassFilter[])"><B>union(ClassFilter[])</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support">ClassFilters</A>
<DD>Match all classes that <i>either</i> (or all) of the given ClassFilters matches.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#union(org.springframework.aop.ClassFilter)"><B>union(ClassFilter)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply a union with the given ClassFilter.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#union(org.springframework.aop.MethodMatcher)"><B>union(MethodMatcher)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply a union with the given MethodMatcher.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#union(org.springframework.aop.Pointcut)"><B>union(Pointcut)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply a union with the given Pointcut.
<DT><A HREF="../org/springframework/aop/support/MethodMatchers.html#union(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher)"><B>union(MethodMatcher, MethodMatcher)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/MethodMatchers.html" title="class in org.springframework.aop.support">MethodMatchers</A>
<DD>Match all methods that <i>either</i> (or both) of the given MethodMatchers matches.
<DT><A HREF="../org/springframework/aop/support/Pointcuts.html#union(org.springframework.aop.Pointcut, org.springframework.aop.Pointcut)"><B>union(Pointcut, Pointcut)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/Pointcuts.html" title="class in org.springframework.aop.support">Pointcuts</A>
<DD>Match all methods that <b>either</b> (or both) of the given pointcuts matches.
<DT><A HREF="../org/springframework/dao/support/DataAccessUtils.html#uniqueResult(java.util.Collection)"><B>uniqueResult(Collection&lt;T&gt;)</B></A> - 
Static method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DataAccessUtils.html" title="class in org.springframework.dao.support">DataAccessUtils</A>
<DD>Return a unique result object from the given Collection.
<DT><A HREF="../org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html" title="class in org.springframework.aop.framework.adapter"><B>UnknownAdviceTypeException</B></A> - Exception in <A HREF="../org/springframework/aop/framework/adapter/package-summary.html">org.springframework.aop.framework.adapter</A><DD>Exception thrown when an attempt is made to use an unsupported
 Advisor or Advice type.<DT><A HREF="../org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html#UnknownAdviceTypeException(java.lang.Object)"><B>UnknownAdviceTypeException(Object)</B></A> - 
Constructor for exception org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html" title="class in org.springframework.aop.framework.adapter">UnknownAdviceTypeException</A>
<DD>Create a new UnknownAdviceTypeException for the given advice object.
<DT><A HREF="../org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html#UnknownAdviceTypeException(java.lang.String)"><B>UnknownAdviceTypeException(String)</B></A> - 
Constructor for exception org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/UnknownAdviceTypeException.html" title="class in org.springframework.aop.framework.adapter">UnknownAdviceTypeException</A>
<DD>Create a new UnknownAdviceTypeException with the given message.
<DT><A HREF="../org/springframework/ejb/support/AbstractStatefulSessionBean.html#unloadBeanFactory()"><B>unloadBeanFactory()</B></A> - 
Method in class org.springframework.ejb.support.<A HREF="../org/springframework/ejb/support/AbstractStatefulSessionBean.html" title="class in org.springframework.ejb.support">AbstractStatefulSessionBean</A>
<DD>Unload the Spring BeanFactory instance.
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#unmarshal(javax.xml.transform.Source)"><B>unmarshal(Source)</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer)"><B>unmarshal(Source, MimeContainer)</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/mime/MimeUnmarshaller.html#unmarshal(javax.xml.transform.Source, org.springframework.oxm.mime.MimeContainer)"><B>unmarshal(Source, MimeContainer)</B></A> - 
Method in interface org.springframework.oxm.mime.<A HREF="../org/springframework/oxm/mime/MimeUnmarshaller.html" title="interface in org.springframework.oxm.mime">MimeUnmarshaller</A>
<DD>Unmarshals the given provided <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> into an object graph,
 reading binary attachments from a <A HREF="../org/springframework/oxm/mime/MimeContainer.html" title="interface in org.springframework.oxm.mime"><CODE>MimeContainer</CODE></A>.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshal(javax.xml.transform.Source)"><B>unmarshal(Source)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Unmarshals the given provided <code>javax.xml.transform.Source</code> into an object graph.
<DT><A HREF="../org/springframework/oxm/Unmarshaller.html#unmarshal(javax.xml.transform.Source)"><B>unmarshal(Source)</B></A> - 
Method in interface org.springframework.oxm.<A HREF="../org/springframework/oxm/Unmarshaller.html" title="interface in org.springframework.oxm">Unmarshaller</A>
<DD>Unmarshals the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> into an object graph.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalDomNode(org.w3c.dom.Node)"><B>unmarshalDomNode(Node)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalDomNode(org.w3c.dom.Node)"><B>unmarshalDomNode(Node)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalDomNode(org.w3c.dom.Node)"><B>unmarshalDomNode(Node)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling from a given DOM <code>Node</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalDomNode(org.w3c.dom.Node)"><B>unmarshalDomNode(Node)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalDomNode(org.w3c.dom.Node)"><B>unmarshalDomNode(Node)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalDomSource(javax.xml.transform.dom.DOMSource)"><B>unmarshalDomSource(DOMSource)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Template method for handling <code>DOMSource</code>s.
<DT><A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html#unmarshalFromBytesMessage(javax.jms.BytesMessage, org.springframework.oxm.Unmarshaller)"><B>unmarshalFromBytesMessage(BytesMessage, Unmarshaller)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html" title="class in org.springframework.jms.support.converter">MarshallingMessageConverter</A>
<DD>Unmarshal the given <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/BytesMessage.html?is-external=true" title="class or interface in javax.jms"><CODE>BytesMessage</CODE></A> into an object.
<DT><A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html#unmarshalFromMessage(javax.jms.Message, org.springframework.oxm.Unmarshaller)"><B>unmarshalFromMessage(Message, Unmarshaller)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html" title="class in org.springframework.jms.support.converter">MarshallingMessageConverter</A>
<DD>Template method that allows for custom message unmarshalling.
<DT><A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html#unmarshalFromTextMessage(javax.jms.TextMessage, org.springframework.oxm.Unmarshaller)"><B>unmarshalFromTextMessage(TextMessage, Unmarshaller)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/MarshallingMessageConverter.html" title="class in org.springframework.jms.support.converter">MarshallingMessageConverter</A>
<DD>Unmarshal the given <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/TextMessage.html?is-external=true" title="class or interface in javax.jms"><CODE>TextMessage</CODE></A> into an object.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalInputStream(java.io.InputStream)"><B>unmarshalInputStream(InputStream)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalInputStream(java.io.InputStream)"><B>unmarshalInputStream(InputStream)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalInputStream(java.io.InputStream)"><B>unmarshalInputStream(InputStream)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling from a given <code>InputStream</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalInputStream(java.io.InputStream)"><B>unmarshalInputStream(InputStream)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalInputStream(java.io.InputStream)"><B>unmarshalInputStream(InputStream)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/Unmarshaller.html" title="interface in org.springframework.oxm"><B>Unmarshaller</B></A> - Interface in <A HREF="../org/springframework/oxm/package-summary.html">org.springframework.oxm</A><DD>Defines the contract for Object XML Mapping unmarshallers.<DT><A HREF="../org/springframework/oxm/UnmarshallingFailureException.html" title="class in org.springframework.oxm"><B>UnmarshallingFailureException</B></A> - Exception in <A HREF="../org/springframework/oxm/package-summary.html">org.springframework.oxm</A><DD>Exception thrown on unmarshalling failure.<DT><A HREF="../org/springframework/oxm/UnmarshallingFailureException.html#UnmarshallingFailureException(java.lang.String)"><B>UnmarshallingFailureException(String)</B></A> - 
Constructor for exception org.springframework.oxm.<A HREF="../org/springframework/oxm/UnmarshallingFailureException.html" title="class in org.springframework.oxm">UnmarshallingFailureException</A>
<DD>Construct a <code>MarshallingFailureException</code> with the specified detail message.
<DT><A HREF="../org/springframework/oxm/UnmarshallingFailureException.html#UnmarshallingFailureException(java.lang.String, java.lang.Throwable)"><B>UnmarshallingFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.oxm.<A HREF="../org/springframework/oxm/UnmarshallingFailureException.html" title="class in org.springframework.oxm">UnmarshallingFailureException</A>
<DD>Construct a <code>MarshallingFailureException</code> with the specified detail message
 and nested exception.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalReader(java.io.Reader)"><B>unmarshalReader(Reader)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalReader(java.io.Reader)"><B>unmarshalReader(Reader)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalReader(java.io.Reader)"><B>unmarshalReader(Reader)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling from a given <code>Reader</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalReader(java.io.Reader)"><B>unmarshalReader(Reader)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalReader(java.io.Reader)"><B>unmarshalReader(Reader)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)"><B>unmarshalSaxReader(XMLReader, InputSource)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)"><B>unmarshalSaxReader(XMLReader, InputSource)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)"><B>unmarshalSaxReader(XMLReader, InputSource)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling using a given SAX <code>XMLReader</code>
 and <code>InputSource</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)"><B>unmarshalSaxReader(XMLReader, InputSource)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource)"><B>unmarshalSaxReader(XMLReader, InputSource)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalSaxSource(javax.xml.transform.sax.SAXSource)"><B>unmarshalSaxSource(SAXSource)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Template method for handling <code>SAXSource</code>s.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalStaxSource(javax.xml.transform.Source)"><B>unmarshalStaxSource(Source)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Template method for handling <code>StaxSource</code>s.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalStreamSource(javax.xml.transform.stream.StreamSource)"><B>unmarshalStreamSource(StreamSource)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Template method for handling <code>StreamSource</code>s.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)"><B>unmarshalXmlEventReader(XMLEventReader)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)"><B>unmarshalXmlEventReader(XMLEventReader)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)"><B>unmarshalXmlEventReader(XMLEventReader)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling from a given Stax <code>XMLEventReader</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)"><B>unmarshalXmlEventReader(XMLEventReader)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)"><B>unmarshalXmlEventReader(XMLEventReader)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)"><B>unmarshalXmlStreamReader(XMLStreamReader)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)"><B>unmarshalXmlStreamReader(XMLStreamReader)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)"><B>unmarshalXmlStreamReader(XMLStreamReader)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Abstract template method for unmarshalling from a given Stax <code>XMLStreamReader</code>.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)"><B>unmarshalXmlStreamReader(XMLStreamReader)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)"><B>unmarshalXmlStreamReader(XMLStreamReader)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#unqualify(java.lang.String)"><B>unqualify(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Unqualify a string qualified by a '.' dot character.
<DT><A HREF="../org/springframework/util/StringUtils.html#unqualify(java.lang.String, char)"><B>unqualify(String, char)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Unqualify a string qualified by a separator character.
<DT><A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#unregisterBeans()"><B>unregisterBeans()</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html" title="class in org.springframework.jmx.support">MBeanRegistrationSupport</A>
<DD>Unregisters all beans that have been registered by an instance of this class.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#unregisterManagedResource(javax.management.ObjectName)"><B>unregisterManagedResource(ObjectName)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/MBeanExportOperations.html#unregisterManagedResource(javax.management.ObjectName)"><B>unregisterManagedResource(ObjectName)</B></A> - 
Method in interface org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExportOperations.html" title="interface in org.springframework.jmx.export">MBeanExportOperations</A>
<DD>Remove the specified MBean from the underlying MBeanServer registry.
<DT><A HREF="../org/springframework/web/bind/support/WebArgumentResolver.html#UNRESOLVED"><B>UNRESOLVED</B></A> - 
Static variable in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>
<DD>Marker to be returned when the resolver does not know how to
 handle the given method parameter.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html#UNRESOLVED"><B>UNRESOLVED</B></A> - 
Static variable in interface org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>
<DD>Marker to be returned when the resolver does not know how to handle the given method parameter.
<DT><A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html" title="class in org.springframework.beans.factory"><B>UnsatisfiedDependencyException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when a bean depends on other beans or simple properties
 that were not specified in the bean factory definition, although
 dependency checking was enabled.<DT><A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html#UnsatisfiedDependencyException(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><B>UnsatisfiedDependencyException(String, String, String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html" title="class in org.springframework.beans.factory">UnsatisfiedDependencyException</A>
<DD>Create a new UnsatisfiedDependencyException.
<DT><A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html#UnsatisfiedDependencyException(java.lang.String, java.lang.String, java.lang.String, org.springframework.beans.BeansException)"><B>UnsatisfiedDependencyException(String, String, String, BeansException)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html" title="class in org.springframework.beans.factory">UnsatisfiedDependencyException</A>
<DD>Create a new UnsatisfiedDependencyException.
<DT><A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html#UnsatisfiedDependencyException(java.lang.String, java.lang.String, int, java.lang.Class, java.lang.String)"><B>UnsatisfiedDependencyException(String, String, int, Class, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html" title="class in org.springframework.beans.factory">UnsatisfiedDependencyException</A>
<DD>Create a new UnsatisfiedDependencyException.
<DT><A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html#UnsatisfiedDependencyException(java.lang.String, java.lang.String, int, java.lang.Class, org.springframework.beans.BeansException)"><B>UnsatisfiedDependencyException(String, String, int, Class, BeansException)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/UnsatisfiedDependencyException.html" title="class in org.springframework.beans.factory">UnsatisfiedDependencyException</A>
<DD>Create a new UnsatisfiedDependencyException.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#unsatisfiedNonSimpleProperties(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.BeanWrapper)"><B>unsatisfiedNonSimpleProperties(AbstractBeanDefinition, BeanWrapper)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Return an array of non-simple bean properties that are unsatisfied.
<DT><A HREF="../org/springframework/web/bind/UnsatisfiedServletRequestParameterException.html" title="class in org.springframework.web.bind"><B>UnsatisfiedServletRequestParameterException</B></A> - Exception in <A HREF="../org/springframework/web/bind/package-summary.html">org.springframework.web.bind</A><DD><A HREF="../org/springframework/web/bind/ServletRequestBindingException.html" title="class in org.springframework.web.bind"><CODE>ServletRequestBindingException</CODE></A> subclass that indicates an unsatisfied
 parameter condition, as typically expressed using an <code>@RequestMapping</code>
 annotation at the <code>@Controller</code> type level.<DT><A HREF="../org/springframework/web/bind/UnsatisfiedServletRequestParameterException.html#UnsatisfiedServletRequestParameterException(java.lang.String[], java.util.Map)"><B>UnsatisfiedServletRequestParameterException(String[], Map)</B></A> - 
Constructor for exception org.springframework.web.bind.<A HREF="../org/springframework/web/bind/UnsatisfiedServletRequestParameterException.html" title="class in org.springframework.web.bind">UnsatisfiedServletRequestParameterException</A>
<DD>Create a new UnsatisfiedServletRequestParameterException.
<DT><A HREF="../org/springframework/jdbc/datasource/AbstractDataSource.html#unwrap(java.lang.Class)"><B>unwrap(Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/AbstractDataSource.html" title="class in org.springframework.jdbc.datasource">AbstractDataSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/DelegatingDataSource.html#unwrap(java.lang.Class)"><B>unwrap(Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DelegatingDataSource.html" title="class in org.springframework.jdbc.datasource">DelegatingDataSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/beanvalidation/SpringValidatorAdapter.html#unwrap(java.lang.Class)"><B>unwrap(Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/SpringValidatorAdapter.html" title="class in org.springframework.validation.beanvalidation">SpringValidatorAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="class in org.springframework.jdbc.object"><B>UpdatableSqlQuery</B></A>&lt;<A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="type parameter in UpdatableSqlQuery">T</A>&gt; - Class in <A HREF="../org/springframework/jdbc/object/package-summary.html">org.springframework.jdbc.object</A><DD>Reusable RDBMS query in which concrete subclasses must implement
 the abstract updateRow(ResultSet, int, context) method to update each 
 row of the JDBC ResultSet and optionally map contents into an object.<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html#UpdatableSqlQuery()"><B>UpdatableSqlQuery()</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="class in org.springframework.jdbc.object">UpdatableSqlQuery</A>
<DD>Constructor to allow use as a JavaBean
<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html#UpdatableSqlQuery(javax.sql.DataSource, java.lang.String)"><B>UpdatableSqlQuery(DataSource, String)</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="class in org.springframework.jdbc.object">UpdatableSqlQuery</A>
<DD>Convenient constructor with DataSource and SQL string.
<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.RowMapperImpl.html" title="class in org.springframework.jdbc.object"><B>UpdatableSqlQuery.RowMapperImpl</B></A> - Class in <A HREF="../org/springframework/jdbc/object/package-summary.html">org.springframework.jdbc.object</A><DD>Implementation of RowMapper that calls the enclosing
 class's <code>updateRow()</code> method for each row.<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.RowMapperImpl.html#UpdatableSqlQuery.RowMapperImpl(java.util.Map)"><B>UpdatableSqlQuery.RowMapperImpl(Map)</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.RowMapperImpl.html" title="class in org.springframework.jdbc.object">UpdatableSqlQuery.RowMapperImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(java.lang.String)"><B>update(String)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue a single SQL update operation (such as an insert, update or delete statement).
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(org.springframework.jdbc.core.PreparedStatementCreator)"><B>update(PreparedStatementCreator)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue a single SQL update operation (such as an insert, update or delete statement)
 using a PreparedStatementCreator to provide SQL and any required parameters.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.support.KeyHolder)"><B>update(PreparedStatementCreator, KeyHolder)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue an update statement using a PreparedStatementCreator to provide SQL and
 any required parameters.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)"><B>update(String, PreparedStatementSetter)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue an update statement using a PreparedStatementSetter to set bind parameters,
 with given SQL.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(java.lang.String, java.lang.Object[], int[])"><B>update(String, Object[], int[])</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue a single SQL update operation (such as an insert, update or delete statement)
 via a prepared statement, binding the given arguments.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#update(java.lang.String, java.lang.Object...)"><B>update(String, Object...)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue a single SQL update operation (such as an insert, update or delete statement)
 via a prepared statement, binding the given arguments.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(java.lang.String)"><B>update(String)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.PreparedStatementSetter)"><B>update(PreparedStatementCreator, PreparedStatementSetter)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(org.springframework.jdbc.core.PreparedStatementCreator)"><B>update(PreparedStatementCreator)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.support.KeyHolder)"><B>update(PreparedStatementCreator, KeyHolder)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)"><B>update(String, PreparedStatementSetter)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(java.lang.String, java.lang.Object[], int[])"><B>update(String, Object[], int[])</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#update(java.lang.String, java.lang.Object...)"><B>update(String, Object...)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><B>update(String, SqlParameterSource)</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Issue an update via a prepared statement, binding the given arguments.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, java.util.Map)"><B>update(String, Map&lt;String, ?&gt;)</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Issue an update via a prepared statement, binding the given arguments.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)"><B>update(String, SqlParameterSource, KeyHolder)</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])"><B>update(String, SqlParameterSource, KeyHolder, String[])</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Issue an update via a prepared statement, binding the given arguments,
 returning generated keys.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><B>update(String, SqlParameterSource)</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#update(java.lang.String, java.util.Map)"><B>update(String, Map&lt;String, ?&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder)"><B>update(String, SqlParameterSource, KeyHolder)</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource, org.springframework.jdbc.support.KeyHolder, java.lang.String[])"><B>update(String, SqlParameterSource, KeyHolder, String[])</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#update(java.lang.String, java.util.Map)"><B>update(String, Map&lt;String, ?&gt;)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute the supplied SQL statement with (optional) supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><B>update(String, SqlParameterSource)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute the supplied SQL statement with supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#update(java.lang.String, java.lang.Object...)"><B>update(String, Object...)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute the supplied SQL statement with supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#update(java.lang.String, java.util.Map)"><B>update(String, Map&lt;String, ?&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#update(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><B>update(String, SqlParameterSource)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#update(java.lang.String, java.lang.Object...)"><B>update(String, Object...)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#update(java.lang.Object...)"><B>update(Object...)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Overridden version of <code>update</code> that adds the given statement
 parameters to the queue rather than executing them immediately.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(java.lang.Object...)"><B>update(Object...)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Generic method to execute the update given parameters.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(java.lang.Object[], org.springframework.jdbc.support.KeyHolder)"><B>update(Object[], KeyHolder)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Method to execute the update given arguments and 
 retrieve the generated keys using a KeyHolder.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update()"><B>update()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenience method to execute an update with no parameters.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(int)"><B>update(int)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given one int arg.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(int, int)"><B>update(int, int)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given two int args.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(long)"><B>update(long)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given one long arg.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(long, long)"><B>update(long, long)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given two long args.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(java.lang.String)"><B>update(String)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given one String arg.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#update(java.lang.String, java.lang.String)"><B>update(String, String)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Convenient method to execute an update given two String args.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#update(java.lang.Object)"><B>update(Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update the given persistent instance,
 associating it with the current Hibernate <CODE>Session</CODE>.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#update(java.lang.Object, org.hibernate.LockMode)"><B>update(Object, LockMode)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update the given persistent instance,
 associating it with the current Hibernate <CODE>Session</CODE>.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#update(java.lang.String, java.lang.Object)"><B>update(String, Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update the given persistent instance,
 associating it with the current Hibernate <CODE>Session</CODE>.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#update(java.lang.String, java.lang.Object, org.hibernate.LockMode)"><B>update(String, Object, LockMode)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update the given persistent instance,
 associating it with the current Hibernate <CODE>Session</CODE>.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#update(java.lang.Object)"><B>update(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#update(java.lang.Object, org.hibernate.LockMode)"><B>update(Object, LockMode)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#update(java.lang.String, java.lang.Object)"><B>update(String, Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#update(java.lang.String, java.lang.Object, org.hibernate.LockMode)"><B>update(String, Object, LockMode)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html#update(java.lang.String)"><B>update(String)</B></A> - 
Method in interface org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html" title="interface in org.springframework.orm.ibatis">SqlMapClientOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html#update(java.lang.String, java.lang.Object)"><B>update(String, Object)</B></A> - 
Method in interface org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html" title="interface in org.springframework.orm.ibatis">SqlMapClientOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html#update(java.lang.String, java.lang.Object, int)"><B>update(String, Object, int)</B></A> - 
Method in interface org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html" title="interface in org.springframework.orm.ibatis">SqlMapClientOperations</A>
<DD>Convenience method provided by Spring: execute an update operation
 with an automatic check that the update affected the given required
 number of rows.
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html#update(java.lang.String)"><B>update(String)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html" title="class in org.springframework.orm.ibatis">SqlMapClientTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html#update(java.lang.String, java.lang.Object)"><B>update(String, Object)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html" title="class in org.springframework.orm.ibatis">SqlMapClientTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html#update(java.lang.String, java.lang.Object, int)"><B>update(String, Object, int)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html" title="class in org.springframework.orm.ibatis">SqlMapClientTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/support/SimpleTriggerContext.html#update(java.util.Date, java.util.Date, java.util.Date)"><B>update(Date, Date, Date)</B></A> - 
Method in class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/SimpleTriggerContext.html" title="class in org.springframework.scheduling.support">SimpleTriggerContext</A>
<DD>Update this holder's state with the latest time values.
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#updateAccessedSessionAttributes()"><B>updateAccessedSessionAttributes()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Update all session attributes that have been accessed during request processing,
 to expose their potentially updated state to the underlying session manager.
<DT><A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html#updateAccessedSessionAttributes()"><B>updateAccessedSessionAttributes()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html" title="class in org.springframework.web.context.request">ServletRequestAttributes</A>
<DD>Update all accessed session attributes through <code>session.setAttribute</code>
 calls, explicitly indicating to the container that they might have been modified.
<DT><A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html#updateAccessedSessionAttributes()"><B>updateAccessedSessionAttributes()</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html" title="class in org.springframework.web.portlet.context">PortletRequestAttributes</A>
<DD>Update all accessed session attributes through <code>session.setAttribute</code>
 calls, explicitly indicating to the container that they might have been modified.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#updateAdvisorArray()"><B>updateAdvisorArray()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>Bring the array up to date with the list.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#updateByNamedParam(java.util.Map)"><B>updateByNamedParam(Map&lt;String, ?&gt;)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Generic method to execute the update given named parameters.
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#updateByNamedParam(java.util.Map, org.springframework.jdbc.support.KeyHolder)"><B>updateByNamedParam(Map&lt;String, ?&gt;, KeyHolder)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Method to execute the update given arguments and
 retrieve the generated keys using a KeyHolder.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html#updateDatabaseSchema()"><B>updateDatabaseSchema()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">LocalSessionFactoryBean</A>
<DD>Execute schema update script, determined by the Configuration object
 used for creating the SessionFactory.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#updateModelAttributes(java.lang.Object, java.util.Map, org.springframework.ui.ExtendedModelMap, org.springframework.web.context.request.NativeWebRequest)"><B>updateModelAttributes(Object, Map&lt;String, Object&gt;, ExtendedModelMap, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html#updateRow(java.sql.ResultSet, int, java.util.Map)"><B>updateRow(ResultSet, int, Map)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/UpdatableSqlQuery.html" title="class in org.springframework.jdbc.object">UpdatableSqlQuery</A>
<DD>Subclasses must implement this method to update each row of the 
 ResultSet and optionally create object of the result type.
<DT><A HREF="../org/springframework/web/servlet/HandlerMapping.html#URI_TEMPLATE_VARIABLES_ATTRIBUTE"><B>URI_TEMPLATE_VARIABLES_ATTRIBUTE</B></A> - 
Static variable in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HandlerMapping.html" title="interface in org.springframework.web.servlet">HandlerMapping</A>
<DD>Name of the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A> attribute that contains the URI
 templates map, mapping variable names to values.
<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors"><B>URIEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>java.net.URI</code>, to directly populate a URI property
 instead of using a String property as bridge.<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html#URIEditor()"><B>URIEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors">URIEditor</A>
<DD>Create a new, encoding URIEditor, converting "classpath:" locations into
 standard URIs (not trying to resolve them into physical resources).
<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html#URIEditor(boolean)"><B>URIEditor(boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors">URIEditor</A>
<DD>Create a new URIEditor, converting "classpath:" locations into
 standard URIs (not trying to resolve them into physical resources).
<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html#URIEditor(java.lang.ClassLoader)"><B>URIEditor(ClassLoader)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors">URIEditor</A>
<DD>Create a new URIEditor, using the given ClassLoader to resolve
 "classpath:" locations into physical resource URLs.
<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html#URIEditor(java.lang.ClassLoader, boolean)"><B>URIEditor(ClassLoader, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors">URIEditor</A>
<DD>Create a new URIEditor, using the given ClassLoader to resolve
 "classpath:" locations into physical resource URLs.
<DT><A HREF="../org/springframework/web/util/UriTemplate.html" title="class in org.springframework.web.util"><B>UriTemplate</B></A> - Class in <A HREF="../org/springframework/web/util/package-summary.html">org.springframework.web.util</A><DD>Represents a URI template.<DT><A HREF="../org/springframework/web/util/UriTemplate.html#UriTemplate(java.lang.String)"><B>UriTemplate(String)</B></A> - 
Constructor for class org.springframework.web.util.<A HREF="../org/springframework/web/util/UriTemplate.html" title="class in org.springframework.web.util">UriTemplate</A>
<DD>Construct a new <A HREF="../org/springframework/web/util/UriTemplate.html" title="class in org.springframework.web.util"><CODE>UriTemplate</CODE></A> with the given URI String.
<DT><A HREF="../org/springframework/web/util/UriUtils.html" title="class in org.springframework.web.util"><B>UriUtils</B></A> - Class in <A HREF="../org/springframework/web/util/package-summary.html">org.springframework.web.util</A><DD>Utility class for URI encoding and decoding based on RFC 3986.<DT><A HREF="../org/springframework/web/util/UriUtils.html#UriUtils()"><B>UriUtils()</B></A> - 
Constructor for class org.springframework.web.util.<A HREF="../org/springframework/web/util/UriUtils.html" title="class in org.springframework.web.util">UriUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_CODE_SOURCE"><B>URL_PROTOCOL_CODE_SOURCE</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for an entry from an OC4J jar file: "code-source"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_FILE"><B>URL_PROTOCOL_FILE</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for a file in the file system: "file"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_JAR"><B>URL_PROTOCOL_JAR</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for an entry from a jar file: "jar"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_VFS"><B>URL_PROTOCOL_VFS</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for a JBoss VFS resource: "vfs"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_VFSZIP"><B>URL_PROTOCOL_VFSZIP</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for an entry from a JBoss jar file: "vfszip"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_WSJAR"><B>URL_PROTOCOL_WSJAR</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for an entry from a WebSphere jar file: "wsjar"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#URL_PROTOCOL_ZIP"><B>URL_PROTOCOL_ZIP</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>URL protocol for an entry from a zip file: "zip"
<DT><A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html#URL_TYPE_ACTION"><B>URL_TYPE_ACTION</B></A> - 
Static variable in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html" title="class in org.springframework.mock.web.portlet">MockBaseURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html#URL_TYPE_ACTION"><B>URL_TYPE_ACTION</B></A> - 
Static variable in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html" title="class in org.springframework.mock.web.portlet">MockPortletURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html#URL_TYPE_RENDER"><B>URL_TYPE_RENDER</B></A> - 
Static variable in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html" title="class in org.springframework.mock.web.portlet">MockBaseURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html#URL_TYPE_RENDER"><B>URL_TYPE_RENDER</B></A> - 
Static variable in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html" title="class in org.springframework.mock.web.portlet">MockPortletURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/UrlBasedRemoteAccessor.html" title="class in org.springframework.remoting.support"><B>UrlBasedRemoteAccessor</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Abstract base class for classes that access remote services via URLs.<DT><A HREF="../org/springframework/remoting/support/UrlBasedRemoteAccessor.html#UrlBasedRemoteAccessor()"><B>UrlBasedRemoteAccessor()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/UrlBasedRemoteAccessor.html" title="class in org.springframework.remoting.support">UrlBasedRemoteAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view"><B>UrlBasedViewResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>Simple implementation of the <A HREF="../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet"><CODE>ViewResolver</CODE></A>
 interface, allowing for direct resolution of symbolic view names to URLs,
 without explicit mapping definition.<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#UrlBasedViewResolver()"><B>UrlBasedViewResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/URLEditor.html" title="class in org.springframework.beans.propertyeditors"><B>URLEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>java.net.URL</code>, to directly populate a URL property
 instead of using a String property as bridge.<DT><A HREF="../org/springframework/beans/propertyeditors/URLEditor.html#URLEditor()"><B>URLEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URLEditor.html" title="class in org.springframework.beans.propertyeditors">URLEditor</A>
<DD>Create a new URLEditor, using the default ResourceEditor underneath.
<DT><A HREF="../org/springframework/beans/propertyeditors/URLEditor.html#URLEditor(org.springframework.core.io.ResourceEditor)"><B>URLEditor(ResourceEditor)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URLEditor.html" title="class in org.springframework.beans.propertyeditors">URLEditor</A>
<DD>Create a new URLEditor, using the given ResourceEditor underneath.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#urlEncode(java.lang.String, java.lang.String)"><B>urlEncode(String, String)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>URL-encode the given input String with the given encoding scheme.
<DT><A HREF="../org/springframework/web/servlet/mvc/UrlFilenameViewController.html" title="class in org.springframework.web.servlet.mvc"><B>UrlFilenameViewController</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/package-summary.html">org.springframework.web.servlet.mvc</A><DD>Simple <code>Controller</code> implementation that transforms the virtual
 path of a URL into a view name and returns that view.<DT><A HREF="../org/springframework/web/servlet/mvc/UrlFilenameViewController.html#UrlFilenameViewController()"><B>UrlFilenameViewController()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/UrlFilenameViewController.html" title="class in org.springframework.web.servlet.mvc">UrlFilenameViewController</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/UrlPathHelper.html" title="class in org.springframework.web.util"><B>UrlPathHelper</B></A> - Class in <A HREF="../org/springframework/web/util/package-summary.html">org.springframework.web.util</A><DD>Helper class for URL path matching.<DT><A HREF="../org/springframework/web/util/UrlPathHelper.html#UrlPathHelper()"><B>UrlPathHelper()</B></A> - 
Constructor for class org.springframework.web.util.<A HREF="../org/springframework/web/util/UrlPathHelper.html" title="class in org.springframework.web.util">UrlPathHelper</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/UrlResource.html" title="class in org.springframework.core.io"><B>UrlResource</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> implementation for <code>java.net.URL</code> locators.<DT><A HREF="../org/springframework/core/io/UrlResource.html#UrlResource(java.net.URL)"><B>UrlResource(URL)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/UrlResource.html" title="class in org.springframework.core.io">UrlResource</A>
<DD>Create a new UrlResource.
<DT><A HREF="../org/springframework/core/io/UrlResource.html#UrlResource(java.net.URI)"><B>UrlResource(URI)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/UrlResource.html" title="class in org.springframework.core.io">UrlResource</A>
<DD>Create a new UrlResource.
<DT><A HREF="../org/springframework/core/io/UrlResource.html#UrlResource(java.lang.String)"><B>UrlResource(String)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/UrlResource.html" title="class in org.springframework.core.io">UrlResource</A>
<DD>Create a new UrlResource.
<DT><A HREF="../org/springframework/web/servlet/tags/UrlTag.html" title="class in org.springframework.web.servlet.tags"><B>UrlTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/package-summary.html">org.springframework.web.servlet.tags</A><DD>JSP tag for creating URLs.<DT><A HREF="../org/springframework/web/servlet/tags/UrlTag.html#UrlTag()"><B>UrlTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/UrlTag.html" title="class in org.springframework.web.servlet.tags">UrlTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/access/BeanFactoryLocator.html#useBeanFactory(java.lang.String)"><B>useBeanFactory(String)</B></A> - 
Method in interface org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/BeanFactoryLocator.html" title="interface in org.springframework.beans.factory.access">BeanFactoryLocator</A>
<DD>Use the <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A> (or derived
 interface such as <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A>)
 specified by the <code>factoryKey</code> parameter.
<DT><A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html#useBeanFactory(java.lang.String)"><B>useBeanFactory(String)</B></A> - 
Method in class org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html" title="class in org.springframework.beans.factory.access">SingletonBeanFactoryLocator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html#useBeanFactory(java.lang.String)"><B>useBeanFactory(String)</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextJndiBeanFactoryLocator</A>
<DD>Load/use a bean factory, as specified by a factory key which is a JNDI
 address, of the form <code>java:comp/env/ejb/BeanFactoryPath</code>.
<DT><A HREF="../org/springframework/mock/web/portlet/MockCacheControl.html#useCachedContent()"><B>useCachedContent()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockCacheControl.html" title="class in org.springframework.mock.web.portlet">MockCacheControl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#useConfigValueEditors()"><B>useConfigValueEditors()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>Activate config value editors which are only intended for configuration purposes,
 such as <A HREF="../org/springframework/beans/propertyeditors/StringArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors"><CODE>StringArrayPropertyEditor</CODE></A>.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#useDirectFieldAccess()"><B>useDirectFieldAccess()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether to use direct field access instead of bean property access.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#useDirectFieldAccess()"><B>useDirectFieldAccess()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether to use direct field access instead of bean property access.
<DT><A HREF="../org/springframework/web/servlet/mvc/ServletForwardingController.html#useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>useInclude(HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/ServletForwardingController.html" title="class in org.springframework.web.servlet.mvc">ServletForwardingController</A>
<DD>Determine whether to use RequestDispatcher's <code>include</code> or
 <code>forward</code> method.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#useInclude(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>useInclude(HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Determine whether to use RequestDispatcher's <code>include</code> or
 <code>forward</code> method.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html#useInParameterNames(java.lang.String...)"><B>useInParameterNames(String...)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcCall</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html#useInParameterNames(java.lang.String...)"><B>useInParameterNames(String...)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcCallOperations</A>
<DD>Not used yet
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html#useNativeJdbcExtractorForMetaData(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)"><B>useNativeJdbcExtractorForMetaData(NativeJdbcExtractor)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcInsert</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html#useNativeJdbcExtractorForMetaData(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)"><B>useNativeJdbcExtractorForMetaData(NativeJdbcExtractor)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcInsertOperations</A>
<DD>Use a the provided NativeJdbcExtractor during the column meta data
 lookups via JDBC.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#USER_DECLARED_METHODS"><B>USER_DECLARED_METHODS</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Pre-built MethodFilter that matches all non-bridge methods
 which are not declared on <code>java.lang.Object</code>.
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection"><B>UserCredentialsConnectionFactoryAdapter</B></A> - Class in <A HREF="../org/springframework/jms/connection/package-summary.html">org.springframework.jms.connection</A><DD>An adapter for a target JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/ConnectionFactory.html?is-external=true" title="class or interface in javax.jms"><CODE>ConnectionFactory</CODE></A>, applying the
 given user credentials to every standard <code>createConnection()</code> call,
 that is, implicitly invoking <code>createConnection(username, password)</code>
 on the target.<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#UserCredentialsConnectionFactoryAdapter()"><B>UserCredentialsConnectionFactoryAdapter()</B></A> - 
Constructor for class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource"><B>UserCredentialsDataSourceAdapter</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/package-summary.html">org.springframework.jdbc.datasource</A><DD>An adapter for a target JDBC <A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/DataSource.html?is-external=true" title="class or interface in javax.sql"><CODE>DataSource</CODE></A>, applying the specified
 user credentials to every standard <code>getConnection()</code> call, implicitly
 invoking <code>getConnection(username, password)</code> on the target.<DT><A HREF="../org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html#UserCredentialsDataSourceAdapter()"><B>UserCredentialsDataSourceAdapter()</B></A> - 
Constructor for class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource">UserCredentialsDataSourceAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html" title="class in org.springframework.web.portlet.handler"><B>UserRoleAuthorizationInterceptor</B></A> - Class in <A HREF="../org/springframework/web/portlet/handler/package-summary.html">org.springframework.web.portlet.handler</A><DD>Interceptor that checks the authorization of the current user via the
 user's roles, as evaluated by PortletRequest's isUserInRole method.<DT><A HREF="../org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html#UserRoleAuthorizationInterceptor()"><B>UserRoleAuthorizationInterceptor()</B></A> - 
Constructor for class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/UserRoleAuthorizationInterceptor.html" title="class in org.springframework.web.portlet.handler">UserRoleAuthorizationInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html" title="class in org.springframework.web.servlet.handler"><B>UserRoleAuthorizationInterceptor</B></A> - Class in <A HREF="../org/springframework/web/servlet/handler/package-summary.html">org.springframework.web.servlet.handler</A><DD>Interceptor that checks the authorization of the current user via the
 user's roles, as evaluated by HttpServletRequest's isUserInRole method.<DT><A HREF="../org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html#UserRoleAuthorizationInterceptor()"><B>UserRoleAuthorizationInterceptor()</B></A> - 
Constructor for class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/UserRoleAuthorizationInterceptor.html" title="class in org.springframework.web.servlet.handler">UserRoleAuthorizationInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html" title="class in org.springframework.transaction.jta"><B>UserTransactionAdapter</B></A> - Class in <A HREF="../org/springframework/transaction/jta/package-summary.html">org.springframework.transaction.jta</A><DD>Adapter for a JTA UserTransaction handle, taking a JTA
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/transaction/TransactionManager.html?is-external=true" title="class or interface in javax.transaction"><CODE>TransactionManager</CODE></A> reference and creating
 a JTA <A HREF="http://java.sun.com/javase/6/docs/api/javax/transaction/UserTransaction.html?is-external=true" title="class or interface in javax.transaction"><CODE>UserTransaction</CODE></A> handle for it.<DT><A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html#UserTransactionAdapter(javax.transaction.TransactionManager)"><B>UserTransactionAdapter(TransactionManager)</B></A> - 
Constructor for class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html" title="class in org.springframework.transaction.jta">UserTransactionAdapter</A>
<DD>Create a new UserTransactionAdapter for the given TransactionManager.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#useSavepointForNestedTransaction()"><B>useSavepointForNestedTransaction()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>This implementation returns false to cause a further invocation
 of doBegin despite an already existing transaction.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#useSavepointForNestedTransaction()"><B>useSavepointForNestedTransaction()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether to use a savepoint for a nested transaction.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#useWeakValue(K, V)"><B>useWeakValue(K, V)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Decide whether to use a weak reference for the value of
 the given key-value pair.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsSingleFormatView</A>
<DD>Return whether to use a <code>java.io.Writer</code> to write text content
 to the HTTP response.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">ConfigurableJasperReportsView</A>
<DD>Indicates how the <CODE>JRExporter</CODE> should render its data.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsCsvView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsHtmlView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsPdfView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsXlsView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#useWriter()"><B>useWriter()</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;Return whether to use a <code>java.io.Writer</code> to write text content
 to the HTTP response.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html#usingColumns(java.lang.String...)"><B>usingColumns(String...)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcInsert</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html#usingColumns(java.lang.String...)"><B>usingColumns(String...)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcInsertOperations</A>
<DD>Specify the column names that the insert statement should be limited to use.
<DT><A HREF="../org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html#usingContext()"><B>usingContext()</B></A> - 
Method in class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.html" title="class in org.springframework.validation.beanvalidation">LocalValidatorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html#usingGeneratedKeyColumns(java.lang.String...)"><B>usingGeneratedKeyColumns(String...)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcInsert</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html#usingGeneratedKeyColumns(java.lang.String...)"><B>usingGeneratedKeyColumns(String...)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcInsertOperations</A>
<DD>Specify the name sof any columns that have auto generated keys.
<DT><A HREF="../org/springframework/beans/factory/xml/UtilNamespaceHandler.html" title="class in org.springframework.beans.factory.xml"><B>UtilNamespaceHandler</B></A> - Class in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD><A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html" title="interface in org.springframework.beans.factory.xml"><CODE>NamespaceHandler</CODE></A> for the <code>util</code> namespace.<DT><A HREF="../org/springframework/beans/factory/xml/UtilNamespaceHandler.html#UtilNamespaceHandler()"><B>UtilNamespaceHandler()</B></A> - 
Constructor for class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/UtilNamespaceHandler.html" title="class in org.springframework.beans.factory.xml">UtilNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/UUIDEditor.html" title="class in org.springframework.beans.propertyeditors"><B>UUIDEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>java.util.UUID</code>, translating UUID
 String representations into UUID objects and back.<DT><A HREF="../org/springframework/beans/propertyeditors/UUIDEditor.html#UUIDEditor()"><B>UUIDEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/UUIDEditor.html" title="class in org.springframework.beans.propertyeditors">UUIDEditor</A>
<DD>&nbsp;
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-20.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-22.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-21.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-21.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>

</BODY>
</HTML>
