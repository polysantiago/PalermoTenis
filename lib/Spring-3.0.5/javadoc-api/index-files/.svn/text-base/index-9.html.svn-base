<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:26:19 BST 2010 -->
<TITLE>
I-Index
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="I-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-8.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-10.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-9.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-9.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>
<A NAME="_I_"><!-- --></A><H2>
<B>I</B></H2>
<DL>
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html#ID_ATTRIBUTE"><B>ID_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractBeanDefinitionParser</A>
<DD>Constant for the id attribute
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#ID_ATTRIBUTE"><B>ID_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/Identifier.html" title="class in org.springframework.expression.spel.ast"><B>Identifier</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>&nbsp;<DT><A HREF="../org/springframework/expression/spel/ast/Identifier.html#Identifier(java.lang.String, int)"><B>Identifier(String, int)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/Identifier.html" title="class in org.springframework.expression.spel.ast">Identifier</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/JmxUtils.html#IDENTITY_OBJECT_NAME_KEY"><B>IDENTITY_OBJECT_NAME_KEY</B></A> - 
Static variable in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/JmxUtils.html" title="class in org.springframework.jmx.support">JmxUtils</A>
<DD>The key used when extending an existing <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/ObjectName.html?is-external=true" title="class or interface in javax.management"><CODE>ObjectName</CODE></A> with the
 identity hash code of its corresponding managed resource.
<DT><A HREF="../org/springframework/jmx/export/naming/IdentityNamingStrategy.html" title="class in org.springframework.jmx.export.naming"><B>IdentityNamingStrategy</B></A> - Class in <A HREF="../org/springframework/jmx/export/naming/package-summary.html">org.springframework.jmx.export.naming</A><DD>An implementation of the <code>ObjectNamingStrategy</code> interface that
 creates a name based on the the identity of a given instance.<DT><A HREF="../org/springframework/jmx/export/naming/IdentityNamingStrategy.html#IdentityNamingStrategy()"><B>IdentityNamingStrategy()</B></A> - 
Constructor for class org.springframework.jmx.export.naming.<A HREF="../org/springframework/jmx/export/naming/IdentityNamingStrategy.html" title="class in org.springframework.jmx.export.naming">IdentityNamingStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ObjectUtils.html#identityToString(java.lang.Object)"><B>identityToString(Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Return a String representation of an object's overall identity.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#IDREF_ELEMENT"><B>IDREF_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html" title="class in org.springframework.orm.hibernate3.support"><B>IdTransferringMergeEventListener</B></A> - Class in <A HREF="../org/springframework/orm/hibernate3/support/package-summary.html">org.springframework.orm.hibernate3.support</A><DD>Extension of Hibernate's DefaultMergeEventListener, transferring the ids
 of newly saved objects to the corresponding original objects (that are part
 of the detached object graph passed into the <code>merge</code> method).<DT><A HREF="../org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html#IdTransferringMergeEventListener()"><B>IdTransferringMergeEventListener()</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener.html" title="class in org.springframework.orm.hibernate3.support">IdTransferringMergeEventListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/annotation/IfProfileValue.html" title="annotation in org.springframework.test.annotation"><B>IfProfileValue</B></A> - Annotation Type in <A HREF="../org/springframework/test/annotation/package-summary.html">org.springframework.test.annotation</A><DD>
 Test annotation to indicate that a test is enabled for a specific testing
 profile or environment.<DT><A HREF="../org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html#ignore(org.aspectj.bridge.IMessage.Kind)"><B>ignore(IMessage.Kind)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html" title="class in org.springframework.aop.aspectj">AspectJWeaverMessageHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#ignoreDependencyInterface(java.lang.Class)"><B>ignoreDependencyInterface(Class)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>
<DD>Ignore the given dependency interface for autowiring.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#ignoreDependencyInterface(java.lang.Class)"><B>ignoreDependencyInterface(Class)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Ignore the given dependency interface for autowiring.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#ignoreDependencyType(java.lang.Class)"><B>ignoreDependencyType(Class)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>
<DD>Ignore the given dependency type for autowiring:
 for example, String.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#ignoreDependencyType(java.lang.Class)"><B>ignoreDependencyType(Class)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Ignore the given dependency type for autowiring:
 for example, String.
<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html#ignoreResourceType(java.lang.String)"><B>ignoreResourceType(String)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html" title="class in org.springframework.context.annotation">CommonAnnotationBeanPostProcessor</A>
<DD>Ignore the given resource type when resolving <code>@Resource</code>
 annotations.
<DT><A HREF="../org/springframework/jms/IllegalStateException.html" title="class in org.springframework.jms"><B>IllegalStateException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>Runtime exception mirroring the JMS IllegalStateException.<DT><A HREF="../org/springframework/jms/IllegalStateException.html#IllegalStateException(javax.jms.IllegalStateException)"><B>IllegalStateException(IllegalStateException)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/IllegalStateException.html" title="class in org.springframework.jms">IllegalStateException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/IllegalTransactionStateException.html" title="class in org.springframework.transaction"><B>IllegalTransactionStateException</B></A> - Exception in <A HREF="../org/springframework/transaction/package-summary.html">org.springframework.transaction</A><DD>Exception thrown when the existence or non-existence of a transaction
 amounts to an illegal state according to the transaction propagation
 behavior that applies.<DT><A HREF="../org/springframework/transaction/IllegalTransactionStateException.html#IllegalTransactionStateException(java.lang.String)"><B>IllegalTransactionStateException(String)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/IllegalTransactionStateException.html" title="class in org.springframework.transaction">IllegalTransactionStateException</A>
<DD>Constructor for IllegalTransactionStateException.
<DT><A HREF="../org/springframework/transaction/IllegalTransactionStateException.html#IllegalTransactionStateException(java.lang.String, java.lang.Throwable)"><B>IllegalTransactionStateException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/IllegalTransactionStateException.html" title="class in org.springframework.transaction">IllegalTransactionStateException</A>
<DD>Constructor for IllegalTransactionStateException.
<DT><A HREF="../org/springframework/http/MediaType.html#IMAGE_GIF"><B>IMAGE_GIF</B></A> - 
Static variable in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Public constant media type for <code>image/gif</code>.
<DT><A HREF="../org/springframework/http/MediaType.html#IMAGE_JPEG"><B>IMAGE_JPEG</B></A> - 
Static variable in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Public constant media type for <code>image/jpeg</code>.
<DT><A HREF="../org/springframework/http/MediaType.html#IMAGE_PNG"><B>IMAGE_PNG</B></A> - 
Static variable in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Public constant media type for <code>image/png</code>.
<DT><A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html#implementInterfacesOnObject(java.lang.Object)"><B>implementInterfacesOnObject(Object)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html" title="class in org.springframework.aop.support">IntroductionInfoSupport</A>
<DD>Publish all interfaces that the given delegate implements at the proxy level.
<DT><A HREF="../org/springframework/aop/DynamicIntroductionAdvice.html#implementsInterface(java.lang.Class)"><B>implementsInterface(Class&lt;?&gt;)</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/DynamicIntroductionAdvice.html" title="interface in org.springframework.aop">DynamicIntroductionAdvice</A>
<DD>Does this introduction advice implement the given interface?
<DT><A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html#implementsInterface(java.lang.Class)"><B>implementsInterface(Class)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html" title="class in org.springframework.aop.support">IntroductionInfoSupport</A>
<DD>Check whether the specified interfaces is a published introduction interface.
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#IMPLICIT_MODEL_RENDER_PARAMETER"><B>IMPLICIT_MODEL_RENDER_PARAMETER</B></A> - 
Static variable in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.portlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#IMPLICIT_MODEL_SESSION_ATTRIBUTE"><B>IMPLICIT_MODEL_SESSION_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.portlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/Import.html" title="annotation in org.springframework.context.annotation"><B>Import</B></A> - Annotation Type in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Indicates one or more <A HREF="../org/springframework/context/annotation/Configuration.html" title="annotation in org.springframework.context.annotation"><CODE>Configuration</CODE></A> classes to import.<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#IMPORT_ELEMENT"><B>IMPORT_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#importBeanDefinitionResource(org.w3c.dom.Element)"><B>importBeanDefinitionResource(Element)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>Parse an "import" element and load the bean definitions
 from the given resource into the bean factory.
<DT><A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html" title="class in org.springframework.beans.factory.parsing"><B>ImportDefinition</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>Representation of an import that has been processed during the parsing process.<DT><A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html#ImportDefinition(java.lang.String)"><B>ImportDefinition(String)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html" title="class in org.springframework.beans.factory.parsing">ImportDefinition</A>
<DD>Create a new ImportDefinition.
<DT><A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html#ImportDefinition(java.lang.String, java.lang.Object)"><B>ImportDefinition(String, Object)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html" title="class in org.springframework.beans.factory.parsing">ImportDefinition</A>
<DD>Create a new ImportDefinition.
<DT><A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html#ImportDefinition(java.lang.String, org.springframework.core.io.Resource[], java.lang.Object)"><B>ImportDefinition(String, Resource[], Object)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ImportDefinition.html" title="class in org.springframework.beans.factory.parsing">ImportDefinition</A>
<DD>Create a new ImportDefinition.
<DT><A HREF="../org/springframework/beans/factory/parsing/EmptyReaderEventListener.html#importProcessed(org.springframework.beans.factory.parsing.ImportDefinition)"><B>importProcessed(ImportDefinition)</B></A> - 
Method in class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/EmptyReaderEventListener.html" title="class in org.springframework.beans.factory.parsing">EmptyReaderEventListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/ReaderEventListener.html#importProcessed(org.springframework.beans.factory.parsing.ImportDefinition)"><B>importProcessed(ImportDefinition)</B></A> - 
Method in interface org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ReaderEventListener.html" title="interface in org.springframework.beans.factory.parsing">ReaderEventListener</A>
<DD>Notification that the given import has been processed.
<DT><A HREF="../org/springframework/context/annotation/ImportResource.html" title="annotation in org.springframework.context.annotation"><B>ImportResource</B></A> - Annotation Type in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Indicates one or more resources containing bean definitions to import.<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#include(java.lang.String)"><B>include(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#include(java.lang.String, boolean)"><B>include(String, boolean)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockRequestDispatcher.html#include(javax.servlet.ServletRequest, javax.servlet.ServletResponse)"><B>include(ServletRequest, ServletResponse)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockRequestDispatcher.html" title="class in org.springframework.mock.web">MockRequestDispatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html#include(javax.portlet.RenderRequest, javax.portlet.RenderResponse)"><B>include(RenderRequest, RenderResponse)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html" title="class in org.springframework.mock.web.portlet">MockPortletRequestDispatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html#include(javax.portlet.PortletRequest, javax.portlet.PortletResponse)"><B>include(PortletRequest, PortletResponse)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequestDispatcher.html" title="class in org.springframework.mock.web.portlet">MockPortletRequestDispatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebUtils.html#INCLUDE_CONTEXT_PATH_ATTRIBUTE"><B>INCLUDE_CONTEXT_PATH_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebUtils.html#INCLUDE_PATH_INFO_ATTRIBUTE"><B>INCLUDE_PATH_INFO_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebUtils.html#INCLUDE_QUERY_STRING_ATTRIBUTE"><B>INCLUDE_QUERY_STRING_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebUtils.html#INCLUDE_REQUEST_URI_ATTRIBUTE"><B>INCLUDE_REQUEST_URI_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Standard Servlet 2.3+ spec request attributes for include URI and paths.
<DT><A HREF="../org/springframework/web/util/WebUtils.html#INCLUDE_SERVLET_PATH_ATTRIBUTE"><B>INCLUDE_SERVLET_PATH_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/AutodetectCapableMBeanInfoAssembler.html#includeBean(java.lang.Class, java.lang.String)"><B>includeBean(Class&lt;?&gt;, String)</B></A> - 
Method in interface org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AutodetectCapableMBeanInfoAssembler.html" title="interface in org.springframework.jmx.export.assembler">AutodetectCapableMBeanInfoAssembler</A>
<DD>Indicate whether a particular bean should be included in the registration
 process, if it is not specified in the <code>beans</code> map of the
 <code>MBeanExporter</code>.
<DT><A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html#includeBean(java.lang.Class, java.lang.String)"><B>includeBean(Class&lt;?&gt;, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MetadataMBeanInfoAssembler</A>
<DD>Used for autodetection of beans.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Allows subclasses to vote on the inclusion of a particular operation.
<DT><A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">InterfaceBasedMBeanInfoAssembler</A>
<DD>Check to see if the <code>Method</code> is declared in
 one of the configured interfaces and that it is public.
<DT><A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MetadataMBeanInfoAssembler</A>
<DD>Votes on the inclusion of an operation.
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodExclusionMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodNameBasedMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html#includeOperation(java.lang.reflect.Method, java.lang.String)"><B>includeOperation(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">SimpleReflectiveMBeanInfoAssembler</A>
<DD>Always returns <code>true</code>.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Allows subclasses to vote on the inclusion of a particular attribute accessor.
<DT><A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">InterfaceBasedMBeanInfoAssembler</A>
<DD>Check to see if the <code>Method</code> is declared in
 one of the configured interfaces and that it is public.
<DT><A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MetadataMBeanInfoAssembler</A>
<DD>Vote on the inclusion of an attribute accessor.
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodExclusionMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodNameBasedMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html#includeReadAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeReadAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">SimpleReflectiveMBeanInfoAssembler</A>
<DD>Always returns <code>true</code>.
<DT><A HREF="../org/springframework/http/MediaType.html#includes(org.springframework.http.MediaType)"><B>includes(MediaType)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Indicate whether this <A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http"><CODE>MediaType</CODE></A> includes the given media type.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html#includeSynonymsForTableColumnMetaData()"><B>includeSynonymsForTableColumnMetaData()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcInsert</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html#includeSynonymsForTableColumnMetaData()"><B>includeSynonymsForTableColumnMetaData()</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcInsertOperations</A>
<DD>Include synonyms for the column meta data lookups via JDBC.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Allows subclasses to vote on the inclusion of a particular attribute mutator.
<DT><A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">InterfaceBasedMBeanInfoAssembler</A>
<DD>Check to see if the <code>Method</code> is declared in
 one of the configured interfaces and that it is public.
<DT><A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MetadataMBeanInfoAssembler</A>
<DD>Votes on the inclusion of an attribute mutator.
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodExclusionMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodNameBasedMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html#includeWriteAttribute(java.lang.reflect.Method, java.lang.String)"><B>includeWriteAttribute(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/SimpleReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">SimpleReflectiveMBeanInfoAssembler</A>
<DD>Always returns <code>true</code>.
<DT><A HREF="../org/springframework/jdbc/IncorrectResultSetColumnCountException.html" title="class in org.springframework.jdbc"><B>IncorrectResultSetColumnCountException</B></A> - Exception in <A HREF="../org/springframework/jdbc/package-summary.html">org.springframework.jdbc</A><DD>Data access exception thrown when a result set did not have the correct column count,
 for example when expecting a single column but getting 0 or more than 1 columns.<DT><A HREF="../org/springframework/jdbc/IncorrectResultSetColumnCountException.html#IncorrectResultSetColumnCountException(int, int)"><B>IncorrectResultSetColumnCountException(int, int)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/IncorrectResultSetColumnCountException.html" title="class in org.springframework.jdbc">IncorrectResultSetColumnCountException</A>
<DD>Constructor for IncorrectResultSetColumnCountException.
<DT><A HREF="../org/springframework/jdbc/IncorrectResultSetColumnCountException.html#IncorrectResultSetColumnCountException(java.lang.String, int, int)"><B>IncorrectResultSetColumnCountException(String, int, int)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/IncorrectResultSetColumnCountException.html" title="class in org.springframework.jdbc">IncorrectResultSetColumnCountException</A>
<DD>Constructor for IncorrectResultCountDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao"><B>IncorrectResultSizeDataAccessException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Data access exception thrown when a result was not of the expected size,
 for example when expecting a single row but getting 0 or more than 1 rows.<DT><A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html#IncorrectResultSizeDataAccessException(int)"><B>IncorrectResultSizeDataAccessException(int)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A>
<DD>Constructor for IncorrectResultSizeDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html#IncorrectResultSizeDataAccessException(int, int)"><B>IncorrectResultSizeDataAccessException(int, int)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A>
<DD>Constructor for IncorrectResultSizeDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html#IncorrectResultSizeDataAccessException(java.lang.String, int)"><B>IncorrectResultSizeDataAccessException(String, int)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A>
<DD>Constructor for IncorrectResultSizeDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html#IncorrectResultSizeDataAccessException(java.lang.String, int, int)"><B>IncorrectResultSizeDataAccessException(String, int, int)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectResultSizeDataAccessException.html" title="class in org.springframework.dao">IncorrectResultSizeDataAccessException</A>
<DD>Constructor for IncorrectResultSizeDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html" title="class in org.springframework.dao"><B>IncorrectUpdateSemanticsDataAccessException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Data access exception thrown when something unintended appears to have
 happened with an update, but the transaction hasn't already been rolled back.<DT><A HREF="../org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html#IncorrectUpdateSemanticsDataAccessException(java.lang.String)"><B>IncorrectUpdateSemanticsDataAccessException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html" title="class in org.springframework.dao">IncorrectUpdateSemanticsDataAccessException</A>
<DD>Constructor for IncorrectUpdateSemanticsDataAccessException.
<DT><A HREF="../org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html#IncorrectUpdateSemanticsDataAccessException(java.lang.String, java.lang.Throwable)"><B>IncorrectUpdateSemanticsDataAccessException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/IncorrectUpdateSemanticsDataAccessException.html" title="class in org.springframework.dao">IncorrectUpdateSemanticsDataAccessException</A>
<DD>Constructor for IncorrectUpdateSemanticsDataAccessException.
<DT><A HREF="../org/springframework/core/MethodParameter.html#increaseNestingLevel()"><B>increaseNestingLevel()</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/MethodParameter.html" title="class in org.springframework.core">MethodParameter</A>
<DD>Increase this parameter's nesting level.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#INDEX_ATTRIBUTE"><B>INDEX_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/Indexer.html" title="class in org.springframework.expression.spel.ast"><B>Indexer</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>An Indexer can index into some proceeding structure to access a particular piece of it.<DT><A HREF="../org/springframework/expression/spel/ast/Indexer.html#Indexer(int, org.springframework.expression.spel.ast.SpelNodeImpl)"><B>Indexer(int, SpelNodeImpl)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/Indexer.html" title="class in org.springframework.expression.spel.ast">Indexer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/Advised.html#indexOf(org.springframework.aop.Advisor)"><B>indexOf(Advisor)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Return the index (from 0) of the given advisor,
 or -1 if no such advisor applies to this proxy.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#indexOf(org.aopalliance.aop.Advice)"><B>indexOf(Advice)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Return the index (from 0) of the given AOP Alliance Advice,
 or -1 if no such advice is an advice for this proxy.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#indexOf(org.springframework.aop.Advisor)"><B>indexOf(Advisor)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#indexOf(org.aopalliance.aop.Advice)"><B>indexOf(Advice)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#indexOf(java.lang.Object)"><B>indexOf(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#indicatesAutowiring()"><B>indicatesAutowiring()</B></A> - 
Method in class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Return whether this BeanWiringInfo indicates autowiring.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy"><B>InfrastructureAdvisorAutoProxyCreator</B></A> - Class in <A HREF="../org/springframework/aop/framework/autoproxy/package-summary.html">org.springframework.aop.framework.autoproxy</A><DD>Auto-proxy creator that considers infrastructure Advisor beans only,
 ignoring any application-defined Advisors.<DT><A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html#InfrastructureAdvisorAutoProxyCreator()"><B>InfrastructureAdvisorAutoProxyCreator()</B></A> - 
Constructor for class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">InfrastructureAdvisorAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/InfrastructureProxy.html" title="interface in org.springframework.core"><B>InfrastructureProxy</B></A> - Interface in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Interface to be implemented by transparent resource proxies that need to be
 considered as equal to the underlying resource, for example for consistent
 lookup key comparisons.<DT><A HREF="../org/springframework/aop/config/AopNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopNamespaceHandler.html" title="class in org.springframework.aop.config">AopNamespaceHandler</A>
<DD>Register the <A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParser.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionParsers</CODE></A> for the
 '<code>config</code>', '<code>spring-configured</code>', '<code>aspectj-autoproxy</code>'
 and '<code>scoped-proxy</code>' tags.
<DT><A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html#init()"><B>init()</B></A> - 
Method in interface org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html" title="interface in org.springframework.beans.factory.xml">NamespaceHandler</A>
<DD>Invoked by the <A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml"><CODE>DefaultBeanDefinitionDocumentReader</CODE></A> after
 construction but before any custom elements are parsed.
<DT><A HREF="../org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/SimplePropertyNamespaceHandler.html" title="class in org.springframework.beans.factory.xml">SimplePropertyNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/UtilNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/UtilNamespaceHandler.html" title="class in org.springframework.beans.factory.xml">UtilNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/config/ContextNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.context.config.<A HREF="../org/springframework/context/config/ContextNamespaceHandler.html" title="class in org.springframework.context.config">ContextNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/config/JeeNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.ejb.config.<A HREF="../org/springframework/ejb/config/JeeNamespaceHandler.html" title="class in org.springframework.ejb.config">JeeNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/config/JdbcNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.jdbc.config.<A HREF="../org/springframework/jdbc/config/JdbcNamespaceHandler.html" title="class in org.springframework.jdbc.config">JdbcNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/config/JmsNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.jms.config.<A HREF="../org/springframework/jms/config/JmsNamespaceHandler.html" title="class in org.springframework.jms.config">JmsNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/config/OxmNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.oxm.config.<A HREF="../org/springframework/oxm/config/OxmNamespaceHandler.html" title="class in org.springframework.oxm.config">OxmNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/ServletEndpointSupport.html#init(java.lang.Object)"><B>init(Object)</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/ServletEndpointSupport.html" title="class in org.springframework.remoting.jaxrpc">ServletEndpointSupport</A>
<DD><B>Deprecated.</B>&nbsp;Initialize this JAX-RPC servlet endpoint.
<DT><A HREF="../org/springframework/scheduling/config/TaskNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.scheduling.config.<A HREF="../org/springframework/scheduling/config/TaskNamespaceHandler.html" title="class in org.springframework.scheduling.config">TaskNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/config/LangNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.scripting.config.<A HREF="../org/springframework/scripting/config/LangNamespaceHandler.html" title="class in org.springframework.scripting.config">LangNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/config/TxNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.transaction.config.<A HREF="../org/springframework/transaction/config/TxNamespaceHandler.html" title="class in org.springframework.transaction.config">TxNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/velocity/CommonsLoggingLogSystem.html#init(org.apache.velocity.runtime.RuntimeServices)"><B>init(RuntimeServices)</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/CommonsLoggingLogSystem.html" title="class in org.springframework.ui.velocity">CommonsLoggingLogSystem</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/velocity/SpringResourceLoader.html#init(org.apache.commons.collections.ExtendedProperties)"><B>init(ExtendedProperties)</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/SpringResourceLoader.html" title="class in org.springframework.ui.velocity">SpringResourceLoader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html#init(java.lang.Class)"><B>init(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodResolver</A>
<DD>Initialize a new HandlerMethodResolver for the specified handler type.
<DT><A HREF="../org/springframework/web/context/support/HttpRequestHandlerServlet.html#init()"><B>init()</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/HttpRequestHandlerServlet.html" title="class in org.springframework.web.context.support">HttpRequestHandlerServlet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/filter/GenericFilterBean.html#init(javax.servlet.FilterConfig)"><B>init(FilterConfig)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/GenericFilterBean.html" title="class in org.springframework.web.filter">GenericFilterBean</A>
<DD>Standard way of initializing this filter.
<DT><A HREF="../org/springframework/web/portlet/GenericPortletBean.html#init()"><B>init()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/GenericPortletBean.html" title="class in org.springframework.web.portlet">GenericPortletBean</A>
<DD>Map config parameters onto bean properties of this portlet, and
 invoke subclass initialization.
<DT><A HREF="../org/springframework/web/servlet/config/MvcNamespaceHandler.html#init()"><B>init()</B></A> - 
Method in class org.springframework.web.servlet.config.<A HREF="../org/springframework/web/servlet/config/MvcNamespaceHandler.html" title="class in org.springframework.web.servlet.config">MvcNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/HttpServletBean.html#init()"><B>init()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HttpServletBean.html" title="class in org.springframework.web.servlet">HttpServletBean</A>
<DD>Map config parameters onto bean properties of this servlet, and
 invoke subclass initialization.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html#init(java.util.Map)"><B>init(Map&lt;String, String&gt;)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html" title="class in org.springframework.web.servlet.view.tiles2">SpringTilesApplicationContextFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html#init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>init(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html#init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>init(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html#init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>init(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html" title="class in org.springframework.web.struts">ContextLoaderPlugIn</A>
<DD><B>Deprecated.</B>&nbsp;Create the ActionServlet's WebApplicationContext.
<DT><A HREF="../org/springframework/web/struts/DelegatingRequestProcessor.html#init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>init(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/DelegatingRequestProcessor.html" title="class in org.springframework.web.struts">DelegatingRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/struts/DelegatingTilesRequestProcessor.html#init(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>init(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/DelegatingTilesRequestProcessor.html" title="class in org.springframework.web.struts">DelegatingTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#INIT_METHOD_ATTRIBUTE"><B>INIT_METHOD_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html#initAnnotation(java.lang.reflect.AnnotatedElement)"><B>initAnnotation(AnnotatedElement)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html" title="class in org.springframework.context.annotation">CommonAnnotationBeanPostProcessor.LookupElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ApplicationObjectSupport.html#initApplicationContext(org.springframework.context.ApplicationContext)"><B>initApplicationContext(ApplicationContext)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A>
<DD>Subclasses can override this for custom initialization behavior.
<DT><A HREF="../org/springframework/context/support/ApplicationObjectSupport.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A>
<DD>Subclasses can override this for custom initialization behavior.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html#initApplicationContext(org.springframework.context.ApplicationContext)"><B>initApplicationContext(ApplicationContext)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A>
<DD>Calls <A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html#initServletContext(javax.servlet.ServletContext)"><CODE>WebApplicationObjectSupport.initServletContext(javax.servlet.ServletContext)</CODE></A> if the
 given ApplicationContext is a <A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context"><CODE>WebApplicationContext</CODE></A>.
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractHandlerMapping.html" title="class in org.springframework.web.portlet.handler">AbstractHandlerMapping</A>
<DD>Initializes the interceptors.
<DT><A HREF="../org/springframework/web/portlet/handler/ParameterHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/ParameterHandlerMapping.html" title="class in org.springframework.web.portlet.handler">ParameterHandlerMapping</A>
<DD>Calls the <code>registerHandlers</code> method in addition
 to the superclass's initialization.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeHandlerMapping</A>
<DD>Calls the <code>registerHandlers</code> method in addition
 to the superclass's initialization.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeParameterHandlerMapping</A>
<DD>Calls the <code>registerHandlers</code> method in addition
 to the superclass's initialization.
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/DefaultAnnotationHandlerMapping.html" title="class in org.springframework.web.portlet.mvc.annotation">DefaultAnnotationHandlerMapping</A>
<DD>Calls the <code>registerHandlers</code> method in addition
 to the superclass's initialization.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/ParameterizableViewController.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/ParameterizableViewController.html" title="class in org.springframework.web.portlet.mvc">ParameterizableViewController</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractDetectingUrlHandlerMapping</A>
<DD>Calls the <A HREF="../org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.html#detectHandlers()"><CODE>AbstractDetectingUrlHandlerMapping.detectHandlers()</CODE></A> method in addition to the
 superclass's initialization.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractHandlerMapping</A>
<DD>Initializes the interceptors.
<DT><A HREF="../org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">SimpleUrlHandlerMapping</A>
<DD>Calls the <A HREF="../org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html#registerHandlers(java.util.Map)"><CODE>SimpleUrlHandlerMapping.registerHandlers(java.util.Map<java.lang.String, java.lang.Object>)</CODE></A> method in addition to the
 superclass's initialization.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Checks to see that a valid report file URL is supplied in the
 configuration.
<DT><A HREF="../org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.tiles.<A HREF="../org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html" title="class in org.springframework.web.servlet.view.tiles">ComponentControllerSupport</A>
<DD><B>Deprecated.</B>&nbsp;Subclasses can override this for custom initialization behavior.
<DT><A HREF="../org/springframework/web/servlet/view/tiles/TilesView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.tiles.<A HREF="../org/springframework/web/servlet/view/tiles/TilesView.html" title="class in org.springframework.web.servlet.view.tiles">TilesView</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Invoked on startup.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html" title="class in org.springframework.web.servlet.view.velocity">VelocityViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xml/MarshallingView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.xml.<A HREF="../org/springframework/web/servlet/view/xml/MarshallingView.html" title="class in org.springframework.web.servlet.view.xml">MarshallingView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;Here we load our template, as we need the
 <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A> to do it.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#initApplicationContext()"><B>initApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Initialize this XsltView's TransformerFactory.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#initApplicationEventMulticaster()"><B>initApplicationEventMulticaster()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Initialize the ApplicationEventMulticaster.
<DT><A HREF="../org/springframework/transaction/TransactionSystemException.html#initApplicationException(java.lang.Throwable)"><B>initApplicationException(Throwable)</B></A> - 
Method in exception org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionSystemException.html" title="class in org.springframework.transaction">TransactionSystemException</A>
<DD>Set an application exception that was thrown before this transaction exception,
 preserving the original exception despite the overriding TransactionSystemException.
<DT><A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html#initAutowireMode(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initAutowireMode(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Determine the autowire mode to use for wiring Struts Actions.
<DT><A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html#initAutowireMode(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initAutowireMode(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Determine the autowire mode to use for wiring Struts Actions.
<DT><A HREF="../org/springframework/context/support/AbstractXmlApplicationContext.html#initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"><B>initBeanDefinitionReader(XmlBeanDefinitionReader)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractXmlApplicationContext.html" title="class in org.springframework.context.support">AbstractXmlApplicationContext</A>
<DD>Initialize the bean definition reader used for loading the bean
 definitions of this context.
<DT><A HREF="../org/springframework/web/context/support/XmlWebApplicationContext.html#initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"><B>initBeanDefinitionReader(XmlBeanDefinitionReader)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/XmlWebApplicationContext.html" title="class in org.springframework.web.context.support">XmlWebApplicationContext</A>
<DD>Initialize the bean definition reader used for loading the bean
 definitions of this context.
<DT><A HREF="../org/springframework/web/portlet/context/XmlPortletApplicationContext.html#initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"><B>initBeanDefinitionReader(XmlBeanDefinitionReader)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/XmlPortletApplicationContext.html" title="class in org.springframework.web.portlet.context">XmlPortletApplicationContext</A>
<DD>Initialize the bean definition reader used for loading the bean
 definitions of this context.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html#initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>initBeanFactory(ConfigurableListableBeanFactory)</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html" title="class in org.springframework.aop.aspectj.annotation">AnnotationAwareAspectJAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html#initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>initBeanFactory(ConfigurableListableBeanFactory)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAdvisorAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html#initBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>initBeanFactory(ConfigurableListableBeanFactory)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">InfrastructureAdvisorAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DataBinder.html#initBeanPropertyAccess()"><B>initBeanPropertyAccess()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Initialize standard JavaBean property access for this DataBinder.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#initBeanWrapper(org.springframework.beans.BeanWrapper)"><B>initBeanWrapper(BeanWrapper)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Initialize the given BeanWrapper with the custom editors registered
 with this factory.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#initBeanWrapper(org.springframework.beans.BeanWrapper)"><B>initBeanWrapper(BeanWrapper)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Initialize the given BeanWrapper to be used for row mapping.
<DT><A HREF="../org/springframework/web/filter/GenericFilterBean.html#initBeanWrapper(org.springframework.beans.BeanWrapper)"><B>initBeanWrapper(BeanWrapper)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/GenericFilterBean.html" title="class in org.springframework.web.filter">GenericFilterBean</A>
<DD>Initialize the BeanWrapper for this GenericFilterBean,
 possibly with custom editors.
<DT><A HREF="../org/springframework/web/portlet/GenericPortletBean.html#initBeanWrapper(org.springframework.beans.BeanWrapper)"><B>initBeanWrapper(BeanWrapper)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/GenericPortletBean.html" title="class in org.springframework.web.portlet">GenericPortletBean</A>
<DD>Initialize the BeanWrapper for this GenericPortletBean,
 possibly with custom editors.
<DT><A HREF="../org/springframework/web/servlet/HttpServletBean.html#initBeanWrapper(org.springframework.beans.BeanWrapper)"><B>initBeanWrapper(BeanWrapper)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HttpServletBean.html" title="class in org.springframework.web.servlet">HttpServletBean</A>
<DD>Initialize the BeanWrapper for this HttpServletBean,
 possibly with custom editors.
<DT><A HREF="../org/springframework/web/bind/annotation/InitBinder.html" title="annotation in org.springframework.web.bind.annotation"><B>InitBinder</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation that identifies methods which initialize the
 <A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind"><CODE>WebDataBinder</CODE></A> which
 will be used for populating command and form object arguments
 of annotated handler methods.<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#initBinder(java.lang.Object, java.lang.String, org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.NativeWebRequest)"><B>initBinder(Object, String, WebDataBinder, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html#initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.WebRequest)"><B>initBinder(WebDataBinder, WebRequest)</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html" title="class in org.springframework.web.bind.support">ConfigurableWebBindingInitializer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/support/WebBindingInitializer.html#initBinder(org.springframework.web.bind.WebDataBinder, org.springframework.web.context.request.WebRequest)"><B>initBinder(WebDataBinder, WebRequest)</B></A> - 
Method in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/WebBindingInitializer.html" title="interface in org.springframework.web.bind.support">WebBindingInitializer</A>
<DD>Initialize the given DataBinder for the given request.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#initBinder(javax.portlet.PortletRequest, org.springframework.web.portlet.bind.PortletRequestDataBinder)"><B>initBinder(PortletRequest, PortletRequestDataBinder)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Initialize the given binder instance, for example with custom editors.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#initBinder(javax.servlet.http.HttpServletRequest, org.springframework.web.bind.ServletRequestDataBinder)"><B>initBinder(HttpServletRequest, ServletRequestDataBinder)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Initialize the given binder instance, for example with custom editors.
<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html#initBinder(javax.servlet.http.HttpServletRequest, org.springframework.web.bind.ServletRequestDataBinder)"><B>initBinder(HttpServletRequest, ServletRequestDataBinder)</B></A> - 
Method in class org.springframework.web.servlet.mvc.multiaction.<A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html" title="class in org.springframework.web.servlet.mvc.multiaction">MultiActionController</A>
<DD>Initialize the given binder instance, for example with custom editors.
<DT><A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html#initConnection()"><B>initConnection()</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html" title="class in org.springframework.jca.cci.connection">SingleConnectionFactory</A>
<DD>Initialize the single underlying Connection.
<DT><A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html#initConnection()"><B>initConnection()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html" title="class in org.springframework.jdbc.datasource">SingleConnectionDataSource</A>
<DD>Initialize the underlying Connection via the DriverManager.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#initConnection()"><B>initConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>Initialize the underlying shared Connection.
<DT><A HREF="../org/springframework/web/servlet/support/JspAwareRequestContext.html#initContext(javax.servlet.jsp.PageContext, java.util.Map)"><B>initContext(PageContext, Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/JspAwareRequestContext.html" title="class in org.springframework.web.servlet.support">JspAwareRequestContext</A>
<DD>Initialize this context with the given page context,
 using the given model attributes for Errors retrieval.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#initContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.util.Map)"><B>initContext(HttpServletRequest, HttpServletResponse, ServletContext, Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Initialize this context with the given request,
 using the given model attributes for Errors retrieval.
<DT><A HREF="../org/springframework/validation/AbstractPropertyBindingResult.html#initConversion(org.springframework.core.convert.ConversionService)"><B>initConversion(ConversionService)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractPropertyBindingResult.html" title="class in org.springframework.validation">AbstractPropertyBindingResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/dao/support/DaoSupport.html#initDao()"><B>initDao()</B></A> - 
Method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DaoSupport.html" title="class in org.springframework.dao.support">DaoSupport</A>
<DD>Concrete subclasses can override this for custom initialization behavior.
<DT><A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html#initDatabase()"><B>initDatabase()</B></A> - 
Method in class org.springframework.jdbc.datasource.embedded.<A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.html" title="class in org.springframework.jdbc.datasource.embedded">EmbeddedDatabaseFactory</A>
<DD>Hook to initialize the embedded database.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#initDefaults(org.w3c.dom.Element)"><B>initDefaults(Element)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Initialize the default lazy-init, autowire, dependency check settings,
 init-method, destroy-method and merge settings.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#initDefaultStrategies()"><B>initDefaultStrategies()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Initialize the default implementations for the template's strategies:
 DynamicDestinationResolver and SimpleMessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#initDefaultStrategies()"><B>initDefaultStrategies()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;Initialize the default implementations for the template's strategies:
 DynamicDestinationResolver and SimpleMessageConverter102.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html#initDefaultStrategies()"><B>initDefaultStrategies()</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter</A>
<DD>Initialize the default implementations for the adapter's strategies.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter102.html#initDefaultStrategies()"><B>initDefaultStrategies()</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter102.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter102</A>
<DD><B>Deprecated.</B>&nbsp;Initialize the default implementations for the adapter's strategies:
 SimpleMessageConverter102.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#initDeferredClose(org.hibernate.SessionFactory)"><B>initDeferredClose(SessionFactory)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Initialize deferred close for the current thread and the given SessionFactory.
<DT><A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html#initDelegate(org.springframework.web.context.WebApplicationContext)"><B>initDelegate(WebApplicationContext)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter">DelegatingFilterProxy</A>
<DD>Initialize the Filter delegate, defined as bean the given Spring
 application context.
<DT><A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html#initDependencyCheck(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initDependencyCheck(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether to apply a dependency check after wiring Struts Actions.
<DT><A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html#initDependencyCheck(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initDependencyCheck(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether to apply a dependency check after wiring Struts Actions.
<DT><A HREF="../org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation"><B>InitDestroyAnnotationBeanPostProcessor</B></A> - Class in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD><A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> implementation
 that invokes annotated init and destroy methods.<DT><A HREF="../org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html#InitDestroyAnnotationBeanPostProcessor()"><B>InitDestroyAnnotationBeanPostProcessor()</B></A> - 
Constructor for class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation">InitDestroyAnnotationBeanPostProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DataBinder.html#initDirectFieldAccess()"><B>initDirectFieldAccess()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Initialize direct field access for this DataBinder,
 as alternative to the default bean property access.
<DT><A HREF="../org/springframework/aop/support/AbstractRegexpMethodPointcut.html#initExcludedPatternRepresentation(java.lang.String[])"><B>initExcludedPatternRepresentation(String[])</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AbstractRegexpMethodPointcut.html" title="class in org.springframework.aop.support">AbstractRegexpMethodPointcut</A>
<DD>Subclasses must implement this to initialize regexp pointcuts.
<DT><A HREF="../org/springframework/aop/support/JdkRegexpMethodPointcut.html#initExcludedPatternRepresentation(java.lang.String[])"><B>initExcludedPatternRepresentation(String[])</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/JdkRegexpMethodPointcut.html" title="class in org.springframework.aop.support">JdkRegexpMethodPointcut</A>
<DD>Initialize exclusion <A HREF="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html?is-external=true" title="class or interface in java.util.regex"><CODE>Patterns</CODE></A> from the supplied <code>String[]</code>.
<DT><A HREF="../org/springframework/web/servlet/view/ResourceBundleViewResolver.html#initFactory(java.util.Locale)"><B>initFactory(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/ResourceBundleViewResolver.html" title="class in org.springframework.web.servlet.view">ResourceBundleViewResolver</A>
<DD>Initialize the View <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A> from the <code>ResourceBundle</code>,
 for the given <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Locale.html?is-external=true" title="class or interface in java.util"><CODE>locale</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/XmlViewResolver.html#initFactory()"><B>initFactory()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/XmlViewResolver.html" title="class in org.springframework.web.servlet.view">XmlViewResolver</A>
<DD>Initialize the view bean factory from the XML file.
<DT><A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html#initFilterBean()"><B>initFilterBean()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter">DelegatingFilterProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/filter/GenericFilterBean.html#initFilterBean()"><B>initFilterBean()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/GenericFilterBean.html" title="class in org.springframework.web.filter">GenericFilterBean</A>
<DD>Subclasses may override this to perform custom initialization.
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#initFrameworkPortlet()"><B>initFrameworkPortlet()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>This method will be invoked after any bean properties have been set and
 the ApplicationContext has been loaded.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#initFrameworkServlet()"><B>initFrameworkServlet()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>This method will be invoked after any bean properties have been set and
 the WebApplicationContext has been loaded.
<DT><A HREF="../org/springframework/jms/core/support/JmsGatewaySupport.html#initGateway()"><B>initGateway()</B></A> - 
Method in class org.springframework.jms.core.support.<A HREF="../org/springframework/jms/core/support/JmsGatewaySupport.html" title="class in org.springframework.jms.core.support">JmsGatewaySupport</A>
<DD>Subclasses can override this for custom initialization behavior.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#initialize(java.lang.Class)"><B>initialize(Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Initialize the mapping metadata for the given class.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Initialize this container.
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#initialize(javax.servlet.Servlet, javax.servlet.ServletRequest, javax.servlet.ServletResponse, java.lang.String, boolean, int, boolean)"><B>initialize(Servlet, ServletRequest, ServletResponse, String, boolean, int, boolean)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#initialize(java.lang.Object)"><B>initialize(Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Force initialization of a Hibernate proxy or persistent collection.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#initialize(java.lang.Object)"><B>initialize(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html" title="class in org.springframework.scheduling.backportconcurrent">ThreadPoolTaskExecutor</A>
<DD>Creates the BlockingQueue and the ThreadPoolExecutor.
<DT><A HREF="../org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html" title="class in org.springframework.scheduling.concurrent">ExecutorConfigurationSupport</A>
<DD>Set up the ExecutorService.
<DT><A HREF="../org/springframework/scheduling/quartz/LocalDataSourceJobStore.html#initialize(org.quartz.spi.ClassLoadHelper, org.quartz.spi.SchedulerSignaler)"><B>initialize(ClassLoadHelper, SchedulerSignaler)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/LocalDataSourceJobStore.html" title="class in org.springframework.scheduling.quartz">LocalDataSourceJobStore</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html" title="class in org.springframework.scheduling.quartz">LocalTaskExecutorThreadPool</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html#initialize()"><B>initialize()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html" title="class in org.springframework.scheduling.quartz">ResourceLoaderClassLoadHelper</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#initializeBean(java.lang.Object, java.lang.String)"><B>initializeBean(Object, String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Initialize the given raw bean, applying factory callbacks
 such as <code>setBeanName</code> and <code>setBeanFactory</code>,
 also applying all bean post processors (including ones which
 might wrap the given raw bean).
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#initializeBean(java.lang.Object, java.lang.String)"><B>initializeBean(Object, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#initializeBean(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)"><B>initializeBean(String, Object, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Initialize the given bean instance, applying factory callbacks
 as well as init methods and bean post processors.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html#initializeConsumers()"><B>initializeConsumers()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer</A>
<DD>Initialize the JMS Sessions and MessageConsumers for this container.
<DT><A HREF="../org/springframework/jdbc/config/InitializeDatabaseBeanDefinitionParser.html" title="class in org.springframework.jdbc.config"><B>InitializeDatabaseBeanDefinitionParser</B></A> - Class in <A HREF="../org/springframework/jdbc/config/package-summary.html">org.springframework.jdbc.config</A><DD><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParser.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionParser</CODE></A> that parses an <code>initialize-database</code> element and
 creates a <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A> of type <A HREF="../org/springframework/jdbc/datasource/init/DataSourceInitializer.html" title="class in org.springframework.jdbc.datasource.init"><CODE>DataSourceInitializer</CODE></A>.<DT><A HREF="../org/springframework/jdbc/config/InitializeDatabaseBeanDefinitionParser.html#InitializeDatabaseBeanDefinitionParser()"><B>InitializeDatabaseBeanDefinitionParser()</B></A> - 
Constructor for class org.springframework.jdbc.config.<A HREF="../org/springframework/jdbc/config/InitializeDatabaseBeanDefinitionParser.html" title="class in org.springframework.jdbc.config">InitializeDatabaseBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html#initializeDefinition(org.springframework.beans.factory.BeanFactory)"><B>initializeDefinition(BeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html" title="class in org.springframework.beans.factory.access">SingletonBeanFactoryLocator</A>
<DD>Instantiate singletons and do any other normal initialization of the factory.
<DT><A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html#initializeDefinition(org.springframework.beans.factory.BeanFactory)"><B>initializeDefinition(BeanFactory)</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextSingletonBeanFactoryLocator</A>
<DD>Overrides the default method to refresh the ApplicationContext, invoking
 <A HREF="../org/springframework/context/ConfigurableApplicationContext.html#refresh()"><CODE>ConfigurableApplicationContext.refresh()</CODE></A>.
<DT><A HREF="../org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html#initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.html" title="class in org.springframework.scheduling.concurrent">ExecutorConfigurationSupport</A>
<DD>Create the target <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ExecutorService</CODE></A> instance.
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html#initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html#initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolExecutorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html#initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolTaskExecutor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html#initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>initializeExecutor(ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolTaskScheduler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#initializeMetaData(javax.sql.DataSource)"><B>initializeMetaData(DataSource)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Initialize this class with metadata from the database
<DT><A HREF="../org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html#initializeMultipart()"><B>initializeMultipart()</B></A> - 
Method in class org.springframework.web.multipart.support.<A HREF="../org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.html" title="class in org.springframework.web.multipart.support">AbstractMultipartHttpServletRequest</A>
<DD>Lazily initialize the multipart request, if possible.
<DT><A HREF="../org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html#initializeMultipart()"><B>initializeMultipart()</B></A> - 
Method in class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/DefaultMultipartActionRequest.html" title="class in org.springframework.web.portlet.multipart">DefaultMultipartActionRequest</A>
<DD>Lazily initialize the multipart request, if possible.
<DT><A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html#initializeResourcesBeforeRead(java.sql.Connection, java.lang.Object)"><B>initializeResourcesBeforeRead(Connection, Object)</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html" title="class in org.springframework.jdbc.support.lob">OracleLobHandler</A>
<DD>Initialize any LOB resources before a read is done.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Initialize using the provided DatabaseMetData.
<DT><A HREF="../org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">Db2CallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">DerbyTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#initializeWithMetaData(java.sql.DatabaseMetaData)"><B>initializeWithMetaData(DatabaseMetaData)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Initialize using the database metedata provided
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#initializeWithProcedureColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)"><B>initializeWithProcedureColumnMetaData(DatabaseMetaData, String, String, String)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Initialize the database specific management of procedure column meta data.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#initializeWithProcedureColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)"><B>initializeWithProcedureColumnMetaData(DatabaseMetaData, String, String, String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)"><B>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.html#initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)"><B>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">OracleTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#initializeWithTableColumnMetaData(java.sql.DatabaseMetaData, java.lang.String, java.lang.String, java.lang.String)"><B>initializeWithTableColumnMetaData(DatabaseMetaData, String, String, String)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Initialize using provided database metadata, table and column information.
<DT><A HREF="../org/springframework/beans/factory/InitializingBean.html" title="interface in org.springframework.beans.factory"><B>InitializingBean</B></A> - Interface in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Interface to be implemented by beans that need to react once all their
 properties have been set by a BeanFactory: for example, to perform custom
 initialization, or merely to check that all mandatory properties have been set.<DT><A HREF="../org/springframework/web/portlet/handler/AbstractHandlerMapping.html#initInterceptors()"><B>initInterceptors()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractHandlerMapping.html" title="class in org.springframework.web.portlet.handler">AbstractHandlerMapping</A>
<DD>Initialize the specified interceptors, adapting them where necessary.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractHandlerMapping.html#initInterceptors()"><B>initInterceptors()</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractHandlerMapping</A>
<DD>Initialize the specified interceptors, adapting them where necessary.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html#initInterceptors()"><B>initInterceptors()</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractUrlHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#initJaxbMarshaller(javax.xml.bind.Marshaller)"><B>initJaxbMarshaller(Marshaller)</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>Template method that can be overridden by concrete JAXB marshallers for custom initialization behavior.
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#initJaxbUnmarshaller(javax.xml.bind.Unmarshaller)"><B>initJaxbUnmarshaller(Unmarshaller)</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>Template method that can be overridden by concrete JAXB marshallers for custom initialization behavior.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#initLifecycleProcessor()"><B>initLifecycleProcessor()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Initialize the LifecycleProcessor.
<DT><A HREF="../org/springframework/util/Log4jConfigurer.html#initLogging(java.lang.String)"><B>initLogging(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Log4jConfigurer.html" title="class in org.springframework.util">Log4jConfigurer</A>
<DD>Initialize log4j from the given file location, with no config file refreshing.
<DT><A HREF="../org/springframework/util/Log4jConfigurer.html#initLogging(java.lang.String, long)"><B>initLogging(String, long)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Log4jConfigurer.html" title="class in org.springframework.util">Log4jConfigurer</A>
<DD>Initialize log4j from the given location, with the given refresh interval
 for the config file.
<DT><A HREF="../org/springframework/web/util/Log4jWebConfigurer.html#initLogging(javax.servlet.ServletContext)"><B>initLogging(ServletContext)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/Log4jWebConfigurer.html" title="class in org.springframework.web.util">Log4jWebConfigurer</A>
<DD>Initialize log4j, including setting the web app root system property.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#initMessageSource()"><B>initMessageSource()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Initialize the MessageSource.
<DT><A HREF="../org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html#initMethodMap(java.util.Map)"><B>initMethodMap(Map&lt;String, TransactionAttribute&gt;)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html" title="class in org.springframework.transaction.interceptor">MethodMapTransactionAttributeSource</A>
<DD>Initialize the specified <A HREF="../org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html#setMethodMap(java.util.Map)"><CODE>"methodMap"</CODE></A>, if any.
<DT><A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html#initOracleDriverClasses(java.sql.Connection)"><B>initOracleDriverClasses(Connection)</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html" title="class in org.springframework.jdbc.support.lob">OracleLobHandler</A>
<DD>Retrieve the <code>oracle.sql.BLOB</code> and <code>oracle.sql.CLOB</code>
 classes via reflection, and initialize the values for the
 DURATION_SESSION, MODE_READWRITE and MODE_READONLY constants defined there.
<DT><A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html#initParameterNameDiscovery(org.springframework.core.ParameterNameDiscoverer)"><B>initParameterNameDiscovery(ParameterNameDiscoverer)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html" title="class in org.springframework.beans.factory.config">DependencyDescriptor</A>
<DD>Initialize parameter name discovery for the underlying method parameter, if any.
<DT><A HREF="../org/springframework/core/MethodParameter.html#initParameterNameDiscovery(org.springframework.core.ParameterNameDiscoverer)"><B>initParameterNameDiscovery(ParameterNameDiscoverer)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/MethodParameter.html" title="class in org.springframework.core">MethodParameter</A>
<DD>Initialize parameter name discovery for this method parameter.
<DT><A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html#initParent(org.springframework.ui.context.Theme)"><B>initParent(Theme)</B></A> - 
Method in class org.springframework.ui.context.support.<A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html" title="class in org.springframework.ui.context.support">ResourceBundleThemeSource</A>
<DD>Initialize the MessageSource of the given theme with the
 one from the corresponding parent of this ThemeSource.
<DT><A HREF="../org/springframework/aop/support/AbstractRegexpMethodPointcut.html#initPatternRepresentation(java.lang.String[])"><B>initPatternRepresentation(String[])</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AbstractRegexpMethodPointcut.html" title="class in org.springframework.aop.support">AbstractRegexpMethodPointcut</A>
<DD>Subclasses must implement this to initialize regexp pointcuts.
<DT><A HREF="../org/springframework/aop/support/JdkRegexpMethodPointcut.html#initPatternRepresentation(java.lang.String[])"><B>initPatternRepresentation(String[])</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/JdkRegexpMethodPointcut.html" title="class in org.springframework.aop.support">JdkRegexpMethodPointcut</A>
<DD>Initialize <A HREF="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html?is-external=true" title="class or interface in java.util.regex"><CODE>Patterns</CODE></A> from the supplied <code>String[]</code>.
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#initPortletApplicationContext()"><B>initPortletApplicationContext()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>Initialize and publish the Portlet ApplicationContext for this portlet.
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#initPortletBean()"><B>initPortletBean()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>Overridden method of GenericPortletBean, invoked after any bean properties
 have been set.
<DT><A HREF="../org/springframework/web/portlet/GenericPortletBean.html#initPortletBean()"><B>initPortletBean()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/GenericPortletBean.html" title="class in org.springframework.web.portlet">GenericPortletBean</A>
<DD>Subclasses may override this to perform custom initialization.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#initServletBean()"><B>initServletBean()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Overridden method of <A HREF="../org/springframework/web/servlet/HttpServletBean.html" title="class in org.springframework.web.servlet"><CODE>HttpServletBean</CODE></A>, invoked after any bean properties
 have been set.
<DT><A HREF="../org/springframework/web/servlet/HttpServletBean.html#initServletBean()"><B>initServletBean()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HttpServletBean.html" title="class in org.springframework.web.servlet">HttpServletBean</A>
<DD>Subclasses may override this to perform custom initialization.
<DT><A HREF="../org/springframework/web/servlet/ResourceServlet.html#initServletBean()"><B>initServletBean()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ResourceServlet.html" title="class in org.springframework.web.servlet">ResourceServlet</A>
<DD>Remember the startup time, using no last-modified time before it.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A>
<DD>Subclasses may override this for custom initialization based
 on the ServletContext that this application object runs in.
<DT><A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html" title="class in org.springframework.web.servlet.view">ContentNegotiatingViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.servlet.view.freemarker.<A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html" title="class in org.springframework.web.servlet.view.freemarker">FreeMarkerView</A>
<DD>Invoked on startup.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Checks whether we need to explicitly expose the Servlet 2.4 request attributes
 by default.
<DT><A HREF="../org/springframework/web/servlet/view/JstlView.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/JstlView.html" title="class in org.springframework.web.servlet.view">JstlView</A>
<DD>Wraps the MessageSource with a JSTL-aware MessageSource that is aware
 of JSTL's <code>javax.servlet.jsp.jstl.fmt.localizationContext</code>
 context-param.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html#initServletContext(javax.servlet.ServletContext)"><B>initServletContext(ServletContext)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html" title="class in org.springframework.web.servlet.view.tiles2">TilesView</A>
<DD>Checks whether we need to explicitly expose the Servlet 2.4 request attributes
 by default.
<DT><A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html#initSpringResourceLoader(org.apache.velocity.app.VelocityEngine, java.lang.String)"><B>initSpringResourceLoader(VelocityEngine, String)</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html" title="class in org.springframework.ui.velocity">VelocityEngineFactory</A>
<DD>Initialize a SpringResourceLoader for the given VelocityEngine.
<DT><A HREF="../org/springframework/web/portlet/DispatcherPortlet.html#initStrategies(org.springframework.context.ApplicationContext)"><B>initStrategies(ApplicationContext)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet">DispatcherPortlet</A>
<DD>Refresh the strategy objects that this portlet uses.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#initStrategies(org.springframework.context.ApplicationContext)"><B>initStrategies(ApplicationContext)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Initialize the strategy objects that this servlet uses.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#initSynchronization()"><B>initSynchronization()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Activate transaction synchronization for the current thread.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcDaoSupport.html#initTemplateConfig()"><B>initTemplateConfig()</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcDaoSupport.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcDaoSupport</A>
<DD>Create a NamedParameterJdbcTemplate based on the configured JdbcTemplate.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcDaoSupport.html#initTemplateConfig()"><B>initTemplateConfig()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcDaoSupport.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcDaoSupport</A>
<DD>Create a SimpleJdbcTemplate based on the configured JdbcTemplate.
<DT><A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html#initTemplateConfig()"><B>initTemplateConfig()</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html" title="class in org.springframework.jdbc.core.support">JdbcDaoSupport</A>
<DD>Initialize the template-based configuration of this DAO.
<DT><A HREF="../org/springframework/ui/context/support/UiApplicationContextUtils.html#initThemeSource(org.springframework.context.ApplicationContext)"><B>initThemeSource(ApplicationContext)</B></A> - 
Static method in class org.springframework.ui.context.support.<A HREF="../org/springframework/ui/context/support/UiApplicationContextUtils.html" title="class in org.springframework.ui.context.support">UiApplicationContextUtils</A>
<DD>Initialize the ThemeSource for the given application context,
 autodetecting a bean with the name "themeSource".
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityToolboxView.html#initTool(java.lang.Object, org.apache.velocity.context.Context)"><B>initTool(Object, Context)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityToolboxView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityToolboxView</A>
<DD>Overridden to check for the ViewContext interface which is part of the
 view package of Velocity Tools.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#initTool(java.lang.Object, org.apache.velocity.context.Context)"><B>initTool(Object, Context)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Initialize the given tool instance.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#initTransactionSynchronizationRegistry()"><B>initTransactionSynchronizationRegistry()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Initialize the JTA 1.1 TransactionSynchronizationRegistry, if available.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#initUserTransactionAndTransactionManager()"><B>initUserTransactionAndTransactionManager()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Initialize the UserTransaction as well as the TransactionManager handle.
<DT><A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html#initVelocityResourceLoader(org.apache.velocity.app.VelocityEngine, java.lang.String)"><B>initVelocityResourceLoader(VelocityEngine, String)</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html" title="class in org.springframework.ui.velocity">VelocityEngineFactory</A>
<DD>Initialize a Velocity resource loader for the given VelocityEngine:
 either a standard Velocity FileResourceLoader or a SpringResourceLoader.
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#initWebApplicationContext(javax.servlet.ServletContext)"><B>initWebApplicationContext(ServletContext)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Initialize Spring's web application context for the given servlet context,
 according to the "<A HREF="../org/springframework/web/context/ContextLoader.html#CONTEXT_CLASS_PARAM"><CODE>contextClass</CODE></A>" and
 "<A HREF="../org/springframework/web/context/ContextLoader.html#CONFIG_LOCATION_PARAM"><CODE>contextConfigLocation</CODE></A>" context-params.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#initWebApplicationContext()"><B>initWebApplicationContext()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Initialize and publish the WebApplicationContext for this servlet.
<DT><A HREF="../org/springframework/web/struts/ActionSupport.html#initWebApplicationContext(org.apache.struts.action.ActionServlet)"><B>initWebApplicationContext(ActionServlet)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/ActionSupport.html" title="class in org.springframework.web.struts">ActionSupport</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext (the usual case).
<DT><A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html#initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initWebApplicationContext(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext.
<DT><A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html#initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initWebApplicationContext(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/AutowiringTilesRequestProcessor.html" title="class in org.springframework.web.struts">AutowiringTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext.
<DT><A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html#initWebApplicationContext()"><B>initWebApplicationContext()</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html" title="class in org.springframework.web.struts">ContextLoaderPlugIn</A>
<DD><B>Deprecated.</B>&nbsp;Initialize and publish the WebApplicationContext for the ActionServlet.
<DT><A HREF="../org/springframework/web/struts/DelegatingRequestProcessor.html#initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initWebApplicationContext(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/DelegatingRequestProcessor.html" title="class in org.springframework.web.struts">DelegatingRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's <A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context"><CODE>WebApplicationContext</CODE></A> from the
 <code>ServletContext</code>, falling back to the root
 <code>WebApplicationContext</code>.
<DT><A HREF="../org/springframework/web/struts/DelegatingTilesRequestProcessor.html#initWebApplicationContext(org.apache.struts.action.ActionServlet, org.apache.struts.config.ModuleConfig)"><B>initWebApplicationContext(ActionServlet, ModuleConfig)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/DelegatingTilesRequestProcessor.html" title="class in org.springframework.web.struts">DelegatingTilesRequestProcessor</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext.
<DT><A HREF="../org/springframework/web/struts/DispatchActionSupport.html#initWebApplicationContext(org.apache.struts.action.ActionServlet)"><B>initWebApplicationContext(ActionServlet)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/DispatchActionSupport.html" title="class in org.springframework.web.struts">DispatchActionSupport</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext (the usual case).
<DT><A HREF="../org/springframework/web/struts/LookupDispatchActionSupport.html#initWebApplicationContext(org.apache.struts.action.ActionServlet)"><B>initWebApplicationContext(ActionServlet)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/LookupDispatchActionSupport.html" title="class in org.springframework.web.struts">LookupDispatchActionSupport</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext (the usual case).
<DT><A HREF="../org/springframework/web/struts/MappingDispatchActionSupport.html#initWebApplicationContext(org.apache.struts.action.ActionServlet)"><B>initWebApplicationContext(ActionServlet)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/MappingDispatchActionSupport.html" title="class in org.springframework.web.struts">MappingDispatchActionSupport</A>
<DD><B>Deprecated.</B>&nbsp;Fetch ContextLoaderPlugIn's WebApplicationContext from the ServletContext,
 falling back to the root WebApplicationContext (the usual case).
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html#inject(java.lang.Object, java.lang.String, org.springframework.beans.PropertyValues)"><B>inject(Object, String, PropertyValues)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#inject(java.lang.Object, java.lang.String, org.springframework.beans.PropertyValues)"><B>inject(Object, String, PropertyValues)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata.InjectedElement</A>
<DD>Either this or <A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#getResourceToInject(java.lang.Object, java.lang.String)"><CODE>InjectionMetadata.InjectedElement.getResourceToInject(java.lang.Object, java.lang.String)</CODE></A> needs to be overridden.
<DT><A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html#injectDependencies()"><B>injectDependencies()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html" title="class in org.springframework.test">AbstractDependencyInjectionSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Inject dependencies into 'this' instance (that is, this test instance).
<DT><A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#injectDependencies(org.springframework.test.context.TestContext)"><B>injectDependencies(TestContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html" title="class in org.springframework.test.context.support">DependencyInjectionTestExecutionListener</A>
<DD>Performs dependency injection and bean initialization for the supplied
 <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>TestContext</CODE></A> as described in
 <A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#prepareTestInstance(org.springframework.test.context.TestContext)"><CODE>prepareTestInstance()</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html" title="class in org.springframework.beans.factory.annotation"><B>InjectionMetadata</B></A> - Class in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD>Internal class for managing injection metadata.<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html#InjectionMetadata(java.lang.Class, java.util.Collection)"><B>InjectionMetadata(Class, Collection&lt;InjectionMetadata.InjectedElement&gt;)</B></A> - 
Constructor for class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation"><B>InjectionMetadata.InjectedElement</B></A> - Class in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD>&nbsp;<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#InjectionMetadata.InjectedElement(java.lang.reflect.Member, java.beans.PropertyDescriptor)"><B>InjectionMetadata.InjectedElement(Member, PropertyDescriptor)</B></A> - 
Constructor for class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata.InjectedElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#INLINE_SCRIPT_PREFIX"><B>INLINE_SCRIPT_PREFIX</B></A> - 
Static variable in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>The <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A>-style prefix that denotes
 an inline script.
<DT><A HREF="../org/springframework/expression/spel/ast/InlineList.html" title="class in org.springframework.expression.spel.ast"><B>InlineList</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Represent a list in an expression, e.g.<DT><A HREF="../org/springframework/expression/spel/ast/InlineList.html#InlineList(int, org.springframework.expression.spel.ast.SpelNodeImpl...)"><B>InlineList(int, SpelNodeImpl...)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/InlineList.html" title="class in org.springframework.expression.spel.ast">InlineList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/InputSourceEditor.html" title="class in org.springframework.beans.propertyeditors"><B>InputSourceEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>org.xml.sax.InputSource</code>, converting from a
 Spring resource location String to a SAX InputSource object.<DT><A HREF="../org/springframework/beans/propertyeditors/InputSourceEditor.html#InputSourceEditor()"><B>InputSourceEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/InputSourceEditor.html" title="class in org.springframework.beans.propertyeditors">InputSourceEditor</A>
<DD>Create a new InputSourceEditor,
 using the default ResourceEditor underneath.
<DT><A HREF="../org/springframework/beans/propertyeditors/InputSourceEditor.html#InputSourceEditor(org.springframework.core.io.ResourceEditor)"><B>InputSourceEditor(ResourceEditor)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/InputSourceEditor.html" title="class in org.springframework.beans.propertyeditors">InputSourceEditor</A>
<DD>Create a new InputSourceEditor,
 using the given ResourceEditor underneath.
<DT><A HREF="../org/springframework/beans/propertyeditors/InputStreamEditor.html" title="class in org.springframework.beans.propertyeditors"><B>InputStreamEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>One-way PropertyEditor which can convert from a text String to a
 <code>java.io.InputStream</code>, interpreting the given String
 as Spring resource location (e.g.<DT><A HREF="../org/springframework/beans/propertyeditors/InputStreamEditor.html#InputStreamEditor()"><B>InputStreamEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/InputStreamEditor.html" title="class in org.springframework.beans.propertyeditors">InputStreamEditor</A>
<DD>Create a new InputStreamEditor,
 using the default ResourceEditor underneath.
<DT><A HREF="../org/springframework/beans/propertyeditors/InputStreamEditor.html#InputStreamEditor(org.springframework.core.io.ResourceEditor)"><B>InputStreamEditor(ResourceEditor)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/InputStreamEditor.html" title="class in org.springframework.beans.propertyeditors">InputStreamEditor</A>
<DD>Create a new InputStreamEditor,
 using the given ResourceEditor underneath.
<DT><A HREF="../org/springframework/core/io/InputStreamResource.html" title="class in org.springframework.core.io"><B>InputStreamResource</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> implementation for a given InputStream.<DT><A HREF="../org/springframework/core/io/InputStreamResource.html#InputStreamResource(java.io.InputStream)"><B>InputStreamResource(InputStream)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/InputStreamResource.html" title="class in org.springframework.core.io">InputStreamResource</A>
<DD>Create a new InputStreamResource.
<DT><A HREF="../org/springframework/core/io/InputStreamResource.html#InputStreamResource(java.io.InputStream, java.lang.String)"><B>InputStreamResource(InputStream, String)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/InputStreamResource.html" title="class in org.springframework.core.io">InputStreamResource</A>
<DD>Create a new InputStreamResource.
<DT><A HREF="../org/springframework/core/io/InputStreamSource.html" title="interface in org.springframework.core.io"><B>InputStreamSource</B></A> - Interface in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD>Simple interface for objects that are sources for an <A HREF="http://java.sun.com/javase/6/docs/api/java/io/InputStream.html?is-external=true" title="class or interface in java.io"><CODE>InputStream</CODE></A>.<DT><A HREF="../org/springframework/web/servlet/tags/form/InputTag.html" title="class in org.springframework.web.servlet.tags.form"><B>InputTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/form/package-summary.html">org.springframework.web.servlet.tags.form</A><DD>Data-binding-aware JSP tag for rendering an HTML '<code>input</code>'
 element with a '<code>type</code>' of '<code>text</code>'.<DT><A HREF="../org/springframework/web/servlet/tags/form/InputTag.html#InputTag()"><B>InputTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/InputTag.html" title="class in org.springframework.web.servlet.tags.form">InputTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html#insert(java.lang.String)"><B>insert(String)</B></A> - 
Method in interface org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html" title="interface in org.springframework.orm.ibatis">SqlMapClientOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html#insert(java.lang.String, java.lang.Object)"><B>insert(String, Object)</B></A> - 
Method in interface org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientOperations.html" title="interface in org.springframework.orm.ibatis">SqlMapClientOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html#insert(java.lang.String)"><B>insert(String)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html" title="class in org.springframework.orm.ibatis">SqlMapClientTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html#insert(java.lang.String, java.lang.Object)"><B>insert(String, Object)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientTemplate.html" title="class in org.springframework.orm.ibatis">SqlMapClientTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/format/support/FormattingConversionServiceFactoryBean.html#installFormatters(org.springframework.format.FormatterRegistry)"><B>installFormatters(FormatterRegistry)</B></A> - 
Method in class org.springframework.format.support.<A HREF="../org/springframework/format/support/FormattingConversionServiceFactoryBean.html" title="class in org.springframework.format.support">FormattingConversionServiceFactoryBean</A>
<DD>Install Formatters and Converters into the new FormattingConversionService using the FormatterRegistry SPI.
<DT><A HREF="../org/springframework/format/datetime/joda/JodaTimeFormattingConfigurer.html#installJodaTimeFormatting(org.springframework.format.FormatterRegistry)"><B>installJodaTimeFormatting(FormatterRegistry)</B></A> - 
Method in class org.springframework.format.datetime.joda.<A HREF="../org/springframework/format/datetime/joda/JodaTimeFormattingConfigurer.html" title="class in org.springframework.format.datetime.joda">JodaTimeFormattingConfigurer</A>
<DD>Install Joda Time formatters given the current configuration of this <A HREF="../org/springframework/format/datetime/joda/JodaTimeFormattingConfigurer.html" title="class in org.springframework.format.datetime.joda"><CODE>JodaTimeFormattingConfigurer</CODE></A>.
<DT><A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html#INSTANCE"><B>INSTANCE</B></A> - 
Static variable in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html" title="class in org.springframework.aop.interceptor">ExposeInvocationInterceptor</A>
<DD>Singleton instance of this class
<DT><A HREF="../org/springframework/aop/target/EmptyTargetSource.html#INSTANCE"><B>INSTANCE</B></A> - 
Static variable in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/EmptyTargetSource.html" title="class in org.springframework.aop.target">EmptyTargetSource</A>
<DD>The canonical (Singleton) instance of this <A HREF="../org/springframework/aop/target/EmptyTargetSource.html" title="class in org.springframework.aop.target"><CODE>EmptyTargetSource</CODE></A>.
<DT><A HREF="../org/springframework/core/enums/StaticLabeledEnumResolver.html#instance()"><B>instance()</B></A> - 
Static method in class org.springframework.core.enums.<A HREF="../org/springframework/core/enums/StaticLabeledEnumResolver.html" title="class in org.springframework.core.enums">StaticLabeledEnumResolver</A>
<DD><B>Deprecated.</B>&nbsp;Return the shared <code>StaticLabeledEnumResolver</code> singleton instance.
<DT><A HREF="../org/springframework/core/OrderComparator.html#INSTANCE"><B>INSTANCE</B></A> - 
Static variable in class org.springframework.core.<A HREF="../org/springframework/core/OrderComparator.html" title="class in org.springframework.core">OrderComparator</A>
<DD>Shared default instance of OrderComparator.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#instantiate(java.lang.Class)"><B>instantiate(Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Convenience method to instantiate a class using its no-arg constructor.
<DT><A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)"><B>instantiate(RootBeanDefinition, String, BeanFactory)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html" title="interface in org.springframework.beans.factory.support">InstantiationStrategy</A>
<DD>Return an instance of the bean with the given name in this factory.
<DT><A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])"><B>instantiate(RootBeanDefinition, String, BeanFactory, Constructor&lt;?&gt;, Object[])</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html" title="interface in org.springframework.beans.factory.support">InstantiationStrategy</A>
<DD>Return an instance of the bean with the given name in this factory,
 creating it via the given constructor.
<DT><A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"><B>instantiate(RootBeanDefinition, String, BeanFactory, Object, Method, Object[])</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html" title="interface in org.springframework.beans.factory.support">InstantiationStrategy</A>
<DD>Return an instance of the bean with the given name in this factory,
 creating it via the given factory method.
<DT><A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)"><B>instantiate(RootBeanDefinition, String, BeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">SimpleInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])"><B>instantiate(RootBeanDefinition, String, BeanFactory, Constructor&lt;?&gt;, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">SimpleInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html#instantiate(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"><B>instantiate(RootBeanDefinition, String, BeanFactory, Object, Method, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">SimpleInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#instantiateBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)"><B>instantiateBean(String, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Instantiate the given bean using its default constructor.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#instantiateClass(java.lang.Class)"><B>instantiateClass(Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Convenience method to instantiate a class using its no-arg constructor.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#instantiateClass(java.lang.reflect.Constructor, java.lang.Object...)"><B>instantiateClass(Constructor&lt;T&gt;, Object...)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Convenience method to instantiate a class using the given constructor.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#instantiateUsingFactoryMethod(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])"><B>instantiateUsingFactoryMethod(String, RootBeanDefinition, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Instantiate the bean using a named factory method.
<DT><A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html#instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)"><B>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">CglibSubclassingInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html#instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])"><B>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory, Constructor, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">CglibSubclassingInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html#instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory)"><B>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">SimpleInstantiationStrategy</A>
<DD>Subclasses can override this method, which is implemented to throw
 UnsupportedOperationException, if they can instantiate an object with
 the Method Injection specified in the given RootBeanDefinition.
<DT><A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html#instantiateWithMethodInjection(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Constructor, java.lang.Object[])"><B>instantiateWithMethodInjection(RootBeanDefinition, String, BeanFactory, Constructor, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">SimpleInstantiationStrategy</A>
<DD>Subclasses can override this method, which is implemented to throw
 UnsupportedOperationException, if they can instantiate an object with
 the Method Injection specified in the given RootBeanDefinition.
<DT><A HREF="../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><B>InstantiationAwareBeanPostProcessor</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Subinterface of <A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> that adds a before-instantiation callback,
 and a callback after instantiation but before explicit properties are set or
 autowiring occurs.<DT><A HREF="../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config"><B>InstantiationAwareBeanPostProcessorAdapter</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Adapter that implements all methods on <A HREF="../org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>SmartInstantiationAwareBeanPostProcessor</CODE></A>
 as no-ops, which will not change normal processing of each bean instantiated
 by the container.<DT><A HREF="../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html#InstantiationAwareBeanPostProcessorAdapter()"><B>InstantiationAwareBeanPostProcessorAdapter()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessorAdapter.html" title="class in org.springframework.beans.factory.config">InstantiationAwareBeanPostProcessorAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html" title="interface in org.springframework.aop.aspectj"><B>InstantiationModelAwarePointcutAdvisor</B></A> - Interface in <A HREF="../org/springframework/aop/aspectj/package-summary.html">org.springframework.aop.aspectj</A><DD>Interface to be implemented by Spring AOP Advisors wrapping AspectJ
 aspects that may have a lazy initialization strategy.<DT><A HREF="../org/springframework/beans/factory/support/InstantiationStrategy.html" title="interface in org.springframework.beans.factory.support"><B>InstantiationStrategy</B></A> - Interface in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Interface responsible for creating instances corresponding to a root bean definition.<DT><A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading"><B>InstrumentationLoadTimeWeaver</B></A> - Class in <A HREF="../org/springframework/instrument/classloading/package-summary.html">org.springframework.instrument.classloading</A><DD><A HREF="../org/springframework/instrument/classloading/LoadTimeWeaver.html" title="interface in org.springframework.instrument.classloading"><CODE>LoadTimeWeaver</CODE></A> relying on VM <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/instrument/Instrumentation.html?is-external=true" title="class or interface in java.lang.instrument"><CODE>Instrumentation</CODE></A>.<DT><A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html#InstrumentationLoadTimeWeaver()"><B>InstrumentationLoadTimeWeaver()</B></A> - 
Constructor for class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">InstrumentationLoadTimeWeaver</A>
<DD>Create a new InstrumentationLoadTimeWeaver for the default ClassLoader.
<DT><A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html#InstrumentationLoadTimeWeaver(java.lang.ClassLoader)"><B>InstrumentationLoadTimeWeaver(ClassLoader)</B></A> - 
Constructor for class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">InstrumentationLoadTimeWeaver</A>
<DD>Create a new InstrumentationLoadTimeWeaver for the given ClassLoader.
<DT><A HREF="../org/springframework/instrument/InstrumentationSavingAgent.html" title="class in org.springframework.instrument"><B>InstrumentationSavingAgent</B></A> - Class in <A HREF="../org/springframework/instrument/package-summary.html">org.springframework.instrument</A><DD>Java agent that saves the <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/instrument/Instrumentation.html?is-external=true" title="class or interface in java.lang.instrument"><CODE>Instrumentation</CODE></A> interface from the JVM
 for later use.<DT><A HREF="../org/springframework/instrument/InstrumentationSavingAgent.html#InstrumentationSavingAgent()"><B>InstrumentationSavingAgent()</B></A> - 
Constructor for class org.springframework.instrument.<A HREF="../org/springframework/instrument/InstrumentationSavingAgent.html" title="class in org.springframework.instrument">InstrumentationSavingAgent</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/core/InteractionCallback.html" title="interface in org.springframework.jca.cci.core"><B>InteractionCallback</B></A>&lt;<A HREF="../org/springframework/jca/cci/core/InteractionCallback.html" title="type parameter in InteractionCallback">T</A>&gt; - Interface in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD>Generic callback interface for code that operates on a CCI Interaction.<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html#interceptorsAndDynamicMethodMatchers"><B>interceptorsAndDynamicMethodMatchers</B></A> - 
Variable in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework">ReflectiveMethodInvocation</A>
<DD>List of MethodInterceptor and InterceptorAndDynamicMethodMatcher
 that need dynamic checks.
<DT><A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler"><B>InterfaceBasedMBeanInfoAssembler</B></A> - Class in <A HREF="../org/springframework/jmx/export/assembler/package-summary.html">org.springframework.jmx.export.assembler</A><DD>Subclass of <code>AbstractReflectiveMBeanInfoAssembler</code> that allows for
 the management interface of a bean to be defined using arbitrary interfaces.<DT><A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html#InterfaceBasedMBeanInfoAssembler()"><B>InterfaceBasedMBeanInfoAssembler()</B></A> - 
Constructor for class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/InterfaceBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">InterfaceBasedMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/InternalParseException.html" title="class in org.springframework.expression.spel"><B>InternalParseException</B></A> - Exception in <A HREF="../org/springframework/expression/spel/package-summary.html">org.springframework.expression.spel</A><DD>Wraps a real parse exception.<DT><A HREF="../org/springframework/expression/spel/InternalParseException.html#InternalParseException(org.springframework.expression.spel.SpelParseException)"><B>InternalParseException(SpelParseException)</B></A> - 
Constructor for exception org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/InternalParseException.html" title="class in org.springframework.expression.spel">InternalParseException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html" title="class in org.springframework.web.servlet.mvc.multiaction"><B>InternalPathMethodNameResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/multiaction/package-summary.html">org.springframework.web.servlet.mvc.multiaction</A><DD>Simple implementation of <A HREF="../org/springframework/web/servlet/mvc/multiaction/MethodNameResolver.html" title="interface in org.springframework.web.servlet.mvc.multiaction"><CODE>MethodNameResolver</CODE></A> that maps URL to
 method name.<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html#InternalPathMethodNameResolver()"><B>InternalPathMethodNameResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.multiaction.<A HREF="../org/springframework/web/servlet/mvc/multiaction/InternalPathMethodNameResolver.html" title="class in org.springframework.web.servlet.mvc.multiaction">InternalPathMethodNameResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view"><B>InternalResourceView</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>Wrapper for a JSP or other resource within the same web application.<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView()"><B>InternalResourceView()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Constructor for use as a bean.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView(java.lang.String)"><B>InternalResourceView(String)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Create a new InternalResourceView with the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#InternalResourceView(java.lang.String, boolean)"><B>InternalResourceView(String, boolean)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Create a new InternalResourceView with the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view"><B>InternalResourceViewResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>Convenient subclass of <A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view"><CODE>UrlBasedViewResolver</CODE></A> that supports
 <A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view"><CODE>InternalResourceView</CODE></A> (i.e.<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html#InternalResourceViewResolver()"><B>InternalResourceViewResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view">InternalResourceViewResolver</A>
<DD>Sets the default <A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#setViewClass(java.lang.Class)"><CODE>view class</CODE></A> to <A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html#requiredViewClass()"><CODE>InternalResourceViewResolver.requiredViewClass()</CODE></A>:
 by default <A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view"><CODE>InternalResourceView</CODE></A>, or <A HREF="../org/springframework/web/servlet/view/JstlView.html" title="class in org.springframework.web.servlet.view"><CODE>JstlView</CODE></A> if the JSTL API
 is present.
<DT><A HREF="../org/springframework/mail/javamail/InternetAddressEditor.html" title="class in org.springframework.mail.javamail"><B>InternetAddressEditor</B></A> - Class in <A HREF="../org/springframework/mail/javamail/package-summary.html">org.springframework.mail.javamail</A><DD>Editor for <code>java.mail.internet.InternetAddress</code>,
 to directly populate an InternetAddress property.<DT><A HREF="../org/springframework/mail/javamail/InternetAddressEditor.html#InternetAddressEditor()"><B>InternetAddressEditor()</B></A> - 
Constructor for class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/InternetAddressEditor.html" title="class in org.springframework.mail.javamail">InternetAddressEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html#interpolate(java.lang.String, javax.validation.MessageInterpolator.Context)"><B>interpolate(String, MessageInterpolator.Context)</B></A> - 
Method in class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html" title="class in org.springframework.validation.beanvalidation">LocaleContextMessageInterpolator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html#interpolate(java.lang.String, javax.validation.MessageInterpolator.Context, java.util.Locale)"><B>interpolate(String, MessageInterpolator.Context, Locale)</B></A> - 
Method in class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/LocaleContextMessageInterpolator.html" title="class in org.springframework.validation.beanvalidation">LocaleContextMessageInterpolator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/InterruptibleBatchPreparedStatementSetter.html" title="interface in org.springframework.jdbc.core"><B>InterruptibleBatchPreparedStatementSetter</B></A> - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Extension of the <A HREF="../org/springframework/jdbc/core/BatchPreparedStatementSetter.html" title="interface in org.springframework.jdbc.core"><CODE>BatchPreparedStatementSetter</CODE></A> interface,
 adding a batch exhaustion check.<DT><A HREF="../org/springframework/aop/support/ClassFilters.html#intersection(org.springframework.aop.ClassFilter, org.springframework.aop.ClassFilter)"><B>intersection(ClassFilter, ClassFilter)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support">ClassFilters</A>
<DD>Match all classes that <i>both</i> of the given ClassFilters match.
<DT><A HREF="../org/springframework/aop/support/ClassFilters.html#intersection(org.springframework.aop.ClassFilter[])"><B>intersection(ClassFilter[])</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support">ClassFilters</A>
<DD>Match all classes that <i>all</i> of the given ClassFilters match.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#intersection(org.springframework.aop.ClassFilter)"><B>intersection(ClassFilter)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply an intersection with the given ClassFilter.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#intersection(org.springframework.aop.MethodMatcher)"><B>intersection(MethodMatcher)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply an intersection with the given MethodMatcher.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#intersection(org.springframework.aop.Pointcut)"><B>intersection(Pointcut)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Apply an intersection with the given Pointcut.
<DT><A HREF="../org/springframework/aop/support/MethodMatchers.html#intersection(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher)"><B>intersection(MethodMatcher, MethodMatcher)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/MethodMatchers.html" title="class in org.springframework.aop.support">MethodMatchers</A>
<DD>Match all methods that <i>both</i> of the given MethodMatchers match.
<DT><A HREF="../org/springframework/aop/support/Pointcuts.html#intersection(org.springframework.aop.Pointcut, org.springframework.aop.Pointcut)"><B>intersection(Pointcut, Pointcut)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/Pointcuts.html" title="class in org.springframework.aop.support">Pointcuts</A>
<DD>Match all methods that <b>both</b> the given pointcuts match.
<DT><A HREF="../org/springframework/expression/spel/ast/IntLiteral.html" title="class in org.springframework.expression.spel.ast"><B>IntLiteral</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Expression language AST node that represents an integer literal.<DT><A HREF="../org/springframework/dao/support/DataAccessUtils.html#intResult(java.util.Collection)"><B>intResult(Collection)</B></A> - 
Static method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DataAccessUtils.html" title="class in org.springframework.dao.support">DataAccessUtils</A>
<DD>Return a unique int result from the given Collection.
<DT><A HREF="../org/springframework/aop/IntroductionAdvisor.html" title="interface in org.springframework.aop"><B>IntroductionAdvisor</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Superinterface for advisors that perform one or more AOP <b>introductions</b>.<DT><A HREF="../org/springframework/aop/IntroductionAwareMethodMatcher.html" title="interface in org.springframework.aop"><B>IntroductionAwareMethodMatcher</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>A specialized type of MethodMatcher that takes into account introductions when
 matching methods.<DT><A HREF="../org/springframework/aop/IntroductionInfo.html" title="interface in org.springframework.aop"><B>IntroductionInfo</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Interface supplying the information necessary to describe an introduction.<DT><A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html" title="class in org.springframework.aop.support"><B>IntroductionInfoSupport</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Support for implementations of <A HREF="../org/springframework/aop/IntroductionInfo.html" title="interface in org.springframework.aop"><CODE>IntroductionInfo</CODE></A>.<DT><A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html#IntroductionInfoSupport()"><B>IntroductionInfoSupport()</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html" title="class in org.springframework.aop.support">IntroductionInfoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/IntroductionInterceptor.html" title="interface in org.springframework.aop"><B>IntroductionInterceptor</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Subinterface of AOP Alliance MethodInterceptor that allows additional interfaces
 to be implemented by the interceptor, and available via a proxy using that
 interceptor.<DT><A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html" title="class in org.springframework.web.util"><B>IntrospectorCleanupListener</B></A> - Class in <A HREF="../org/springframework/web/util/package-summary.html">org.springframework.web.util</A><DD>Listener that flushes the JDK's <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/Introspector.html?is-external=true" title="class or interface in java.beans"><CODE>JavaBeans Introspector</CODE></A>
 cache on web app shutdown.<DT><A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html#IntrospectorCleanupListener()"><B>IntrospectorCleanupListener()</B></A> - 
Constructor for class org.springframework.web.util.<A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html" title="class in org.springframework.web.util">IntrospectorCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#invalidate()"><B>invalidate()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Invalidate this request, clearing its state.
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#invalidate()"><B>invalidate()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#invalidate()"><B>invalidate()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/InvalidClientIDException.html" title="class in org.springframework.jms"><B>InvalidClientIDException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>Runtime exception mirroring the JMS InvalidClientIDException.<DT><A HREF="../org/springframework/jms/InvalidClientIDException.html#InvalidClientIDException(javax.jms.InvalidClientIDException)"><B>InvalidClientIDException(InvalidClientIDException)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/InvalidClientIDException.html" title="class in org.springframework.jms">InvalidClientIDException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/dao/InvalidDataAccessApiUsageException.html" title="class in org.springframework.dao"><B>InvalidDataAccessApiUsageException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Exception thrown on incorrect usage of the API, such as failing to
 "compile" a query object that needed compilation before execution.<DT><A HREF="../org/springframework/dao/InvalidDataAccessApiUsageException.html#InvalidDataAccessApiUsageException(java.lang.String)"><B>InvalidDataAccessApiUsageException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/InvalidDataAccessApiUsageException.html" title="class in org.springframework.dao">InvalidDataAccessApiUsageException</A>
<DD>Constructor for InvalidDataAccessApiUsageException.
<DT><A HREF="../org/springframework/dao/InvalidDataAccessApiUsageException.html#InvalidDataAccessApiUsageException(java.lang.String, java.lang.Throwable)"><B>InvalidDataAccessApiUsageException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/InvalidDataAccessApiUsageException.html" title="class in org.springframework.dao">InvalidDataAccessApiUsageException</A>
<DD>Constructor for InvalidDataAccessApiUsageException.
<DT><A HREF="../org/springframework/dao/InvalidDataAccessResourceUsageException.html" title="class in org.springframework.dao"><B>InvalidDataAccessResourceUsageException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Root for exceptions thrown when we use a data access resource incorrectly.<DT><A HREF="../org/springframework/dao/InvalidDataAccessResourceUsageException.html#InvalidDataAccessResourceUsageException(java.lang.String)"><B>InvalidDataAccessResourceUsageException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/InvalidDataAccessResourceUsageException.html" title="class in org.springframework.dao">InvalidDataAccessResourceUsageException</A>
<DD>Constructor for InvalidDataAccessResourceUsageException.
<DT><A HREF="../org/springframework/dao/InvalidDataAccessResourceUsageException.html#InvalidDataAccessResourceUsageException(java.lang.String, java.lang.Throwable)"><B>InvalidDataAccessResourceUsageException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/InvalidDataAccessResourceUsageException.html" title="class in org.springframework.dao">InvalidDataAccessResourceUsageException</A>
<DD>Constructor for InvalidDataAccessResourceUsageException.
<DT><A HREF="../org/springframework/jms/InvalidDestinationException.html" title="class in org.springframework.jms"><B>InvalidDestinationException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>Runtime exception mirroring the JMS InvalidDestinationException.<DT><A HREF="../org/springframework/jms/InvalidDestinationException.html#InvalidDestinationException(javax.jms.InvalidDestinationException)"><B>InvalidDestinationException(InvalidDestinationException)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/InvalidDestinationException.html" title="class in org.springframework.jms">InvalidDestinationException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/access/InvalidInvocationException.html" title="class in org.springframework.jmx.access"><B>InvalidInvocationException</B></A> - Exception in <A HREF="../org/springframework/jmx/access/package-summary.html">org.springframework.jmx.access</A><DD>Thrown when trying to invoke an operation on a proxy that is not exposed
 by the proxied MBean resource's management interface.<DT><A HREF="../org/springframework/jmx/access/InvalidInvocationException.html#InvalidInvocationException(java.lang.String)"><B>InvalidInvocationException(String)</B></A> - 
Constructor for exception org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/InvalidInvocationException.html" title="class in org.springframework.jmx.access">InvalidInvocationException</A>
<DD>Create a new <code>InvalidInvocationException</code> with the supplied
 error message.
<DT><A HREF="../org/springframework/transaction/InvalidIsolationLevelException.html" title="class in org.springframework.transaction"><B>InvalidIsolationLevelException</B></A> - Exception in <A HREF="../org/springframework/transaction/package-summary.html">org.springframework.transaction</A><DD>Exception that gets thrown when an invalid isolation level is specified,
 i.e.<DT><A HREF="../org/springframework/transaction/InvalidIsolationLevelException.html#InvalidIsolationLevelException(java.lang.String)"><B>InvalidIsolationLevelException(String)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/InvalidIsolationLevelException.html" title="class in org.springframework.transaction">InvalidIsolationLevelException</A>
<DD>Constructor for InvalidIsolationLevelException.
<DT><A HREF="../org/springframework/jmx/export/metadata/InvalidMetadataException.html" title="class in org.springframework.jmx.export.metadata"><B>InvalidMetadataException</B></A> - Exception in <A HREF="../org/springframework/jmx/export/metadata/package-summary.html">org.springframework.jmx.export.metadata</A><DD>Thrown by the <code>JmxAttributeSource</code> when it encounters
 incorrect metadata on a managed resource or one of its methods.<DT><A HREF="../org/springframework/jmx/export/metadata/InvalidMetadataException.html#InvalidMetadataException(java.lang.String)"><B>InvalidMetadataException(String)</B></A> - 
Constructor for exception org.springframework.jmx.export.metadata.<A HREF="../org/springframework/jmx/export/metadata/InvalidMetadataException.html" title="class in org.springframework.jmx.export.metadata">InvalidMetadataException</A>
<DD>Create a new <code>InvalidMetadataException</code> with the supplied
 error message.
<DT><A HREF="../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans"><B>InvalidPropertyException</B></A> - Exception in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Exception thrown when referring to an invalid bean property.<DT><A HREF="../org/springframework/beans/InvalidPropertyException.html#InvalidPropertyException(java.lang.Class, java.lang.String, java.lang.String)"><B>InvalidPropertyException(Class, String, String)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A>
<DD>Create a new InvalidPropertyException.
<DT><A HREF="../org/springframework/beans/InvalidPropertyException.html#InvalidPropertyException(java.lang.Class, java.lang.String, java.lang.String, java.lang.Throwable)"><B>InvalidPropertyException(Class, String, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/InvalidPropertyException.html" title="class in org.springframework.beans">InvalidPropertyException</A>
<DD>Create a new InvalidPropertyException.
<DT><A HREF="../org/springframework/jca/cci/InvalidResultSetAccessException.html" title="class in org.springframework.jca.cci"><B>InvalidResultSetAccessException</B></A> - Exception in <A HREF="../org/springframework/jca/cci/package-summary.html">org.springframework.jca.cci</A><DD>Exception thrown when a ResultSet has been accessed in an invalid fashion.<DT><A HREF="../org/springframework/jca/cci/InvalidResultSetAccessException.html#InvalidResultSetAccessException(java.lang.String, java.sql.SQLException)"><B>InvalidResultSetAccessException(String, SQLException)</B></A> - 
Constructor for exception org.springframework.jca.cci.<A HREF="../org/springframework/jca/cci/InvalidResultSetAccessException.html" title="class in org.springframework.jca.cci">InvalidResultSetAccessException</A>
<DD>Constructor for InvalidResultSetAccessException.
<DT><A HREF="../org/springframework/jdbc/InvalidResultSetAccessException.html" title="class in org.springframework.jdbc"><B>InvalidResultSetAccessException</B></A> - Exception in <A HREF="../org/springframework/jdbc/package-summary.html">org.springframework.jdbc</A><DD>Exception thrown when a ResultSet has been accessed in an invalid fashion.<DT><A HREF="../org/springframework/jdbc/InvalidResultSetAccessException.html#InvalidResultSetAccessException(java.lang.String, java.lang.String, java.sql.SQLException)"><B>InvalidResultSetAccessException(String, String, SQLException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/InvalidResultSetAccessException.html" title="class in org.springframework.jdbc">InvalidResultSetAccessException</A>
<DD>Constructor for InvalidResultSetAccessException.
<DT><A HREF="../org/springframework/jdbc/InvalidResultSetAccessException.html#InvalidResultSetAccessException(java.sql.SQLException)"><B>InvalidResultSetAccessException(SQLException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/InvalidResultSetAccessException.html" title="class in org.springframework.jdbc">InvalidResultSetAccessException</A>
<DD>Constructor for InvalidResultSetAccessException.
<DT><A HREF="../org/springframework/jms/InvalidSelectorException.html" title="class in org.springframework.jms"><B>InvalidSelectorException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>Runtime exception mirroring the JMS InvalidSelectorException.<DT><A HREF="../org/springframework/jms/InvalidSelectorException.html#InvalidSelectorException(javax.jms.InvalidSelectorException)"><B>InvalidSelectorException(InvalidSelectorException)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/InvalidSelectorException.html" title="class in org.springframework.jms">InvalidSelectorException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/InvalidTimeoutException.html" title="class in org.springframework.transaction"><B>InvalidTimeoutException</B></A> - Exception in <A HREF="../org/springframework/transaction/package-summary.html">org.springframework.transaction</A><DD>Exception that gets thrown when an invalid timeout is specified,
 that is, the specified timeout valid is out of range or the
 transaction manager implementation doesn't support timeouts.<DT><A HREF="../org/springframework/transaction/InvalidTimeoutException.html#InvalidTimeoutException(java.lang.String, int)"><B>InvalidTimeoutException(String, int)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/InvalidTimeoutException.html" title="class in org.springframework.transaction">InvalidTimeoutException</A>
<DD>Constructor for InvalidTimeoutException.
<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator"><B>InvertibleComparator</B></A>&lt;<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="type parameter in InvertibleComparator">T</A>&gt; - Class in <A HREF="../org/springframework/util/comparator/package-summary.html">org.springframework.util.comparator</A><DD>A decorator for a comparator, with an "ascending" flag denoting
 whether comparison results should be treated in forward (standard
 ascending) order or flipped for reverse (descending) order.<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html#InvertibleComparator(java.util.Comparator)"><B>InvertibleComparator(Comparator&lt;T&gt;)</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator">InvertibleComparator</A>
<DD>Create an InvertibleComparator that sorts ascending by default.
<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html#InvertibleComparator(java.util.Comparator, boolean)"><B>InvertibleComparator(Comparator&lt;T&gt;, boolean)</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator">InvertibleComparator</A>
<DD>Create an InvertibleComparator that sorts based on the provided order.
<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html#invertOrder()"><B>invertOrder()</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator">CompoundComparator</A>
<DD>Invert the sort order of each sort definition contained by this compound
 comparator.
<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html#invertOrder(int)"><B>invertOrder(int)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator">CompoundComparator</A>
<DD>Invert the sort order of the sort definition at the specified index.
<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html#invertOrder()"><B>invertOrder()</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator">InvertibleComparator</A>
<DD>Invert the sort order: ascending -> descending or
 descending -> ascending.
<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html#invocableClone()"><B>invocableClone()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework">ReflectiveMethodInvocation</A>
<DD>This implementation returns a shallow copy of this invocation object,
 including an independent copy of the original arguments array.
<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html#invocableClone(java.lang.Object[])"><B>invocableClone(Object[])</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework">ReflectiveMethodInvocation</A>
<DD>This implementation returns a shallow copy of this invocation object,
 using the given arguments array for the clone.
<DT><A HREF="../org/springframework/aop/ProxyMethodInvocation.html#invocableClone()"><B>invocableClone()</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/ProxyMethodInvocation.html" title="interface in org.springframework.aop">ProxyMethodInvocation</A>
<DD>Create a clone of this object.
<DT><A HREF="../org/springframework/aop/ProxyMethodInvocation.html#invocableClone(java.lang.Object[])"><B>invocableClone(Object[])</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/ProxyMethodInvocation.html" title="interface in org.springframework.aop">ProxyMethodInvocation</A>
<DD>Create a clone of this object.
<DT><A HREF="../org/springframework/jmx/access/InvocationFailureException.html" title="class in org.springframework.jmx.access"><B>InvocationFailureException</B></A> - Exception in <A HREF="../org/springframework/jmx/access/package-summary.html">org.springframework.jmx.access</A><DD>Thrown when an invocation on an MBean resource failed with an exception (either
 a reflection exception or an exception thrown by the target method itself).<DT><A HREF="../org/springframework/jmx/access/InvocationFailureException.html#InvocationFailureException(java.lang.String)"><B>InvocationFailureException(String)</B></A> - 
Constructor for exception org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/InvocationFailureException.html" title="class in org.springframework.jmx.access">InvocationFailureException</A>
<DD>Create a new <code>InvocationFailureException</code> with the supplied
 error message.
<DT><A HREF="../org/springframework/jmx/access/InvocationFailureException.html#InvocationFailureException(java.lang.String, java.lang.Throwable)"><B>InvocationFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/InvocationFailureException.html" title="class in org.springframework.jmx.access">InvocationFailureException</A>
<DD>Create a new <code>InvocationFailureException</code> with the
 specified error message and root cause.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterThrowingAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAroundAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.html" title="class in org.springframework.aop.framework.adapter">AfterReturningAdviceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/adapter/MethodBeforeAdviceInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/MethodBeforeAdviceInterceptor.html" title="class in org.springframework.aop.framework.adapter">MethodBeforeAdviceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.html" title="class in org.springframework.aop.framework.adapter">ThrowsAdviceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html" title="class in org.springframework.aop.interceptor">AbstractTraceInterceptor</A>
<DD>Determines whether or not logging is enabled for the particular <code>MethodInvocation</code>.
<DT><A HREF="../org/springframework/aop/interceptor/AsyncExecutionInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AsyncExecutionInterceptor.html" title="class in org.springframework.aop.interceptor">AsyncExecutionInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html" title="class in org.springframework.aop.interceptor">ConcurrencyThrottleInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/DebugInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/DebugInterceptor.html" title="class in org.springframework.aop.interceptor">DebugInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html" title="class in org.springframework.aop.interceptor">ExposeInvocationInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/DelegatePerTargetObjectIntroductionInterceptor.html" title="class in org.springframework.aop.support">DelegatePerTargetObjectIntroductionInterceptor</A>
<DD>Subclasses may need to override this if they want to perform custom
 behaviour in around advice.
<DT><A HREF="../org/springframework/aop/support/DelegatingIntroductionInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/DelegatingIntroductionInterceptor.html" title="class in org.springframework.aop.support">DelegatingIntroductionInterceptor</A>
<DD>Subclasses may need to override this if they want to  perform custom
 behaviour in around advice.
<DT><A HREF="../org/springframework/context/event/EventPublicationInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.context.event.<A HREF="../org/springframework/context/event/EventPublicationInterceptor.html" title="class in org.springframework.context.event">EventPublicationInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/PersistenceExceptionTranslationInterceptor.html" title="class in org.springframework.dao.support">PersistenceExceptionTranslationInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A>
<DD>Prepares the thread context if necessar, and delegates to
 <A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#invokeInContext(org.aopalliance.intercept.MethodInvocation)"><CODE>AbstractSlsbInvokerInterceptor.invokeInContext(org.aopalliance.intercept.MethodInvocation)</CODE></A>.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html" title="class in org.springframework.jmx.access">MBeanClientInterceptor</A>
<DD>Route the invocation to the configured managed resource..
<DT><A HREF="../org/springframework/jmx/export/SpringModelMBean.html#invoke(java.lang.String, java.lang.Object[], java.lang.String[])"><B>invoke(String, Object[], String[])</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/SpringModelMBean.html" title="class in org.springframework.jmx.export">SpringModelMBean</A>
<DD>Switches the <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Thread.html?is-external=true#getContextClassLoader()" title="class or interface in java.lang"><CODE>context ClassLoader</CODE></A> for the
 managed resources <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>ClassLoader</CODE></A> before allowing the invocation to occur.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateInterceptor.html" title="class in org.springframework.orm.hibernate3">HibernateInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/JdoInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoInterceptor.html" title="class in org.springframework.orm.jdo">JdoInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaInterceptor.html" title="class in org.springframework.orm.jpa">JpaInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html" title="class in org.springframework.remoting.caucho">BurlapClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapExporter.html#invoke(java.io.InputStream, java.io.OutputStream)"><B>invoke(InputStream, OutputStream)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapExporter.html" title="class in org.springframework.remoting.caucho">BurlapExporter</A>
<DD>Perform an invocation on the exported object.
<DT><A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html" title="class in org.springframework.remoting.caucho">HessianClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/HessianExporter.html#invoke(java.io.InputStream, java.io.OutputStream)"><B>invoke(InputStream, OutputStream)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianExporter.html" title="class in org.springframework.remoting.caucho">HessianExporter</A>
<DD>Perform an invocation on the exported object.
<DT><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html" title="class in org.springframework.remoting.httpinvoker">HttpInvokerClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortClientInterceptor</A>
<DD><B>Deprecated.</B>&nbsp;Translates the method invocation into a JAX-RPC service invocation.
<DT><A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html" title="class in org.springframework.remoting.jaxws">JaxWsPortClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">JndiRmiClientInterceptor</A>
<DD>Fetches an RMI stub and delegates to <A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#doInvoke(org.aopalliance.intercept.MethodInvocation, java.lang.Object)"><CODE>JndiRmiClientInterceptor.doInvoke(org.aopalliance.intercept.MethodInvocation, java.lang.Object)</CODE></A>.
<DT><A HREF="../org/springframework/remoting/rmi/RmiBasedExporter.html#invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)"><B>invoke(RemoteInvocation, Object)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi">RmiBasedExporter</A>
<DD>Redefined here to be visible to RmiInvocationWrapper.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptor</A>
<DD>Fetches an RMI stub and delegates to <code>doInvoke</code>.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#invoke(org.aopalliance.intercept.MethodInvocation, java.rmi.Remote, java.lang.String)"><B>invoke(MethodInvocation, Remote, String)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, in favor of <A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#invokeRemoteMethod(org.aopalliance.intercept.MethodInvocation, java.lang.Object)"><CODE>RmiClientInterceptorUtils.invokeRemoteMethod(org.aopalliance.intercept.MethodInvocation, java.lang.Object)</CODE></A></I>
<DT><A HREF="../org/springframework/remoting/rmi/RmiInvocationHandler.html#invoke(org.springframework.remoting.support.RemoteInvocation)"><B>invoke(RemoteInvocation)</B></A> - 
Method in interface org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiInvocationHandler.html" title="interface in org.springframework.remoting.rmi">RmiInvocationHandler</A>
<DD>Apply the given invocation to the target object.
<DT><A HREF="../org/springframework/remoting/support/DefaultRemoteInvocationExecutor.html#invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)"><B>invoke(RemoteInvocation, Object)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/DefaultRemoteInvocationExecutor.html" title="class in org.springframework.remoting.support">DefaultRemoteInvocationExecutor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocation.html#invoke(java.lang.Object)"><B>invoke(Object)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support">RemoteInvocation</A>
<DD>Perform this invocation on the given target object.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)"><B>invoke(RemoteInvocation, Object)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedExporter</A>
<DD>Apply the given remote invocation to the given target object.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationExecutor.html#invoke(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)"><B>invoke(RemoteInvocation, Object)</B></A> - 
Method in interface org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationExecutor.html" title="interface in org.springframework.remoting.support">RemoteInvocationExecutor</A>
<DD>Perform this invocation on the given target object.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html" title="class in org.springframework.remoting.support">RemoteInvocationTraceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionInterceptor.html#invoke(org.aopalliance.intercept.MethodInvocation)"><B>invoke(MethodInvocation)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionInterceptor.html" title="class in org.springframework.transaction.interceptor">TransactionInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/MethodInvoker.html#invoke()"><B>invoke()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/MethodInvoker.html" title="class in org.springframework.util">MethodInvoker</A>
<DD>Invoke the specified method.
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#invokeAdviceMethod(org.aspectj.weaver.tools.JoinPointMatch, java.lang.Object, java.lang.Throwable)"><B>invokeAdviceMethod(JoinPointMatch, Object, Throwable)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>Invoke the advice method.
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#invokeAdviceMethod(org.aspectj.lang.JoinPoint, org.aspectj.weaver.tools.JoinPointMatch, java.lang.Object, java.lang.Throwable)"><B>invokeAdviceMethod(JoinPoint, JoinPointMatch, Object, Throwable)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#invokeAdviceMethodWithGivenArgs(java.lang.Object[])"><B>invokeAdviceMethodWithGivenArgs(Object[])</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationUtils.html#invokeAfterCommit(java.util.List)"><B>invokeAfterCommit(List&lt;TransactionSynchronization&gt;)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationUtils.html" title="class in org.springframework.transaction.support">TransactionSynchronizationUtils</A>
<DD>Actually invoke the <code>afterCommit</code> methods of the
 given Spring TransactionSynchronization objects.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#invokeAfterCompletion(java.util.List, int)"><B>invokeAfterCompletion(List&lt;TransactionSynchronization&gt;, int)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Actually invoke the <code>afterCompletion</code> methods of the
 given Spring TransactionSynchronization objects.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationUtils.html#invokeAfterCompletion(java.util.List, int)"><B>invokeAfterCompletion(List&lt;TransactionSynchronization&gt;, int)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationUtils.html" title="class in org.springframework.transaction.support">TransactionSynchronizationUtils</A>
<DD>Actually invoke the <code>afterCompletion</code> methods of the
 given Spring TransactionSynchronization objects.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#invokeAndCreateResult(org.springframework.remoting.support.RemoteInvocation, java.lang.Object)"><B>invokeAndCreateResult(RemoteInvocation, Object)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedExporter</A>
<DD>Apply the given remote invocation to the given target object, wrapping
 the invocation result in a serializable RemoteInvocationResult object.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>invokeBeanFactoryPostProcessors(ConfigurableListableBeanFactory)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Instantiate and invoke all registered BeanFactoryPostProcessor beans,
 respecting explicit order if given.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#invokeCustomInitMethod(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)"><B>invokeCustomInitMethod(String, Object, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Invoke the specified custom init method on the given bean.
<DT><A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html#invokeDelegate(javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)"><B>invokeDelegate(Filter, ServletRequest, ServletResponse, FilterChain)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter">DelegatingFilterProxy</A>
<DD>Actually invoke the delegate Filter with the given request and response.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeErrorHandler(java.lang.Throwable)"><B>invokeErrorHandler(Throwable)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Invoke the registered ErrorHandler, if any.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeExceptionListener(javax.jms.JMSException)"><B>invokeExceptionListener(JMSException)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Invoke the registered JMS ExceptionListener, if any.
<DT><A HREF="../org/springframework/test/util/ReflectionTestUtils.html#invokeGetterMethod(java.lang.Object, java.lang.String)"><B>invokeGetterMethod(Object, String)</B></A> - 
Static method in class org.springframework.test.util.<A HREF="../org/springframework/test/util/ReflectionTestUtils.html" title="class in org.springframework.test.util">ReflectionTestUtils</A>
<DD>Invoke the getter method with the given <code>name</code> on the supplied
 target object with the supplied <code>value</code>.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#invokeHandlerMethod(java.lang.reflect.Method, java.lang.Object, org.springframework.web.context.request.NativeWebRequest, org.springframework.ui.ExtendedModelMap)"><B>invokeHandlerMethod(Method, Object, NativeWebRequest, ExtendedModelMap)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#invokeHandlerMethod(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object)"><B>invokeHandlerMethod(HttpServletRequest, HttpServletResponse, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html#invokeInContext(org.aopalliance.intercept.MethodInvocation)"><B>invokeInContext(MethodInvocation)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractRemoteSlsbInvokerInterceptor</A>
<DD>Fetches an EJB home object and delegates to <code>doInvoke</code>.
<DT><A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#invokeInContext(org.aopalliance.intercept.MethodInvocation)"><B>invokeInContext(MethodInvocation)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A>
<DD>Perform the given invocation on the current EJB home,
 within the thread context being prepared accordingly.
<DT><A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#invokeInContext(org.aopalliance.intercept.MethodInvocation)"><B>invokeInContext(MethodInvocation)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">LocalSlsbInvokerInterceptor</A>
<DD>This implementation "creates" a new EJB instance for each invocation.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#invokeInitMethods(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)"><B>invokeInitMethods(String, Object, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Give a bean a chance to react now all its properties are set,
 and a chance to know about its owning bean factory (this object).
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#invokeJdbcMethod(java.lang.reflect.Method, java.lang.Object)"><B>invokeJdbcMethod(Method, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Invoke the specified JDBC API <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Method</CODE></A> against the supplied target
 object with no arguments.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#invokeJdbcMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"><B>invokeJdbcMethod(Method, Object, Object...)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Invoke the specified JDBC API <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Method</CODE></A> against the supplied target
 object with the supplied arguments.
<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html#invokeJoinpoint()"><B>invokeJoinpoint()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework">ReflectiveMethodInvocation</A>
<DD>Invoke the joinpoint using reflection.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#invokeJoinpointUsingReflection(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"><B>invokeJoinpointUsingReflection(Object, Method, Object[])</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Invoke the given target via reflection, as part of an AOP method invocation.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#invokeListener(javax.jms.Session, javax.jms.Message)"><B>invokeListener(Session, Message)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Invoke the specified listener: either as standard JMS MessageListener
 or (preferably) as Spring SessionAwareMessageListener.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html#invokeListenerMethod(java.lang.String, java.lang.Object[])"><B>invokeListenerMethod(String, Object[])</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter</A>
<DD>Invoke the specified listener method.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#invokeMethod(java.lang.reflect.Method, java.lang.Object)"><B>invokeMethod(Method, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Invoke the specified <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Method</CODE></A> against the supplied target object with no arguments.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#invokeMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"><B>invokeMethod(Method, Object, Object...)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Invoke the specified <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Method</CODE></A> against the supplied target object with the
 supplied arguments.
<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html#invokeNamedMethod(java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>invokeNamedMethod(String, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.mvc.multiaction.<A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html" title="class in org.springframework.web.servlet.mvc.multiaction">MultiActionController</A>
<DD>Invokes the named method.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#invokeRemoteMethod(org.aopalliance.intercept.MethodInvocation, java.lang.Object)"><B>invokeRemoteMethod(MethodInvocation, Object)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>Perform a raw method invocation on the given RMI stub,
 letting reflection exceptions through as-is.
<DT><A HREF="../org/springframework/test/util/ReflectionTestUtils.html#invokeSetterMethod(java.lang.Object, java.lang.String, java.lang.Object)"><B>invokeSetterMethod(Object, String, Object)</B></A> - 
Static method in class org.springframework.test.util.<A HREF="../org/springframework/test/util/ReflectionTestUtils.html" title="class in org.springframework.test.util">ReflectionTestUtils</A>
<DD>Invoke the setter method with the given <code>name</code> on the supplied
 target object with the supplied <code>value</code>.
<DT><A HREF="../org/springframework/test/util/ReflectionTestUtils.html#invokeSetterMethod(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Class)"><B>invokeSetterMethod(Object, String, Object, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.test.util.<A HREF="../org/springframework/test/util/ReflectionTestUtils.html" title="class in org.springframework.test.util">ReflectionTestUtils</A>
<DD>Invoke the setter method with the given <code>name</code> on the supplied
 target object with the supplied <code>value</code>.
<DT><A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html#invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>invokeUnderTrace(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html" title="class in org.springframework.aop.interceptor">AbstractTraceInterceptor</A>
<DD>Subclasses must override this method to perform any tracing around the
 supplied <code>MethodInvocation</code>.
<DT><A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html#invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>invokeUnderTrace(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html" title="class in org.springframework.aop.interceptor">CustomizableTraceInterceptor</A>
<DD>Writes a log message before the invocation based on the value of <code>enterMessage</code>.
<DT><A HREF="../org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html#invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>invokeUnderTrace(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html" title="class in org.springframework.aop.interceptor">JamonPerformanceMonitorInterceptor</A>
<DD>Wraps the invocation with a JAMon Monitor and writes the current
 performance statistics to the log (if enabled).
<DT><A HREF="../org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html#invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>invokeUnderTrace(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/PerformanceMonitorInterceptor.html" title="class in org.springframework.aop.interceptor">PerformanceMonitorInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/SimpleTraceInterceptor.html#invokeUnderTrace(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>invokeUnderTrace(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/SimpleTraceInterceptor.html" title="class in org.springframework.aop.interceptor">SimpleTraceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#invokeValidator(org.springframework.validation.Validator, java.lang.Object, org.springframework.validation.Errors)"><B>invokeValidator(Validator, Object, Errors)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Invoke the given <A HREF="../org/springframework/validation/Validator.html" title="interface in org.springframework.validation"><CODE>Validator</CODE></A> for the supplied object and
 <A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A> instance.
<DT><A HREF="../org/springframework/core/io/VfsUtils.html#invokeVfsMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...)"><B>invokeVfsMethod(Method, Object, Object...)</B></A> - 
Static method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/VfsUtils.html" title="class in org.springframework.core.io">VfsUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isAbstract()"><B>isAbstract()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this bean is "abstract", that is, not meant to be instantiated.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isAbstract()"><B>isAbstract()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this bean is "abstract", i.e.
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html#isAbstract()"><B>isAbstract()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type">ClassMetadata</A>
<DD>Return whether the underlying class is marked as abstract.
<DT><A HREF="../org/springframework/core/type/StandardClassMetadata.html#isAbstract()"><B>isAbstract()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardClassMetadata.html" title="class in org.springframework.core.type">StandardClassMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html#isAcceptGzipEncoding()"><B>isAcceptGzipEncoding()</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">AbstractHttpInvokerRequestExecutor</A>
<DD>Return whether to accept GZIP encoding, that is, whether to
 send the HTTP "Accept-Encoding" header with "gzip" as value.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isAcceptMessagesWhileStopping()"><B>isAcceptMessagesWhileStopping()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Return whether to accept received messages while the listener container
 in the process of stopping.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#isAccessCallParameterMetaData()"><B>isAccessCallParameterMetaData()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Check whether call parameter metadata should be accessed.
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#isAccessTableColumnMetaData()"><B>isAccessTableColumnMetaData()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Are we accessing table meta data?
<DT><A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html#isActive()"><B>isActive()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html" title="class in org.springframework.aop.framework">ProxyCreatorSupport</A>
<DD>Subclasses can call this to check whether any AOP proxies have been created yet.
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#isActive()"><B>isActive()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Determine whether this application context is active, that is,
 whether it has been refreshed at least once and has not been closed yet.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#isActive()"><B>isActive()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isActive()"><B>isActive()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Return whether this container is currently active,
 that is, whether it has been set up but not shut down yet.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isActive()"><B>isActive()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Return whether this request is still active (that is, not completed yet).
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isActive()"><B>isActive()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>Return whether this request is still active (that is, not completed yet).
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#isActualTransactionActive()"><B>isActualTransactionActive()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Return whether there currently is an actual transaction active.
<DT><A HREF="../org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html#isAdviceInstantiated()"><B>isAdviceInstantiated()</B></A> - 
Method in interface org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html" title="interface in org.springframework.aop.aspectj">InstantiationModelAwarePointcutAdvisor</A>
<DD>Return whether this advisor has already instantiated its advice.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterReturningAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterThrowingAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAopUtils.html#isAfterAdvice(org.springframework.aop.Advisor)"><B>isAfterAdvice(Advisor)</B></A> - 
Static method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAopUtils.html" title="class in org.springframework.aop.aspectj">AspectJAopUtils</A>
<DD>Return <code>true</code> if the advisor is a form of after advice.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAroundAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html" title="class in org.springframework.aop.aspectj">AspectJMethodBeforeAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJPrecedenceInformation.html#isAfterAdvice()"><B>isAfterAdvice()</B></A> - 
Method in interface org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJPrecedenceInformation.html" title="interface in org.springframework.aop.aspectj">AspectJPrecedenceInformation</A>
<DD>Return whether this is an after advice.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#isAfterLast()"><B>isAfterLast()</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#isAfterLast()"><B>isAfterLast()</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Retrieves whether the cursor is after the last row of this RowSet.
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#isAlias(java.lang.String)"><B>isAlias(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/AliasRegistry.html#isAlias(java.lang.String)"><B>isAlias(String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/AliasRegistry.html" title="interface in org.springframework.core">AliasRegistry</A>
<DD>Determine whether this given name is defines as an alias
 (as opposed to the name of an actually registered component).
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#isAlias(java.lang.String)"><B>isAlias(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#isAllowCreate()"><B>isAllowCreate()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Return if a new Session should be created if no thread-bound found.
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#isAllowCreate()"><B>isAllowCreate()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>Return if a new PersistenceManager should be created if no thread-bound found.
<DT><A HREF="../org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html#isAllowCreate()"><B>isAllowCreate()</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html" title="class in org.springframework.orm.jdo.support">SpringPersistenceManagerProxyBean</A>
<DD>Return whether the PersistenceManagerFactory proxy is allowed to create
 a non-transactional PersistenceManager when no transactional
 PersistenceManager can be found for the current thread.
<DT><A HREF="../org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html#isAllowCreate()"><B>isAllowCreate()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html" title="class in org.springframework.orm.jdo">TransactionAwarePersistenceManagerFactoryProxy</A>
<DD>Return whether the PersistenceManagerFactory proxy is allowed to create
 a non-transactional PersistenceManager when no transactional
 PersistenceManager can be found for the current thread.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#isAllowDirtyBack()"><B>isAllowDirtyBack()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return whether "dirty back" is allowed.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#isAllowDirtyBack()"><B>isAllowDirtyBack()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return whether "dirty back" is allowed.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#isAllowDirtyForward()"><B>isAllowDirtyForward()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return whether "dirty forward" is allowed.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#isAllowDirtyForward()"><B>isAllowDirtyForward()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return whether "dirty forward" is allowed.
<DT><A HREF="../org/springframework/validation/DataBinder.html#isAllowed(java.lang.String)"><B>isAllowed(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Return if the given field is allowed for binding.
<DT><A HREF="../org/springframework/context/support/MessageSourceSupport.html#isAlwaysUseMessageFormat()"><B>isAlwaysUseMessageFormat()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/MessageSourceSupport.html" title="class in org.springframework.context.support">MessageSourceSupport</A>
<DD>Return whether to always apply the MessageFormat rules, parsing even
 messages without arguments.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#isAlwaysUseNewSession()"><B>isAlwaysUseNewSession()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Return whether to always use a new Hibernate Session for this template.
<DT><A HREF="../org/springframework/core/type/AnnotationMetadata.html#isAnnotated(java.lang.String)"><B>isAnnotated(String)</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/AnnotationMetadata.html" title="interface in org.springframework.core.type">AnnotationMetadata</A>
<DD>Determine whether the underlying class has an annotation or
 meta-annotation of the given type defined.
<DT><A HREF="../org/springframework/core/type/MethodMetadata.html#isAnnotated(java.lang.String)"><B>isAnnotated(String)</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/MethodMetadata.html" title="interface in org.springframework.core.type">MethodMetadata</A>
<DD>Determine whether the underlying method has an annotation or
 meta-annotation of the given type defined.
<DT><A HREF="../org/springframework/core/type/StandardAnnotationMetadata.html#isAnnotated(java.lang.String)"><B>isAnnotated(String)</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardAnnotationMetadata.html" title="class in org.springframework.core.type">StandardAnnotationMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/type/StandardMethodMetadata.html#isAnnotated(java.lang.String)"><B>isAnnotated(String)</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardMethodMetadata.html" title="class in org.springframework.core.type">StandardMethodMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/annotation/AnnotationUtils.html#isAnnotationDeclaredLocally(java.lang.Class, java.lang.Class)"><B>isAnnotationDeclaredLocally(Class&lt;? extends Annotation&gt;, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.core.annotation.<A HREF="../org/springframework/core/annotation/AnnotationUtils.html" title="class in org.springframework.core.annotation">AnnotationUtils</A>
<DD>Determine whether an annotation for the specified <code>annotationType</code> is
 declared locally on the supplied <code>clazz</code>.
<DT><A HREF="../org/springframework/core/annotation/AnnotationUtils.html#isAnnotationInherited(java.lang.Class, java.lang.Class)"><B>isAnnotationInherited(Class&lt;? extends Annotation&gt;, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.core.annotation.<A HREF="../org/springframework/core/annotation/AnnotationUtils.html" title="class in org.springframework.core.annotation">AnnotationUtils</A>
<DD>Determine whether an annotation for the specified <code>annotationType</code> is present
 on the supplied <code>clazz</code> and is <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Inherited.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>inherited</CODE></A>
 i.e., not declared locally for the class).
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isAopProxy(java.lang.Object)"><B>isAopProxy(Object)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Check whether the given object is a JDK dynamic proxy or a CGLIB proxy.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#isApproximableCollectionType(java.lang.Class)"><B>isApproximableCollectionType(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Determine whether the given collection type is an approximable type,
 i.e.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#isApproximableMapType(java.lang.Class)"><B>isApproximableMapType(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Determine whether the given map type is an approximable type,
 i.e.
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isArray()"><B>isArray()</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Is this type an array type?
<DT><A HREF="../org/springframework/util/ObjectUtils.html#isArray(java.lang.Object)"><B>isArray(Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Determine whether the given object is an array:
 either an Object array or a primitive array.
<DT><A HREF="../org/springframework/beans/support/MutableSortDefinition.html#isAscending()"><B>isAscending()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/MutableSortDefinition.html" title="class in org.springframework.beans.support">MutableSortDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/SortDefinition.html#isAscending()"><B>isAscending()</B></A> - 
Method in interface org.springframework.beans.support.<A HREF="../org/springframework/beans/support/SortDefinition.html" title="interface in org.springframework.beans.support">SortDefinition</A>
<DD>Return whether to sort ascending (true) or descending (false).
<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html#isAscending()"><B>isAscending()</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator">InvertibleComparator</A>
<DD>Return the sort order: ascending (true) or descending (false).
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html#isAspect(java.lang.Class)"><B>isAspect(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html" title="class in org.springframework.aop.aspectj.annotation">AbstractAspectJAdvisorFactory</A>
<DD>We consider something to be an AspectJ aspect suitable for use by the Spring AOP system
 if it has the @Aspect annotation, and was not compiled by ajc.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AspectJAdvisorFactory.html#isAspect(java.lang.Class)"><B>isAspect(Class&lt;?&gt;)</B></A> - 
Method in interface org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AspectJAdvisorFactory.html" title="interface in org.springframework.aop.aspectj.annotation">AspectJAdvisorFactory</A>
<DD>Determine whether or not the given class is an aspect, as reported
 by AspectJ's <CODE>AjTypeSystem</CODE>.
<DT><A HREF="../org/springframework/util/Assert.html#isAssignable(java.lang.Class, java.lang.Class)"><B>isAssignable(Class, Class)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that <code>superType.isAssignableFrom(subType)</code> is <code>true</code>.
<DT><A HREF="../org/springframework/util/Assert.html#isAssignable(java.lang.Class, java.lang.Class, java.lang.String)"><B>isAssignable(Class, Class, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that <code>superType.isAssignableFrom(subType)</code> is <code>true</code>.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isAssignable(java.lang.Class, java.lang.Class)"><B>isAssignable(Class&lt;?&gt;, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check if the right-hand side type may be assigned to the left-hand side
 type, assuming setting by reflection.
<DT><A HREF="../org/springframework/util/TypeUtils.html#isAssignable(java.lang.reflect.Type, java.lang.reflect.Type)"><B>isAssignable(Type, Type)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/TypeUtils.html" title="class in org.springframework.util">TypeUtils</A>
<DD>Check if the right-hand side type may be assigned to the left-hand side
 type following the Java generics rules.
<DT><A HREF="../org/springframework/util/TypeUtils.html#isAssignableBound(java.lang.reflect.Type, java.lang.reflect.Type)"><B>isAssignableBound(Type, Type)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/TypeUtils.html" title="class in org.springframework.util">TypeUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isAssignableTo(org.springframework.core.convert.TypeDescriptor)"><B>isAssignableTo(TypeDescriptor)</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Returns true if an object of this type can be assigned to a reference of given targetType.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isAssignableValue(java.lang.Class, java.lang.Object)"><B>isAssignableValue(Class&lt;?&gt;, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Determine if the given type is assignable from the given value,
 assuming setting by reflection.
<DT><A HREF="../org/springframework/core/JdkVersion.html#isAtLeastJava14()"><B>isAtLeastJava14()</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/JdkVersion.html" title="class in org.springframework.core">JdkVersion</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0 which requires Java 1.5+</I>
<DT><A HREF="../org/springframework/core/JdkVersion.html#isAtLeastJava15()"><B>isAtLeastJava15()</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/JdkVersion.html" title="class in org.springframework.core">JdkVersion</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0 which requires Java 1.5+</I>
<DT><A HREF="../org/springframework/core/JdkVersion.html#isAtLeastJava16()"><B>isAtLeastJava16()</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/JdkVersion.html" title="class in org.springframework.core">JdkVersion</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of reflective checks for
 the specific Java 1.6 classes of interest</I>
<DT><A HREF="../org/springframework/expression/spel/SpelParserConfiguration.html#isAutoGrowCollections()"><B>isAutoGrowCollections()</B></A> - 
Method in class org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/SpelParserConfiguration.html" title="class in org.springframework.expression.spel">SpelParserConfiguration</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeanWrapper.html#isAutoGrowNestedPaths()"><B>isAutoGrowNestedPaths()</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans">BeanWrapper</A>
<DD>Return whether "auto-growing" of nested paths has been activated.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#isAutoGrowNestedPaths()"><B>isAutoGrowNestedPaths()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>If this BeanWrapper should "auto grow" nested paths.
<DT><A HREF="../org/springframework/validation/DataBinder.html#isAutoGrowNestedPaths()"><B>isAutoGrowNestedPaths()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Return whether "auto-growing" of nested paths has been activated.
<DT><A HREF="../org/springframework/expression/spel/SpelParserConfiguration.html#isAutoGrowNullReferences()"><B>isAutoGrowNullReferences()</B></A> - 
Method in class org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/SpelParserConfiguration.html" title="class in org.springframework.expression.spel">SpelParserConfiguration</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/SmartLifecycle.html#isAutoStartup()"><B>isAutoStartup()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/SmartLifecycle.html" title="interface in org.springframework.context">SmartLifecycle</A>
<DD>Return whether this Lifecycle component should be started automatically
 by the container when the ApplicationContext is refreshed.
<DT><A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointManager.html#isAutoStartup()"><B>isAutoStartup()</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointManager.html" title="class in org.springframework.jca.endpoint">GenericMessageEndpointManager</A>
<DD>Return the value for the 'autoStartup' property.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isAutoStartup()"><B>isAutoStartup()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html#isAutoStartup()"><B>isAutoStartup()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html" title="class in org.springframework.scheduling.quartz">SchedulerFactoryBean</A>
<DD>Return whether this scheduler is configured for auto-startup.
<DT><A HREF="../org/springframework/beans/factory/annotation/Autowire.html#isAutowire()"><B>isAutowire()</B></A> - 
Method in enum org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/Autowire.html" title="enum in org.springframework.beans.factory.annotation">Autowire</A>
<DD>Return whether this represents an actual autowiring value.
<DT><A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html#isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html" title="class in org.springframework.beans.factory.annotation">QualifierAnnotationAutowireCandidateResolver</A>
<DD>Determine whether the provided bean definition is an autowire candidate.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isAutowireCandidate()"><B>isAutowireCandidate()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this bean is a candidate for getting autowired into some other bean.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#isAutowireCandidate(java.lang.String, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(String, DependencyDescriptor)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>
<DD>Determine whether the specified bean qualifies as an autowire candidate,
 to be injected into other beans which declare a dependency of matching type.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isAutowireCandidate()"><B>isAutowireCandidate()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this bean is a candidate for getting autowired into some other bean.
<DT><A HREF="../org/springframework/beans/factory/support/AutowireCandidateResolver.html#isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AutowireCandidateResolver.html" title="interface in org.springframework.beans.factory.support">AutowireCandidateResolver</A>
<DD>Determine whether the given bean definition qualifies as an
 autowire candidate for the given dependency.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#isAutowireCandidate(java.lang.String, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(String, DependencyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#isAutowireCandidate(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(String, RootBeanDefinition, DependencyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>Determine whether the specified bean definition qualifies as an autowire candidate,
 to be injected into other beans which declare a dependency of matching type.
<DT><A HREF="../org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.html#isAutowireCandidate(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.config.DependencyDescriptor)"><B>isAutowireCandidate(BeanDefinitionHolder, DependencyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.html" title="class in org.springframework.beans.factory.support">SimpleAutowireCandidateResolver</A>
<DD>Determine if the provided bean definition is an autowire candidate.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html#isAvailable()"><B>isAvailable()</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartFile</A>
<DD>Determine whether the multipart content is still available.
<DT><A HREF="../org/springframework/jdbc/core/InterruptibleBatchPreparedStatementSetter.html#isBatchExhausted(int)"><B>isBatchExhausted(int)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/InterruptibleBatchPreparedStatementSetter.html" title="interface in org.springframework.jdbc.core">InterruptibleBatchPreparedStatementSetter</A>
<DD>Return whether the batch is complete, that is, whether there were no
 additional values added during the last <code>setValues</code> call.
<DT><A HREF="../org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html#isBatchExhausted(int)"><B>isBatchExhausted(int)</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/AbstractInterruptibleBatchPreparedStatementSetter.html" title="class in org.springframework.jdbc.core.support">AbstractInterruptibleBatchPreparedStatementSetter</A>
<DD>This implementation return this instance's current exhaustion flag.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#isBeanDefinitionLazyInit(org.springframework.beans.factory.ListableBeanFactory, java.lang.String)"><B>isBeanDefinitionLazyInit(ListableBeanFactory, String)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Return whether the specified bean definition should be considered as lazy-init.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isBeanEligibleForMetadataCaching(java.lang.String)"><B>isBeanEligibleForMetadataCaching(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Determine whether the specified bean is eligible for having
 its bean definition metadata cached.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#isBeanEligibleForMetadataCaching(java.lang.String)"><B>isBeanEligibleForMetadataCaching(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>Considers all beans as eligible for metdata caching
 if the factory's configuration has been marked as frozen.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isBeanNameInUse(java.lang.String)"><B>isBeanNameInUse(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Determine whether the given bean name is already in use within this factory,
 i.e.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#isBeanNameInUse(java.lang.String)"><B>isBeanNameInUse(String)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support">BeanDefinitionRegistry</A>
<DD>Determine whether the given bean name is already in use within this registry,
 i.e.
<DT><A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html#isBeanNameInUse(java.lang.String)"><B>isBeanNameInUse(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html" title="class in org.springframework.beans.factory.support">SimpleBeanDefinitionRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#isBeanNameInUse(java.lang.String)"><B>isBeanNameInUse(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterReturningAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterReturningAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAfterThrowingAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAfterThrowingAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAopUtils.html#isBeforeAdvice(org.springframework.aop.Advisor)"><B>isBeforeAdvice(Advisor)</B></A> - 
Static method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAopUtils.html" title="class in org.springframework.aop.aspectj">AspectJAopUtils</A>
<DD>Return <code>true</code> if the advisor is a form of before advice.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJAroundAdvice.html" title="class in org.springframework.aop.aspectj">AspectJAroundAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html" title="class in org.springframework.aop.aspectj">AspectJMethodBeforeAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AspectJPrecedenceInformation.html#isBeforeAdvice()"><B>isBeforeAdvice()</B></A> - 
Method in interface org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJPrecedenceInformation.html" title="interface in org.springframework.aop.aspectj">AspectJPrecedenceInformation</A>
<DD>Return whether this is a before advice.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#isBeforeFirst()"><B>isBeforeFirst()</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#isBeforeFirst()"><B>isBeforeFirst()</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Retrieves whether the cursor is after the first row of this RowSet.
<DT><A HREF="../org/springframework/web/bind/WebDataBinder.html#isBindEmptyMultipartFiles()"><B>isBindEmptyMultipartFiles()</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind">WebDataBinder</A>
<DD>Return whether to bind empty MultipartFile parameters.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#isBindingCandidate(java.lang.Object)"><B>isBindingCandidate(Object)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Determine whether the given value qualifies as a "binding candidate", i.e.
<DT><A HREF="../org/springframework/validation/FieldError.html#isBindingFailure()"><B>isBindingFailure()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/FieldError.html" title="class in org.springframework.validation">FieldError</A>
<DD>Return whether this error represents a binding failure
 (like a type mismatch); otherwise it is a validation failure.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#isBindOnNewForm()"><B>isBindOnNewForm()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return if request parameters should be bound in case of a new form.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html#isBindOnNewForm()"><B>isBindOnNewForm()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return <code>true</code> if request parameters should be bound in case of a new form.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html#isCache()"><B>isCache()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractCachingViewResolver</A>
<DD>Return if caching is enabled.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#isCacheBeanMetadata()"><B>isCacheBeanMetadata()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Return whether to cache bean metadata such as given bean definitions
 (in merged fashion) and resolved bean classes.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isCacheBeanMetadata()"><B>isCacheBeanMetadata()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html#isCacheConsumers()"><B>isCacheConsumers()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection">CachingConnectionFactory</A>
<DD>Return whether to cache JMS MessageConsumers per JMS Session instance.
<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html#isCacheProducers()"><B>isCacheProducers()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection">CachingConnectionFactory</A>
<DD>Return whether to cache JMS MessageProducers per JMS Session instance.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#isCacheQueries()"><B>isCacheQueries()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Return whether to cache all queries executed by this template.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isCacheSafe(java.lang.Class, java.lang.ClassLoader)"><B>isCacheSafe(Class&lt;?&gt;, ClassLoader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check whether the given class is cache-safe in the given context,
 i.e.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#isCacheTemplate()"><B>isCacheTemplate()</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Return whether the Velocity template should be cached.
<DT><A HREF="../org/springframework/scheduling/annotation/AsyncResult.html#isCancelled()"><B>isCancelled()</B></A> - 
Method in class org.springframework.scheduling.annotation.<A HREF="../org/springframework/scheduling/annotation/AsyncResult.html" title="class in org.springframework.scheduling.annotation">AsyncResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#isCancelRequest(javax.portlet.PortletRequest)"><B>isCancelRequest(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the incoming request is a request to cancel the
 processing of the current form.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#isCancelRequest(javax.servlet.http.HttpServletRequest)"><B>isCancelRequest(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the incoming request is a request to cancel the
 processing of the current form.
<DT><A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html#isCancelRequest(javax.servlet.http.HttpServletRequest)"><B>isCancelRequest(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html" title="class in org.springframework.web.servlet.mvc">CancellableFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the incoming request is a request to cancel the
 processing of the current form.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#isCandidateComponent(org.springframework.core.type.classreading.MetadataReader)"><B>isCandidateComponent(MetadataReader)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Determine whether the given class does not match any exclude filter
 and does match at least one include filter.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#isCandidateComponent(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition)"><B>isCandidateComponent(AnnotatedBeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Determine whether the given bean definition qualifies as candidate.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html#isCaseSensitive(int)"><B>isCaseSensitive(int)</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSetMetaData</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html#isCaseSensitive(int)"><B>isCaseSensitive(int)</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSetMetaData</A>
<DD>Indicates whether the case of the designated column is significant.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isCglibProxy(java.lang.Object)"><B>isCglibProxy(Object)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Check whether the given object is a CGLIB proxy.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isCglibProxyClass(java.lang.Class)"><B>isCglibProxyClass(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Check whether the specified class is a CGLIB-generated class.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isCglibProxyClassName(java.lang.String)"><B>isCglibProxyClassName(String)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Check whether the specified class name is a CGLIB-generated class.
<DT><A HREF="../org/springframework/util/ObjectUtils.html#isCheckedException(java.lang.Throwable)"><B>isCheckedException(Throwable)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Return whether the given throwable is a checked exception:
 that is, neither a RuntimeException nor an Error.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#isCheckFullyPopulated()"><B>isCheckFullyPopulated()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Return whether we're strictly validating that all bean properties have been
 mapped from corresponding database fields.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#isCheckWriteOperations()"><B>isCheckWriteOperations()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Return whether to check that the Hibernate Session is not in read-only
 mode in case of write operations (save/update/delete).
<DT><A HREF="../org/springframework/core/SmartClassLoader.html#isClassReloadable(java.lang.Class)"><B>isClassReloadable(Class)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/SmartClassLoader.html" title="interface in org.springframework.core">SmartClassLoader</A>
<DD>Determine whether the given class is reloadable (in this ClassLoader).
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#isClientAcknowledge(javax.jms.Session)"><B>isClientAcknowledge(Session)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to avoid using
 JMS 1.1's Session <code>getAcknowledgeMode()</code> method.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html#isClientAcknowledge(javax.jms.Session)"><B>isClientAcknowledge(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to avoid using
 JMS 1.1's Session <code>getAcknowledgeMode()</code> method.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html#isClientAcknowledge(javax.jms.Session)"><B>isClientAcknowledge(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to avoid using
 JMS 1.1's Session <code>getAcknowledgeMode()</code> method.
<DT><A HREF="../org/springframework/jms/support/JmsAccessor.html#isClientAcknowledge(javax.jms.Session)"><B>isClientAcknowledge(Session)</B></A> - 
Method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A>
<DD>Determine whether the given Session is in client acknowledge mode.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html#isCloseMatch()"><B>isCloseMatch()</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html" title="class in org.springframework.expression.spel.support">ReflectionHelper.ArgumentsMatchInfo</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isCollection()"><B>isCollection()</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Is this type a <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Collection.html?is-external=true" title="class or interface in java.util"><CODE>Collection</CODE></A> type?
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractCommandController.html#isCommandInSession(javax.portlet.RenderRequest)"><B>isCommandInSession(RenderRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractCommandController.html" title="class in org.springframework.web.portlet.mvc">AbstractCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Determine if there is a valid command (and errors) object in the
 session for this render request.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#isCommitted()"><B>isCommitted()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#isCommitted()"><B>isCommitted()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html#isCompatible(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)"><B>isCompatible(BeanDefinition, BeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation">ClassPathBeanDefinitionScanner</A>
<DD>Determine whether the given new bean definition is compatible with
 the given existing bean definition.
<DT><A HREF="../org/springframework/http/MediaType.html#isCompatibleWith(org.springframework.http.MediaType)"><B>isCompatibleWith(MediaType)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Indicate whether this <A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http"><CODE>MediaType</CODE></A> is compatible with the given media type.
<DT><A HREF="../org/springframework/util/ObjectUtils.html#isCompatibleWithThrowsClause(java.lang.Throwable, java.lang.Class[])"><B>isCompatibleWithThrowsClause(Throwable, Class[])</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Check whether the given exception is compatible with the exceptions
 declared in a throws clause.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#isCompiled()"><B>isCompiled()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Is this operation "compiled"?
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html#isCompiled()"><B>isCompiled()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcInsert</A>
<DD>Is this operation "compiled"?
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#isCompiled()"><B>isCompiled()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Is this operation "compiled"? Compilation, as in JDO,
 means that the operation is fully configured, and ready to use.
<DT><A HREF="../org/springframework/web/bind/support/SessionStatus.html#isComplete()"><B>isComplete()</B></A> - 
Method in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/SessionStatus.html" title="interface in org.springframework.web.bind.support">SessionStatus</A>
<DD>Return whether the current handler's session processing has been marked
 as complete.
<DT><A HREF="../org/springframework/web/bind/support/SimpleSessionStatus.html#isComplete()"><B>isComplete()</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/SimpleSessionStatus.html" title="class in org.springframework.web.bind.support">SimpleSessionStatus</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#isCompleted()"><B>isCompleted()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/TransactionStatus.html#isCompleted()"><B>isCompleted()</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionStatus.html" title="interface in org.springframework.transaction">TransactionStatus</A>
<DD>Return whether this transaction is completed, that is,
 whether it has already been committed or rolled back.
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html#isConcrete()"><B>isConcrete()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type">ClassMetadata</A>
<DD>Return whether the underlying class represents a concrete class,
 i.e.
<DT><A HREF="../org/springframework/core/type/StandardClassMetadata.html#isConcrete()"><B>isConcrete()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardClassMetadata.html" title="class in org.springframework.core.type">StandardClassMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#isConfigurationFrozen()"><B>isConfigurationFrozen()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>
<DD>Return whether this factory's bean definitions are frozen,
 i.e.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#isConfigurationFrozen()"><B>isConfigurationFrozen()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html#isConnectFailure(java.rmi.RemoteException)"><B>isConnectFailure(RemoteException)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractRemoteSlsbInvokerInterceptor</A>
<DD>Determine whether the given RMI exception indicates a connect failure.
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html#isConnectFailure(java.rmi.RemoteException)"><B>isConnectFailure(RemoteException)</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortClientInterceptor</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the given RMI exception indicates a connect failure.
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#isConnectFailure(java.rmi.RemoteException)"><B>isConnectFailure(RemoteException)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">JndiRmiClientInterceptor</A>
<DD>Determine whether the given RMI exception indicates a connect failure.
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#isConnectFailure(org.omg.CORBA.SystemException)"><B>isConnectFailure(SystemException)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">JndiRmiClientInterceptor</A>
<DD>Determine whether the given CORBA exception indicates a connect failure.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html#isConnectFailure(java.rmi.RemoteException)"><B>isConnectFailure(RemoteException)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptor</A>
<DD>Determine whether the given RMI exception indicates a connect failure.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#isConnectFailure(java.rmi.RemoteException)"><B>isConnectFailure(RemoteException)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>Determine whether the given RMI exception indicates a connect failure.
<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html#isConnectionTransactional(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)"><B>isConnectionTransactional(Connection, ConnectionFactory)</B></A> - 
Static method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jca.cci.connection">ConnectionFactoryUtils</A>
<DD>Determine whether the given JCA CCI Connection is transactional, that is,
 bound to the current thread by Spring's transaction facilities.
<DT><A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html#isConnectionTransactional(java.sql.Connection, javax.sql.DataSource)"><B>isConnectionTransactional(Connection, DataSource)</B></A> - 
Static method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html" title="class in org.springframework.jdbc.datasource">DataSourceUtils</A>
<DD>Determine whether the given JDBC Connection is transactional, that is,
 bound to the current thread by Spring's transaction facilities.
<DT><A HREF="../org/springframework/expression/spel/ast/InlineList.html#isConstant()"><B>isConstant()</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/InlineList.html" title="class in org.springframework.expression.spel.ast">InlineList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/AbstractSpringContextTests.html#isContextKeyEmpty(java.lang.Object)"><B>isContextKeyEmpty(Object)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSpringContextTests.html" title="class in org.springframework.test">AbstractSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Determine if the supplied context <code>key</code> is <em>empty</em>.
<DT><A HREF="../org/springframework/context/support/ApplicationObjectSupport.html#isContextRequired()"><B>isContextRequired()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A>
<DD>Determine whether this application object needs to run in an ApplicationContext.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html#isContextRequired()"><B>isContextRequired()</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationObjectSupport.html" title="class in org.springframework.web.context.support">WebApplicationObjectSupport</A>
<DD>Overrides the base class behavior to enforce running in an ApplicationContext.
<DT><A HREF="../org/springframework/web/portlet/context/PortletApplicationObjectSupport.html#isContextRequired()"><B>isContextRequired()</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletApplicationObjectSupport.html" title="class in org.springframework.web.portlet.context">PortletApplicationObjectSupport</A>
<DD>Overrides the base class behavior to enforce running in an ApplicationContext.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#isContextRequired()"><B>isContextRequired()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>An ApplicationContext is not strictly required for InternalResourceView.
<DT><A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html#isControllerType(java.lang.Class)"><B>isControllerType(Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">AbstractControllerUrlHandlerMapping</A>
<DD>Determine whether the given bean class indicates a controller type
 that is supported by this mapping strategy.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html#isConverted()"><B>isConverted()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues.ValueHolder</A>
<DD>Return whether this holder contains a converted value already (<code>true</code>),
 or whether the value still needs to be converted (<code>false</code>).
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#isConverted()"><B>isConverted()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>Return whether this holder contains converted values only (<code>true</code>),
 or whether the values still need to be converted (<code>false</code>).
<DT><A HREF="../org/springframework/beans/PropertyValue.html#isConverted()"><B>isConverted()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans">PropertyValue</A>
<DD>Return whether this holder contains a converted value already (<code>true</code>),
 or whether the value still needs to be converted (<code>false</code>).
<DT><A HREF="../org/springframework/web/util/CookieGenerator.html#isCookieSecure()"><B>isCookieSecure()</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/CookieGenerator.html" title="class in org.springframework.web.util">CookieGenerator</A>
<DD>Return whether the cookie should only be sent using a secure protocol,
 such as HTTPS (SSL).
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html#isCurrency(int)"><B>isCurrency(int)</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSetMetaData</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html#isCurrency(int)"><B>isCurrency(int)</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSetMetaData</A>
<DD>Indicates whether the designated column contains a currency value.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#isCurrentlyInCreation(java.lang.String)"><B>isCurrentlyInCreation(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Determine whether the specified bean is currently in creation.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isCurrentlyInCreation(java.lang.String)"><B>isCurrentlyInCreation(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#isCurrentTransactionReadOnly()"><B>isCurrentTransactionReadOnly()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Return whether the current transaction is marked as read-only.
<DT><A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html#isDaemon()"><B>isDaemon()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html" title="class in org.springframework.scheduling.commonj">DelegatingWork</A>
<DD>This implementation delegates to
 <A HREF="../org/springframework/scheduling/SchedulingAwareRunnable.html#isLongLived()"><CODE>SchedulingAwareRunnable.isLongLived()</CODE></A>,
 if available.
<DT><A HREF="../org/springframework/util/CustomizableThreadCreator.html#isDaemon()"><B>isDaemon()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CustomizableThreadCreator.html" title="class in org.springframework.util">CustomizableThreadCreator</A>
<DD>Return whether this factory should create daemon threads.
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isDebug()"><B>isDebug()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>Return whether the progress of this transaction is debugged.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#isDefaultBeanName()"><B>isDefaultBeanName()</B></A> - 
Method in class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Return whether the specific bean name is a suggested default bean name,
 not necessarily matching an actual bean definition in the factory.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#isDefaultHtmlEscape()"><B>isDefaultHtmlEscape()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Is default HTML escaping active?
 Falls back to <code>false</code> in case of no explicit default given.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractFormTag.html#isDefaultHtmlEscape()"><B>isDefaultHtmlEscape()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractFormTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractFormTag</A>
<DD>Overridden to default to <code>true</code> in case of no explicit default given.
<DT><A HREF="../org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html#isDefaultHtmlEscape()"><B>isDefaultHtmlEscape()</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html" title="class in org.springframework.web.servlet.tags">HtmlEscapingAwareTag</A>
<DD>Return the applicable default HTML escape setting for this tag.
<DT><A HREF="../org/springframework/web/util/WebUtils.html#isDefaultHtmlEscape(javax.servlet.ServletContext)"><B>isDefaultHtmlEscape(ServletContext)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Return whether default HTML escaping is enabled for the web application,
 i.e.
<DT><A HREF="../org/springframework/beans/factory/xml/ParserContext.html#isDefaultLazyInit()"><B>isDefaultLazyInit()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ParserContext.html" title="class in org.springframework.beans.factory.xml">ParserContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html#isDefaultName"><B>isDefaultName</B></A> - 
Variable in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html" title="class in org.springframework.context.annotation">CommonAnnotationBeanPostProcessor.LookupElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#isDefaultNamespace(java.lang.String)"><B>isDefaultNamespace(String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#isDefaultNamespace(org.w3c.dom.Node)"><B>isDefaultNamespace(Node)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/AbstractTransactionalSpringContextTests.html#isDefaultRollback()"><B>isDefaultRollback()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractTransactionalSpringContextTests.html" title="class in org.springframework.test">AbstractTransactionalSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Get the <em>default rollback</em> flag for this test.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#isDefaultRollback(org.springframework.test.context.TestContext)"><B>isDefaultRollback(TestContext)</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html" title="class in org.springframework.test.context.transaction">TransactionalTestExecutionListener</A>
<DD>Determine whether or not to rollback transactions by default for the
 supplied <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A>.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionConfigurationAttributes.html#isDefaultRollback()"><B>isDefaultRollback()</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionConfigurationAttributes.html" title="class in org.springframework.test.context.transaction">TransactionConfigurationAttributes</A>
<DD>Whether or not transactions should be rolled back by default.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#isDeferredCloseActive(org.hibernate.SessionFactory)"><B>isDeferredCloseActive(SessionFactory)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Determine whether deferred close is active for the current thread
 and the given SessionFactory.
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html#isDeliveryTransacted(java.lang.reflect.Method)"><B>isDeliveryTransacted(Method)</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory</A>
<DD>This implementation returns <code>true</code> if a transaction manager
 has been specified; <code>false</code> otherwise.
<DT><A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html#isDependencyCheck()"><B>isDependencyCheck()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html" title="class in org.springframework.test">AbstractDependencyInjectionSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Return whether or not dependency checking should be performed for test
 properties set by Dependency Injection.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html#isDisabled()"><B>isDisabled()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlInputElementTag</A>
<DD>Is the current HTML tag disabled?
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionsTag.html#isDisabled()"><B>isDisabled()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionsTag.html" title="class in org.springframework.web.servlet.tags.form">OptionsTag</A>
<DD>Is the current HTML tag disabled?
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html#isDisabled()"><B>isDisabled()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html" title="class in org.springframework.web.servlet.tags.form">OptionTag</A>
<DD>Is the current HTML tag disabled?
<DT><A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html#isDisabledInThisEnvironment(java.lang.reflect.Method)"><B>isDisabledInThisEnvironment(Method)</B></A> - 
Method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html" title="class in org.springframework.test.annotation">AbstractAnnotationAwareTransactionalTests</A>
<DD><B>Deprecated.</B>&nbsp;Determine if the test for the supplied <code>testMethod</code> should
 run in the current environment.
<DT><A HREF="../org/springframework/test/ConditionalTestCase.html#isDisabledInThisEnvironment(java.lang.String)"><B>isDisabledInThisEnvironment(String)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test">ConditionalTestCase</A>
<DD><B>Deprecated.</B>&nbsp;Should this test run?
<DT><A HREF="../org/springframework/scheduling/annotation/AsyncResult.html#isDone()"><B>isDone()</B></A> - 
Method in class org.springframework.scheduling.annotation.<A HREF="../org/springframework/scheduling/annotation/AsyncResult.html" title="class in org.springframework.scheduling.annotation">AsyncResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/TypedStringValue.html#isDynamic()"><B>isDynamic()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/TypedStringValue.html" title="class in org.springframework.beans.factory.config">TypedStringValue</A>
<DD>Return whether this value has been marked as dynamic.
<DT><A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html#isEager()"><B>isEager()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html" title="class in org.springframework.beans.factory.config">DependencyDescriptor</A>
<DD>Return whether this dependency is 'eager' in the sense of
 eagerly resolving potential target beans for type matching.
<DT><A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html#isEagerInit()"><B>isEagerInit()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html" title="class in org.springframework.beans.factory.config">BeanReferenceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/SmartFactoryBean.html#isEagerInit()"><B>isEagerInit()</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/SmartFactoryBean.html" title="interface in org.springframework.beans.factory">SmartFactoryBean</A>
<DD>Does this FactoryBean expect eager initialization, that is,
 eagerly initialize itself as well as expect eager initialization
 of its singleton object (if any)?
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html#isEligibleAdvisorBean(java.lang.String)"><B>isEligibleAdvisorBean(String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAdvisorAutoProxyCreator</A>
<DD>Return whether the Advisor bean with the given name is eligible
 for proxying in the first place.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html#isEligibleAdvisorBean(java.lang.String)"><B>isEligibleAdvisorBean(String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">DefaultAdvisorAutoProxyCreator</A>
<DD>Consider Advisor beans with the specified prefix as eligible, if activated.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html#isEligibleAdvisorBean(java.lang.String)"><B>isEligibleAdvisorBean(String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/InfrastructureAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">InfrastructureAdvisorAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html#isEligibleAspectBean(java.lang.String)"><B>isEligibleAspectBean(String)</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html" title="class in org.springframework.aop.aspectj.annotation">AnnotationAwareAspectJAutoProxyCreator</A>
<DD>Check whether the given aspect bean is eligible for auto-proxying.
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html#isEligibleAttribute(org.w3c.dom.Attr, org.springframework.beans.factory.xml.ParserContext)"><B>isEligibleAttribute(Attr, ParserContext)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractSimpleBeanDefinitionParser</A>
<DD>Determine whether the given attribute is eligible for being
 turned into a corresponding bean property value.
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html#isEligibleAttribute(org.w3c.dom.Attr)"><B>isEligibleAttribute(Attr)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractSimpleBeanDefinitionParser</A>
<DD><B>Deprecated.</B>&nbsp;<I>in favour of <A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html#isEligibleAttribute(org.w3c.dom.Attr, org.springframework.beans.factory.xml.ParserContext)"><CODE>AbstractSimpleBeanDefinitionParser.isEligibleAttribute(org.w3c.dom.Attr, ParserContext)</CODE></A></I>
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html#isEligibleAttribute(java.lang.String)"><B>isEligibleAttribute(String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractSimpleBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractSimpleBeanDefinitionParser</A>
<DD>Determine whether the given attribute is eligible for being
 turned into a corresponding bean property value.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html#isEligibleBean(java.lang.String)"><B>isEligibleBean(String)</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectJAdvisorsBuilder</A>
<DD>Return whether the aspect bean with the given name is eligible.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html#isEligibleBean(java.lang.String)"><B>isEligibleBean(String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html" title="class in org.springframework.aop.framework.autoproxy">BeanFactoryAdvisorRetrievalHelper</A>
<DD>Determine whether the aspect bean with the given name is eligible.
<DT><A HREF="../org/springframework/web/filter/ShallowEtagHeaderFilter.html#isEligibleForEtag(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, byte[])"><B>isEligibleForEtag(HttpServletRequest, HttpServletResponse, int, byte[])</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/ShallowEtagHeaderFilter.html" title="class in org.springframework.web.filter">ShallowEtagHeaderFilter</A>
<DD>Indicates whether the given request and response are eligible for ETag generation.
<DT><A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html#isEligibleForMapping(java.lang.String, java.lang.Class)"><B>isEligibleForMapping(String, Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">AbstractControllerUrlHandlerMapping</A>
<DD>Determine whether the specified controller is excluded from this mapping.
<DT><A HREF="../org/springframework/core/OverridingClassLoader.html#isEligibleForOverriding(java.lang.String)"><B>isEligibleForOverriding(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/OverridingClassLoader.html" title="class in org.springframework.core">OverridingClassLoader</A>
<DD>Determine whether the specified class is eligible for overriding
 by this class loader.
<DT><A HREF="../org/springframework/scheduling/quartz/SpringBeanJobFactory.html#isEligibleForPropertyPopulation(java.lang.Object)"><B>isEligibleForPropertyPopulation(Object)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SpringBeanJobFactory.html" title="class in org.springframework.scheduling.quartz">SpringBeanJobFactory</A>
<DD>Return whether the given job object is eligible for having
 its bean properties populated.
<DT><A HREF="../org/springframework/instrument/classloading/ShadowingClassLoader.html#isEligibleForShadowing(java.lang.String)"><B>isEligibleForShadowing(String)</B></A> - 
Method in class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ShadowingClassLoader.html" title="class in org.springframework.instrument.classloading">ShadowingClassLoader</A>
<DD>Determine whether the specified class is eligible for shadowing
 by this class loader.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#isEligibleProperty(java.lang.String, java.lang.Object)"><B>isEligibleProperty(String, Object)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Determine whether the given model element should be exposed
 as a query property.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#isEligibleValue(java.lang.Object)"><B>isEligibleValue(Object)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Determine whether the given model element value is eligible for exposure.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues</A>
<DD>Return if this holder does not contain any argument values,
 neither indexed ones nor generic ones.
<DT><A HREF="../org/springframework/beans/factory/support/MethodOverrides.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/MethodOverrides.html" title="class in org.springframework.beans.factory.support">MethodOverrides</A>
<DD>Return whether the set of method overrides is empty.
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyValues.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>
<DD>Does this holder not contain any PropertyValue objects at all?
<DT><A HREF="../org/springframework/http/HttpHeaders.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockMultipartFile.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockMultipartFile.html" title="class in org.springframework.mock.web">MockMultipartFile</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SessionHolder.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionHolder.html" title="class in org.springframework.orm.hibernate3">SessionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CollectionUtils.html#isEmpty(java.util.Collection)"><B>isEmpty(Collection)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Return <code>true</code> if the supplied Collection is <code>null</code>
 or empty.
<DT><A HREF="../org/springframework/util/CollectionUtils.html#isEmpty(java.util.Map)"><B>isEmpty(Map)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Return <code>true</code> if the supplied Map is <code>null</code>
 or empty.
<DT><A HREF="../org/springframework/util/LinkedMultiValueMap.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedMultiValueMap.html" title="class in org.springframework.util">LinkedMultiValueMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ObjectUtils.html#isEmpty(java.lang.Object[])"><B>isEmpty(Object[])</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Determine whether the given array is empty:
 i.e.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartFile</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/multipart/MultipartFile.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in interface org.springframework.web.multipart.<A HREF="../org/springframework/web/multipart/MultipartFile.html" title="interface in org.springframework.web.multipart">MultipartFile</A>
<DD>Return whether the uploaded file is empty, that is, either no file has
 been chosen in the multipart form or the chosen file has no content.
<DT><A HREF="../org/springframework/web/portlet/ModelAndView.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A>
<DD>Return whether this ModelAndView object is empty,
 i.e.
<DT><A HREF="../org/springframework/web/servlet/ModelAndView.html#isEmpty()"><B>isEmpty()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A>
<DD>Return whether this ModelAndView object is empty,
 i.e.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isEnforceDestroyMethod()"><B>isEnforceDestroyMethod()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Indicate whether the configured destroy method is the default.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isEnforceInitMethod()"><B>isEnforceInitMethod()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Indicate whether the configured init method is the default.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isEqualsMethod(java.lang.reflect.Method)"><B>isEqualsMethod(Method)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Determine whether the given method is an "equals" method.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#isEqualsMethod(java.lang.reflect.Method)"><B>isEqualsMethod(Method)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Determine whether the given method is an "equals" method.
<DT><A HREF="../org/springframework/web/servlet/support/BindStatus.html#isError()"><B>isError()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/BindStatus.html" title="class in org.springframework.web.servlet.support">BindStatus</A>
<DD>Return if this status represents a field or object error.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html#isExactMatch()"><B>isExactMatch()</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html" title="class in org.springframework.expression.spel.support">ReflectionHelper.ArgumentsMatchInfo</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/DecoratingClassLoader.html#isExcluded(java.lang.String)"><B>isExcluded(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/DecoratingClassLoader.html" title="class in org.springframework.core">DecoratingClassLoader</A>
<DD>Determine whether the specified class is excluded from decoration
 by this class loader.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#isExcludedFromDependencyCheck(java.beans.PropertyDescriptor)"><B>isExcludedFromDependencyCheck(PropertyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Determine whether the given bean property is excluded from dependency checks.
<DT><A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html" title="class in org.springframework.jca.cci.connection">CciLocalTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/DataSourceTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DataSourceTransactionManager.html" title="class in org.springframework.jdbc.datasource">DataSourceTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager.html" title="class in org.springframework.jms.connection">JmsTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html" title="class in org.springframework.orm.hibernate3">HibernateTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html" title="class in org.springframework.orm.jdo">JdoTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html" title="class in org.springframework.orm.jpa">JpaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isExistingTransaction(java.lang.Object)"><B>isExistingTransaction(Object)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Check if the given transaction object indicates an existing transaction
 (that is, a transaction which has already started).
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#isExplicitQosEnabled()"><B>isExplicitQosEnabled()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>If "true", then the values of deliveryMode, priority, and timeToLive
 will be used when sending a message.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#isExposeClassDescriptor()"><B>isExposeClassDescriptor()</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Return whether to expose the JMX descriptor field "class" for managed operations.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isExposeListenerSession()"><B>isExposeListenerSession()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Return whether to expose the listener JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms"><CODE>Session</CODE></A> to a
 registered <A HREF="../org/springframework/jms/listener/SessionAwareMessageListener.html" title="interface in org.springframework.jms.listener"><CODE>SessionAwareMessageListener</CODE></A>.
<DT><A HREF="../org/springframework/orm/jpa/JpaTemplate.html#isExposeNativeEntityManager()"><B>isExposeNativeEntityManager()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTemplate.html" title="class in org.springframework.orm.jpa">JpaTemplate</A>
<DD>Return whether to expose the native JPA EntityManager to JpaCallback
 code, or rather an EntityManager proxy.
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#isExposeNativePersistenceManager()"><B>isExposeNativePersistenceManager()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>Return whether to expose the native JDO PersistenceManager to JdoCallback
 code, or rather a PersistenceManager proxy.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#isExposeNativeSession()"><B>isExposeNativeSession()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Return whether to expose the native Hibernate Session to
 HibernateCallback code, or rather a Session proxy.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#isExposeProxy()"><B>isExposeProxy()</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Return whether the factory should expose the proxy as a ThreadLocal.
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#isExposeProxy()"><B>isExposeProxy()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Return whether the AOP proxy will expose the AOP proxy for
 each invocation.
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#isExposeTransactionAwareSessionFactory()"><B>isExposeTransactionAwareSessionFactory()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>Return whether to expose a transaction-aware proxy for the SessionFactory.
<DT><A HREF="../org/springframework/web/util/ExpressionEvaluationUtils.html#isExpressionLanguage(java.lang.String)"><B>isExpressionLanguage(String)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/ExpressionEvaluationUtils.html" title="class in org.springframework.web.util">ExpressionEvaluationUtils</A>
<DD>Check if the given expression value is an EL expression.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#isExternallyManagedConfigMember(java.lang.reflect.Member)"><B>isExternallyManagedConfigMember(Member)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#isExternallyManagedDestroyMethod(java.lang.String)"><B>isExternallyManagedDestroyMethod(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#isExternallyManagedInitMethod(java.lang.String)"><B>isExternallyManagedInitMethod(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/AbstractPropertyAccessor.html#isExtractOldValueForEditor()"><B>isExtractOldValueForEditor()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/AbstractPropertyAccessor.html" title="class in org.springframework.beans">AbstractPropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/ConfigurablePropertyAccessor.html#isExtractOldValueForEditor()"><B>isExtractOldValueForEditor()</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans">ConfigurablePropertyAccessor</A>
<DD>Return whether to extract the old property value when applying a
 property editor to a new value for a property.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#isFactoryBean(java.lang.String)"><B>isFactoryBean(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Determine whether the bean with the given name is a FactoryBean.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isFactoryBean(java.lang.String)"><B>isFactoryBean(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isFactoryBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)"><B>isFactoryBean(String, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Check whether the given bean is defined as a <A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#isFactoryDereference(java.lang.String)"><B>isFactoryDereference(String)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return whether the given name is a factory dereference
 (beginning with the factory dereference prefix).
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#isFactoryMethod(java.lang.reflect.Method)"><B>isFactoryMethod(Method)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Check whether the given candidate qualifies as a factory method.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isFailEarlyOnGlobalRollbackOnly()"><B>isFailEarlyOnGlobalRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether to fail early in case of the transaction being globally marked
 as rollback-only.
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#isField"><B>isField</B></A> - 
Variable in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata.InjectedElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ResourceUtils.html#isFileURL(java.net.URL)"><B>isFileURL(URL)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>Determine whether the given URL points to a resource in the file system,
 that is, has protocol "file" or "vfs".
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html#isFinal()"><B>isFinal()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type">ClassMetadata</A>
<DD>Return whether the underlying class is marked as 'final'.
<DT><A HREF="../org/springframework/core/type/MethodMetadata.html#isFinal()"><B>isFinal()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/MethodMetadata.html" title="interface in org.springframework.core.type">MethodMetadata</A>
<DD>Return whether the underlying method is marked as 'final'.
<DT><A HREF="../org/springframework/core/type/StandardClassMetadata.html#isFinal()"><B>isFinal()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardClassMetadata.html" title="class in org.springframework.core.type">StandardClassMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/type/StandardMethodMetadata.html#isFinal()"><B>isFinal()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardMethodMetadata.html" title="class in org.springframework.core.type">StandardMethodMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isFinalizeMethod(java.lang.reflect.Method)"><B>isFinalizeMethod(Method)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Determine whether the given method is a "finalize" method.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#isFinishRequest(javax.portlet.PortletRequest)"><B>isFinishRequest(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the incoming request is a request to finish the
 processing of the current form.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#isFinishRequest(javax.servlet.http.HttpServletRequest)"><B>isFinishRequest(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the incoming request is a request to finish the
 processing of the current form.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#isFirst()"><B>isFirst()</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#isFirst()"><B>isFirst()</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Retrieves whether the cursor is on the first row of this RowSet.
<DT><A HREF="../org/springframework/beans/support/PagedListHolder.html#isFirstPage()"><B>isFirstPage()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/PagedListHolder.html" title="class in org.springframework.beans.support">PagedListHolder</A>
<DD>Return if the current page is the first one.
<DT><A HREF="../org/springframework/scheduling/commonj/ScheduledTimerListener.html#isFixedRate()"><B>isFixedRate()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/ScheduledTimerListener.html" title="class in org.springframework.scheduling.commonj">ScheduledTimerListener</A>
<DD>Return whether to schedule as fixed-rate execution.
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorTask.html#isFixedRate()"><B>isFixedRate()</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorTask.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorTask</A>
<DD>Return whether to schedule as fixed-rate execution.
<DT><A HREF="../org/springframework/scheduling/timer/ScheduledTimerTask.html#isFixedRate()"><B>isFixedRate()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/ScheduledTimerTask.html" title="class in org.springframework.scheduling.timer">ScheduledTimerTask</A>
<DD><B>Deprecated.</B>&nbsp;Return whether to schedule as fixed-rate execution.
<DT><A HREF="../org/springframework/orm/jdo/JdoAccessor.html#isFlushEager()"><B>isFlushEager()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoAccessor.html" title="class in org.springframework.orm.jdo">JdoAccessor</A>
<DD>Return if this accessor should flush changes to the database eagerly.
<DT><A HREF="../org/springframework/orm/jpa/JpaAccessor.html#isFlushEager()"><B>isFlushEager()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaAccessor.html" title="class in org.springframework.orm.jpa">JpaAccessor</A>
<DD>Return if this accessor should flush changes to the database eagerly.
<DT><A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.portlet.PortletRequest)"><B>isFormChangeRequest(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html" title="class in org.springframework.web.portlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the given request is a form change request.
<DT><A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>isFormChangeRequest(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html" title="class in org.springframework.web.servlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether the given request is a form change request.
<DT><A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest)"><B>isFormChangeRequest(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html" title="class in org.springframework.web.servlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Simpler <code>isFormChangeRequest</code> variant, called by the full
 variant <A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html#isFormChangeRequest(javax.servlet.http.HttpServletRequest, java.lang.Object)"><CODE>SimpleFormController.isFormChangeRequest(HttpServletRequest, Object)</CODE></A>.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#isFormSubmission(javax.portlet.PortletRequest)"><B>isFormSubmission(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine if the given request represents a form submission.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#isFormSubmission(javax.portlet.PortletRequest)"><B>isFormSubmission(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Consider an explicit finish or cancel request as a form submission too.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html#isFormSubmission(javax.servlet.http.HttpServletRequest)"><B>isFormSubmission(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine if the given request represents a form submission.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#isFormSubmission(javax.servlet.http.HttpServletRequest)"><B>isFormSubmission(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Consider an explicit finish or cancel request as a form submission too.
<DT><A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html#isFormSubmission(javax.servlet.http.HttpServletRequest)"><B>isFormSubmission(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html" title="class in org.springframework.web.servlet.mvc">CancellableFormController</A>
<DD><B>Deprecated.</B>&nbsp;Consider an explicit cancel request as a form submission too.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#isFrozen()"><B>isFrozen()</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Return whether the Advised configuration is frozen,
 in which case no advice changes can be made.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html#isFrozen()"><B>isFrozen()</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#isFrozen()"><B>isFrozen()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Return whether the config is frozen, and no advice changes can be made.
<DT><A HREF="../org/springframework/jms/connection/JmsResourceHolder.html#isFrozen()"><B>isFrozen()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#isFunction()"><B>isFunction()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Check whether this call is a function call.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#isFunction()"><B>isFunction()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Is this call a function call?
<DT><A HREF="../org/springframework/jdbc/object/SqlCall.html#isFunction()"><B>isFunction()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlCall.html" title="class in org.springframework.jdbc.object">SqlCall</A>
<DD>Return whether this call is for a function.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#isGeneratedBeanName(java.lang.String)"><B>isGeneratedBeanName(String)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return whether the given name is a bean name which has been generated
 by the default naming strategy (containing a "#..." part).
<DT><A HREF="../org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html#isGenerateDdl()"><B>isGenerateDdl()</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html" title="class in org.springframework.orm.jpa.vendor">AbstractJpaVendorAdapter</A>
<DD>Return whether to generate DDL after the EntityManagerFactory has been initialized
 creating/updating all relevant tables.
<DT><A HREF="../org/springframework/test/context/support/AbstractContextLoader.html#isGenerateDefaultLocations()"><B>isGenerateDefaultLocations()</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractContextLoader.html" title="class in org.springframework.test.context.support">AbstractContextLoader</A>
<DD>Determine whether or not <em>default</em> resource locations should be
 generated if the <code>locations</code> provided to
 <A HREF="../org/springframework/test/context/support/AbstractContextLoader.html#processLocations(java.lang.Class, java.lang.String...)"><CODE>processLocations()</CODE></A> are
 <code>null</code> or empty.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isGeneratedKeysColumnNameArraySupported()"><B>isGeneratedKeysColumnNameArraySupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#isGeneratedKeysColumnNameArraySupported()"><B>isGeneratedKeysColumnNameArraySupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Is a column name String array for retrieving generated keys supported?
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html?is-external=true#createStruct(java.lang.String, java.lang.Object[])" title="class or interface in java.sql"><CODE>Connection.createStruct(String, Object[])</CODE></A>?
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#isGeneratedKeysColumnNameArraySupported()"><B>isGeneratedKeysColumnNameArraySupported()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Does this database support a column name String array for retreiving generated keys
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html?is-external=true#createStruct(java.lang.String, java.lang.Object[])" title="class or interface in java.sql"><CODE>Connection.createStruct(String, Object[])</CODE></A>
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isGetGeneratedKeysSimulated()"><B>isGetGeneratedKeysSimulated()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.html#isGetGeneratedKeysSimulated()"><B>isGetGeneratedKeysSimulated()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/HsqlTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">HsqlTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.html#isGetGeneratedKeysSimulated()"><B>isGetGeneratedKeysSimulated()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/PostgresTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">PostgresTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#isGetGeneratedKeysSimulated()"><B>isGetGeneratedKeysSimulated()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Does this database support simple query to retrieve generated keys
 when the JDBC 3.0 feature is not supported.
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#isGetGeneratedKeysSimulated()"><B>isGetGeneratedKeysSimulated()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Does this database support a simple quey to retrieve the generated key whe the JDBC 3.0 feature
 of retreiving generated keys is not supported
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/DatabaseMetaData.html?is-external=true#supportsGetGeneratedKeys()" title="class or interface in java.sql"><CODE>DatabaseMetaData.supportsGetGeneratedKeys()</CODE></A>
<DT><A HREF="../org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html#isGetGeneratedKeysSupported()"><B>isGetGeneratedKeysSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">DerbyTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isGetGeneratedKeysSupported()"><B>isGetGeneratedKeysSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#isGetGeneratedKeysSupported()"><B>isGetGeneratedKeysSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Does this database support the JDBC 3.0 feature of retrieving generated keys
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/DatabaseMetaData.html?is-external=true#supportsGetGeneratedKeys()" title="class or interface in java.sql"><CODE>DatabaseMetaData.supportsGetGeneratedKeys()</CODE></A>?
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#isGetGeneratedKeysSupported()"><B>isGetGeneratedKeysSupported()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Does this database support the JDBC 3.0 feature of retreiving generated keys
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/DatabaseMetaData.html?is-external=true#supportsGetGeneratedKeys()" title="class or interface in java.sql"><CODE>DatabaseMetaData.supportsGetGeneratedKeys()</CODE></A>
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#isGlobalRollbackOnly()"><B>isGlobalRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Template method for determining the global rollback-only flag of the
 underlying transaction, if any.
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isGlobalRollbackOnly()"><B>isGlobalRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>Determine the rollback-only flag via checking both the transaction object,
 provided that the latter implements the <A HREF="../org/springframework/transaction/support/SmartTransactionObject.html" title="interface in org.springframework.transaction.support"><CODE>SmartTransactionObject</CODE></A> interface.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isGlobalRollbackOnParticipationFailure()"><B>isGlobalRollbackOnParticipationFailure()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether to globally mark an existing transaction as rollback-only
 after a participating transaction failed.
<DT><A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html#isGzipResponse(org.apache.commons.httpclient.methods.PostMethod)"><B>isGzipResponse(PostMethod)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">CommonsHttpInvokerRequestExecutor</A>
<DD>Determine whether the given response indicates a GZIP response.
<DT><A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html#isGzipResponse(java.net.HttpURLConnection)"><B>isGzipResponse(HttpURLConnection)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">SimpleHttpInvokerRequestExecutor</A>
<DD>Determine whether the given response is a GZIP response.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html#isHandlerMethod(java.lang.reflect.Method)"><B>isHandlerMethod(Method)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isHashCodeMethod(java.lang.reflect.Method)"><B>isHashCodeMethod(Method)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Determine whether the given method is a "hashCode" method.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#isHashCodeMethod(java.lang.reflect.Method)"><B>isHashCodeMethod(Method)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Determine whether the given method is a "hashCode" method.
<DT><A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html#isHomeRefreshable()"><B>isHomeRefreshable()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractRemoteSlsbInvokerInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#isHomeRefreshable()"><B>isHomeRefreshable()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A>
<DD>Return whether the cached EJB home object is potentially
 subject to on-demand refreshing.
<DT><A HREF="../org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html#isHtmlEscape()"><B>isHtmlEscape()</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/HtmlEscapingAwareTag.html" title="class in org.springframework.web.servlet.tags">HtmlEscapingAwareTag</A>
<DD>Return the HTML escaping setting for this tag,
 or the default setting if not overridden.
<DT><A HREF="../org/springframework/beans/support/MutableSortDefinition.html#isIgnoreCase()"><B>isIgnoreCase()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/MutableSortDefinition.html" title="class in org.springframework.beans.support">MutableSortDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/SortDefinition.html#isIgnoreCase()"><B>isIgnoreCase()</B></A> - 
Method in interface org.springframework.beans.support.<A HREF="../org/springframework/beans/support/SortDefinition.html" title="interface in org.springframework.beans.support">SortDefinition</A>
<DD>Return whether upper and lower case in String values should be ignored.
<DT><A HREF="../org/springframework/validation/DataBinder.html#isIgnoreInvalidFields()"><B>isIgnoreInvalidFields()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Return whether to ignore invalid fields when binding.
<DT><A HREF="../org/springframework/web/servlet/tags/BindTag.html#isIgnoreNestedPath()"><B>isIgnoreNestedPath()</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/BindTag.html" title="class in org.springframework.web.servlet.tags">BindTag</A>
<DD>Return whether to ignore a nested path, if any.
<DT><A HREF="../org/springframework/validation/DataBinder.html#isIgnoreUnknownFields()"><B>isIgnoreUnknownFields()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Return whether to ignore unknown fields when binding.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#isIgnoreWarnings()"><B>isIgnoreWarnings()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Return whether or not we ignore SQLWarnings.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html#isIgnoring(org.aspectj.bridge.IMessage.Kind)"><B>isIgnoring(IMessage.Kind)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJWeaverMessageHandler.html" title="class in org.springframework.aop.aspectj">AspectJWeaverMessageHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html#isIncludeClientInfo()"><B>isIncludeClientInfo()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/Log4jNestedDiagnosticContextInterceptor.html" title="class in org.springframework.web.context.request">Log4jNestedDiagnosticContextInterceptor</A>
<DD>Return whether or not the session id and user name should be included
 in the log message.
<DT><A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html#isIncludeClientInfo()"><B>isIncludeClientInfo()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html" title="class in org.springframework.web.filter">AbstractRequestLoggingFilter</A>
<DD>Return whether or not the client address and session id should be included in the log message.
<DT><A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html#isIncludePayload()"><B>isIncludePayload()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html" title="class in org.springframework.web.filter">AbstractRequestLoggingFilter</A>
<DD>Return whether or not the request payload (body) should be included in the log message.
<DT><A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html#isIncludeQueryString()"><B>isIncludeQueryString()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html" title="class in org.springframework.web.filter">AbstractRequestLoggingFilter</A>
<DD>Return whether or not the query string should be included in the log message.
<DT><A HREF="../org/springframework/web/util/WebUtils.html#isIncludeRequest(javax.servlet.ServletRequest)"><B>isIncludeRequest(ServletRequest)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Determine whether the given request is an include request,
 that is, not a top-level HTTP request coming in from the outside.
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html#isIndependent()"><B>isIndependent()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type">ClassMetadata</A>
<DD>Determine whether the underlying class is independent,
 i.e.
<DT><A HREF="../org/springframework/core/type/StandardClassMetadata.html#isIndependent()"><B>isIndependent()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardClassMetadata.html" title="class in org.springframework.core.type">StandardClassMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html#isInfrastructureClass(java.lang.Class)"><B>isInfrastructureClass(Class)</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.html" title="class in org.springframework.aop.aspectj.annotation">AnnotationAwareAspectJAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html#isInfrastructureClass(java.lang.Class)"><B>isInfrastructureClass(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAutoProxyCreator</A>
<DD>Return whether the given bean class represents an infrastructure class
 that should never be proxied.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html#isInitBinderMethod(java.lang.reflect.Method)"><B>isInitBinderMethod(Method)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html#isInitialized()"><B>isInitialized()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html" title="class in org.springframework.aop.target">AbstractLazyCreationTargetSource</A>
<DD>Return whether the lazy target object of this TargetSource
 has already been fetched.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#isInputValueProvided()"><B>isInputValueProvided()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>This implementation always returns <code>false</code>.
<DT><A HREF="../org/springframework/jdbc/core/SqlInOutParameter.html#isInputValueProvided()"><B>isInputValueProvided()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlInOutParameter.html" title="class in org.springframework.jdbc.core">SqlInOutParameter</A>
<DD>This implementation always returns <code>true</code>.
<DT><A HREF="../org/springframework/jdbc/core/SqlParameter.html#isInputValueProvided()"><B>isInputValueProvided()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlParameter.html" title="class in org.springframework.jdbc.core">SqlParameter</A>
<DD>Return whether this parameter holds input values that should be set
 before execution even if they are <code>null</code>.
<DT><A HREF="../org/springframework/jdbc/core/SqlReturnUpdateCount.html#isInputValueProvided()"><B>isInputValueProvided()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlReturnUpdateCount.html" title="class in org.springframework.jdbc.core">SqlReturnUpdateCount</A>
<DD>Return whether this parameter holds input values that should be set
 before execution even if they are <code>null</code>.
<DT><A HREF="../org/springframework/util/Assert.html#isInstanceOf(java.lang.Class, java.lang.Object)"><B>isInstanceOf(Class, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that the provided object is an instance of the provided class.
<DT><A HREF="../org/springframework/util/Assert.html#isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)"><B>isInstanceOf(Class, Object, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that the provided object is an instance of the provided class.
<DT><A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html#isInstrumentationAvailable()"><B>isInstrumentationAvailable()</B></A> - 
Static method in class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">InstrumentationLoadTimeWeaver</A>
<DD>Check whether an Instrumentation instance is available for the current VM.
<DT><A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html#isInterceptorEnabled(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>isInterceptorEnabled(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html" title="class in org.springframework.aop.interceptor">AbstractTraceInterceptor</A>
<DD>Determine whether the interceptor should kick in, that is,
 whether the <code>invokeUnderTrace</code> method should be called.
<DT><A HREF="../org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html#isInterceptorEnabled(org.aopalliance.intercept.MethodInvocation, org.apache.commons.logging.Log)"><B>isInterceptorEnabled(MethodInvocation, Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/JamonPerformanceMonitorInterceptor.html" title="class in org.springframework.aop.interceptor">JamonPerformanceMonitorInterceptor</A>
<DD>Always applies the interceptor if the "trackAllInvocations" flag has been set;
 else just kicks in if the log is enabled.
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html#isInterface()"><B>isInterface()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type">ClassMetadata</A>
<DD>Return whether the underlying class represents an interface.
<DT><A HREF="../org/springframework/core/type/StandardClassMetadata.html#isInterface()"><B>isInterface()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardClassMetadata.html" title="class in org.springframework.core.type">StandardClassMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/Advised.html#isInterfaceProxied(java.lang.Class)"><B>isInterfaceProxied(Class)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Determine whether the given interface is proxied.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#isInterfaceProxied(java.lang.Class)"><B>isInterfaceProxied(Class)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#isInvalid()"><B>isInvalid()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#isInvalid()"><B>isInvalid()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#isInvalidSubmission(javax.portlet.PortletRequest)"><B>isInvalidSubmission(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Determine if the given request represents an invalid form submission.
<DT><A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html#isJarResource(org.springframework.core.io.Resource)"><B>isJarResource(Resource)</B></A> - 
Method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html" title="class in org.springframework.core.io.support">PathMatchingResourcePatternResolver</A>
<DD>Return whether the given resource handle indicates a jar resource
 that the <code>doFindPathMatchingJarResources</code> method can handle.
<DT><A HREF="../org/springframework/util/ResourceUtils.html#isJarURL(java.net.URL)"><B>isJarURL(URL)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>Determine whether the given URL points to a resource in a jar file,
 that is, has protocol "jar", "zip", "wsjar" or "code-source".
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isJdkDynamicProxy(java.lang.Object)"><B>isJdkDynamicProxy(Object)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Check whether the given object is a JDK dynamic proxy.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#isLast()"><B>isLast()</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#isLast()"><B>isLast()</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Retrieves whether the cursor is on the last row of this RowSet.
<DT><A HREF="../org/springframework/beans/support/PagedListHolder.html#isLastPage()"><B>isLastPage()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/PagedListHolder.html" title="class in org.springframework.beans.support">PagedListHolder</A>
<DD>Return if the current page is the last one.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html#isLazilyInstantiated()"><B>isLazilyInstantiated()</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html" title="class in org.springframework.aop.aspectj.annotation">AspectMetadata</A>
<DD>Return whether the aspect needs to be lazily instantiated.
<DT><A HREF="../org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html#isLazy()"><B>isLazy()</B></A> - 
Method in interface org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/InstantiationModelAwarePointcutAdvisor.html" title="interface in org.springframework.aop.aspectj">InstantiationModelAwarePointcutAdvisor</A>
<DD>Return whether this advisor is lazily initializing its underlying advice.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isLazyInit()"><B>isLazyInit()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this bean should be lazily initialized, i.e.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isLazyInit()"><B>isLazyInit()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this bean should be lazily initialized, i.e.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionDefaults.html#isLazyInit()"><B>isLazyInit()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionDefaults.html" title="class in org.springframework.beans.factory.support">BeanDefinitionDefaults</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/JdbcAccessor.html#isLazyInit()"><B>isLazyInit()</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcAccessor.html" title="class in org.springframework.jdbc.support">JdbcAccessor</A>
<DD>Return whether to lazily initialize the SQLExceptionTranslator for this accessor.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isLenientConstructorResolution()"><B>isLenientConstructorResolution()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether to resolve constructors in lenient mode or in strict mode.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#isLocalRollbackOnly()"><B>isLocalRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Determine the rollback-only flag via checking this TransactionStatus.
<DT><A HREF="../org/springframework/jmx/export/metadata/ManagedResource.html#isLog()"><B>isLog()</B></A> - 
Method in class org.springframework.jmx.export.metadata.<A HREF="../org/springframework/jmx/export/metadata/ManagedResource.html" title="class in org.springframework.jmx.export.metadata">ManagedResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html#isLogEnabled(org.apache.commons.logging.Log)"><B>isLogEnabled(Log)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AbstractTraceInterceptor.html" title="class in org.springframework.aop.interceptor">AbstractTraceInterceptor</A>
<DD>Determine whether the given <A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging"><CODE>Log</CODE></A> instance is enabled.
<DT><A HREF="../org/springframework/beans/factory/config/DeprecatedBeanWarner.html#isLogEnabled()"><B>isLogEnabled()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/DeprecatedBeanWarner.html" title="class in org.springframework.beans.factory.config">DeprecatedBeanWarner</A>
<DD>Determine whether the <A HREF="../org/springframework/beans/factory/config/DeprecatedBeanWarner.html#logger"><CODE>DeprecatedBeanWarner.logger</CODE></A> field is enabled.
<DT><A HREF="../org/springframework/scheduling/SchedulingAwareRunnable.html#isLongLived()"><B>isLongLived()</B></A> - 
Method in interface org.springframework.scheduling.<A HREF="../org/springframework/scheduling/SchedulingAwareRunnable.html" title="interface in org.springframework.scheduling">SchedulingAwareRunnable</A>
<DD>Return whether the Runnable's operation is long-lived
 (<code>true</code>) versus short-lived (<code>false</code>).
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html#isMaintainSession()"><B>isMaintainSession()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortClientInterceptor</A>
<DD><B>Deprecated.</B>&nbsp;Return the maintain session flag to specify on the stub or call.
<DT><A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html#isMaintainSession()"><B>isMaintainSession()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html" title="class in org.springframework.remoting.jaxws">JaxWsPortClientInterceptor</A>
<DD>Return the "session.maintain" flag to specify on the stub.
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isMap()"><B>isMap()</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Is this type a <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Map.html?is-external=true" title="class or interface in java.util"><CODE>Map</CODE></A> type?
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isMapEntryTypeKnown()"><B>isMapEntryTypeKnown()</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Is this descriptor for a map where the key type and value type are known?
<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html#isMatch(java.lang.String, java.lang.String)"><B>isMatch(String, String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">BeanNameAutoProxyCreator</A>
<DD>Return if the given bean name matches the mapped name.
<DT><A HREF="../org/springframework/aop/support/NameMatchMethodPointcut.html#isMatch(java.lang.String, java.lang.String)"><B>isMatch(String, String)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/NameMatchMethodPointcut.html" title="class in org.springframework.aop.support">NameMatchMethodPointcut</A>
<DD>Return if the given method name matches the mapped name.
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html#isMatch(java.lang.reflect.Method, java.lang.String)"><B>isMatch(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodNameBasedMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodNameBasedMBeanInfoAssembler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html#isMatch(java.lang.String, java.lang.String)"><B>isMatch(String, String)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.html" title="class in org.springframework.transaction.interceptor">MethodMapTransactionAttributeSource</A>
<DD>Return if the given method name matches the mapped name.
<DT><A HREF="../org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html#isMatch(java.lang.String, java.lang.String)"><B>isMatch(String, String)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.html" title="class in org.springframework.transaction.interceptor">NameMatchTransactionAttributeSource</A>
<DD>Return if the given method name matches the mapped name.
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#isMatchingFieldError(java.lang.String, org.springframework.validation.FieldError)"><B>isMatchingFieldError(String, FieldError)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>Check whether the given FieldError matches the given field.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html#isMatchRequiringConversion()"><B>isMatchRequiringConversion()</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html" title="class in org.springframework.expression.spel.support">ReflectionHelper.ArgumentsMatchInfo</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/annotation/LazySingletonAspectInstanceFactoryDecorator.html#isMaterialized()"><B>isMaterialized()</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/LazySingletonAspectInstanceFactoryDecorator.html" title="class in org.springframework.aop.aspectj.annotation">LazySingletonAspectInstanceFactoryDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#isMBean(java.lang.Class)"><B>isMBean(Class)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Determine whether the given bean class qualifies as an MBean as-is.
<DT><A HREF="../org/springframework/jmx/support/JmxUtils.html#isMBean(java.lang.Class)"><B>isMBean(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/JmxUtils.html" title="class in org.springframework.jmx.support">JmxUtils</A>
<DD>Determine whether the given bean class qualifies as an MBean as-is.
<DT><A HREF="../org/springframework/beans/factory/support/ManagedList.html#isMergeEnabled()"><B>isMergeEnabled()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ManagedList.html" title="class in org.springframework.beans.factory.support">ManagedList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/ManagedMap.html#isMergeEnabled()"><B>isMergeEnabled()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ManagedMap.html" title="class in org.springframework.beans.factory.support">ManagedMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/ManagedProperties.html#isMergeEnabled()"><B>isMergeEnabled()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ManagedProperties.html" title="class in org.springframework.beans.factory.support">ManagedProperties</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/ManagedSet.html#isMergeEnabled()"><B>isMergeEnabled()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ManagedSet.html" title="class in org.springframework.beans.factory.support">ManagedSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/Mergeable.html#isMergeEnabled()"><B>isMergeEnabled()</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/Mergeable.html" title="interface in org.springframework.beans">Mergeable</A>
<DD>Is merging enabled for this particular instance?
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#isMessageIdEnabled()"><B>isMessageIdEnabled()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Return whether message IDs are enabled.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#isMessageTimestampEnabled()"><B>isMessageTimestampEnabled()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Return whether message timestamps are enabled.
<DT><A HREF="../org/springframework/web/servlet/tags/form/FormTag.html#isMethodBrowserSupported(java.lang.String)"><B>isMethodBrowserSupported(String)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/FormTag.html" title="class in org.springframework.web.servlet.tags.form">FormTag</A>
<DD>Determine if the HTTP method is supported by browsers (i.e.
<DT><A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html#isMethodOnIntroducedInterface(org.aopalliance.intercept.MethodInvocation)"><B>isMethodOnIntroducedInterface(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/IntroductionInfoSupport.html" title="class in org.springframework.aop.support">IntroductionInfoSupport</A>
<DD>Is this method on an introduced interface?
<DT><A HREF="../org/springframework/orm/hibernate3/LocalCacheProviderProxy.html#isMinimalPutsEnabledByDefault()"><B>isMinimalPutsEnabledByDefault()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalCacheProviderProxy.html" title="class in org.springframework.orm.hibernate3">LocalCacheProviderProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html#isMinimalPutsEnabledByDefault()"><B>isMinimalPutsEnabledByDefault()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html" title="class in org.springframework.orm.hibernate3">LocalRegionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html#isModelAttributeMethod(java.lang.reflect.Method)"><B>isModelAttributeMethod(Method)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/ScriptSource.html#isModified()"><B>isModified()</B></A> - 
Method in interface org.springframework.scripting.<A HREF="../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting">ScriptSource</A>
<DD>Indicate whether the underlying script data has been modified since
 the last time <A HREF="../org/springframework/scripting/ScriptSource.html#getScriptAsString()"><CODE>ScriptSource.getScriptAsString()</CODE></A> was called.
<DT><A HREF="../org/springframework/scripting/support/ResourceScriptSource.html#isModified()"><B>isModified()</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support">ResourceScriptSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/support/StaticScriptSource.html#isModified()"><B>isModified()</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/StaticScriptSource.html" title="class in org.springframework.scripting.support">StaticScriptSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html#isMultiActionControllerType(java.lang.Class)"><B>isMultiActionControllerType(Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">AbstractControllerUrlHandlerMapping</A>
<DD>Determine whether the given bean class indicates a controller type
 that dispatches to multiple action methods.
<DT><A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html#isMultipart()"><B>isMultipart()</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail">MimeMessageHelper</A>
<DD>Return whether this helper is in multipart mode,
 i.e.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html#isMultipart(javax.servlet.http.HttpServletRequest)"><B>isMultipart(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/multipart/MultipartResolver.html#isMultipart(javax.servlet.http.HttpServletRequest)"><B>isMultipart(HttpServletRequest)</B></A> - 
Method in interface org.springframework.web.multipart.<A HREF="../org/springframework/web/multipart/MultipartResolver.html" title="interface in org.springframework.web.multipart">MultipartResolver</A>
<DD>Determine if the given request contains multipart content.
<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html#isMultipart(javax.portlet.ActionRequest)"><B>isMultipart(ActionRequest)</B></A> - 
Method in class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart">CommonsPortletMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html#isMultipart(javax.portlet.ActionRequest)"><B>isMultipart(ActionRequest)</B></A> - 
Method in interface org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html" title="interface in org.springframework.web.portlet.multipart">PortletMultipartResolver</A>
<DD>Determine if the given request contains multipart content.
<DT><A HREF="../org/springframework/orm/hibernate3/support/AbstractLobType.html#isMutable()"><B>isMutable()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/AbstractLobType.html" title="class in org.springframework.orm.hibernate3.support">AbstractLobType</A>
<DD>This implementation returns false.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html#isMutable()"><B>isMutable()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html" title="class in org.springframework.orm.hibernate3.support">BlobByteArrayType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html#isMutable()"><B>isMutable()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html" title="class in org.springframework.orm.hibernate3.support">BlobSerializableType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/JmxUtils.html#isMXBeanSupportAvailable()"><B>isMXBeanSupportAvailable()</B></A> - 
Static method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/JmxUtils.html" title="class in org.springframework.jmx.support">JmxUtils</A>
<DD>Check whether MXBean support is available, i.e.
<DT><A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html#isNamespaceAware()"><B>isNamespaceAware()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml">XmlBeanDefinitionReader</A>
<DD>Return whether or not the XML parser should be XML namespace aware.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">C3P0NativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in interface org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractor</A>
<DD>Return whether it is necessary to work on the native Connection to
 receive native CallableStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html" title="class in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractorAdapter</A>
<DD>Return <code>false</code> by default.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">SimpleNativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebLogicNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebLogic returns wrapped CallableStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeCallableStatements()"><B>isNativeConnectionNecessaryForNativeCallableStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebSphereNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebSphere returns wrapped CallableStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">C3P0NativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in interface org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractor</A>
<DD>Return whether it is necessary to work on the native Connection to
 receive native PreparedStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html" title="class in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractorAdapter</A>
<DD>Return <code>false</code> by default.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">SimpleNativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebLogicNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebLogic returns wrapped PreparedStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativePreparedStatements()"><B>isNativeConnectionNecessaryForNativePreparedStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebSphereNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebSphere returns wrapped PreparedStatements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">C3P0NativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in interface org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractor</A>
<DD>Return whether it is necessary to work on the native Connection to
 receive native Statements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractorAdapter.html" title="class in org.springframework.jdbc.support.nativejdbc">NativeJdbcExtractorAdapter</A>
<DD>Return <code>false</code> by default.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/SimpleNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">SimpleNativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebLogicNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebLogicNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebLogic returns wrapped Statements.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html#isNativeConnectionNecessaryForNativeStatements()"><B>isNativeConnectionNecessaryForNativeStatements()</B></A> - 
Method in class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/WebSphereNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">WebSphereNativeJdbcExtractor</A>
<DD>Return <code>true</code>, as WebSphere returns wrapped Statements.
<DT><A HREF="../org/springframework/beans/factory/xml/ParserContext.html#isNested()"><B>isNested()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ParserContext.html" title="class in org.springframework.beans.factory.xml">ParserContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyAccessorUtils.html#isNestedOrIndexedProperty(java.lang.String)"><B>isNestedOrIndexedProperty(String)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyAccessorUtils.html" title="class in org.springframework.beans">PropertyAccessorUtils</A>
<DD>Check whether the given property path indicates an indexed or nested property.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isNestedTransactionAllowed()"><B>isNestedTransactionAllowed()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether nested transactions are allowed.
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#isNew()"><B>isNew()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#isNew()"><B>isNew()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isNewSynchronization()"><B>isNewSynchronization()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>Return if a new transaction synchronization has been opened
 for this transaction.
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isNewTransaction()"><B>isNewTransaction()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/SimpleTransactionStatus.html#isNewTransaction()"><B>isNewTransaction()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/SimpleTransactionStatus.html" title="class in org.springframework.transaction.support">SimpleTransactionStatus</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/TransactionStatus.html#isNewTransaction()"><B>isNewTransaction()</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionStatus.html" title="interface in org.springframework.transaction">TransactionStatus</A>
<DD>Return whether the present transaction is new (else participating
 in an existing transaction, or potentially not running in an
 actual transaction in the first place).
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isNonPublicAccessAllowed()"><B>isNonPublicAccessAllowed()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether to allow access to non-public constructors and methods.
<DT><A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html#isNotIgnored(java.lang.reflect.Method, java.lang.String)"><B>isNotIgnored(Method, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MethodExclusionMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MethodExclusionMBeanInfoAssembler</A>
<DD>Determine whether the given method is supposed to be included,
 that is, not configured as to be ignored.
<DT><A HREF="../org/springframework/web/context/request/ServletWebRequest.html#isNotModified()"><B>isNotModified()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletWebRequest.html" title="class in org.springframework.web.context.request">ServletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/Assert.html#isNull(java.lang.Object, java.lang.String)"><B>isNull(Object, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that an object is <code>null</code> .
<DT><A HREF="../org/springframework/util/Assert.html#isNull(java.lang.Object)"><B>isNull(Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert that an object is <code>null</code> .
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallParameterMetaData.html#isNullable()"><B>isNullable()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallParameterMetaData.html" title="class in org.springframework.jdbc.core.metadata">CallParameterMetaData</A>
<DD>Get whether the parameter is nullable.
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableParameterMetaData.html#isNullable()"><B>isNullable()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableParameterMetaData.html" title="class in org.springframework.jdbc.core.metadata">TableParameterMetaData</A>
<DD>Get whether the parameter/column is nullable.
<DT><A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html#isNullSafe()"><B>isNullSafe()</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html" title="class in org.springframework.expression.spel.ast">PropertyOrFieldReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#isNumeric(int)"><B>isNumeric(int)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Check whether the given SQL type is numeric.
<DT><A HREF="../org/springframework/transaction/annotation/Isolation.html" title="enum in org.springframework.transaction.annotation"><B>Isolation</B></A> - Enum in <A HREF="../org/springframework/transaction/annotation/package-summary.html">org.springframework.transaction.annotation</A><DD>Enumeration that represents transaction isolation levels for use
 with the <A HREF="../org/springframework/transaction/annotation/Transactional.html" title="annotation in org.springframework.transaction.annotation"><CODE>Transactional</CODE></A> annotation, corresponding to the
 <A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction"><CODE>TransactionDefinition</CODE></A> interface.<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#ISOLATION_DEFAULT"><B>ISOLATION_DEFAULT</B></A> - 
Static variable in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Use the default isolation level of the underlying datastore.
<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#ISOLATION_READ_COMMITTED"><B>ISOLATION_READ_COMMITTED</B></A> - 
Static variable in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Indicates that dirty reads are prevented; non-repeatable reads and
 phantom reads can occur.
<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#ISOLATION_READ_UNCOMMITTED"><B>ISOLATION_READ_UNCOMMITTED</B></A> - 
Static variable in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Indicates that dirty reads, non-repeatable reads and phantom reads
 can occur.
<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#ISOLATION_REPEATABLE_READ"><B>ISOLATION_REPEATABLE_READ</B></A> - 
Static variable in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Indicates that dirty reads and non-repeatable reads are prevented;
 phantom reads can occur.
<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#ISOLATION_SERIALIZABLE"><B>ISOLATION_SERIALIZABLE</B></A> - 
Static variable in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Indicates that dirty reads, non-repeatable reads and phantom reads
 are prevented.
<DT><A HREF="../org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource"><B>IsolationLevelDataSourceAdapter</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/package-summary.html">org.springframework.jdbc.datasource</A><DD>An adapter for a target <A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/DataSource.html?is-external=true" title="class or interface in javax.sql"><CODE>DataSource</CODE></A>, applying the current
 Spring transaction's isolation level (and potentially specified user credentials)
 to every <code>getConnection</code> call.<DT><A HREF="../org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html#IsolationLevelDataSourceAdapter()"><B>IsolationLevelDataSourceAdapter()</B></A> - 
Constructor for class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/IsolationLevelDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource">IsolationLevelDataSourceAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html" title="class in org.springframework.jdbc.datasource.lookup"><B>IsolationLevelDataSourceRouter</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/lookup/package-summary.html">org.springframework.jdbc.datasource.lookup</A><DD>DataSource that routes to one of various target DataSources based on the
 current transaction isolation level.<DT><A HREF="../org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html#IsolationLevelDataSourceRouter()"><B>IsolationLevelDataSourceRouter()</B></A> - 
Constructor for class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html" title="class in org.springframework.jdbc.datasource.lookup">IsolationLevelDataSourceRouter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/commonj/ScheduledTimerListener.html#isOneTimeTask()"><B>isOneTimeTask()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/ScheduledTimerListener.html" title="class in org.springframework.scheduling.commonj">ScheduledTimerListener</A>
<DD>Is this task only ever going to execute once?
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorTask.html#isOneTimeTask()"><B>isOneTimeTask()</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorTask.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorTask</A>
<DD>Is this task only ever going to execute once?
<DT><A HREF="../org/springframework/scheduling/timer/ScheduledTimerTask.html#isOneTimeTask()"><B>isOneTimeTask()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/ScheduledTimerTask.html" title="class in org.springframework.scheduling.timer">ScheduledTimerTask</A>
<DD><B>Deprecated.</B>&nbsp;Is this task only ever going to execute once?
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#isOpaque()"><B>isOpaque()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Return whether proxies created by this configuration should be
 prevented from being cast to <A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework"><CODE>Advised</CODE></A>.
<DT><A HREF="../org/springframework/core/io/AbstractResource.html#isOpen()"><B>isOpen()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractResource.html" title="class in org.springframework.core.io">AbstractResource</A>
<DD>This implementation always returns <code>false</code>.
<DT><A HREF="../org/springframework/core/io/InputStreamResource.html#isOpen()"><B>isOpen()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/InputStreamResource.html" title="class in org.springframework.core.io">InputStreamResource</A>
<DD>This implementation always returns <code>true</code>.
<DT><A HREF="../org/springframework/core/io/Resource.html#isOpen()"><B>isOpen()</B></A> - 
Method in interface org.springframework.core.io.<A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io">Resource</A>
<DD>Return whether this resource represents a handle with an open
 stream.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#isOpen()"><B>isOpen()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Return whether there are still open references to this holder.
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#isOptimize()"><B>isOptimize()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Return whether proxies should perform aggressive optimizations.
<DT><A HREF="../org/springframework/beans/PropertyValue.html#isOptional()"><B>isOptional()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyValue.html" title="class in org.springframework.beans">PropertyValue</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#isOutputStreamAccessAllowed()"><B>isOutputStreamAccessAllowed()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>Return whether <A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#getOutputStream()"><CODE>MockHttpServletResponse.getOutputStream()</CODE></A> access is allowed.
<DT><A HREF="../org/springframework/beans/factory/support/MethodOverride.html#isOverloaded()"><B>isOverloaded()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/MethodOverride.html" title="class in org.springframework.beans.factory.support">MethodOverride</A>
<DD>Return whether the overridden method has to be considered as overloaded
 (that is, whether arg type matching has to happen).
<DT><A HREF="../org/springframework/core/type/MethodMetadata.html#isOverridable()"><B>isOverridable()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/MethodMetadata.html" title="interface in org.springframework.core.type">MethodMetadata</A>
<DD>Return whether the underlying method is overridable,
 i.e.
<DT><A HREF="../org/springframework/core/type/StandardMethodMetadata.html#isOverridable()"><B>isOverridable()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardMethodMetadata.html" title="class in org.springframework.core.type">StandardMethodMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#isOverrideIncludeSynonymsDefault()"><B>isOverrideIncludeSynonymsDefault()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Are we overriding include synonyms default?
<DT><A HREF="../org/springframework/util/AntPathMatcher.html#isPattern(java.lang.String)"><B>isPattern(String)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AntPathMatcher.html" title="class in org.springframework.util">AntPathMatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/PathMatcher.html#isPattern(java.lang.String)"><B>isPattern(String)</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/PathMatcher.html" title="interface in org.springframework.util">PathMatcher</A>
<DD>Does the given <code>path</code> represent a pattern that can be matched
 by an implementation of this interface?
<DT><A HREF="../org/springframework/aop/Advisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/Advisor.html" title="interface in org.springframework.aop">Advisor</A>
<DD>Return whether this advice is associated with a particular instance
 (for example, creating a mixin) or shared with all instances of
 the advised class obtained from the same Spring bean factory.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJPointcutAdvisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJPointcutAdvisor.html" title="class in org.springframework.aop.aspectj">AspectJPointcutAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/DeclareParentsAdvisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/DeclareParentsAdvisor.html" title="class in org.springframework.aop.aspectj">DeclareParentsAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/AbstractPointcutAdvisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AbstractPointcutAdvisor.html" title="class in org.springframework.aop.support">AbstractPointcutAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/DefaultIntroductionAdvisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/DefaultIntroductionAdvisor.html" title="class in org.springframework.aop.support">DefaultIntroductionAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html#isPerInstance()"><B>isPerInstance()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.html" title="class in org.springframework.aop.support">StaticMethodMatcherPointcutAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html#isPersistenceManagerTransactional(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory)"><B>isPersistenceManagerTransactional(PersistenceManager, PersistenceManagerFactory)</B></A> - 
Static method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html" title="class in org.springframework.orm.jdo">PersistenceManagerFactoryUtils</A>
<DD>Return whether the given JDO PersistenceManager is transactional, that is,
 bound to the current thread by Spring's transaction facilities.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html#isPerThisOrPerTarget()"><B>isPerThisOrPerTarget()</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html" title="class in org.springframework.aop.aspectj.annotation">AspectMetadata</A>
<DD>Return whether the aspect is defined as "perthis" or "pertarget".
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html#isPerTypeWithin()"><B>isPerTypeWithin()</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AspectMetadata.html" title="class in org.springframework.aop.aspectj.annotation">AspectMetadata</A>
<DD>Return whether the aspect is defined as "pertypewithin".
<DT><A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html#isPopulateProtectedVariables()"><B>isPopulateProtectedVariables()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractDependencyInjectionSpringContextTests.html" title="class in org.springframework.test">AbstractDependencyInjectionSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Return whether to populate protected variables of this test case.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isPortletModeAllowed(javax.portlet.PortletMode)"><B>isPortletModeAllowed(PortletMode)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html#isPreferFileSystemAccess()"><B>isPreferFileSystemAccess()</B></A> - 
Method in class org.springframework.ui.freemarker.<A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html" title="class in org.springframework.ui.freemarker">FreeMarkerConfigurationFactory</A>
<DD>Return whether to prefer file system access for template loading.
<DT><A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html#isPreferFileSystemAccess()"><B>isPreferFileSystemAccess()</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html" title="class in org.springframework.ui.velocity">VelocityEngineFactory</A>
<DD>Return whether to prefer file system access for template loading.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#isPreFiltered()"><B>isPreFiltered()</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Return whether this proxy configuration is pre-filtered so that it only
 contains applicable advisors (matching this proxy's target class).
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#isPreFiltered()"><B>isPreFiltered()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html#isPrepared()"><B>isPrepared()</B></A> - 
Method in class org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html" title="class in org.springframework.jmx.access">MBeanClientInterceptor</A>
<DD>Return whether this client interceptor has already been prepared,
 i.e.
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html#isPrepared()"><B>isPrepared()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortClientInterceptor</A>
<DD><B>Deprecated.</B>&nbsp;Return whether this client interceptor has already been prepared,
 i.e.
<DT><A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html#isPrepared()"><B>isPrepared()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html" title="class in org.springframework.remoting.jaxws">JaxWsPortClientInterceptor</A>
<DD>Return whether this client interceptor has already been prepared,
 i.e.
<DT><A HREF="../org/springframework/util/MethodInvoker.html#isPrepared()"><B>isPrepared()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/MethodInvoker.html" title="class in org.springframework.util">MethodInvoker</A>
<DD>Return whether this invoker has been prepared already,
 i.e.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPresent(java.lang.String)"><B>isPresent(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, in favor of <A HREF="../org/springframework/util/ClassUtils.html#isPresent(java.lang.String, java.lang.ClassLoader)"><CODE>ClassUtils.isPresent(String, ClassLoader)</CODE></A></I>
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPresent(java.lang.String, java.lang.ClassLoader)"><B>isPresent(String, ClassLoader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Determine whether the <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang"><CODE>Class</CODE></A> identified by the supplied name is present
 and can be loaded.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isPrimary()"><B>isPrimary()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this bean is a primary autowire candidate.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isPrimary()"><B>isPrimary()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this bean is a primary autowire candidate.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#isPrimary(java.lang.String, java.lang.Object)"><B>isPrimary(String, Object)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>Return whether the bean definition for the given bean name has been
 marked as a primary bean.
<DT><A HREF="../org/springframework/core/convert/TypeDescriptor.html#isPrimitive()"><B>isPrimitive()</B></A> - 
Method in class org.springframework.core.convert.<A HREF="../org/springframework/core/convert/TypeDescriptor.html" title="class in org.springframework.core.convert">TypeDescriptor</A>
<DD>Is this type a primitive type?
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPrimitiveArray(java.lang.Class)"><B>isPrimitiveArray(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check if the given class represents an array of primitives,
 i.e.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPrimitiveOrWrapper(java.lang.Class)"><B>isPrimitiveOrWrapper(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check if the given class represents a primitive (i.e.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#isPrimitivesDefaultedForNullValue()"><B>isPrimitivesDefaultedForNullValue()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Return whether we're defaulting Java primitives in the case of mapping a null value
 from corresponding database fields.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPrimitiveWrapper(java.lang.Class)"><B>isPrimitiveWrapper(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check if the given class represents a primitive wrapper,
 i.e.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isPrimitiveWrapperArray(java.lang.Class)"><B>isPrimitiveWrapperArray(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check if the given class represents an array of primitive wrappers,
 i.e.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#isProcedureColumnMetaDataUsed()"><B>isProcedureColumnMetaDataUsed()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Are we using the meta data for the procedure columns?
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isProcedureColumnMetaDataUsed()"><B>isProcedureColumnMetaDataUsed()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanFactory.html#isPrototype(java.lang.String)"><B>isPrototype(String)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>
<DD>Is this bean a prototype? That is, will <A HREF="../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String)"><CODE>BeanFactory.getBean(java.lang.String)</CODE></A> always return
 independent instances?
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isPrototype()"><B>isPrototype()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this a <b>Prototype</b>, with an independent instance
 returned for each call.
<DT><A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html#isPrototype()"><B>isPrototype()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html" title="class in org.springframework.beans.factory.config">BeanReferenceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/SmartFactoryBean.html#isPrototype()"><B>isPrototype()</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/SmartFactoryBean.html" title="interface in org.springframework.beans.factory">SmartFactoryBean</A>
<DD>Is the object managed by this factory a prototype? That is,
 will <A HREF="../org/springframework/beans/factory/FactoryBean.html#getObject()"><CODE>FactoryBean.getObject()</CODE></A> always return an independent instance?
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isPrototype()"><B>isPrototype()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this a <b>Prototype</b>, with an independent instance
 returned for each call.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isPrototype(java.lang.String)"><B>isPrototype(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html#isPrototype(java.lang.String)"><B>isPrototype(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#isPrototype(java.lang.String)"><B>isPrototype(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html#isPrototype(java.lang.String)"><B>isPrototype(String)</B></A> - 
Method in class org.springframework.jndi.support.<A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html" title="class in org.springframework.jndi.support">SimpleJndiBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html#isPrototypeBased()"><B>isPrototypeBased()</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">AbstractBeanFactoryBasedTargetSourceCreator</A>
<DD>Return whether this TargetSourceCreator is prototype-based.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html#isPrototypeBased()"><B>isPrototypeBased()</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">LazyInitTargetSourceCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isPrototypeCurrentlyInCreation(java.lang.String)"><B>isPrototypeCurrentlyInCreation(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Return whether the specified prototype bean is currently in creation
 (within the current thread).
<DT><A HREF="../org/springframework/aop/framework/Advised.html#isProxyTargetClass()"><B>isProxyTargetClass()</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Are we proxying the full target class instead of specified interfaces?
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#isProxyTargetClass()"><B>isProxyTargetClass()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Return whether to proxy the target class directly as well as any interfaces.
<DT><A HREF="../org/springframework/mock/web/portlet/MockCacheControl.html#isPublicScope()"><B>isPublicScope()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockCacheControl.html" title="class in org.springframework.mock.web.portlet">MockCacheControl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#isPublicStaticFinal(java.lang.reflect.Field)"><B>isPublicStaticFinal(Field)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Determine whether the given field is a "public static final" constant.
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html#isPubSubDomain()"><B>isPubSubDomain()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html" title="class in org.springframework.jms.connection">JmsTransactionManager102</A>
<DD><B>Deprecated.</B>&nbsp;Return whether the Publish/Subscribe domain (Topics) is used.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory102.html#isPubSubDomain()"><B>isPubSubDomain()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory102.html" title="class in org.springframework.jms.connection">SingleConnectionFactory102</A>
<DD><B>Deprecated.</B>&nbsp;Return whether the Publish/Subscribe domain (Topics) is used.
<DT><A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html#isPubSubDomain()"><B>isPubSubDomain()</B></A> - 
Method in class org.springframework.jms.listener.endpoint.<A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html" title="class in org.springframework.jms.listener.endpoint">JmsActivationSpecConfig</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/support/destination/JmsDestinationAccessor.html#isPubSubDomain()"><B>isPubSubDomain()</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/JmsDestinationAccessor.html" title="class in org.springframework.jms.support.destination">JmsDestinationAccessor</A>
<DD>Return whether the Publish/Subscribe domain (<A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Topic.html?is-external=true" title="class or interface in javax.jms"><CODE>Topics</CODE></A>) is used.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#isPubSubNoLocal()"><B>isPubSubNoLocal()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Return whether to inhibit the delivery of messages published by its own connection.
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#isPubSubNoLocal()"><B>isPubSubNoLocal()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>Return whether to inhibit the delivery of messages published by its own connection.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html#isPubSubNoLocal()"><B>isPubSubNoLocal()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer</A>
<DD>Return whether to inhibit the delivery of messages published by its own connection.
<DT><A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html#isQualifier(java.lang.Class)"><B>isQualifier(Class&lt;? extends Annotation&gt;)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html" title="class in org.springframework.beans.factory.annotation">QualifierAnnotationAutowireCandidateResolver</A>
<DD>Checks whether the given annotation type is a recognized qualifier type.
<DT><A HREF="../org/springframework/core/io/AbstractFileResolvingResource.html#isReadable()"><B>isReadable()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractFileResolvingResource.html" title="class in org.springframework.core.io">AbstractFileResolvingResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/AbstractResource.html#isReadable()"><B>isReadable()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractResource.html" title="class in org.springframework.core.io">AbstractResource</A>
<DD>This implementation always returns <code>true</code>.
<DT><A HREF="../org/springframework/core/io/DescriptiveResource.html#isReadable()"><B>isReadable()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/DescriptiveResource.html" title="class in org.springframework.core.io">DescriptiveResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/FileSystemResource.html#isReadable()"><B>isReadable()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/FileSystemResource.html" title="class in org.springframework.core.io">FileSystemResource</A>
<DD>This implementation checks whether the underlying file is marked as readable
 (and corresponds to an actual file with content, not to a directory).
<DT><A HREF="../org/springframework/core/io/Resource.html#isReadable()"><B>isReadable()</B></A> - 
Method in interface org.springframework.core.io.<A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io">Resource</A>
<DD>Return whether the contents of this resource can be read,
 e.g.
<DT><A HREF="../org/springframework/core/io/VfsResource.html#isReadable()"><B>isReadable()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/VfsResource.html" title="class in org.springframework.core.io">VfsResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#isReadableProperty(java.lang.String)"><B>isReadableProperty(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/DirectFieldAccessor.html#isReadableProperty(java.lang.String)"><B>isReadableProperty(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/DirectFieldAccessor.html" title="class in org.springframework.beans">DirectFieldAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyAccessor.html#isReadableProperty(java.lang.String)"><B>isReadableProperty(String)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A>
<DD>Determine whether the specified property is readable.
<DT><A HREF="../org/springframework/beans/factory/access/el/SpringBeanELResolver.html#isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object)"><B>isReadOnly(ELContext, Object, Object)</B></A> - 
Method in class org.springframework.beans.factory.access.el.<A HREF="../org/springframework/beans/factory/access/el/SpringBeanELResolver.html" title="class in org.springframework.beans.factory.access.el">SpringBeanELResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletPreferences.html#isReadOnly(java.lang.String)"><B>isReadOnly(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletPreferences.html" title="class in org.springframework.mock.web.portlet">MockPortletPreferences</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionDefinition.html#isReadOnly()"><B>isReadOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionDefinition.html" title="class in org.springframework.transaction.support">DefaultTransactionDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isReadOnly()"><B>isReadOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>Return if this transaction is defined as read-only transaction.
<DT><A HREF="../org/springframework/transaction/support/DelegatingTransactionDefinition.html#isReadOnly()"><B>isReadOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DelegatingTransactionDefinition.html" title="class in org.springframework.transaction.support">DelegatingTransactionDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/TransactionDefinition.html#isReadOnly()"><B>isReadOnly()</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction">TransactionDefinition</A>
<DD>Return whether to optimize as a read-only transaction.
<DT><A HREF="../org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html#isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object)"><B>isReadOnly(ELContext, Object, Object)</B></A> - 
Method in class org.springframework.web.jsf.el.<A HREF="../org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.html" title="class in org.springframework.web.jsf.el">WebApplicationContextFacesELResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html#isReadonly()"><B>isReadonly()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlInputElementTag</A>
<DD>Is the current HTML tag readonly?
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#isReconnectOnException()"><B>isReconnectOnException()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>Return whether the single Connection should be renewed when
 a JMSException is reported by the underlying Connection.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#isRedirectAction()"><B>isRedirectAction()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return if <CODE>ActionResponse.sendRedirect(java.lang.String)</CODE> is
 expected to be called in the action phase.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#isRedirectContextRelative()"><B>isRedirectContextRelative()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Return whether to interpret a given redirect URL that starts with a
 slash ("/") as relative to the current ServletContext, i.e.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#isRedirectHttp10Compatible()"><B>isRedirectHttp10Compatible()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Return whether redirects should stay compatible with HTTP 1.0 clients.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#isRefCursorSupported()"><B>isRefCursorSupported()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Does this database support returning resultsets as ref cursors to be retrieved with
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/CallableStatement.html?is-external=true#getObject(int)" title="class or interface in java.sql"><CODE>CallableStatement.getObject(int)</CODE></A> for the specified column.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isRefCursorSupported()"><B>isRefCursorSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html#isRefCursorSupported()"><B>isRefCursorSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">OracleCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html#isRefCursorSupported()"><B>isRefCursorSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">PostgresCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/ModelAndView.html#isReference()"><B>isReference()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A>
<DD>Return whether we use a view reference, i.e.
<DT><A HREF="../org/springframework/web/servlet/ModelAndView.html#isReference()"><B>isReference()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A>
<DD>Return whether we use a view reference, i.e.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#isRegisteredWithDestination()"><B>isRegisteredWithDestination()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Return whether at lease one consumer has entered a fixed registration with the
 target destination.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractController.html#isRenderWhenMinimized()"><B>isRenderWhenMinimized()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractController.html" title="class in org.springframework.web.portlet.mvc">AbstractController</A>
<DD>Return whether controller will render when portlet is minimized.
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#isRequestActive()"><B>isRequestActive()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Determine whether the original request is still active.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isRequestedSessionIdFromCookie()"><B>isRequestedSessionIdFromCookie()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isRequestedSessionIdFromURL()"><B>isRequestedSessionIdFromURL()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isRequestedSessionIdFromUrl()"><B>isRequestedSessionIdFromUrl()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isRequestedSessionIdValid()"><B>isRequestedSessionIdValid()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isRequestedSessionIdValid()"><B>isRequestedSessionIdValid()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html#isRequired()"><B>isRequired()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/DependencyDescriptor.html" title="class in org.springframework.beans.factory.config">DependencyDescriptor</A>
<DD>Return whether this dependency is required.
<DT><A HREF="../org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html#isRequiredProperty(java.beans.PropertyDescriptor)"><B>isRequiredProperty(PropertyDescriptor)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation">RequiredAnnotationBeanPostProcessor</A>
<DD>Is the supplied property required to have a value (that is, to be dependency-injected)?
<DT><A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html#isRequireSession()"><B>isRequireSession()</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html" title="class in org.springframework.web.portlet.handler">PortletContentGenerator</A>
<DD>Return whether a session is required to handle requests.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#isRequireSession()"><B>isRequireSession()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Return whether a session is required to handle requests.
<DT><A HREF="../org/springframework/jndi/JndiLocatorSupport.html#isResourceRef()"><B>isResourceRef()</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">JndiLocatorSupport</A>
<DD>Return whether the lookup occurs in a J2EE container.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#isResultSetSupported()"><B>isResultSetSupported()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Does this parameter support a ResultSet, i.e.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#isResultsMapCaseInsensitive()"><B>isResultsMapCaseInsensitive()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Return whether execution of a CallableStatement will return the results in a Map
 that uses case insensitive names for the parameters.
<DT><A HREF="../org/springframework/jdbc/core/SqlParameter.html#isResultsParameter()"><B>isResultsParameter()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlParameter.html" title="class in org.springframework.jdbc.core">SqlParameter</A>
<DD>Return whether this parameter is an implicit return parameter used during the
 results preocessing of the CallableStatement.getMoreResults/getUpdateCount.
<DT><A HREF="../org/springframework/jdbc/core/SqlReturnResultSet.html#isResultsParameter()"><B>isResultsParameter()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlReturnResultSet.html" title="class in org.springframework.jdbc.core">SqlReturnResultSet</A>
<DD>Return whether this parameter is an implicit return parameter used during the
 results preocessing of the CallableStatement.getMoreResults/getUpdateCount.
<DT><A HREF="../org/springframework/jdbc/core/SqlReturnUpdateCount.html#isResultsParameter()"><B>isResultsParameter()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlReturnUpdateCount.html" title="class in org.springframework.jdbc.core">SqlReturnUpdateCount</A>
<DD>Return whether this parameter is an implicit return parameter used during the
 results preocessing of the CallableStatement.getMoreResults/getUpdateCount.
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#isReturnGeneratedKeys()"><B>isReturnGeneratedKeys()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Return whether statements should be capable of returning
 auto-generated keys.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#isReturnResultSetSupported()"><B>isReturnResultSetSupported()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Does this database support returning resultsets that should be retrieved with the JDBC call
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/Statement.html?is-external=true#getResultSet()" title="class or interface in java.sql"><CODE>Statement.getResultSet()</CODE></A>
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isReturnResultSetSupported()"><B>isReturnResultSetSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html#isReturnResultSetSupported()"><B>isReturnResultSetSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">OracleCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html#isReturnResultSetSupported()"><B>isReturnResultSetSupported()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">PostgresCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/SqlOutParameter.html#isReturnTypeSupported()"><B>isReturnTypeSupported()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlOutParameter.html" title="class in org.springframework.jdbc.core">SqlOutParameter</A>
<DD>Return whether this parameter holds a custom return type.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#isReturnValueRequired()"><B>isReturnValueRequired()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Check whether a return value is required.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#isReturnValueRequired()"><B>isReturnValueRequired()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Does the call require a return value?
<DT><A HREF="../org/springframework/test/AbstractTransactionalSpringContextTests.html#isRollback()"><B>isRollback()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractTransactionalSpringContextTests.html" title="class in org.springframework.test">AbstractTransactionalSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Determines whether or not to rollback transactions for the current test.
<DT><A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html#isRollback()"><B>isRollback()</B></A> - 
Method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html" title="class in org.springframework.test.annotation">AbstractAnnotationAwareTransactionalTests</A>
<DD><B>Deprecated.</B>&nbsp;Determine whether or not to rollback transactions for the current test
 by taking into consideration the
 <A HREF="../org/springframework/test/AbstractTransactionalSpringContextTests.html#isDefaultRollback()"><CODE>default rollback</CODE></A> flag and a possible
 method-level override via the <A HREF="../org/springframework/test/annotation/Rollback.html" title="annotation in org.springframework.test.annotation"><CODE>@Rollback</CODE></A> annotation.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#isRollback(org.springframework.test.context.TestContext)"><B>isRollback(TestContext)</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html" title="class in org.springframework.test.context.transaction">TransactionalTestExecutionListener</A>
<DD>Determine whether or not to rollback transactions for the supplied
 <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A> by taking into consideration the
 <A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#isDefaultRollback(org.springframework.test.context.TestContext)"><CODE>default rollback</CODE></A> flag and a
 possible method-level override via the <A HREF="../org/springframework/test/annotation/Rollback.html" title="annotation in org.springframework.test.annotation"><CODE>Rollback</CODE></A> annotation.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isRollbackOnCommitFailure()"><B>isRollbackOnCommitFailure()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether <code>doRollback</code> should be performed on failure of the
 <code>doCommit</code> call.
<DT><A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html#isRollbackOnly(java.lang.Object)"><B>isRollbackOnly(Object)</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html" title="class in org.springframework.jca.cci.connection">CciLocalTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionObject.html#isRollbackOnly()"><B>isRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionObject.html" title="class in org.springframework.transaction.jta">JtaTransactionObject</A>
<DD>This implementation checks the UserTransaction's rollback-only flag.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#isRollbackOnly()"><B>isRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Determine the rollback-only flag via checking both the local rollback-only flag
 of this TransactionStatus and the global rollback-only flag of the underlying
 transaction, if any.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#isRollbackOnly()"><B>isRollbackOnly()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Return whether the resource transaction is marked as rollback-only.
<DT><A HREF="../org/springframework/transaction/support/SmartTransactionObject.html#isRollbackOnly()"><B>isRollbackOnly()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/SmartTransactionObject.html" title="interface in org.springframework.transaction.support">SmartTransactionObject</A>
<DD>Return whether the transaction is internally marked as rollback-only.
<DT><A HREF="../org/springframework/transaction/TransactionStatus.html#isRollbackOnly()"><B>isRollbackOnly()</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionStatus.html" title="interface in org.springframework.transaction">TransactionStatus</A>
<DD>Return whether the transaction has been marked as rollback-only
 (either by the application or by the transaction infrastructure).
<DT><A HREF="../org/springframework/context/Lifecycle.html#isRunning()"><B>isRunning()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/Lifecycle.html" title="interface in org.springframework.context">Lifecycle</A>
<DD>Check whether this component is currently running.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/DefaultLifecycleProcessor.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/DefaultLifecycleProcessor.html" title="class in org.springframework.context.support">DefaultLifecycleProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointManager.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointManager.html" title="class in org.springframework.jca.endpoint">GenericMessageEndpointManager</A>
<DD>Return whether the configured message endpoint is currently active.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Determine whether this container is currently running,
 that is, whether it has been started and not stopped yet.
<DT><A HREF="../org/springframework/scheduling/commonj/TimerManagerAccessor.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/TimerManagerAccessor.html" title="class in org.springframework.scheduling.commonj">TimerManagerAccessor</A>
<DD>Considers the underlying TimerManager as running if it is
 neither suspending nor stopping.
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html" title="class in org.springframework.scheduling.quartz">SchedulerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StopWatch.html#isRunning()"><B>isRunning()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/StopWatch.html" title="class in org.springframework.util">StopWatch</A>
<DD>Return whether the stop watch is currently running.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJExpressionPointcut.html#isRuntime()"><B>isRuntime()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJExpressionPointcut.html" title="class in org.springframework.aop.aspectj">AspectJExpressionPointcut</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/MethodMatcher.html#isRuntime()"><B>isRuntime()</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/MethodMatcher.html" title="interface in org.springframework.aop">MethodMatcher</A>
<DD>Is this MethodMatcher dynamic, that is, must a final call be made on the
 <A HREF="../org/springframework/aop/MethodMatcher.html#matches(java.lang.reflect.Method, java.lang.Class, java.lang.Object[])"><CODE>MethodMatcher.matches(java.lang.reflect.Method, Class, Object[])</CODE></A> method at
 runtime even if the 2-arg matches method returns <code>true</code>?
<DT><A HREF="../org/springframework/aop/support/ControlFlowPointcut.html#isRuntime()"><B>isRuntime()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ControlFlowPointcut.html" title="class in org.springframework.aop.support">ControlFlowPointcut</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/DynamicMethodMatcher.html#isRuntime()"><B>isRuntime()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/DynamicMethodMatcher.html" title="class in org.springframework.aop.support">DynamicMethodMatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/StaticMethodMatcher.html#isRuntime()"><B>isRuntime()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/StaticMethodMatcher.html" title="class in org.springframework.aop.support">StaticMethodMatcher</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html#isSameConnectionForEntireSession(org.hibernate.Session)"><B>isSameConnectionForEntireSession(Session)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html" title="class in org.springframework.orm.hibernate3">HibernateTransactionManager</A>
<DD>Return whether the given Hibernate Session will always hold the same
 JDBC Connection.
<DT><A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html#isSavepointAllowed()"><B>isSavepointAllowed()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html" title="class in org.springframework.jdbc.datasource">JdbcTransactionObjectSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockBaseURL.html" title="class in org.springframework.mock.web.portlet">MockBaseURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/FacesWebRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesWebRequest.html" title="class in org.springframework.web.context.request">FacesWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/ServletWebRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletWebRequest.html" title="class in org.springframework.web.context.request">ServletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/WebRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/WebRequest.html" title="interface in org.springframework.web.context.request">WebRequest</A>
<DD>Return whether this request has been sent over a secure transport
 mechanism (such as SSL).
<DT><A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html#isSecure()"><B>isSecure()</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html" title="class in org.springframework.web.portlet.context">PortletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html#isSessionAttribute(java.lang.String, java.lang.Class)"><B>isSessionAttribute(String, Class)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodResolver.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#isSessionForm()"><B>isSessionForm()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return if session form mode is activated.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html#isSessionForm()"><B>isSessionForm()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return <code>true</code> if session form mode is activated.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#isSessionLocallyTransacted(javax.jms.Session)"><B>isSessionLocallyTransacted(Session)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Check whether the given Session is locally transacted, that is, whether
 its transaction is managed by this listener container's Session handling
 and not by an external transaction coordinator.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isSessionLocallyTransacted(javax.jms.Session)"><B>isSessionLocallyTransacted(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Check whether the given Session is locally transacted, that is, whether
 its transaction is managed by this listener container's Session handling
 and not by an external transaction coordinator.
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#isSessionLocallyTransacted(javax.jms.Session)"><B>isSessionLocallyTransacted(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>This implementation checks whether the Session is externally synchronized.
<DT><A HREF="../org/springframework/jms/support/JmsAccessor.html#isSessionTransacted()"><B>isSessionTransacted()</B></A> - 
Method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A>
<DD>Return whether the JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms"><CODE>sessions</CODE></A> used by this
 accessor are supposed to be transacted.
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html#isSessionTransactional(javax.jms.Session, javax.jms.ConnectionFactory)"><B>isSessionTransactional(Session, ConnectionFactory)</B></A> - 
Static method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jms.connection">ConnectionFactoryUtils</A>
<DD>Determine whether the given JMS Session is transactional, that is,
 bound to the current thread by Spring's transaction facilities.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#isSessionTransactional(org.hibernate.Session, org.hibernate.SessionFactory)"><B>isSessionTransactional(Session, SessionFactory)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Return whether the given Hibernate Session is transactional, that is,
 bound to the current thread by Spring's transaction facilities.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#isSharedEditor(java.beans.PropertyEditor)"><B>isSharedEditor(PropertyEditor)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>Check whether the given editor instance is a shared editor, that is,
 whether the given editor instance might be used concurrently.
<DT><A HREF="../org/springframework/web/servlet/tags/form/PasswordInputTag.html#isShowPassword()"><B>isShowPassword()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/PasswordInputTag.html" title="class in org.springframework.web.servlet.tags.form">PasswordInputTag</A>
<DD>Is the password value to be rendered?
<DT><A HREF="../org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html#isShowSql()"><B>isShowSql()</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/AbstractJpaVendorAdapter.html" title="class in org.springframework.orm.jpa.vendor">AbstractJpaVendorAdapter</A>
<DD>Return whether to show SQL in the log (or in the console).
<DT><A HREF="../org/springframework/core/task/support/ExecutorServiceAdapter.html#isShutdown()"><B>isShutdown()</B></A> - 
Method in class org.springframework.core.task.support.<A HREF="../org/springframework/core/task/support/ExecutorServiceAdapter.html" title="class in org.springframework.core.task.support">ExecutorServiceAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html#isSigned(int)"><B>isSigned(int)</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSetMetaData</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html#isSigned(int)"><B>isSigned(int)</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSetMetaData.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSetMetaData</A>
<DD>Indicates whether the designated column contains a signed number.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#isSimpleProperty(java.lang.Class)"><B>isSimpleProperty(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Check if the given type represents a "simple" property:
 a primitive, a String or other CharSequence, a Number, a Date,
 a URI, a URL, a Locale, a Class, or a corresponding array.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#isSimpleValueType(java.lang.Class)"><B>isSimpleValueType(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Check if the given type represents a "simple" value type:
 a primitive, a String or other CharSequence, a Number, a Date,
 a URI, a URL, a Locale or a Class.
<DT><A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html#isSingleSession()"><B>isSingleSession()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html" title="class in org.springframework.orm.hibernate3.support">OpenSessionInViewFilter</A>
<DD>Return whether to use a single session for each request.
<DT><A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html#isSingleSession()"><B>isSingleSession()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor.html" title="class in org.springframework.orm.hibernate3.support">OpenSessionInViewInterceptor</A>
<DD>Return whether to use a single session for each request.
<DT><A HREF="../org/springframework/aop/config/MethodLocatingFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/MethodLocatingFactoryBean.html" title="class in org.springframework.aop.config">MethodLocatingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html" title="class in org.springframework.aop.framework">AbstractSingletonProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/ProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyFactoryBean.html" title="class in org.springframework.aop.framework">ProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/scope/ScopedProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.aop.scope.<A HREF="../org/springframework/aop/scope/ScopedProxyFactoryBean.html" title="class in org.springframework.aop.scope">ScopedProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanFactory.html#isSingleton(java.lang.String)"><B>isSingleton(String)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>
<DD>Is this bean a shared singleton? That is, will <A HREF="../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String)"><CODE>BeanFactory.getBean(java.lang.String)</CODE></A> always
 return the same instance?
<DT><A HREF="../org/springframework/beans/factory/config/AbstractFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AbstractFactoryBean.html" title="class in org.springframework.beans.factory.config">AbstractFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Return whether this a <b>Singleton</b>, with a single, shared instance
 returned on all calls.
<DT><A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html" title="class in org.springframework.beans.factory.config">BeanReferenceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/CommonsLogFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/CommonsLogFactoryBean.html" title="class in org.springframework.beans.factory.config">CommonsLogFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/FieldRetrievingFactoryBean.html" title="class in org.springframework.beans.factory.config">FieldRetrievingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/MethodInvokingFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/MethodInvokingFactoryBean.html" title="class in org.springframework.beans.factory.config">MethodInvokingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html" title="class in org.springframework.beans.factory.config">PropertiesFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/PropertyPathFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyPathFactoryBean.html" title="class in org.springframework.beans.factory.config">PropertyPathFactoryBean</A>
<DD>While this FactoryBean will often be used for singleton targets,
 the invoked getters for the property path might return a new object
 for each call, so we have to assume that we're not returning the
 same object for each <A HREF="../org/springframework/beans/factory/config/PropertyPathFactoryBean.html#getObject()"><CODE>PropertyPathFactoryBean.getObject()</CODE></A> call.
<DT><A HREF="../org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html" title="class in org.springframework.beans.factory.config">ServiceLocatorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/FactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory">FactoryBean</A>
<DD>Is the object managed by this factory a singleton? That is,
 will <A HREF="../org/springframework/beans/factory/FactoryBean.html#getObject()"><CODE>FactoryBean.getObject()</CODE></A> always return the same object
 (a reference that can be cached)?
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this a <b>Singleton</b>, with a single shared instance
 returned from all calls.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isSingleton(java.lang.String)"><B>isSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html#isSingleton(java.lang.String)"><B>isSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/cache/ehcache/EhCacheFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.cache.ehcache.<A HREF="../org/springframework/cache/ehcache/EhCacheFactoryBean.html" title="class in org.springframework.cache.ehcache">EhCacheFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.cache.ehcache.<A HREF="../org/springframework/cache/ehcache/EhCacheManagerFactoryBean.html" title="class in org.springframework.cache.ehcache">EhCacheManagerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#isSingleton(java.lang.String)"><B>isSingleton(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html" title="class in org.springframework.context.support">ConversionServiceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/LocalStatelessSessionProxyFactoryBean.html" title="class in org.springframework.ejb.access">LocalStatelessSessionProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/SimpleRemoteStatelessSessionProxyFactoryBean.html" title="class in org.springframework.ejb.access">SimpleRemoteStatelessSessionProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/format/support/FormattingConversionServiceFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.format.support.<A HREF="../org/springframework/format/support/FormattingConversionServiceFactoryBean.html" title="class in org.springframework.format.support">FormattingConversionServiceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/client/support/ProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.http.client.support.<A HREF="../org/springframework/http/client/support/ProxyFactoryBean.html" title="class in org.springframework.http.client.support">ProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/support/LocalConnectionFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jca.support.<A HREF="../org/springframework/jca/support/LocalConnectionFactoryBean.html" title="class in org.springframework.jca.support">LocalConnectionFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/support/ResourceAdapterFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jca.support.<A HREF="../org/springframework/jca/support/ResourceAdapterFactoryBean.html" title="class in org.springframework.jca.support">ResourceAdapterFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jdbc.datasource.embedded.<A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactoryBean.html" title="class in org.springframework.jdbc.datasource.embedded">EmbeddedDatabaseFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerProxyFactoryBean.html" title="class in org.springframework.jms.remoting">JmsInvokerProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/access/MBeanProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/MBeanProxyFactoryBean.html" title="class in org.springframework.jmx.access">MBeanProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/ConnectorServerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/ConnectorServerFactoryBean.html" title="class in org.springframework.jmx.support">ConnectorServerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanServerConnectionFactoryBean.html" title="class in org.springframework.jmx.support">MBeanServerConnectionFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/MBeanServerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanServerFactoryBean.html" title="class in org.springframework.jmx.support">MBeanServerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/WebSphereMBeanServerFactoryBean.html" title="class in org.springframework.jmx.support">WebSphereMBeanServerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/JndiObjectFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiObjectFactoryBean.html" title="class in org.springframework.jndi">JndiObjectFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html#isSingleton(java.lang.String)"><B>isSingleton(String)</B></A> - 
Method in class org.springframework.jndi.support.<A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html" title="class in org.springframework.jndi.support">SimpleJndiBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/FilterDefinitionFactoryBean.html" title="class in org.springframework.orm.hibernate3">FilterDefinitionFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientFactoryBean.html" title="class in org.springframework.orm.ibatis">SqlMapClientFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean.html" title="class in org.springframework.orm.jdo">LocalPersistenceManagerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean.html" title="class in org.springframework.orm.jdo.support">SpringPersistenceManagerProxyBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/StandardPersistenceManagerProxyBean.html" title="class in org.springframework.orm.jdo.support">StandardPersistenceManagerProxyBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy.html" title="class in org.springframework.orm.jdo">TransactionAwarePersistenceManagerFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html" title="class in org.springframework.orm.jpa">AbstractEntityManagerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/support/SharedEntityManagerBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.orm.jpa.support.<A HREF="../org/springframework/orm/jpa/support/SharedEntityManagerBean.html" title="class in org.springframework.orm.jpa.support">SharedEntityManagerBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlOptionsFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlOptionsFactoryBean.html" title="class in org.springframework.oxm.xmlbeans">XmlOptionsFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapProxyFactoryBean.html" title="class in org.springframework.remoting.caucho">BurlapProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/HessianProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianProxyFactoryBean.html" title="class in org.springframework.remoting.caucho">HessianProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerProxyFactoryBean.html" title="class in org.springframework.remoting.httpinvoker">HttpInvokerProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortProxyFactoryBean.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortProxyFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactoryBean.html" title="class in org.springframework.remoting.jaxrpc">LocalJaxRpcServiceFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/JaxWsPortProxyFactoryBean.html" title="class in org.springframework.remoting.jaxws">JaxWsPortProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/LocalJaxWsServiceFactoryBean.html" title="class in org.springframework.remoting.jaxws">LocalJaxWsServiceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi">JndiRmiProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiProxyFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi">RmiProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi">RmiRegistryFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/SimpleHttpServerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/SimpleHttpServerFactoryBean.html" title="class in org.springframework.remoting.support">SimpleHttpServerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/commonj/TimerManagerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/TimerManagerFactoryBean.html" title="class in org.springframework.scheduling.commonj">TimerManagerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolExecutorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/config/TaskExecutorFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.config.<A HREF="../org/springframework/scheduling/config/TaskExecutorFactoryBean.html" title="class in org.springframework.scheduling.config">TaskExecutorFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html" title="class in org.springframework.scheduling.quartz">MethodInvokingJobDetailFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html" title="class in org.springframework.scheduling.quartz">SchedulerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/timer/MethodInvokingTimerTaskFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/MethodInvokingTimerTaskFactoryBean.html" title="class in org.springframework.scheduling.timer">MethodInvokingTimerTaskFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html" title="class in org.springframework.scheduling.timer">TimerFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.ui.freemarker.<A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactoryBean.html" title="class in org.springframework.ui.freemarker">FreeMarkerConfigurationFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/velocity/VelocityEngineFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/VelocityEngineFactoryBean.html" title="class in org.springframework.ui.velocity">VelocityEngineFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextAttributeFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextAttributeFactoryBean.html" title="class in org.springframework.web.context.support">ServletContextAttributeFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextFactoryBean.html" title="class in org.springframework.web.context.support">ServletContextFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextParameterFactoryBean.html#isSingleton()"><B>isSingleton()</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextParameterFactoryBean.html" title="class in org.springframework.web.context.support">ServletContextParameterFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#isSingletonCurrentlyInCreation(java.lang.String)"><B>isSingletonCurrentlyInCreation(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Return whether the specified singleton bean is currently in creation
 (within the entire factory).
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#isSkipResultsProcessing()"><B>isSkipResultsProcessing()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Return whether results processing should be skipped.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#isSkipUndeclaredResults()"><B>isSkipUndeclaredResults()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Return whether undeclared results should be skipped.
<DT><A HREF="../org/springframework/ui/velocity/SpringResourceLoader.html#isSourceModified(org.apache.velocity.runtime.resource.Resource)"><B>isSourceModified(Resource)</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/SpringResourceLoader.html" title="class in org.springframework.ui.velocity">SpringResourceLoader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/SqlCall.html#isSqlReadyForUse()"><B>isSqlReadyForUse()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlCall.html" title="class in org.springframework.jdbc.object">SqlCall</A>
<DD>Return whether the SQL can be used as is.
<DT><A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html" title="class in org.springframework.aop.target">AbstractBeanFactoryBasedTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html" title="class in org.springframework.aop.target">AbstractLazyCreationTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic">AbstractRefreshableTargetSource</A>
<DD>Not static.
<DT><A HREF="../org/springframework/aop/target/EmptyTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/EmptyTargetSource.html" title="class in org.springframework.aop.target">EmptyTargetSource</A>
<DD>Always returns <code>true</code>.
<DT><A HREF="../org/springframework/aop/target/HotSwappableTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/HotSwappableTargetSource.html" title="class in org.springframework.aop.target">HotSwappableTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/SingletonTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/SingletonTargetSource.html" title="class in org.springframework.aop.target">SingletonTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/TargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/TargetSource.html" title="interface in org.springframework.aop">TargetSource</A>
<DD>Will all calls to <A HREF="../org/springframework/aop/TargetSource.html#getTarget()"><CODE>TargetSource.getTarget()</CODE></A> return the same object?
<DT><A HREF="../org/springframework/core/type/MethodMetadata.html#isStatic()"><B>isStatic()</B></A> - 
Method in interface org.springframework.core.type.<A HREF="../org/springframework/core/type/MethodMetadata.html" title="interface in org.springframework.core.type">MethodMetadata</A>
<DD>Return whether the underlying method is declared as 'static'.
<DT><A HREF="../org/springframework/core/type/StandardMethodMetadata.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.core.type.<A HREF="../org/springframework/core/type/StandardMethodMetadata.html" title="class in org.springframework.core.type">StandardMethodMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/JndiObjectTargetSource.html#isStatic()"><B>isStatic()</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiObjectTargetSource.html" title="class in org.springframework.jndi">JndiObjectTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#isStaxResult(javax.xml.transform.Result)"><B>isStaxResult(Result)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Indicate whether the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> is a StAX Result.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#isStaxSource(javax.xml.transform.Source)"><B>isStaxSource(Source)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Indicate whether the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> is a StAX Source.
<DT><A HREF="../org/springframework/context/annotation/AnnotationBeanNameGenerator.html#isStereotypeWithNameValue(java.lang.String, java.util.Set, java.util.Map)"><B>isStereotypeWithNameValue(String, Set&lt;String&gt;, Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationBeanNameGenerator.html" title="class in org.springframework.context.annotation">AnnotationBeanNameGenerator</A>
<DD>Check whether the given annotation is a stereotype that is allowed
 to suggest a component name through its annotation <code>value()</code>.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isStoresLowerCaseIdentifiers()"><B>isStoresLowerCaseIdentifiers()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>Does the database use lower case for identifiers
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isStoresLowerCaseIdentifiers()"><B>isStoresLowerCaseIdentifiers()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>Get whether identifiers use lower case
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isStoresUpperCaseIdentifiers()"><B>isStoresUpperCaseIdentifiers()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>Does the database use upper case for identifiers
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isStoresUpperCaseIdentifiers()"><B>isStoresUpperCaseIdentifiers()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>Get whether identifiers use upper case
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#isSubscriptionDurable()"><B>isSubscriptionDurable()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Return whether to make the subscription durable.
<DT><A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html#isSubscriptionDurable()"><B>isSubscriptionDurable()</B></A> - 
Method in class org.springframework.jms.listener.endpoint.<A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html" title="class in org.springframework.jms.listener.endpoint">JmsActivationSpecConfig</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#isSupportsCatalogsInProcedureCalls()"><B>isSupportsCatalogsInProcedureCalls()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Does the database support the use of catalog name in procedure calls
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isSupportsCatalogsInProcedureCalls()"><B>isSupportsCatalogsInProcedureCalls()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>Does the database support the use of catalog name in procedure calls
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#isSupportsSchemasInProcedureCalls()"><B>isSupportsSchemasInProcedureCalls()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Does the database support the use of schema name in procedure calls
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#isSupportsSchemasInProcedureCalls()"><B>isSupportsSchemasInProcedureCalls()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>Does the database support the use of schema name in procedure calls
<DT><A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html#isSuppressClose()"><B>isSuppressClose()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html" title="class in org.springframework.jdbc.datasource">SingleConnectionDataSource</A>
<DD>Return whether the returned Connection will be a close-suppressing proxy
 or the physical Connection.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#isSuppressNamespaces()"><B>isSuppressNamespaces()</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Returns whether this marshaller should output namespaces.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#isSuppressXsiType()"><B>isSuppressXsiType()</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Sets whether this marshaller should output the xsi:type attribute.
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html#isSynchedLocalTransactionAllowed()"><B>isSynchedLocalTransactionAllowed()</B></A> - 
Method in interface org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html" title="interface in org.springframework.jms.connection">ConnectionFactoryUtils.ResourceFactory</A>
<DD>Return whether to allow for a local JMS transaction that is synchronized with
 a Spring-managed transaction (where the main transaction might be a JDBC-based
 one for a specific DataSource, for example), with the JMS transaction
 committing right after the main transaction.
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#isSynchedLocalTransactionAllowed()"><B>isSynchedLocalTransactionAllowed()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>Return whether to allow for a local JMS transaction that is synchronized
 with a Spring-managed transaction.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#isSynchronizationActive()"><B>isSynchronizationActive()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Return if transaction synchronization is active for the current thread.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#isSynchronizedWithTransaction()"><B>isSynchronizedWithTransaction()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Return whether the resource is synchronized with a transaction.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractController.html#isSynchronizeOnSession()"><B>isSynchronizeOnSession()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractController.html" title="class in org.springframework.web.portlet.mvc">AbstractController</A>
<DD>Return whether controller execution should be synchronized on the session.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractController.html#isSynchronizeOnSession()"><B>isSynchronizeOnSession()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractController.html" title="class in org.springframework.web.servlet.mvc">AbstractController</A>
<DD>Return whether controller execution should be synchronized on the session.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#isSynthetic()"><B>isSynthetic()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Return whether this bean definition is 'synthetic', that is,
 not defined by the application itself.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#isTableColumnMetaDataUsed()"><B>isTableColumnMetaDataUsed()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#isTableColumnMetaDataUsed()"><B>isTableColumnMetaDataUsed()</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Are we using the meta data for the table columns?
<DT><A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html#isTargetFilterLifecycle()"><B>isTargetFilterLifecycle()</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/DelegatingFilterProxy.html" title="class in org.springframework.web.filter">DelegatingFilterProxy</A>
<DD>Return whether to invoke the <code>Filter.init</code> and
 <code>Filter.destroy</code> lifecycle methods on the target bean.
<DT><A HREF="../org/springframework/expression/common/TemplateParserContext.html#isTemplate()"><B>isTemplate()</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/TemplateParserContext.html" title="class in org.springframework.expression.common">TemplateParserContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/ParserContext.html#isTemplate()"><B>isTemplate()</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/ParserContext.html" title="interface in org.springframework.expression">ParserContext</A>
<DD>Whether or not the expression being parsed is a template.
<DT><A HREF="../org/springframework/core/task/support/ExecutorServiceAdapter.html#isTerminated()"><B>isTerminated()</B></A> - 
Method in class org.springframework.core.task.support.<A HREF="../org/springframework/core/task/support/ExecutorServiceAdapter.html" title="class in org.springframework.core.task.support">ExecutorServiceAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/annotation/ProfileValueUtils.html#isTestEnabledInThisEnvironment(java.lang.Class)"><B>isTestEnabledInThisEnvironment(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/ProfileValueUtils.html" title="class in org.springframework.test.annotation">ProfileValueUtils</A>
<DD>Determine if the supplied <code>testClass</code> is <em>enabled</em> in
 the current environment, as specified by the <A HREF="../org/springframework/test/annotation/IfProfileValue.html" title="annotation in org.springframework.test.annotation"><CODE>&#064;IfProfileValue</CODE></A> annotation at the class level.
<DT><A HREF="../org/springframework/test/annotation/ProfileValueUtils.html#isTestEnabledInThisEnvironment(java.lang.reflect.Method, java.lang.Class)"><B>isTestEnabledInThisEnvironment(Method, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/ProfileValueUtils.html" title="class in org.springframework.test.annotation">ProfileValueUtils</A>
<DD>Determine if the supplied <code>testMethod</code> is <em>enabled</em> in
 the current environment, as specified by the <A HREF="../org/springframework/test/annotation/IfProfileValue.html" title="annotation in org.springframework.test.annotation"><CODE>&#064;IfProfileValue</CODE></A> annotation, which may be declared on the test
 method itself or at the class level.
<DT><A HREF="../org/springframework/test/annotation/ProfileValueUtils.html#isTestEnabledInThisEnvironment(org.springframework.test.annotation.ProfileValueSource, java.lang.reflect.Method, java.lang.Class)"><B>isTestEnabledInThisEnvironment(ProfileValueSource, Method, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/ProfileValueUtils.html" title="class in org.springframework.test.annotation">ProfileValueUtils</A>
<DD>Determine if the supplied <code>testMethod</code> is <em>enabled</em> in
 the current environment, as specified by the <A HREF="../org/springframework/test/annotation/IfProfileValue.html" title="annotation in org.springframework.test.annotation"><CODE>&#064;IfProfileValue</CODE></A> annotation, which may be declared on the test
 method itself or at the class level.
<DT><A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#isTestMethodIgnored(org.junit.runners.model.FrameworkMethod)"><B>isTestMethodIgnored(FrameworkMethod)</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html" title="class in org.springframework.test.context.junit4">SpringJUnit4ClassRunner</A>
<DD>Returns <code>true</code> if <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/Ignore.html?is-external=true" title="class or interface in org.junit"><CODE>&#064;Ignore</CODE></A> is present for
 the supplied <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/model.FrameworkMethod.html?is-external=true" title="class or interface in org.junit.runners"><CODE>test method</CODE></A> or if the test method is
 disabled via <code>&#064;IfProfileValue</code>.
<DT><A HREF="../org/springframework/core/task/SimpleAsyncTaskExecutor.html#isThrottleActive()"><B>isThrottleActive()</B></A> - 
Method in class org.springframework.core.task.<A HREF="../org/springframework/core/task/SimpleAsyncTaskExecutor.html" title="class in org.springframework.core.task">SimpleAsyncTaskExecutor</A>
<DD>Return whether this throttle is currently active.
<DT><A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html#isThrottleActive()"><B>isThrottleActive()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html" title="class in org.springframework.util">ConcurrencyThrottleSupport</A>
<DD>Return whether this throttle is currently active.
<DT><A HREF="../org/springframework/beans/support/MutableSortDefinition.html#isToggleAscendingOnProperty()"><B>isToggleAscendingOnProperty()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/MutableSortDefinition.html" title="class in org.springframework.beans.support">MutableSortDefinition</A>
<DD>Return whether to toggle the ascending flag if the same property gets set again
 (that is, <A HREF="../org/springframework/beans/support/MutableSortDefinition.html#setProperty(java.lang.String)"><CODE>MutableSortDefinition.setProperty(java.lang.String)</CODE></A> gets called with already set property name again).
<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html#isToParent()"><B>isToParent()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html" title="class in org.springframework.beans.factory.config">RuntimeBeanReference</A>
<DD>Return whether this is an explicit reference to a bean
 in the parent factory.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#isToStringMethod(java.lang.reflect.Method)"><B>isToStringMethod(Method)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Determine whether the given method is a "toString" method.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#isToStringMethod(java.lang.reflect.Method)"><B>isToStringMethod(Method)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Determine whether the given method is a "toString" method.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#isTransactionActive()"><B>isTransactionActive()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Return whether this holder represents an active, JDBC-managed transaction.
<DT><A HREF="../org/springframework/orm/jdo/PersistenceManagerHolder.html#isTransactionActive()"><B>isTransactionActive()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/PersistenceManagerHolder.html" title="class in org.springframework.orm.jdo">PersistenceManagerHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/EntityManagerHolder.html#isTransactionActive()"><B>isTransactionActive()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/EntityManagerHolder.html" title="class in org.springframework.orm.jpa">EntityManagerHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html#isTransactionInProgress(org.hibernate.jdbc.JDBCContext, org.hibernate.transaction.TransactionFactory.Context, org.hibernate.Transaction)"><B>isTransactionInProgress(JDBCContext, TransactionFactory.Context, Transaction)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html" title="class in org.springframework.orm.hibernate3">SpringTransactionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html#isTransactionManagerRequired()"><B>isTransactionManagerRequired()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html" title="class in org.springframework.orm.hibernate3">SpringTransactionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html#isTransactionSavepointManager()"><B>isTransactionSavepointManager()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionStatus.html" title="class in org.springframework.transaction.support">DefaultTransactionStatus</A>
<DD>Return whether the underlying transaction implements the
 SavepointManager interface.
<DT><A HREF="../org/springframework/util/Assert.html#isTrue(boolean, java.lang.String)"><B>isTrue(boolean, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert a boolean expression, throwing <code>IllegalArgumentException</code>
 if the test result is <code>false</code>.
<DT><A HREF="../org/springframework/util/Assert.html#isTrue(boolean)"><B>isTrue(boolean)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/Assert.html" title="class in org.springframework.util">Assert</A>
<DD>Assert a boolean expression, throwing <code>IllegalArgumentException</code>
 if the test result is <code>false</code>.
<DT><A HREF="../org/springframework/beans/factory/BeanFactory.html#isTypeMatch(java.lang.String, java.lang.Class)"><B>isTypeMatch(String, Class)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>
<DD>Check whether the bean with the given name matches the specified type.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#isTypeMatch(java.lang.String, java.lang.Class)"><B>isTypeMatch(String, Class)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html#isTypeMatch(java.lang.String, java.lang.Class)"><B>isTypeMatch(String, Class)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#isTypeMatch(java.lang.String, java.lang.Class)"><B>isTypeMatch(String, Class)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html#isTypeMatch(java.lang.String, java.lang.Class)"><B>isTypeMatch(String, Class)</B></A> - 
Method in class org.springframework.jndi.support.<A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html" title="class in org.springframework.jndi.support">SimpleJndiBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#isUpdatableResults()"><B>isUpdatableResults()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Return whether statements will return updatable ResultSets.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html#isUploadTempDirSpecified()"><B>isUploadTempDirSpecified()</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html" title="class in org.springframework.web.multipart.commons">CommonsFileUploadSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/support/ResourcePatternUtils.html#isUrl(java.lang.String)"><B>isUrl(String)</B></A> - 
Static method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourcePatternUtils.html" title="class in org.springframework.core.io.support">ResourcePatternUtils</A>
<DD>Return whether the given resource location is a URL: either a
 special "classpath" or "classpath*" pseudo URL or a standard URL.
<DT><A HREF="../org/springframework/util/ResourceUtils.html#isUrl(java.lang.String)"><B>isUrl(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>Return whether the given resource location is a URL:
 either a special "classpath" pseudo URL or a standard URL.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractUrlBasedView.html#isUrlRequired()"><B>isUrlRequired()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractUrlBasedView.html" title="class in org.springframework.web.servlet.view">AbstractUrlBasedView</A>
<DD>Return whether the 'url' property is required.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#isUrlRequired()"><B>isUrlRequired()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>JasperReports views do not strictly required a 'url' value.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlHeader()"><B>isUseCacheControlHeader()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Return whether the HTTP 1.1 cache-control header is used.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#isUseCacheControlNoStore()"><B>isUseCacheControlNoStore()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Return whether the HTTP 1.1 cache-control header value "no-store" is used.
<DT><A HREF="../org/springframework/context/support/AbstractMessageSource.html#isUseCodeAsDefaultMessage()"><B>isUseCodeAsDefaultMessage()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractMessageSource.html" title="class in org.springframework.context.support">AbstractMessageSource</A>
<DD>Return whether to use the message code as default message instead of
 throwing a NoSuchMessageException.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#isUseExpiresHeader()"><B>isUseExpiresHeader()</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Return whether the HTTP 1.0 expires header is used.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html#isUsePrefix()"><B>isUsePrefix()</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/DefaultAdvisorAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">DefaultAdvisorAutoProxyCreator</A>
<DD>Return whether to exclude advisors with a certain prefix
 in the bean name.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/FacesWebRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesWebRequest.html" title="class in org.springframework.web.context.request">FacesWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/ServletWebRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletWebRequest.html" title="class in org.springframework.web.context.request">ServletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/WebRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/WebRequest.html" title="interface in org.springframework.web.context.request">WebRequest</A>
<DD>Determine whether the user is in the given role for this request.
<DT><A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html#isUserInRole(java.lang.String)"><B>isUserInRole(String)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html" title="class in org.springframework.web.portlet.context">PortletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html#isUseSoapAction()"><B>isUseSoapAction()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/JaxWsPortClientInterceptor.html" title="class in org.springframework.remoting.jaxws">JaxWsPortClientInterceptor</A>
<DD>Return the "soapaction.use" flag to specify on the stub.
<DT><A HREF="../org/springframework/jdbc/support/SQLErrorCodes.html#isUseSqlStateForTranslation()"><B>isUseSqlStateForTranslation()</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/SQLErrorCodes.html" title="class in org.springframework.jdbc.support">SQLErrorCodes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#isUseStrictCasing()"><B>isUseStrictCasing()</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Return whether strict casing for attributes is enabled.
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#isUseTransactionAwareDataSource()"><B>isUseTransactionAwareDataSource()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>Return whether to use a transaction-aware DataSource for the SessionFactory.
<DT><A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html#isValidateAddresses()"><B>isValidateAddresses()</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail">MimeMessageHelper</A>
<DD>Return whether this helper will validate all addresses passed to it.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#isValidateExistingTransaction()"><B>isValidateExistingTransaction()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Return whether existing transactions should be validated before participating
 in them.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#isValidateOnBinding()"><B>isValidateOnBinding()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Return if the Validator should get applied when binding.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#isValidateOnBinding()"><B>isValidateOnBinding()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Return if the Validator should get applied when binding.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#isValidating()"><B>isValidating()</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>Return whether this marshaller should validate in- and outgoing documents.
<DT><A HREF="../org/springframework/util/ClassUtils.html#isVisible(java.lang.Class, java.lang.ClassLoader)"><B>isVisible(Class&lt;?&gt;, ClassLoader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Check whether the given class is visible in the given ClassLoader.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolder.html#isVoid()"><B>isVoid()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support">ResourceHolder</A>
<DD>Determine whether this holder is considere as 'void',
 i.e.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#isVoid()"><B>isVoid()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/MediaType.html#isWildcardSubtype()"><B>isWildcardSubtype()</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Indicate whether the <A HREF="../org/springframework/http/MediaType.html#getSubtype()">subtype</A> is the wildcard character <code>&#42;</code> or not.
<DT><A HREF="../org/springframework/http/MediaType.html#isWildcardType()"><B>isWildcardType()</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Indicate whether the <A HREF="../org/springframework/http/MediaType.html#getType()">type</A> is the wildcard character <code>&#42;</code> or not.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#isWindowStateAllowed(javax.portlet.WindowState)"><B>isWindowStateAllowed(WindowState)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/AbstractDataSource.html#isWrapperFor(java.lang.Class)"><B>isWrapperFor(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/AbstractDataSource.html" title="class in org.springframework.jdbc.datasource">AbstractDataSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/DelegatingDataSource.html#isWrapperFor(java.lang.Class)"><B>isWrapperFor(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DelegatingDataSource.html" title="class in org.springframework.jdbc.datasource">DelegatingDataSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/CompositeStringExpression.html#isWritable(org.springframework.expression.EvaluationContext)"><B>isWritable(EvaluationContext)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/CompositeStringExpression.html" title="class in org.springframework.expression.common">CompositeStringExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/CompositeStringExpression.html#isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)"><B>isWritable(EvaluationContext, Object)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/CompositeStringExpression.html" title="class in org.springframework.expression.common">CompositeStringExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/CompositeStringExpression.html#isWritable(java.lang.Object)"><B>isWritable(Object)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/CompositeStringExpression.html" title="class in org.springframework.expression.common">CompositeStringExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/LiteralExpression.html#isWritable(org.springframework.expression.EvaluationContext)"><B>isWritable(EvaluationContext)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/LiteralExpression.html" title="class in org.springframework.expression.common">LiteralExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/LiteralExpression.html#isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)"><B>isWritable(EvaluationContext, Object)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/LiteralExpression.html" title="class in org.springframework.expression.common">LiteralExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/common/LiteralExpression.html#isWritable(java.lang.Object)"><B>isWritable(Object)</B></A> - 
Method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/LiteralExpression.html" title="class in org.springframework.expression.common">LiteralExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/Expression.html#isWritable(org.springframework.expression.EvaluationContext)"><B>isWritable(EvaluationContext)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/Expression.html" title="interface in org.springframework.expression">Expression</A>
<DD>Determine if an expression can be written to, i.e.
<DT><A HREF="../org/springframework/expression/Expression.html#isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)"><B>isWritable(EvaluationContext, Object)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/Expression.html" title="interface in org.springframework.expression">Expression</A>
<DD>Determine if an expression can be written to, i.e.
<DT><A HREF="../org/springframework/expression/Expression.html#isWritable(java.lang.Object)"><B>isWritable(Object)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/Expression.html" title="interface in org.springframework.expression">Expression</A>
<DD>Determine if an expression can be written to, i.e.
<DT><A HREF="../org/springframework/expression/spel/ast/CompoundExpression.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/CompoundExpression.html" title="class in org.springframework.expression.spel.ast">CompoundExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/Indexer.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/Indexer.html" title="class in org.springframework.expression.spel.ast">Indexer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html" title="class in org.springframework.expression.spel.ast">PropertyOrFieldReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/SpelNodeImpl.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/SpelNodeImpl.html" title="class in org.springframework.expression.spel.ast">SpelNodeImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ast/VariableReference.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/VariableReference.html" title="class in org.springframework.expression.spel.ast">VariableReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/SpelNode.html#isWritable(org.springframework.expression.spel.ExpressionState)"><B>isWritable(ExpressionState)</B></A> - 
Method in interface org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/SpelNode.html" title="interface in org.springframework.expression.spel">SpelNode</A>
<DD>Determine if this expression node will support a setValue() call.
<DT><A HREF="../org/springframework/expression/spel/standard/SpelExpression.html#isWritable(org.springframework.expression.EvaluationContext)"><B>isWritable(EvaluationContext)</B></A> - 
Method in class org.springframework.expression.spel.standard.<A HREF="../org/springframework/expression/spel/standard/SpelExpression.html" title="class in org.springframework.expression.spel.standard">SpelExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/standard/SpelExpression.html#isWritable(java.lang.Object)"><B>isWritable(Object)</B></A> - 
Method in class org.springframework.expression.spel.standard.<A HREF="../org/springframework/expression/spel/standard/SpelExpression.html" title="class in org.springframework.expression.spel.standard">SpelExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/standard/SpelExpression.html#isWritable(org.springframework.expression.EvaluationContext, java.lang.Object)"><B>isWritable(EvaluationContext, Object)</B></A> - 
Method in class org.springframework.expression.spel.standard.<A HREF="../org/springframework/expression/spel/standard/SpelExpression.html" title="class in org.springframework.expression.spel.standard">SpelExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#isWritableProperty(java.lang.String)"><B>isWritableProperty(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/DirectFieldAccessor.html#isWritableProperty(java.lang.String)"><B>isWritableProperty(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/DirectFieldAccessor.html" title="class in org.springframework.beans">DirectFieldAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyAccessor.html#isWritableProperty(java.lang.String)"><B>isWritableProperty(String)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyAccessor.html" title="interface in org.springframework.beans">PropertyAccessor</A>
<DD>Determine whether the specified property is writable.
<DT><A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html#isWritableProperty(java.lang.String, org.springframework.expression.spel.ExpressionState)"><B>isWritableProperty(String, ExpressionState)</B></A> - 
Method in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/PropertyOrFieldReference.html" title="class in org.springframework.expression.spel.ast">PropertyOrFieldReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#isWriterAccessAllowed()"><B>isWriterAccessAllowed()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>Return whether <A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#getOutputStream()"><CODE>MockHttpServletResponse.getOutputStream()</CODE></A> access is allowed.
<DT><A HREF="../org/springframework/oxm/mime/MimeContainer.html#isXopPackage()"><B>isXopPackage()</B></A> - 
Method in interface org.springframework.oxm.mime.<A HREF="../org/springframework/oxm/mime/MimeContainer.html" title="interface in org.springframework.oxm.mime">MimeContainer</A>
<DD>Indicate whether this container is a XOP package.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#iterate(java.lang.String)"><B>iterate(String)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Execute a query for persistent instances.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#iterate(java.lang.String, java.lang.Object)"><B>iterate(String, Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Execute a query for persistent instances, binding one value
 to a "?" parameter in the query string.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#iterate(java.lang.String, java.lang.Object...)"><B>iterate(String, Object...)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Execute a query for persistent instances, binding a number of
 values to "?" parameters in the query string.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#iterate(java.lang.String)"><B>iterate(String)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#iterate(java.lang.String, java.lang.Object)"><B>iterate(String, Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#iterate(java.lang.String, java.lang.Object...)"><B>iterate(String, Object...)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#iterator()"><B>iterator()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-8.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-10.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-9.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-9.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>

</BODY>
</HTML>
