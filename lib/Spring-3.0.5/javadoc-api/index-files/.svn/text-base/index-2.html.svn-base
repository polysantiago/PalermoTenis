<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:26:08 BST 2010 -->
<TITLE>
B-Index
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="B-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-1.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-3.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-2.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-2.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>
<A NAME="_B_"><!-- --></A><H2>
<B>B</B></H2>
<DL>
<DT><A HREF="../org/springframework/jdbc/BadSqlGrammarException.html" title="class in org.springframework.jdbc"><B>BadSqlGrammarException</B></A> - Exception in <A HREF="../org/springframework/jdbc/package-summary.html">org.springframework.jdbc</A><DD>Exception thrown when SQL specified is invalid.<DT><A HREF="../org/springframework/jdbc/BadSqlGrammarException.html#BadSqlGrammarException(java.lang.String, java.lang.String, java.sql.SQLException)"><B>BadSqlGrammarException(String, String, SQLException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/BadSqlGrammarException.html" title="class in org.springframework.jdbc">BadSqlGrammarException</A>
<DD>Constructor for BadSqlGrammarException.
<DT><A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html#BASE_NAME_SEPARATOR"><B>BASE_NAME_SEPARATOR</B></A> - 
Static variable in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html" title="class in org.springframework.beans.propertyeditors">ResourceBundleEditor</A>
<DD>The separator used to distinguish between the base name and the
 locale (if any) when <A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html#setAsText(java.lang.String)"><CODE>converting from a String</CODE></A>.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc"><B>BaseCommandController</B></A> - Class in <A HREF="../org/springframework/web/portlet/mvc/package-summary.html">org.springframework.web.portlet.mvc</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of annotated controllers</I><DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#BaseCommandController()"><B>BaseCommandController()</B></A> - 
Constructor for class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc"><B>BaseCommandController</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/package-summary.html">org.springframework.web.servlet.mvc</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of annotated controllers</I><DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#BaseCommandController()"><B>BaseCommandController()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/BatchPreparedStatementSetter.html" title="interface in org.springframework.jdbc.core"><B>BatchPreparedStatementSetter</B></A> - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Batch update callback interface used by the <A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core"><CODE>JdbcTemplate</CODE></A> class.<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object"><B>BatchSqlUpdate</B></A> - Class in <A HREF="../org/springframework/jdbc/object/package-summary.html">org.springframework.jdbc.object</A><DD>SqlUpdate subclass that performs batch update operations.<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#BatchSqlUpdate()"><B>BatchSqlUpdate()</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Constructor to allow use as a JavaBean.
<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#BatchSqlUpdate(javax.sql.DataSource, java.lang.String)"><B>BatchSqlUpdate(DataSource, String)</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Construct an update object with a given DataSource and SQL.
<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[])"><B>BatchSqlUpdate(DataSource, String, int[])</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Construct an update object with a given DataSource, SQL
 and anonymous parameters.
<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#BatchSqlUpdate(javax.sql.DataSource, java.lang.String, int[], int)"><B>BatchSqlUpdate(DataSource, String, int[], int)</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Construct an update object with a given DataSource, SQL,
 anonymous parameters and specifying the maximum number of rows
 that may be affected.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#batchUpdate(java.lang.String[])"><B>batchUpdate(String[])</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue multiple SQL updates on a single JDBC Statement using batching.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)"><B>batchUpdate(String, BatchPreparedStatementSetter)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Issue multiple update statements on a single PreparedStatement,
 using batch updates and a BatchPreparedStatementSetter to set values.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#batchUpdate(java.lang.String[])"><B>batchUpdate(String[])</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)"><B>batchUpdate(String, BatchPreparedStatementSetter)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#batchUpdate(java.lang.String, java.util.Map[])"><B>batchUpdate(String, Map&lt;String, ?&gt;[])</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Executes a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])"><B>batchUpdate(String, SqlParameterSource[])</B></A> - 
Method in interface org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcOperations.html" title="interface in org.springframework.jdbc.core.namedparam">NamedParameterJdbcOperations</A>
<DD>Execute a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#batchUpdate(java.lang.String, java.util.Map[])"><B>batchUpdate(String, Map&lt;String, ?&gt;[])</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])"><B>batchUpdate(String, SqlParameterSource[])</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterJdbcTemplate.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#batchUpdate(java.lang.String, java.util.Map[])"><B>batchUpdate(String, Map&lt;String, ?&gt;[])</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Executes a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])"><B>batchUpdate(String, SqlParameterSource[])</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#batchUpdate(java.lang.String, java.util.List)"><B>batchUpdate(String, List&lt;Object[]&gt;)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html#batchUpdate(java.lang.String, java.util.List, int[])"><B>batchUpdate(String, List&lt;Object[]&gt;, int[])</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcOperations</A>
<DD>Execute a batch using the supplied SQL statement with the batch of supplied arguments.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#batchUpdate(java.lang.String, java.util.List)"><B>batchUpdate(String, List&lt;Object[]&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#batchUpdate(java.lang.String, java.util.List, int[])"><B>batchUpdate(String, List&lt;Object[]&gt;, int[])</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#batchUpdate(java.lang.String, java.util.Map[])"><B>batchUpdate(String, Map&lt;String, ?&gt;[])</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html#batchUpdate(java.lang.String, org.springframework.jdbc.core.namedparam.SqlParameterSource[])"><B>batchUpdate(String, SqlParameterSource[])</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcTemplate.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/BatchUpdateUtils.html" title="class in org.springframework.jdbc.core"><B>BatchUpdateUtils</B></A> - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Generic utility methods for working with JDBC batch statements.<DT><A HREF="../org/springframework/jdbc/core/BatchUpdateUtils.html#BatchUpdateUtils()"><B>BatchUpdateUtils()</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BatchUpdateUtils.html" title="class in org.springframework.jdbc.core">BatchUpdateUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/Bean.html" title="annotation in org.springframework.context.annotation"><B>Bean</B></A> - Annotation Type in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Indicates that a method produces a bean to be managed by the Spring container.<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#BEAN_ELEMENT"><B>BEAN_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#BEAN_ELEMENT"><B>BEAN_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html#BEAN_FACTORY_PATH_DELIMITERS"><B>BEAN_FACTORY_PATH_DELIMITERS</B></A> - 
Static variable in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextJndiBeanFactoryLocator</A>
<DD>Any number of these characters are considered delimiters between
 multiple bean factory config paths in a single String value.
<DT><A HREF="../org/springframework/ejb/support/AbstractEnterpriseBean.html#BEAN_FACTORY_PATH_ENVIRONMENT_KEY"><B>BEAN_FACTORY_PATH_ENVIRONMENT_KEY</B></A> - 
Static variable in class org.springframework.ejb.support.<A HREF="../org/springframework/ejb/support/AbstractEnterpriseBean.html" title="class in org.springframework.ejb.support">AbstractEnterpriseBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#BEAN_NAME_DELIMITERS"><B>BEAN_NAME_DELIMITERS</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#BEAN_REF_ATTRIBUTE"><B>BEAN_REF_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanClassLoaderAware.html" title="interface in org.springframework.beans.factory"><B>BeanClassLoaderAware</B></A> - Interface in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Callback that allows a bean to be aware of the bean
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>class loader</CODE></A>; that is, the class loader used by the
 present bean factory to load bean classes.<DT><A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html" title="class in org.springframework.beans.factory.parsing"><B>BeanComponentDefinition</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>ComponentDefinition based on a standard BeanDefinition, exposing the given bean
 definition as well as inner bean definitions and bean references for the given bean.<DT><A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html#BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String)"><B>BeanComponentDefinition(BeanDefinition, String)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html" title="class in org.springframework.beans.factory.parsing">BeanComponentDefinition</A>
<DD>Create a new BeanComponentDefinition for the given bean.
<DT><A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html#BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String[])"><B>BeanComponentDefinition(BeanDefinition, String, String[])</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html" title="class in org.springframework.beans.factory.parsing">BeanComponentDefinition</A>
<DD>Create a new BeanComponentDefinition for the given bean.
<DT><A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html#BeanComponentDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder)"><B>BeanComponentDefinition(BeanDefinitionHolder)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/BeanComponentDefinition.html" title="class in org.springframework.beans.factory.parsing">BeanComponentDefinition</A>
<DD>Create a new BeanComponentDefinition for the given bean.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html" title="class in org.springframework.beans.factory.wiring"><B>BeanConfigurerSupport</B></A> - Class in <A HREF="../org/springframework/beans/factory/wiring/package-summary.html">org.springframework.beans.factory.wiring</A><DD>Convenient base class for configurers that can perform Dependency Injection
 on objects (however they may be created).<DT><A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html#BeanConfigurerSupport()"><B>BeanConfigurerSupport()</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html" title="class in org.springframework.beans.factory.wiring">BeanConfigurerSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory"><B>BeanCreationException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when a BeanFactory encounters an error when
 attempting to create a bean from a bean definition.<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String)"><B>BeanCreationException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String, java.lang.Throwable)"><B>BeanCreationException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String, java.lang.String)"><B>BeanCreationException(String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String, java.lang.String, java.lang.Throwable)"><B>BeanCreationException(String, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String, java.lang.String, java.lang.String)"><B>BeanCreationException(String, String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#BeanCreationException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"><B>BeanCreationException(String, String, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>Create a new BeanCreationException.
<DT><A HREF="../org/springframework/beans/factory/BeanCreationNotAllowedException.html" title="class in org.springframework.beans.factory"><B>BeanCreationNotAllowedException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown in case of a bean being requested despite
 bean creation currently not being allowed (for example, during
 the shutdown phase of a bean factory).<DT><A HREF="../org/springframework/beans/factory/BeanCreationNotAllowedException.html#BeanCreationNotAllowedException(java.lang.String, java.lang.String)"><B>BeanCreationNotAllowedException(String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationNotAllowedException.html" title="class in org.springframework.beans.factory">BeanCreationNotAllowedException</A>
<DD>Create a new BeanCreationNotAllowedException.
<DT><A HREF="../org/springframework/beans/factory/BeanCurrentlyInCreationException.html" title="class in org.springframework.beans.factory"><B>BeanCurrentlyInCreationException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown in case of a reference to a bean that's currently in creation.<DT><A HREF="../org/springframework/beans/factory/BeanCurrentlyInCreationException.html#BeanCurrentlyInCreationException(java.lang.String)"><B>BeanCurrentlyInCreationException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCurrentlyInCreationException.html" title="class in org.springframework.beans.factory">BeanCurrentlyInCreationException</A>
<DD>Create a new BeanCurrentlyInCreationException,
 with a default error message that indicates a circular reference.
<DT><A HREF="../org/springframework/beans/factory/BeanCurrentlyInCreationException.html#BeanCurrentlyInCreationException(java.lang.String, java.lang.String)"><B>BeanCurrentlyInCreationException(String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCurrentlyInCreationException.html" title="class in org.springframework.beans.factory">BeanCurrentlyInCreationException</A>
<DD>Create a new BeanCurrentlyInCreationException.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><B>BeanDefinition</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>A BeanDefinition describes a bean instance, which has property values,
 constructor argument values, and further information supplied by
 concrete implementations.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support"><B>BeanDefinitionBuilder</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Programmatic means of constructing
 <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinitions</CODE></A>
 using the builder pattern.<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDecorator.html" title="interface in org.springframework.beans.factory.xml"><B>BeanDefinitionDecorator</B></A> - Interface in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>Interface used by the <A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml"><CODE>DefaultBeanDefinitionDocumentReader</CODE></A>
 to handle custom, nested (directly under a <code>&lt;bean&gt;</code>) tags.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionDefaults.html" title="class in org.springframework.beans.factory.support"><B>BeanDefinitionDefaults</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>A simple holder for <code>BeanDefinition</code> property defaults.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionDefaults.html#BeanDefinitionDefaults()"><B>BeanDefinitionDefaults()</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionDefaults.html" title="class in org.springframework.beans.factory.support">BeanDefinitionDefaults</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html" title="interface in org.springframework.beans.factory.xml"><B>BeanDefinitionDocumentReader</B></A> - Interface in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>SPI for parsing an XML document that contains Spring bean definitions.<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html" title="class in org.springframework.beans.factory.config"><B>BeanDefinitionHolder</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Holder for a BeanDefinition with name and aliases.<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html#BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition, java.lang.String)"><B>BeanDefinitionHolder(BeanDefinition, String)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html" title="class in org.springframework.beans.factory.config">BeanDefinitionHolder</A>
<DD>Create a new BeanDefinitionHolder.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html#BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, java.lang.String[])"><B>BeanDefinitionHolder(BeanDefinition, String, String[])</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html" title="class in org.springframework.beans.factory.config">BeanDefinitionHolder</A>
<DD>Create a new BeanDefinitionHolder.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html#BeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinitionHolder)"><B>BeanDefinitionHolder(BeanDefinitionHolder)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html" title="class in org.springframework.beans.factory.config">BeanDefinitionHolder</A>
<DD>Copy constructor: Create a new BeanDefinitionHolder with the
 same contents as the given BeanDefinitionHolder instance.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParser.html" title="interface in org.springframework.beans.factory.xml"><B>BeanDefinitionParser</B></A> - Interface in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>Interface used by the
 <A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml"><CODE>DefaultBeanDefinitionDocumentReader</CODE></A> to
 handle custom, top-level (directly under <code>&lt;beans&gt;</code>) tags.<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml"><B>BeanDefinitionParserDelegate</B></A> - Class in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>Stateful delegate class used to parse XML bean definitions.<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#BeanDefinitionParserDelegate(org.springframework.beans.factory.xml.XmlReaderContext)"><B>BeanDefinitionParserDelegate(XmlReaderContext)</B></A> - 
Constructor for class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Create a new BeanDefinitionParserDelegate associated with the
 supplied <A HREF="../org/springframework/beans/factory/xml/XmlReaderContext.html" title="class in org.springframework.beans.factory.xml"><CODE>XmlReaderContext</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/parsing/BeanDefinitionParsingException.html" title="class in org.springframework.beans.factory.parsing"><B>BeanDefinitionParsingException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>Exception thrown when a bean definition reader encounters an error
 during the parsing process.<DT><A HREF="../org/springframework/beans/factory/parsing/BeanDefinitionParsingException.html#BeanDefinitionParsingException(org.springframework.beans.factory.parsing.Problem)"><B>BeanDefinitionParsingException(Problem)</B></A> - 
Constructor for exception org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/BeanDefinitionParsingException.html" title="class in org.springframework.beans.factory.parsing">BeanDefinitionParsingException</A>
<DD>Create a new BeanDefinitionParsingException.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReader.html" title="interface in org.springframework.beans.factory.support"><B>BeanDefinitionReader</B></A> - Interface in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Simple interface for bean definition readers.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html" title="class in org.springframework.beans.factory.support"><B>BeanDefinitionReaderUtils</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Utility methods that are useful for bean definition reader implementations.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html#BeanDefinitionReaderUtils()"><B>BeanDefinitionReaderUtils()</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html" title="class in org.springframework.beans.factory.support">BeanDefinitionReaderUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support"><B>BeanDefinitionRegistry</B></A> - Interface in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Interface for registries that hold bean definitions, for example RootBeanDefinition
 and ChildBeanDefinition instances.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.html" title="interface in org.springframework.beans.factory.support"><B>BeanDefinitionRegistryPostProcessor</B></A> - Interface in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Extension to the standard <A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanFactoryPostProcessor</CODE></A> SPI, allowing for
 the registration of further bean definitions <i>before</i> regular
 BeanFactoryPostProcessor detection kicks in.<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory"><B>BeanDefinitionStoreException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when a BeanFactory encounters an invalid bean definition:
 e.g.<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String)"><B>BeanDefinitionStoreException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String, java.lang.Throwable)"><B>BeanDefinitionStoreException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String, java.lang.String)"><B>BeanDefinitionStoreException(String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.Throwable)"><B>BeanDefinitionStoreException(String, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.String)"><B>BeanDefinitionStoreException(String, String, String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html#BeanDefinitionStoreException(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)"><B>BeanDefinitionStoreException(String, String, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanDefinitionStoreException.html" title="class in org.springframework.beans.factory">BeanDefinitionStoreException</A>
<DD>Create a new BeanDefinitionStoreException.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionValidationException.html" title="class in org.springframework.beans.factory.support"><B>BeanDefinitionValidationException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Exception thrown when the validation of a bean definition failed.<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionValidationException.html#BeanDefinitionValidationException(java.lang.String)"><B>BeanDefinitionValidationException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionValidationException.html" title="class in org.springframework.beans.factory.support">BeanDefinitionValidationException</A>
<DD>Create a new BeanDefinitionValidationException with the specified message.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionValidationException.html#BeanDefinitionValidationException(java.lang.String, java.lang.Throwable)"><B>BeanDefinitionValidationException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionValidationException.html" title="class in org.springframework.beans.factory.support">BeanDefinitionValidationException</A>
<DD>Create a new BeanDefinitionValidationException with the specified message
 and root cause.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html" title="class in org.springframework.beans.factory.config"><B>BeanDefinitionVisitor</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Visitor class for traversing <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A> objects, in particular
 the property values and constructor argument values contained in them,
 resolving bean metadata values.<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html#BeanDefinitionVisitor(org.springframework.util.StringValueResolver)"><B>BeanDefinitionVisitor(StringValueResolver)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html" title="class in org.springframework.beans.factory.config">BeanDefinitionVisitor</A>
<DD>Create a new BeanDefinitionVisitor, applying the specified
 value resolver to all bean metadata values.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html#BeanDefinitionVisitor()"><B>BeanDefinitionVisitor()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html" title="class in org.springframework.beans.factory.config">BeanDefinitionVisitor</A>
<DD>Create a new BeanDefinitionVisitor for subclassing.
<DT><A HREF="../org/springframework/beans/factory/parsing/BeanEntry.html" title="class in org.springframework.beans.factory.parsing"><B>BeanEntry</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD><A HREF="../org/springframework/beans/factory/parsing/ParseState.html" title="class in org.springframework.beans.factory.parsing"><CODE>ParseState</CODE></A> entry representing a bean definition.<DT><A HREF="../org/springframework/beans/factory/parsing/BeanEntry.html#BeanEntry(java.lang.String)"><B>BeanEntry(String)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/BeanEntry.html" title="class in org.springframework.beans.factory.parsing">BeanEntry</A>
<DD>Creates a new instance of <A HREF="../org/springframework/beans/factory/parsing/BeanEntry.html" title="class in org.springframework.beans.factory.parsing"><CODE>BeanEntry</CODE></A> class.
<DT><A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html" title="class in org.springframework.beans.factory.config"><B>BeanExpressionContext</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Context object for evaluating an expression within a bean definition.<DT><A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html#BeanExpressionContext(org.springframework.beans.factory.config.ConfigurableBeanFactory, org.springframework.beans.factory.config.Scope)"><B>BeanExpressionContext(ConfigurableBeanFactory, Scope)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html" title="class in org.springframework.beans.factory.config">BeanExpressionContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html" title="class in org.springframework.context.expression"><B>BeanExpressionContextAccessor</B></A> - Class in <A HREF="../org/springframework/context/expression/package-summary.html">org.springframework.context.expression</A><DD>EL property accessor that knows how to traverse the beans and contextual objects
 of a Spring <A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html" title="class in org.springframework.beans.factory.config"><CODE>BeanExpressionContext</CODE></A>.<DT><A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html#BeanExpressionContextAccessor()"><B>BeanExpressionContextAccessor()</B></A> - 
Constructor for class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html" title="class in org.springframework.context.expression">BeanExpressionContextAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanExpressionException.html" title="class in org.springframework.beans.factory"><B>BeanExpressionException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception that indicates an expression evaluation attempt having failed.<DT><A HREF="../org/springframework/beans/factory/BeanExpressionException.html#BeanExpressionException(java.lang.String)"><B>BeanExpressionException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanExpressionException.html" title="class in org.springframework.beans.factory">BeanExpressionException</A>
<DD>Create a new BeanExpressionException with the specified message.
<DT><A HREF="../org/springframework/beans/factory/BeanExpressionException.html#BeanExpressionException(java.lang.String, java.lang.Throwable)"><B>BeanExpressionException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanExpressionException.html" title="class in org.springframework.beans.factory">BeanExpressionException</A>
<DD>Create a new BeanExpressionException with the specified message
 and root cause.
<DT><A HREF="../org/springframework/beans/factory/config/BeanExpressionResolver.html" title="interface in org.springframework.beans.factory.config"><B>BeanExpressionResolver</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Strategy interface for resolving a value through evaluating it
 as an expression, if applicable.<DT><A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><B>BeanFactory</B></A> - Interface in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>The root interface for accessing a Spring bean container.<DT><A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html" title="class in org.springframework.context.expression"><B>BeanFactoryAccessor</B></A> - Class in <A HREF="../org/springframework/context/expression/package-summary.html">org.springframework.context.expression</A><DD>EL property accessor that knows how to traverse the beans of a
 Spring <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html#BeanFactoryAccessor()"><B>BeanFactoryAccessor()</B></A> - 
Constructor for class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html" title="class in org.springframework.context.expression">BeanFactoryAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html" title="class in org.springframework.aop.framework.autoproxy"><B>BeanFactoryAdvisorRetrievalHelper</B></A> - Class in <A HREF="../org/springframework/aop/framework/autoproxy/package-summary.html">org.springframework.aop.framework.autoproxy</A><DD>Helper for retrieving standard Spring Advisors from a BeanFactory,
 for use with auto-proxying.<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html#BeanFactoryAdvisorRetrievalHelper(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>BeanFactoryAdvisorRetrievalHelper(ConfigurableListableBeanFactory)</B></A> - 
Constructor for class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.html" title="class in org.springframework.aop.framework.autoproxy">BeanFactoryAdvisorRetrievalHelper</A>
<DD>Create a new BeanFactoryAdvisorRetrievalHelper for the given BeanFactory.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html" title="class in org.springframework.aop.aspectj.annotation"><B>BeanFactoryAspectInstanceFactory</B></A> - Class in <A HREF="../org/springframework/aop/aspectj/annotation/package-summary.html">org.springframework.aop.aspectj.annotation</A><DD><A HREF="../org/springframework/aop/aspectj/AspectInstanceFactory.html" title="interface in org.springframework.aop.aspectj"><CODE>AspectInstanceFactory</CODE></A> implementation
 backed by a Spring <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html#BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String)"><B>BeanFactoryAspectInstanceFactory(BeanFactory, String)</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectInstanceFactory</A>
<DD>Create a BeanFactoryAspectInstanceFactory.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html#BeanFactoryAspectInstanceFactory(org.springframework.beans.factory.BeanFactory, java.lang.String, java.lang.Class)"><B>BeanFactoryAspectInstanceFactory(BeanFactory, String, Class)</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectInstanceFactory.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectInstanceFactory</A>
<DD>Create a BeanFactoryAspectInstanceFactory, providing a type that AspectJ should
 introspect to create AJType metadata.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html" title="class in org.springframework.aop.aspectj.annotation"><B>BeanFactoryAspectJAdvisorsBuilder</B></A> - Class in <A HREF="../org/springframework/aop/aspectj/annotation/package-summary.html">org.springframework.aop.aspectj.annotation</A><DD>Helper for retrieving @AspectJ beans from a BeanFactory and building
 Spring Advisors based on them, for use with auto-proxying.<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html#BeanFactoryAspectJAdvisorsBuilder(org.springframework.beans.factory.ListableBeanFactory)"><B>BeanFactoryAspectJAdvisorsBuilder(ListableBeanFactory)</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectJAdvisorsBuilder</A>
<DD>Create a new BeanFactoryAspectJAdvisorsBuilder for the given BeanFactory.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html#BeanFactoryAspectJAdvisorsBuilder(org.springframework.beans.factory.ListableBeanFactory, org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory)"><B>BeanFactoryAspectJAdvisorsBuilder(ListableBeanFactory, AspectJAdvisorFactory)</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectJAdvisorsBuilder</A>
<DD>Create a new BeanFactoryAspectJAdvisorsBuilder for the given BeanFactory.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryAware.html" title="interface in org.springframework.beans.factory"><B>BeanFactoryAware</B></A> - Interface in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Interface to be implemented by beans that wish to be aware of their
 owning <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html" title="class in org.springframework.jdbc.datasource.lookup"><B>BeanFactoryDataSourceLookup</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/lookup/package-summary.html">org.springframework.jdbc.datasource.lookup</A><DD><A HREF="../org/springframework/jdbc/datasource/lookup/DataSourceLookup.html" title="interface in org.springframework.jdbc.datasource.lookup"><CODE>DataSourceLookup</CODE></A> implementation based on a Spring <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html#BeanFactoryDataSourceLookup()"><B>BeanFactoryDataSourceLookup()</B></A> - 
Constructor for class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html" title="class in org.springframework.jdbc.datasource.lookup">BeanFactoryDataSourceLookup</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html" title="class in org.springframework.jdbc.datasource.lookup"><CODE>BeanFactoryDataSourceLookup</CODE></A> class.
<DT><A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html#BeanFactoryDataSourceLookup(org.springframework.beans.factory.BeanFactory)"><B>BeanFactoryDataSourceLookup(BeanFactory)</B></A> - 
Constructor for class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html" title="class in org.springframework.jdbc.datasource.lookup">BeanFactoryDataSourceLookup</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jdbc/datasource/lookup/BeanFactoryDataSourceLookup.html" title="class in org.springframework.jdbc.datasource.lookup"><CODE>BeanFactoryDataSourceLookup</CODE></A> class.
<DT><A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination"><B>BeanFactoryDestinationResolver</B></A> - Class in <A HREF="../org/springframework/jms/support/destination/package-summary.html">org.springframework.jms.support.destination</A><DD><A HREF="../org/springframework/jms/support/destination/DestinationResolver.html" title="interface in org.springframework.jms.support.destination"><CODE>DestinationResolver</CODE></A> implementation based on a Spring <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html#BeanFactoryDestinationResolver()"><B>BeanFactoryDestinationResolver()</B></A> - 
Constructor for class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination">BeanFactoryDestinationResolver</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination"><CODE>BeanFactoryDestinationResolver</CODE></A> class.
<DT><A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html#BeanFactoryDestinationResolver(org.springframework.beans.factory.BeanFactory)"><B>BeanFactoryDestinationResolver(BeanFactory)</B></A> - 
Constructor for class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination">BeanFactoryDestinationResolver</A>
<DD>Create a new instance of the <A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination"><CODE>BeanFactoryDestinationResolver</CODE></A> class.
<DT><A HREF="../org/springframework/beans/factory/access/BeanFactoryLocator.html" title="interface in org.springframework.beans.factory.access"><B>BeanFactoryLocator</B></A> - Interface in <A HREF="../org/springframework/beans/factory/access/package-summary.html">org.springframework.beans.factory.access</A><DD>Defines a contract for the lookup, use, and release of a
 <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>,
 or a <code>BeanFactory</code> subclass such as an
 <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A>.<DT><A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><B>BeanFactoryPostProcessor</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Allows for custom modification of an application context's bean definitions,
 adapting the bean property values of the context's underlying bean factory.<DT><A HREF="../org/springframework/beans/factory/access/BeanFactoryReference.html" title="interface in org.springframework.beans.factory.access"><B>BeanFactoryReference</B></A> - Interface in <A HREF="../org/springframework/beans/factory/access/package-summary.html">org.springframework.beans.factory.access</A><DD>Used to track a reference to a <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A> obtained through
 a <A HREF="../org/springframework/beans/factory/access/BeanFactoryLocator.html" title="interface in org.springframework.beans.factory.access"><CODE>BeanFactoryLocator</CODE></A>.<DT><A HREF="../org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic"><B>BeanFactoryRefreshableTargetSource</B></A> - Class in <A HREF="../org/springframework/aop/target/dynamic/package-summary.html">org.springframework.aop.target.dynamic</A><DD>Refreshable TargetSource that fetches fresh target beans from a BeanFactory.<DT><A HREF="../org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html#BeanFactoryRefreshableTargetSource(org.springframework.beans.factory.BeanFactory, java.lang.String)"><B>BeanFactoryRefreshableTargetSource(BeanFactory, String)</B></A> - 
Constructor for class org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic">BeanFactoryRefreshableTargetSource</A>
<DD>Create a new BeanFactoryRefreshableTargetSource for the given
 bean factory and bean name.
<DT><A HREF="../org/springframework/context/expression/BeanFactoryResolver.html" title="class in org.springframework.context.expression"><B>BeanFactoryResolver</B></A> - Class in <A HREF="../org/springframework/context/expression/package-summary.html">org.springframework.context.expression</A><DD>EL bean resolver that operates against a Spring
 <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A>.<DT><A HREF="../org/springframework/context/expression/BeanFactoryResolver.html#BeanFactoryResolver(org.springframework.beans.factory.BeanFactory)"><B>BeanFactoryResolver(BeanFactory)</B></A> - 
Constructor for class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryResolver.html" title="class in org.springframework.context.expression">BeanFactoryResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html" title="class in org.springframework.transaction.interceptor"><B>BeanFactoryTransactionAttributeSourceAdvisor</B></A> - Class in <A HREF="../org/springframework/transaction/interceptor/package-summary.html">org.springframework.transaction.interceptor</A><DD>Advisor driven by a <A HREF="../org/springframework/transaction/interceptor/TransactionAttributeSource.html" title="interface in org.springframework.transaction.interceptor"><CODE>TransactionAttributeSource</CODE></A>, used to include
 a transaction advice bean for methods that are transactional.<DT><A HREF="../org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html#BeanFactoryTransactionAttributeSourceAdvisor()"><B>BeanFactoryTransactionAttributeSourceAdvisor()</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.html" title="class in org.springframework.transaction.interceptor">BeanFactoryTransactionAttributeSourceAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory"><B>BeanFactoryUtils</B></A> - Class in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Convenience methods operating on bean factories, in particular
 on the <A HREF="../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>ListableBeanFactory</CODE></A> interface.<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#BeanFactoryUtils()"><B>BeanFactoryUtils()</B></A> - 
Constructor for class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory"><B>BeanInitializationException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception that a bean implementation is suggested to throw if its own
 factory-aware initialization code fails.<DT><A HREF="../org/springframework/beans/factory/BeanInitializationException.html#BeanInitializationException(java.lang.String)"><B>BeanInitializationException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory">BeanInitializationException</A>
<DD>Create a new BeanInitializationException with the specified message.
<DT><A HREF="../org/springframework/beans/factory/BeanInitializationException.html#BeanInitializationException(java.lang.String, java.lang.Throwable)"><B>BeanInitializationException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanInitializationException.html" title="class in org.springframework.beans.factory">BeanInitializationException</A>
<DD>Create a new BeanInitializationException with the specified message
 and root cause.
<DT><A HREF="../org/springframework/beans/BeanInstantiationException.html" title="class in org.springframework.beans"><B>BeanInstantiationException</B></A> - Exception in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Exception thrown when instantiation of a bean failed.<DT><A HREF="../org/springframework/beans/BeanInstantiationException.html#BeanInstantiationException(java.lang.Class, java.lang.String)"><B>BeanInstantiationException(Class, String)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/BeanInstantiationException.html" title="class in org.springframework.beans">BeanInstantiationException</A>
<DD>Create a new BeanInstantiationException.
<DT><A HREF="../org/springframework/beans/BeanInstantiationException.html#BeanInstantiationException(java.lang.Class, java.lang.String, java.lang.Throwable)"><B>BeanInstantiationException(Class, String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/BeanInstantiationException.html" title="class in org.springframework.beans">BeanInstantiationException</A>
<DD>Create a new BeanInstantiationException.
<DT><A HREF="../org/springframework/beans/factory/BeanIsAbstractException.html" title="class in org.springframework.beans.factory"><B>BeanIsAbstractException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when a bean instance has been requested for
 a bean definition which has been marked as abstract.<DT><A HREF="../org/springframework/beans/factory/BeanIsAbstractException.html#BeanIsAbstractException(java.lang.String)"><B>BeanIsAbstractException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanIsAbstractException.html" title="class in org.springframework.beans.factory">BeanIsAbstractException</A>
<DD>Create a new BeanIsAbstractException.
<DT><A HREF="../org/springframework/beans/factory/BeanIsNotAFactoryException.html" title="class in org.springframework.beans.factory"><B>BeanIsNotAFactoryException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when a bean is not a factory, but a user tries to get
 at the factory for the given bean name.<DT><A HREF="../org/springframework/beans/factory/BeanIsNotAFactoryException.html#BeanIsNotAFactoryException(java.lang.String, java.lang.Class)"><B>BeanIsNotAFactoryException(String, Class)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanIsNotAFactoryException.html" title="class in org.springframework.beans.factory">BeanIsNotAFactoryException</A>
<DD>Create a new BeanIsNotAFactoryException.
<DT><A HREF="../org/springframework/beans/BeanMetadataAttribute.html" title="class in org.springframework.beans"><B>BeanMetadataAttribute</B></A> - Class in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Holder for a key-value style attribute that is part of a bean definition.<DT><A HREF="../org/springframework/beans/BeanMetadataAttribute.html#BeanMetadataAttribute(java.lang.String, java.lang.Object)"><B>BeanMetadataAttribute(String, Object)</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanMetadataAttribute.html" title="class in org.springframework.beans">BeanMetadataAttribute</A>
<DD>Create a new AttributeValue instance.
<DT><A HREF="../org/springframework/beans/BeanMetadataAttributeAccessor.html" title="class in org.springframework.beans"><B>BeanMetadataAttributeAccessor</B></A> - Class in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Extension of <A HREF="../org/springframework/core/AttributeAccessorSupport.html" title="class in org.springframework.core"><CODE>AttributeAccessorSupport</CODE></A>,
 holding attributes as <A HREF="../org/springframework/beans/BeanMetadataAttribute.html" title="class in org.springframework.beans"><CODE>BeanMetadataAttribute</CODE></A> objects in order
 to keep track of the definition source.<DT><A HREF="../org/springframework/beans/BeanMetadataAttributeAccessor.html#BeanMetadataAttributeAccessor()"><B>BeanMetadataAttributeAccessor()</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanMetadataAttributeAccessor.html" title="class in org.springframework.beans">BeanMetadataAttributeAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeanMetadataElement.html" title="interface in org.springframework.beans"><B>BeanMetadataElement</B></A> - Interface in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Interface to be implemented by bean metadata elements
 that carry a configuration source object.<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy"><B>BeanNameAutoProxyCreator</B></A> - Class in <A HREF="../org/springframework/aop/framework/autoproxy/package-summary.html">org.springframework.aop.framework.autoproxy</A><DD>Auto proxy creator that identifies beans to proxy via a list of names.<DT><A HREF="../org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html#BeanNameAutoProxyCreator()"><B>BeanNameAutoProxyCreator()</B></A> - 
Constructor for class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/BeanNameAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">BeanNameAutoProxyCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanNameAware.html" title="interface in org.springframework.beans.factory"><B>BeanNameAware</B></A> - Interface in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Interface to be implemented by beans that want to be aware of their
 bean name in a bean factory.<DT><A HREF="../org/springframework/beans/factory/support/BeanNameGenerator.html" title="interface in org.springframework.beans.factory.support"><B>BeanNameGenerator</B></A> - Interface in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Strategy interface for generating bean names for bean definitions.<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><B>beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Get all bean names for the given type, including those defined in ancestor
 factories.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><B>beanNamesForTypeIncludingAncestors(ListableBeanFactory, Class, boolean, boolean)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Get all bean names for the given type, including those defined in ancestor
 factories.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanNamesIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)"><B>beanNamesIncludingAncestors(ListableBeanFactory)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return all bean names in the factory, including ancestor factories.
<DT><A HREF="../org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler"><B>BeanNameUrlHandlerMapping</B></A> - Class in <A HREF="../org/springframework/web/servlet/handler/package-summary.html">org.springframework.web.servlet.handler</A><DD>Implementation of the <A HREF="../org/springframework/web/servlet/HandlerMapping.html" title="interface in org.springframework.web.servlet"><CODE>HandlerMapping</CODE></A>
 interface that map from URLs to beans with names that start with a slash ("/"),
 similar to how Struts maps URLs to action names.<DT><A HREF="../org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html#BeanNameUrlHandlerMapping()"><B>BeanNameUrlHandlerMapping()</B></A> - 
Constructor for class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/BeanNameUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">BeanNameUrlHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/BeanNameViewResolver.html" title="class in org.springframework.web.servlet.view"><B>BeanNameViewResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>Simple implementation of ViewResolver that interprets a view name
 as bean name in the current application context, i.e.<DT><A HREF="../org/springframework/web/servlet/view/BeanNameViewResolver.html#BeanNameViewResolver()"><B>BeanNameViewResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/BeanNameViewResolver.html" title="class in org.springframework.web.servlet.view">BeanNameViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/BeanNotOfRequiredTypeException.html" title="class in org.springframework.beans.factory"><B>BeanNotOfRequiredTypeException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Thrown when a bean doesn't match the expected type.<DT><A HREF="../org/springframework/beans/factory/BeanNotOfRequiredTypeException.html#BeanNotOfRequiredTypeException(java.lang.String, java.lang.Class, java.lang.Class)"><B>BeanNotOfRequiredTypeException(String, Class, Class)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanNotOfRequiredTypeException.html" title="class in org.springframework.beans.factory">BeanNotOfRequiredTypeException</A>
<DD>Create a new BeanNotOfRequiredTypeException.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><B>beanOfType(ListableBeanFactory, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return a single bean of the given type or subtypes, not looking in ancestor
 factories.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfType(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><B>beanOfType(ListableBeanFactory, Class&lt;T&gt;, boolean, boolean)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return a single bean of the given type or subtypes, not looking in ancestor
 factories.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><B>beanOfTypeIncludingAncestors(ListableBeanFactory, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beanOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><B>beanOfTypeIncludingAncestors(ListableBeanFactory, Class&lt;T&gt;, boolean, boolean)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return a single bean of the given type or subtypes, also picking up beans
 defined in ancestor bean factories if the current bean factory is a
 HierarchicalBeanFactory.
<DT><A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><B>BeanPostProcessor</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Factory hook that allows for custom modification of new bean instances,
 e.g.<DT><A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><B>BeanPropertyBindingResult</B></A> - Class in <A HREF="../org/springframework/validation/package-summary.html">org.springframework.validation</A><DD>Default implementation of the <A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation"><CODE>Errors</CODE></A> and <A HREF="../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><CODE>BindingResult</CODE></A>
 interfaces, for the registration and evaluation of binding errors on
 JavaBean objects.<DT><A HREF="../org/springframework/validation/BeanPropertyBindingResult.html#BeanPropertyBindingResult(java.lang.Object, java.lang.String)"><B>BeanPropertyBindingResult(Object, String)</B></A> - 
Constructor for class org.springframework.validation.<A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation">BeanPropertyBindingResult</A>
<DD>Creates a new instance of the <A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><CODE>BeanPropertyBindingResult</CODE></A> class.
<DT><A HREF="../org/springframework/validation/BeanPropertyBindingResult.html#BeanPropertyBindingResult(java.lang.Object, java.lang.String, boolean)"><B>BeanPropertyBindingResult(Object, String, boolean)</B></A> - 
Constructor for class org.springframework.validation.<A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation">BeanPropertyBindingResult</A>
<DD>Creates a new instance of the <A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation"><CODE>BeanPropertyBindingResult</CODE></A> class.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core"><B>BeanPropertyRowMapper</B></A>&lt;<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="type parameter in BeanPropertyRowMapper">T</A>&gt; - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD><A HREF="../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core"><CODE>RowMapper</CODE></A> implementation that converts a row into a new instance
 of the specified mapped target class.<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#BeanPropertyRowMapper()"><B>BeanPropertyRowMapper()</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Create a new BeanPropertyRowMapper for bean-style configuration.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#BeanPropertyRowMapper(java.lang.Class)"><B>BeanPropertyRowMapper(Class&lt;T&gt;)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Create a new BeanPropertyRowMapper, accepting unpopulated properties
 in the target bean.
<DT><A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html#BeanPropertyRowMapper(java.lang.Class, boolean)"><B>BeanPropertyRowMapper(Class&lt;T&gt;, boolean)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/BeanPropertyRowMapper.html" title="class in org.springframework.jdbc.core">BeanPropertyRowMapper</A>
<DD>Create a new BeanPropertyRowMapper.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam"><B>BeanPropertySqlParameterSource</B></A> - Class in <A HREF="../org/springframework/jdbc/core/namedparam/package-summary.html">org.springframework.jdbc.core.namedparam</A><DD><A HREF="../org/springframework/jdbc/core/namedparam/SqlParameterSource.html" title="interface in org.springframework.jdbc.core.namedparam"><CODE>SqlParameterSource</CODE></A> implementation that obtains parameter values
 from bean properties of a given JavaBean object.<DT><A HREF="../org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html#BeanPropertySqlParameterSource(java.lang.Object)"><B>BeanPropertySqlParameterSource(Object)</B></A> - 
Constructor for class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/BeanPropertySqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam">BeanPropertySqlParameterSource</A>
<DD>Create a new BeanPropertySqlParameterSource for the given bean.
<DT><A HREF="../org/springframework/beans/factory/config/BeanReference.html" title="interface in org.springframework.beans.factory.config"><B>BeanReference</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Interface that exposes a reference to a bean name in an abstract fashion.<DT><A HREF="../org/springframework/expression/spel/ast/BeanReference.html" title="class in org.springframework.expression.spel.ast"><B>BeanReference</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Represents a bean reference to a type, for example "@foo" or "@'foo.bar'"<DT><A HREF="../org/springframework/expression/spel/ast/BeanReference.html#BeanReference(int, java.lang.String)"><B>BeanReference(int, String)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/BeanReference.html" title="class in org.springframework.expression.spel.ast">BeanReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html" title="class in org.springframework.beans.factory.config"><B>BeanReferenceFactoryBean</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>FactoryBean that exposes an arbitrary target bean under a different name.<DT><A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html#BeanReferenceFactoryBean()"><B>BeanReferenceFactoryBean()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanReferenceFactoryBean.html" title="class in org.springframework.beans.factory.config">BeanReferenceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/BeanResolver.html" title="interface in org.springframework.expression"><B>BeanResolver</B></A> - Interface in <A HREF="../org/springframework/expression/package-summary.html">org.springframework.expression</A><DD>A bean resolver can be registered with the evaluation context
 and will kick in for <code>@myBeanName</code> still expressions.<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#BEANS_NAMESPACE_URI"><B>BEANS_NAMESPACE_URI</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeansDtdResolver.html" title="class in org.springframework.beans.factory.xml"><B>BeansDtdResolver</B></A> - Class in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>EntityResolver implementation for the Spring beans DTD,
 to load the DTD from the Spring class path (or JAR file).<DT><A HREF="../org/springframework/beans/factory/xml/BeansDtdResolver.html#BeansDtdResolver()"><B>BeansDtdResolver()</B></A> - 
Constructor for class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeansDtdResolver.html" title="class in org.springframework.beans.factory.xml">BeansDtdResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeansException.html" title="class in org.springframework.beans"><B>BeansException</B></A> - Exception in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Abstract superclass for all exceptions thrown in the beans package
 and subpackages.<DT><A HREF="../org/springframework/beans/BeansException.html#BeansException(java.lang.String)"><B>BeansException(String)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A>
<DD>Create a new BeansException with the specified message.
<DT><A HREF="../org/springframework/beans/BeansException.html#BeansException(java.lang.String, java.lang.Throwable)"><B>BeansException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/BeansException.html" title="class in org.springframework.beans">BeansException</A>
<DD>Create a new BeansException with the specified message
 and root cause.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class)"><B>beansOfTypeIncludingAncestors(ListableBeanFactory, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, boolean, boolean)"><B>beansOfTypeIncludingAncestors(ListableBeanFactory, Class&lt;T&gt;, boolean, boolean)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Return all beans of the given type or subtypes, also picking up beans defined in
 ancestor bean factories if the current bean factory is a HierarchicalBeanFactory.
<DT><A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans"><B>BeanUtils</B></A> - Class in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Static convenience methods for JavaBeans: for instantiating beans,
 checking bean property types, copying bean properties, etc.<DT><A HREF="../org/springframework/beans/BeanUtils.html#BeanUtils()"><B>BeanUtils()</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html" title="class in org.springframework.validation.beanvalidation"><B>BeanValidationPostProcessor</B></A> - Class in <A HREF="../org/springframework/validation/beanvalidation/package-summary.html">org.springframework.validation.beanvalidation</A><DD>Simple <A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> that checks JSR-303 constraint annotations
 in Spring-managed beans, throwing an initialization exception in case of
 constraint violations right before calling the bean's init method (if any).<DT><A HREF="../org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html#BeanValidationPostProcessor()"><B>BeanValidationPostProcessor()</B></A> - 
Constructor for class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/BeanValidationPostProcessor.html" title="class in org.springframework.validation.beanvalidation">BeanValidationPostProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring"><B>BeanWiringInfo</B></A> - Class in <A HREF="../org/springframework/beans/factory/wiring/package-summary.html">org.springframework.beans.factory.wiring</A><DD>Holder for bean wiring metadata information about a particular class.<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#BeanWiringInfo()"><B>BeanWiringInfo()</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Create a default BeanWiringInfo that suggests plain initialization of
 factory and post-processor callbacks that the bean class may expect.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#BeanWiringInfo(java.lang.String)"><B>BeanWiringInfo(String)</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Create a new BeanWiringInfo that points to the given bean name.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#BeanWiringInfo(java.lang.String, boolean)"><B>BeanWiringInfo(String, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Create a new BeanWiringInfo that points to the given bean name.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html#BeanWiringInfo(int, boolean)"><B>BeanWiringInfo(int, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfo.html" title="class in org.springframework.beans.factory.wiring">BeanWiringInfo</A>
<DD>Create a new BeanWiringInfo that indicates autowiring.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html" title="interface in org.springframework.beans.factory.wiring"><B>BeanWiringInfoResolver</B></A> - Interface in <A HREF="../org/springframework/beans/factory/wiring/package-summary.html">org.springframework.beans.factory.wiring</A><DD>Strategy interface to be implemented by objects than can resolve bean name
 information, given a newly instantiated bean object.<DT><A HREF="../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans"><B>BeanWrapper</B></A> - Interface in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>The central interface of Spring's low-level JavaBeans infrastructure.<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans"><B>BeanWrapperImpl</B></A> - Class in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Default <A HREF="../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans"><CODE>BeanWrapper</CODE></A> implementation that should be sufficient
 for all typical use cases.<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#BeanWrapperImpl()"><B>BeanWrapperImpl()</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Create new empty BeanWrapperImpl.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#BeanWrapperImpl(boolean)"><B>BeanWrapperImpl(boolean)</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Create new empty BeanWrapperImpl.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#BeanWrapperImpl(java.lang.Object)"><B>BeanWrapperImpl(Object)</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Create new BeanWrapperImpl for the given object.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#BeanWrapperImpl(java.lang.Class)"><B>BeanWrapperImpl(Class&lt;?&gt;)</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Create new BeanWrapperImpl, wrapping a new instance of the specified class.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#BeanWrapperImpl(java.lang.Object, java.lang.String, java.lang.Object)"><B>BeanWrapperImpl(Object, String, Object)</B></A> - 
Constructor for class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Create new BeanWrapperImpl for the given object,
 registering a nested path that the object is in.
<DT><A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html#before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)"><B>before(Method, Object[], Object)</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AspectJMethodBeforeAdvice.html" title="class in org.springframework.aop.aspectj">AspectJMethodBeforeAdvice</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/MethodBeforeAdvice.html#before(java.lang.reflect.Method, java.lang.Object[], java.lang.Object)"><B>before(Method, Object[], Object)</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/MethodBeforeAdvice.html" title="interface in org.springframework.aop">MethodBeforeAdvice</A>
<DD>Callback before a given method is invoked.
<DT><A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html#beforeAccess()"><B>beforeAccess()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html" title="class in org.springframework.util">ConcurrencyThrottleSupport</A>
<DD>To be invoked before the main execution logic of concrete subclasses.
<DT><A HREF="../org/springframework/aop/BeforeAdvice.html" title="interface in org.springframework.aop"><B>BeforeAdvice</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Common marker interface for before advice, such as <A HREF="../org/springframework/aop/MethodBeforeAdvice.html" title="interface in org.springframework.aop"><CODE>MethodBeforeAdvice</CODE></A>.<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#beforeCommit(boolean)"><B>beforeCommit(boolean)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronization.html#beforeCommit(boolean)"><B>beforeCommit(boolean)</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronization.html" title="interface in org.springframework.transaction.support">TransactionSynchronization</A>
<DD>Invoked before transaction commit (before "beforeCompletion").
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html#beforeCommit(boolean)"><B>beforeCommit(boolean)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html" title="class in org.springframework.transaction.support">TransactionSynchronizationAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/lob/JtaLobCreatorSynchronization.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/JtaLobCreatorSynchronization.html" title="class in org.springframework.jdbc.support.lob">JtaLobCreatorSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/SpringLobCreatorSynchronization.html" title="class in org.springframework.jdbc.support.lob">SpringLobCreatorSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaAfterCompletionSynchronization.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaAfterCompletionSynchronization.html" title="class in org.springframework.transaction.jta">JtaAfterCompletionSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.html" title="class in org.springframework.transaction.jta">SpringJtaSynchronizationAdapter</A>
<DD>JTA <code>beforeCompletion</code> callback: just invoked before commit.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronization.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronization.html" title="interface in org.springframework.transaction.support">TransactionSynchronization</A>
<DD>Invoked before transaction commit/rollback.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html#beforeCompletion()"><B>beforeCompletion()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html" title="class in org.springframework.transaction.support">TransactionSynchronizationAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html#beforeDelivery(java.lang.reflect.Method)"><B>beforeDelivery(Method)</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory.AbstractMessageEndpoint</A>
<DD>This <code>beforeDelivery</code> implementation starts a transaction,
 if necessary, and exposes the endpoint ClassLoader as current
 thread context ClassLoader.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#beforeFirst()"><B>beforeFirst()</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#beforeFirst()"><B>beforeFirst()</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Moves the cursor to the front of this RowSet, just before the first row.
<DT><A HREF="../org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html#beforePhase(javax.faces.event.PhaseEvent)"><B>beforePhase(PhaseEvent)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/DelegatingPhaseListenerMulticaster.html" title="class in org.springframework.web.jsf">DelegatingPhaseListenerMulticaster</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#beforePrototypeCreation(java.lang.String)"><B>beforePrototypeCreation(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Callback before prototype creation.
<DT><A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html#beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)"><B>beforeRequest(HttpServletRequest, String)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html" title="class in org.springframework.web.filter">AbstractRequestLoggingFilter</A>
<DD>Concrete subclasses should implement this method to write a log message <i>before</i> the request is processed.
<DT><A HREF="../org/springframework/web/filter/CommonsRequestLoggingFilter.html#beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)"><B>beforeRequest(HttpServletRequest, String)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/CommonsRequestLoggingFilter.html" title="class in org.springframework.web.filter">CommonsRequestLoggingFilter</A>
<DD>Writes a log message before the request is processed.
<DT><A HREF="../org/springframework/web/filter/Log4jNestedDiagnosticContextFilter.html#beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)"><B>beforeRequest(HttpServletRequest, String)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/Log4jNestedDiagnosticContextFilter.html" title="class in org.springframework.web.filter">Log4jNestedDiagnosticContextFilter</A>
<DD>Logs the before-request message through Log4J and
 adds a message the Log4J NDC before the request is processed.
<DT><A HREF="../org/springframework/web/filter/ServletContextRequestLoggingFilter.html#beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String)"><B>beforeRequest(HttpServletRequest, String)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/ServletContextRequestLoggingFilter.html" title="class in org.springframework.web.filter">ServletContextRequestLoggingFilter</A>
<DD>Writes a log message before the request is processed.
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#beforeSessionFactoryDestruction()"><B>beforeSessionFactoryDestruction()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>Hook that allows shutdown processing before the SessionFactory
 will be closed.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#beforeSingletonCreation(java.lang.String)"><B>beforeSingletonCreation(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Callback before singleton creation.
<DT><A HREF="../org/springframework/test/context/support/AbstractTestExecutionListener.html#beforeTestClass(org.springframework.test.context.TestContext)"><B>beforeTestClass(TestContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractTestExecutionListener.html" title="class in org.springframework.test.context.support">AbstractTestExecutionListener</A>
<DD>The default implementation is <em>empty</em>.
<DT><A HREF="../org/springframework/test/context/TestContextManager.html#beforeTestClass()"><B>beforeTestClass()</B></A> - 
Method in class org.springframework.test.context.<A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context">TestContextManager</A>
<DD>Hook for pre-processing a test class <em>before</em> execution of any
 tests within the class.
<DT><A HREF="../org/springframework/test/context/TestExecutionListener.html#beforeTestClass(org.springframework.test.context.TestContext)"><B>beforeTestClass(TestContext)</B></A> - 
Method in interface org.springframework.test.context.<A HREF="../org/springframework/test/context/TestExecutionListener.html" title="interface in org.springframework.test.context">TestExecutionListener</A>
<DD>Pre-processes a test class <em>before</em> execution of all tests within
 the class.
<DT><A HREF="../org/springframework/test/context/support/AbstractTestExecutionListener.html#beforeTestMethod(org.springframework.test.context.TestContext)"><B>beforeTestMethod(TestContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractTestExecutionListener.html" title="class in org.springframework.test.context.support">AbstractTestExecutionListener</A>
<DD>The default implementation is <em>empty</em>.
<DT><A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#beforeTestMethod(org.springframework.test.context.TestContext)"><B>beforeTestMethod(TestContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html" title="class in org.springframework.test.context.support">DependencyInjectionTestExecutionListener</A>
<DD>If the <A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#REINJECT_DEPENDENCIES_ATTRIBUTE"><CODE>DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE</CODE></A> in the supplied
 <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A> has a value of <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Boolean.html?is-external=true#TRUE" title="class or interface in java.lang"><CODE>Boolean.TRUE</CODE></A>,
 this method will have the same effect as
 <A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#prepareTestInstance(org.springframework.test.context.TestContext)"><CODE>prepareTestInstance()</CODE></A>;
 otherwise, this method will have no effect.
<DT><A HREF="../org/springframework/test/context/TestContextManager.html#beforeTestMethod(java.lang.Object, java.lang.reflect.Method)"><B>beforeTestMethod(Object, Method)</B></A> - 
Method in class org.springframework.test.context.<A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context">TestContextManager</A>
<DD>Hook for pre-processing a test <em>before</em> execution of the supplied
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>test method</CODE></A>, for example for setting up test fixtures,
 starting a transaction, etc.
<DT><A HREF="../org/springframework/test/context/TestExecutionListener.html#beforeTestMethod(org.springframework.test.context.TestContext)"><B>beforeTestMethod(TestContext)</B></A> - 
Method in interface org.springframework.test.context.<A HREF="../org/springframework/test/context/TestExecutionListener.html" title="interface in org.springframework.test.context">TestExecutionListener</A>
<DD>Pre-processes a test <em>before</em> execution of the
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>test method</CODE></A> in the supplied
 <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A>, for example by setting up test
 fixtures.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#beforeTestMethod(org.springframework.test.context.TestContext)"><B>beforeTestMethod(TestContext)</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html" title="class in org.springframework.test.context.transaction">TransactionalTestExecutionListener</A>
<DD>If the test method of the supplied <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A> is
 configured to run within a transaction, this method will run
 <A HREF="../org/springframework/test/context/transaction/BeforeTransaction.html" title="annotation in org.springframework.test.context.transaction"><CODE>@BeforeTransaction methods</CODE></A> and start a new
 transaction.
<DT><A HREF="../org/springframework/test/context/transaction/BeforeTransaction.html" title="annotation in org.springframework.test.context.transaction"><B>BeforeTransaction</B></A> - Annotation Type in <A HREF="../org/springframework/test/context/transaction/package-summary.html">org.springframework.test.context.transaction</A><DD>
 Test annotation to indicate that the annotated <code>public void</code>
 method should be executed <em>before</em> a transaction is started for test
 methods configured to run within a transaction via the
 <code>&#064;Transactional</code> annotation.<DT><A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html#begin()"><B>begin()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html" title="class in org.springframework.transaction.jta">UserTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html#beginTransaction(javax.jdo.Transaction, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(Transaction, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html" title="class in org.springframework.orm.jdo">DefaultJdoDialect</A>
<DD>This implementation invokes the standard JDO <code>Transaction.begin</code>
 method.
<DT><A HREF="../org/springframework/orm/jdo/JdoDialect.html#beginTransaction(javax.jdo.Transaction, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(Transaction, TransactionDefinition)</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoDialect.html" title="interface in org.springframework.orm.jdo">JdoDialect</A>
<DD>Begin the given JDO transaction, applying the semantics specified by the
 given Spring transaction definition (in particular, an isolation level
 and a timeout).
<DT><A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html" title="class in org.springframework.orm.jpa">DefaultJpaDialect</A>
<DD>This implementation invokes the standard JPA <code>Transaction.begin</code>
 method.
<DT><A HREF="../org/springframework/orm/jpa/JpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaDialect.html" title="interface in org.springframework.orm.jpa">JpaDialect</A>
<DD>Begin the given JPA transaction, applying the semantics specified by the
 given Spring transaction definition (in particular, an isolation level
 and a timeout).
<DT><A HREF="../org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/EclipseLinkJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">EclipseLinkJpaDialect</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/vendor/HibernateJpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/HibernateJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">HibernateJpaDialect</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/vendor/OpenJpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/OpenJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">OpenJpaDialect</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html#beginTransaction(javax.persistence.EntityManager, org.springframework.transaction.TransactionDefinition)"><B>beginTransaction(EntityManager, TransactionDefinition)</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/TopLinkJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">TopLinkJpaDialect</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/HandlerMapping.html#BEST_MATCHING_PATTERN_ATTRIBUTE"><B>BEST_MATCHING_PATTERN_ATTRIBUTE</B></A> - 
Static variable in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HandlerMapping.html" title="interface in org.springframework.web.servlet">HandlerMapping</A>
<DD>Name of the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A> attribute that contains the
 best matching pattern within the handler mapping.
<DT><A HREF="../org/springframework/jndi/JndiTemplate.html#bind(java.lang.String, java.lang.Object)"><B>bind(String, Object)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiTemplate.html" title="class in org.springframework.jndi">JndiTemplate</A>
<DD>Bind the given object to the current JNDI context, using the given name.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#bind(java.lang.String, java.lang.Object)"><B>bind(String, Object)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>Bind the given object to the given name.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#bind(javax.naming.Name, java.lang.Object)"><B>bind(Name, Object)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html#bind(java.lang.String, java.lang.Object)"><B>bind(String, Object)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html" title="class in org.springframework.mock.jndi">SimpleNamingContextBuilder</A>
<DD>Bind the given object under the given name, for all naming contexts
 that this context builder will generate.
<DT><A HREF="../org/springframework/validation/DataBinder.html#bind(org.springframework.beans.PropertyValues)"><B>bind(PropertyValues)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Bind the given property values to this binder's target.
<DT><A HREF="../org/springframework/web/bind/ServletRequestDataBinder.html#bind(javax.servlet.ServletRequest)"><B>bind(ServletRequest)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/ServletRequestDataBinder.html" title="class in org.springframework.web.bind">ServletRequestDataBinder</A>
<DD>Bind the parameters of the given request to this binder's target,
 also binding multipart files in case of a multipart request.
<DT><A HREF="../org/springframework/web/bind/support/WebRequestDataBinder.html#bind(org.springframework.web.context.request.WebRequest)"><B>bind(WebRequest)</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/WebRequestDataBinder.html" title="class in org.springframework.web.bind.support">WebRequestDataBinder</A>
<DD>Bind the parameters of the given request to this binder's target,
 also binding multipart files in case of a multipart request.
<DT><A HREF="../org/springframework/web/portlet/bind/PortletRequestDataBinder.html#bind(javax.portlet.PortletRequest)"><B>bind(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.bind.<A HREF="../org/springframework/web/portlet/bind/PortletRequestDataBinder.html" title="class in org.springframework.web.portlet.bind">PortletRequestDataBinder</A>
<DD>Bind the parameters of the given request to this binder's target,
 also binding multipart files in case of a multipart request.
<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html#bind(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>bind(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.multiaction.<A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html" title="class in org.springframework.web.servlet.mvc.multiaction">MultiActionController</A>
<DD>Bind request parameters onto the given command bean
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#bindAndValidate(javax.portlet.PortletRequest, java.lang.Object)"><B>bindAndValidate(PortletRequest, Object)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Bind the parameters of the given request to the given command object.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#bindAndValidate(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>bindAndValidate(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Bind the parameters of the given request to the given command object.
<DT><A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html#bindDefaultNamespaceUri(java.lang.String)"><B>bindDefaultNamespaceUri(String)</B></A> - 
Method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html" title="class in org.springframework.util.xml">SimpleNamespaceContext</A>
<DD>Binds the given namespace as default namespace.
<DT><A HREF="../org/springframework/web/servlet/tags/BindErrorsTag.html" title="class in org.springframework.web.servlet.tags"><B>BindErrorsTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/package-summary.html">org.springframework.web.servlet.tags</A><DD>JSP tag that evaluates content if there are binding errors
 for a certain bean.<DT><A HREF="../org/springframework/web/servlet/tags/BindErrorsTag.html#BindErrorsTag()"><B>BindErrorsTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/BindErrorsTag.html" title="class in org.springframework.web.servlet.tags">BindErrorsTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation"><B>BindException</B></A> - Exception in <A HREF="../org/springframework/validation/package-summary.html">org.springframework.validation</A><DD>Thrown when binding errors are considered fatal.<DT><A HREF="../org/springframework/validation/BindException.html#BindException(org.springframework.validation.BindingResult)"><B>BindException(BindingResult)</B></A> - 
Constructor for exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>Create a new BindException instance for a BindingResult.
<DT><A HREF="../org/springframework/validation/BindException.html#BindException(java.lang.Object, java.lang.String)"><B>BindException(Object, String)</B></A> - 
Constructor for exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>Create a new BindException instance for a target bean.
<DT><A HREF="../org/springframework/validation/support/BindingAwareModelMap.html" title="class in org.springframework.validation.support"><B>BindingAwareModelMap</B></A> - Class in <A HREF="../org/springframework/validation/support/package-summary.html">org.springframework.validation.support</A><DD>Subclass of <A HREF="../org/springframework/ui/ExtendedModelMap.html" title="class in org.springframework.ui"><CODE>ExtendedModelMap</CODE></A> that
 automatically removes a <A HREF="../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><CODE>BindingResult</CODE></A>
 object if the corresponding target attribute gets replaced.<DT><A HREF="../org/springframework/validation/support/BindingAwareModelMap.html#BindingAwareModelMap()"><B>BindingAwareModelMap()</B></A> - 
Constructor for class org.springframework.validation.support.<A HREF="../org/springframework/validation/support/BindingAwareModelMap.html" title="class in org.springframework.validation.support">BindingAwareModelMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindingErrorProcessor.html" title="interface in org.springframework.validation"><B>BindingErrorProcessor</B></A> - Interface in <A HREF="../org/springframework/validation/package-summary.html">org.springframework.validation</A><DD>Strategy for processing <code>DataBinder</code>'s missing field errors,
 and for translating a <code>PropertyAccessException</code> to a
 <code>FieldError</code>.<DT><A HREF="../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation"><B>BindingResult</B></A> - Interface in <A HREF="../org/springframework/validation/package-summary.html">org.springframework.validation</A><DD>General interface that represents binding results.<DT><A HREF="../org/springframework/validation/BindingResultUtils.html" title="class in org.springframework.validation"><B>BindingResultUtils</B></A> - Class in <A HREF="../org/springframework/validation/package-summary.html">org.springframework.validation</A><DD>Convenience methods for looking up BindingResults in a model Map.<DT><A HREF="../org/springframework/validation/BindingResultUtils.html#BindingResultUtils()"><B>BindingResultUtils()</B></A> - 
Constructor for class org.springframework.validation.<A HREF="../org/springframework/validation/BindingResultUtils.html" title="class in org.springframework.validation">BindingResultUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/WebDataBinder.html#bindMultipart(java.util.Map, org.springframework.beans.MutablePropertyValues)"><B>bindMultipart(Map&lt;String, List&lt;MultipartFile&gt;&gt;, MutablePropertyValues)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind">WebDataBinder</A>
<DD>Bind all multipart files contained in the given request, if any
 (in case of a multipart request).
<DT><A HREF="../org/springframework/web/bind/WebDataBinder.html#bindMultipartFiles(java.util.Map, org.springframework.beans.MutablePropertyValues)"><B>bindMultipartFiles(Map&lt;String, MultipartFile&gt;, MutablePropertyValues)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind">WebDataBinder</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of <A HREF="../org/springframework/web/bind/WebDataBinder.html#bindMultipart(java.util.Map, org.springframework.beans.MutablePropertyValues)"><CODE>WebDataBinder.bindMultipart(java.util.Map<java.lang.String, java.util.List<org.springframework.web.multipart.MultipartFile>>, org.springframework.beans.MutablePropertyValues)</CODE></A> which binds
 all multipart files, even if more than one sent for the same name</I>
<DT><A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html#bindNamespaceUri(java.lang.String, java.lang.String)"><B>bindNamespaceUri(String, String)</B></A> - 
Method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html" title="class in org.springframework.util.xml">SimpleNamespaceContext</A>
<DD>Binds the given prefix to the given namespace.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#bindResource(java.lang.Object, java.lang.Object)"><B>bindResource(Object, Object)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Bind the given resource for the given key to the current thread.
<DT><A HREF="../org/springframework/web/servlet/support/BindStatus.html" title="class in org.springframework.web.servlet.support"><B>BindStatus</B></A> - Class in <A HREF="../org/springframework/web/servlet/support/package-summary.html">org.springframework.web.servlet.support</A><DD>Simple adapter to expose the bind status of a field or object.<DT><A HREF="../org/springframework/web/servlet/support/BindStatus.html#BindStatus(org.springframework.web.servlet.support.RequestContext, java.lang.String, boolean)"><B>BindStatus(RequestContext, String, boolean)</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/BindStatus.html" title="class in org.springframework.web.servlet.support">BindStatus</A>
<DD>Create a new BindStatus instance, representing a field or object status.
<DT><A HREF="../org/springframework/web/servlet/tags/BindTag.html" title="class in org.springframework.web.servlet.tags"><B>BindTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/package-summary.html">org.springframework.web.servlet.tags</A><DD>Bind tag, supporting evaluation of binding errors for a certain
 bean or bean property.<DT><A HREF="../org/springframework/web/servlet/tags/BindTag.html#BindTag()"><B>BindTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/BindTag.html" title="class in org.springframework.web.servlet.tags">BindTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html" title="class in org.springframework.orm.hibernate3.support"><B>BlobByteArrayType</B></A> - Class in <A HREF="../org/springframework/orm/hibernate3/support/package-summary.html">org.springframework.orm.hibernate3.support</A><DD>Hibernate UserType implementation for byte arrays that get mapped to BLOBs.<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html#BlobByteArrayType()"><B>BlobByteArrayType()</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html" title="class in org.springframework.orm.hibernate3.support">BlobByteArrayType</A>
<DD>Constructor used by Hibernate: fetches config-time LobHandler and
 config-time JTA TransactionManager from LocalSessionFactoryBean.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html#BlobByteArrayType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)"><B>BlobByteArrayType(LobHandler, TransactionManager)</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html" title="class in org.springframework.orm.hibernate3.support">BlobByteArrayType</A>
<DD>Constructor used for testing: takes an explicit LobHandler
 and an explicit JTA TransactionManager (can be <code>null</code>).
<DT><A HREF="../org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html" title="class in org.springframework.orm.ibatis.support"><B>BlobByteArrayTypeHandler</B></A> - Class in <A HREF="../org/springframework/orm/ibatis/support/package-summary.html">org.springframework.orm.ibatis.support</A><DD>iBATIS TypeHandler implementation for byte arrays that get mapped to BLOBs.<DT><A HREF="../org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html#BlobByteArrayTypeHandler()"><B>BlobByteArrayTypeHandler()</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html" title="class in org.springframework.orm.ibatis.support">BlobByteArrayTypeHandler</A>
<DD>Constructor used by iBATIS: fetches config-time LobHandler from
 SqlMapClientFactoryBean.
<DT><A HREF="../org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html#BlobByteArrayTypeHandler(org.springframework.jdbc.support.lob.LobHandler)"><B>BlobByteArrayTypeHandler(LobHandler)</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/BlobByteArrayTypeHandler.html" title="class in org.springframework.orm.ibatis.support">BlobByteArrayTypeHandler</A>
<DD>Constructor used for testing: takes an explicit LobHandler.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html" title="class in org.springframework.orm.hibernate3.support"><B>BlobSerializableType</B></A> - Class in <A HREF="../org/springframework/orm/hibernate3/support/package-summary.html">org.springframework.orm.hibernate3.support</A><DD>Hibernate UserType implementation for arbitrary objects that get serialized to BLOBs.<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html#BlobSerializableType()"><B>BlobSerializableType()</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html" title="class in org.springframework.orm.hibernate3.support">BlobSerializableType</A>
<DD>Constructor used by Hibernate: fetches config-time LobHandler and
 config-time JTA TransactionManager from LocalSessionFactoryBean.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html#BlobSerializableType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)"><B>BlobSerializableType(LobHandler, TransactionManager)</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html" title="class in org.springframework.orm.hibernate3.support">BlobSerializableType</A>
<DD>Constructor used for testing: takes an explicit LobHandler
 and an explicit JTA TransactionManager (can be <code>null</code>).
<DT><A HREF="../org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html" title="class in org.springframework.orm.ibatis.support"><B>BlobSerializableTypeHandler</B></A> - Class in <A HREF="../org/springframework/orm/ibatis/support/package-summary.html">org.springframework.orm.ibatis.support</A><DD>iBATIS TypeHandler implementation for arbitrary objects that get serialized to BLOBs.<DT><A HREF="../org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html#BlobSerializableTypeHandler()"><B>BlobSerializableTypeHandler()</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html" title="class in org.springframework.orm.ibatis.support">BlobSerializableTypeHandler</A>
<DD>Constructor used by iBATIS: fetches config-time LobHandler from
 SqlMapClientFactoryBean.
<DT><A HREF="../org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html#BlobSerializableTypeHandler(org.springframework.jdbc.support.lob.LobHandler)"><B>BlobSerializableTypeHandler(LobHandler)</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/BlobSerializableTypeHandler.html" title="class in org.springframework.orm.ibatis.support">BlobSerializableTypeHandler</A>
<DD>Constructor used for testing: takes an explicit LobHandler.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html" title="class in org.springframework.orm.hibernate3.support"><B>BlobStringType</B></A> - Class in <A HREF="../org/springframework/orm/hibernate3/support/package-summary.html">org.springframework.orm.hibernate3.support</A><DD>Hibernate UserType implementation for Strings that get mapped to BLOBs.<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html#BlobStringType()"><B>BlobStringType()</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html" title="class in org.springframework.orm.hibernate3.support">BlobStringType</A>
<DD>Constructor used by Hibernate: fetches config-time LobHandler and
 config-time JTA TransactionManager from LocalSessionFactoryBean.
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html#BlobStringType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)"><B>BlobStringType(LobHandler, TransactionManager)</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html" title="class in org.springframework.orm.hibernate3.support">BlobStringType</A>
<DD>Constructor used for testing: takes an explicit LobHandler
 and an explicit JTA TransactionManager (can be <code>null</code>).
<DT><A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html#blockForAvailableThreads()"><B>blockForAvailableThreads()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html" title="class in org.springframework.scheduling.quartz">LocalTaskExecutorThreadPool</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/BooleanComparator.html" title="class in org.springframework.util.comparator"><B>BooleanComparator</B></A> - Class in <A HREF="../org/springframework/util/comparator/package-summary.html">org.springframework.util.comparator</A><DD>A Comparator for Boolean objects that can sort either true or false first.<DT><A HREF="../org/springframework/util/comparator/BooleanComparator.html#BooleanComparator(boolean)"><B>BooleanComparator(boolean)</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/BooleanComparator.html" title="class in org.springframework.util.comparator">BooleanComparator</A>
<DD>Create a BooleanComparator that sorts boolean values based on
 the provided flag.
<DT><A HREF="../org/springframework/expression/spel/ast/BooleanLiteral.html" title="class in org.springframework.expression.spel.ast"><B>BooleanLiteral</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Represents the literal values TRUE and FALSE.<DT><A HREF="../org/springframework/expression/spel/ast/BooleanLiteral.html#BooleanLiteral(java.lang.String, int, boolean)"><B>BooleanLiteral(String, int, boolean)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/BooleanLiteral.html" title="class in org.springframework.expression.spel.ast">BooleanLiteral</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/BooleanTypedValue.html" title="class in org.springframework.expression.spel.support"><B>BooleanTypedValue</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>&nbsp;<DT><A HREF="../org/springframework/jca/context/BootstrapContextAware.html" title="interface in org.springframework.jca.context"><B>BootstrapContextAware</B></A> - Interface in <A HREF="../org/springframework/jca/context/package-summary.html">org.springframework.jca.context</A><DD>Interface to be implemented by any object that wishes to be
 notified of the BootstrapContext (typically determined by the
 <A HREF="../org/springframework/jca/context/ResourceAdapterApplicationContext.html" title="class in org.springframework.jca.context"><CODE>ResourceAdapterApplicationContext</CODE></A>) that it runs in.<DT><A HREF="../org/springframework/beans/factory/access/BootstrapException.html" title="class in org.springframework.beans.factory.access"><B>BootstrapException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/access/package-summary.html">org.springframework.beans.factory.access</A><DD>Exception thrown if a bean factory could not be loaded by a bootstrap class.<DT><A HREF="../org/springframework/beans/factory/access/BootstrapException.html#BootstrapException(java.lang.String)"><B>BootstrapException(String)</B></A> - 
Constructor for exception org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/BootstrapException.html" title="class in org.springframework.beans.factory.access">BootstrapException</A>
<DD>Create a new BootstrapException with the specified message.
<DT><A HREF="../org/springframework/beans/factory/access/BootstrapException.html#BootstrapException(java.lang.String, java.lang.Throwable)"><B>BootstrapException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/BootstrapException.html" title="class in org.springframework.beans.factory.access">BootstrapException</A>
<DD>Create a new BootstrapException with the specified message
 and root cause.
<DT><A HREF="../org/springframework/core/BridgeMethodResolver.html" title="class in org.springframework.core"><B>BridgeMethodResolver</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Helper for resolving synthetic <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true#isBridge()" title="class or interface in java.lang.reflect"><CODE>bridge Methods</CODE></A> to the
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/Method.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>Method</CODE></A> being bridged.<DT><A HREF="../org/springframework/core/BridgeMethodResolver.html#BridgeMethodResolver()"><B>BridgeMethodResolver()</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/BridgeMethodResolver.html" title="class in org.springframework.core">BridgeMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browse(org.springframework.jms.core.BrowserCallback)"><B>browse(BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse messages in the default JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browse(javax.jms.Queue, org.springframework.jms.core.BrowserCallback)"><B>browse(Queue, BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse messages in a JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browse(java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browse(String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse messages in a JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browse(org.springframework.jms.core.BrowserCallback)"><B>browse(BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browse(javax.jms.Queue, org.springframework.jms.core.BrowserCallback)"><B>browse(Queue, BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browse(java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browse(String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/BrowserCallback.html" title="interface in org.springframework.jms.core"><B>BrowserCallback</B></A>&lt;<A HREF="../org/springframework/jms/core/BrowserCallback.html" title="type parameter in BrowserCallback">T</A>&gt; - Interface in <A HREF="../org/springframework/jms/core/package-summary.html">org.springframework.jms.core</A><DD>Callback for browsing the messages in a JMS queue.<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browseSelected(java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse selected messages in a JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browseSelected(javax.jms.Queue, java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(Queue, String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse selected messages in a JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#browseSelected(java.lang.String, java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(String, String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Browse selected messages in a JMS queue.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browseSelected(java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browseSelected(javax.jms.Queue, java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(Queue, String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#browseSelected(java.lang.String, java.lang.String, org.springframework.jms.core.BrowserCallback)"><B>browseSelected(String, String, BrowserCallback&lt;T&gt;)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html" title="class in org.springframework.scripting.bsh"><B>BshScriptFactory</B></A> - Class in <A HREF="../org/springframework/scripting/bsh/package-summary.html">org.springframework.scripting.bsh</A><DD><A HREF="../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> implementation
 for a BeanShell script.<DT><A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html#BshScriptFactory(java.lang.String)"><B>BshScriptFactory(String)</B></A> - 
Constructor for class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html" title="class in org.springframework.scripting.bsh">BshScriptFactory</A>
<DD>Create a new BshScriptFactory for the given script source.
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html#BshScriptFactory(java.lang.String, java.lang.Class[])"><B>BshScriptFactory(String, Class[])</B></A> - 
Constructor for class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html" title="class in org.springframework.scripting.bsh">BshScriptFactory</A>
<DD>Create a new BshScriptFactory for the given script source.
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html" title="class in org.springframework.scripting.bsh"><B>BshScriptUtils</B></A> - Class in <A HREF="../org/springframework/scripting/bsh/package-summary.html">org.springframework.scripting.bsh</A><DD>Utility methods for handling BeanShell-scripted objects.<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html#BshScriptUtils()"><B>BshScriptUtils()</B></A> - 
Constructor for class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html" title="class in org.springframework.scripting.bsh">BshScriptUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.BshExecutionException.html" title="class in org.springframework.scripting.bsh"><B>BshScriptUtils.BshExecutionException</B></A> - Exception in <A HREF="../org/springframework/scripting/bsh/package-summary.html">org.springframework.scripting.bsh</A><DD>Exception to be thrown on script execution failure.<DT><A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter102.html#BUFFER_SIZE"><B>BUFFER_SIZE</B></A> - 
Static variable in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter102.html" title="class in org.springframework.jms.support.converter">SimpleMessageConverter102</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#BUFFER_SIZE"><B>BUFFER_SIZE</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter"><B>BufferedImageHttpMessageConverter</B></A> - Class in <A HREF="../org/springframework/http/converter/package-summary.html">org.springframework.http.converter</A><DD>Implementation of <A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter"><CODE>HttpMessageConverter</CODE></A> that can read and write <A HREF="http://java.sun.com/javase/6/docs/api/java/awt/image/BufferedImage.html?is-external=true" title="class or interface in java.awt.image"><CODE>BufferedImages</CODE></A>.<DT><A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html#BufferedImageHttpMessageConverter()"><B>BufferedImageHttpMessageConverter()</B></A> - 
Constructor for class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter">BufferedImageHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html#build()"><B>build()</B></A> - 
Method in class org.springframework.jdbc.datasource.embedded.<A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseBuilder.html" title="class in org.springframework.jdbc.datasource.embedded">EmbeddedDatabaseBuilder</A>
<DD>Build the embedded database.
<DT><A HREF="../org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html#buildAdvice(java.util.concurrent.Executor)"><B>buildAdvice(Executor)</B></A> - 
Method in class org.springframework.scheduling.annotation.<A HREF="../org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html" title="class in org.springframework.scheduling.annotation">AsyncAnnotationAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html#buildAdvisors(java.lang.String, java.lang.Object[])"><B>buildAdvisors(String, Object[])</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAutoProxyCreator</A>
<DD>Determine the advisors for the given bean, including the specific interceptors
 as well as the common interceptor, all adapted to the Advisor interface.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html#buildAspectJAdvisors()"><B>buildAspectJAdvisors()</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/BeanFactoryAspectJAdvisorsBuilder.html" title="class in org.springframework.aop.aspectj.annotation">BeanFactoryAspectJAdvisorsBuilder</A>
<DD>Look for AspectJ-annotated aspect beans in the current bean factory,
 and return to a list of Spring AOP Advisors representing them.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalCacheProviderProxy.html#buildCache(java.lang.String, java.util.Properties)"><B>buildCache(String, Properties)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalCacheProviderProxy.html" title="class in org.springframework.orm.hibernate3">LocalCacheProviderProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html#buildCollectionRegion(java.lang.String, java.util.Properties, org.hibernate.cache.CacheDataDescription)"><B>buildCollectionRegion(String, Properties, CacheDataDescription)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html" title="class in org.springframework.orm.hibernate3">LocalRegionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/AnnotationBeanNameGenerator.html#buildDefaultBeanName(org.springframework.beans.factory.config.BeanDefinition)"><B>buildDefaultBeanName(BeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationBeanNameGenerator.html" title="class in org.springframework.context.annotation">AnnotationBeanNameGenerator</A>
<DD>Derive a default bean name from the given bean definition.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html#buildEntityRegion(java.lang.String, java.util.Properties, org.hibernate.cache.CacheDataDescription)"><B>buildEntityRegion(String, Properties, CacheDataDescription)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html" title="class in org.springframework.orm.hibernate3">LocalRegionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractExcelView.html#buildExcelDocument(java.util.Map, org.apache.poi.hssf.usermodel.HSSFWorkbook, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildExcelDocument(Map&lt;String, Object&gt;, HSSFWorkbook, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractExcelView.html" title="class in org.springframework.web.servlet.view.document">AbstractExcelView</A>
<DD>Subclasses must implement this method to create an Excel HSSFWorkbook document,
 given the model.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractJExcelView.html#buildExcelDocument(java.util.Map, jxl.write.WritableWorkbook, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildExcelDocument(Map&lt;String, Object&gt;, WritableWorkbook, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractJExcelView.html" title="class in org.springframework.web.servlet.view.document">AbstractJExcelView</A>
<DD>Subclasses must implement this method to create an Excel Workbook
 document, given the model.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#buildExceptionMessage(javax.jms.JMSException)"><B>buildExceptionMessage(JMSException)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Build a descriptive exception message for the given JMSException,
 incorporating a linked exception's message if appropriate.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html#buildFeedEntries(java.util.Map, com.sun.syndication.feed.atom.Feed, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildFeedEntries(Map&lt;String, Object&gt;, Feed, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractAtomFeedView</A>
<DD>Invokes <A HREF="../org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html#buildFeedEntries(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>AbstractAtomFeedView.buildFeedEntries(Map, HttpServletRequest, HttpServletResponse)</CODE></A>
 to get a list of feed entries.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html#buildFeedEntries(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildFeedEntries(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractAtomFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractAtomFeedView</A>
<DD>Subclasses must implement this method to build feed entries, given the model.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html#buildFeedEntries(java.util.Map, T, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildFeedEntries(Map&lt;String, Object&gt;, T, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractFeedView</A>
<DD>Subclasses must implement this method to build feed entries, given the model.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractRssFeedView.html#buildFeedEntries(java.util.Map, com.sun.syndication.feed.rss.Channel, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildFeedEntries(Map&lt;String, Object&gt;, Channel, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractRssFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractRssFeedView</A>
<DD>Invokes <A HREF="../org/springframework/web/servlet/view/feed/AbstractRssFeedView.html#buildFeedItems(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><CODE>AbstractRssFeedView.buildFeedItems(Map, HttpServletRequest, HttpServletResponse)</CODE></A>
 to get a list of feed items.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractRssFeedView.html#buildFeedItems(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildFeedItems(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractRssFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractRssFeedView</A>
<DD>Subclasses must implement this method to build feed items, given the model.
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html#buildFeedMetadata(java.util.Map, T, javax.servlet.http.HttpServletRequest)"><B>buildFeedMetadata(Map&lt;String, Object&gt;, T, HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractFeedView</A>
<DD>Populate the feed metadata (title, link, description, etc.).
<DT><A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html#buildFieldList(java.lang.String, java.util.List)"><B>buildFieldList(String, List&lt;String&gt;)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html" title="class in org.springframework.validation">DefaultMessageCodesResolver</A>
<DD>Add both keyed and non-keyed entries for the supplied <code>field</code>
 to the supplied field list.
<DT><A HREF="../org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html#buildHttpContext(javax.xml.ws.Endpoint, java.lang.String)"><B>buildHttpContext(Endpoint, String)</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html" title="class in org.springframework.remoting.jaxws">SimpleHttpServerJaxWsServiceExporter</A>
<DD>Build the HttpContext for the given endpoint.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html#buildInternalBeanFactory(org.springframework.beans.factory.config.ConfigurableBeanFactory)"><B>buildInternalBeanFactory(ConfigurableBeanFactory)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">AbstractBeanFactoryBasedTargetSourceCreator</A>
<DD>Build an internal BeanFactory for resolving target beans.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html#buildListenerArguments(java.lang.Object)"><B>buildListenerArguments(Object)</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter</A>
<DD>Build an array of arguments to be passed into the target listener method.
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#buildLocaleContext(javax.portlet.PortletRequest)"><B>buildLocaleContext(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>Build a LocaleContext for the given request, exposing the request's
 primary locale as current locale.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#buildLocaleContext(javax.servlet.http.HttpServletRequest)"><B>buildLocaleContext(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Build a LocaleContext for the given request, exposing the request's primary locale as current locale.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#buildLocaleContext(javax.servlet.http.HttpServletRequest)"><B>buildLocaleContext(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Build a LocaleContext for the given request, exposing the request's
 primary locale as current locale.
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html#buildLogMessage(java.lang.Exception, javax.portlet.PortletRequest)"><B>buildLogMessage(Exception, PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html" title="class in org.springframework.web.portlet.handler">AbstractHandlerExceptionResolver</A>
<DD>Build a log message for the given exception, occured during processing
 the given request.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html#buildLogMessage(java.lang.Exception, javax.servlet.http.HttpServletRequest)"><B>buildLogMessage(Exception, HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.handler">AbstractHandlerExceptionResolver</A>
<DD>Build a log message for the given exception, occured during processing the given request.
<DT><A HREF="../org/springframework/core/NestedExceptionUtils.html#buildMessage(java.lang.String, java.lang.Throwable)"><B>buildMessage(String, Throwable)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/NestedExceptionUtils.html" title="class in org.springframework.core">NestedExceptionUtils</A>
<DD>Build a message for the given base message and root cause.
<DT><A HREF="../org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html#buildMessage(java.lang.String, java.lang.String, java.sql.SQLException)"><B>buildMessage(String, String, SQLException)</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/AbstractFallbackSQLExceptionTranslator.html" title="class in org.springframework.jdbc.support">AbstractFallbackSQLExceptionTranslator</A>
<DD>Build a message <code>String</code> for the given <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/SQLException.html?is-external=true" title="class or interface in java.sql"><CODE>SQLException</CODE></A>.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html#buildMessage(javax.jms.Session, java.lang.Object)"><B>buildMessage(Session, Object)</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter</A>
<DD>Build a JMS message to be sent as response based on the given result object.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html#buildPathExposingHandler(java.lang.Object, java.lang.String, java.lang.String, java.util.Map)"><B>buildPathExposingHandler(Object, String, String, Map&lt;String, String&gt;)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractUrlHandlerMapping</A>
<DD>Build a handler object for the given raw handler, exposing the actual
 handler, the <A HREF="../org/springframework/web/servlet/HandlerMapping.html#PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE"><CODE>HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE</CODE></A>, as well as
 the <A HREF="../org/springframework/web/servlet/HandlerMapping.html#URI_TEMPLATE_VARIABLES_ATTRIBUTE"><CODE>HandlerMapping.URI_TEMPLATE_VARIABLES_ATTRIBUTE</CODE></A> before executing the handler.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html#buildPdfDocument(java.util.Map, com.lowagie.text.Document, com.lowagie.text.pdf.PdfWriter, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildPdfDocument(Map&lt;String, Object&gt;, Document, PdfWriter, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html" title="class in org.springframework.web.servlet.view.document">AbstractPdfView</A>
<DD>Subclasses must implement this method to build an iText PDF document,
 given the model.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html#buildPdfMetadata(java.util.Map, com.lowagie.text.Document, javax.servlet.http.HttpServletRequest)"><B>buildPdfMetadata(Map&lt;String, Object&gt;, Document, HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html" title="class in org.springframework.web.servlet.view.document">AbstractPdfView</A>
<DD>Populate the iText Document's meta fields (author, title, etc.).
<DT><A HREF="../org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html#buildPointcut(java.util.Set)"><B>buildPointcut(Set&lt;Class&lt;? extends Annotation&gt;&gt;)</B></A> - 
Method in class org.springframework.scheduling.annotation.<A HREF="../org/springframework/scheduling/annotation/AsyncAnnotationAdvisor.html" title="class in org.springframework.scheduling.annotation">AsyncAnnotationAdvisor</A>
<DD>Calculate a pointcut for the given target class, if any.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html#buildQueryResultsRegion(java.lang.String, java.util.Properties)"><B>buildQueryResultsRegion(String, Properties)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html" title="class in org.springframework.orm.hibernate3">LocalRegionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#buildSafePointcut()"><B>buildSafePointcut()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>Build a 'safe' pointcut that excludes the AspectJ advice method itself.
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#buildSessionFactory()"><B>buildSessionFactory()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>Build the underlying Hibernate SessionFactory.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html#buildSessionFactory()"><B>buildSessionFactory()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">LocalSessionFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/SqlMapClientFactoryBean.html#buildSqlMapClient(org.springframework.core.io.Resource[], org.springframework.core.io.Resource[], java.util.Properties)"><B>buildSqlMapClient(Resource[], Resource[], Properties)</B></A> - 
Method in class org.springframework.orm.ibatis.<A HREF="../org/springframework/orm/ibatis/SqlMapClientFactoryBean.html" title="class in org.springframework.orm.ibatis">SqlMapClientFactoryBean</A>
<DD>Build a SqlMapClient instance based on the given standard configuration.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html#buildSqlTypeArray(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource)"><B>buildSqlTypeArray(ParsedSql, SqlParameterSource)</B></A> - 
Static method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterUtils</A>
<DD>Convert a Map of parameter types to a corresponding int array.
<DT><A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html#buildTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>buildTemplateModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.freemarker.<A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html" title="class in org.springframework.web.servlet.view.freemarker">FreeMarkerView</A>
<DD>Build a FreeMarker template model for the given model Map.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html#buildTimestampsRegion(java.lang.String, java.util.Properties)"><B>buildTimestampsRegion(String, Properties)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalRegionFactoryProxy.html" title="class in org.springframework.orm.hibernate3">LocalRegionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#buildTransformer(java.util.Map)"><B>buildTransformer(Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;Build a Transformer object for immediate use, based on the
 given parameters.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#buildTypedStringValue(java.lang.String, java.lang.String)"><B>buildTypedStringValue(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Build a typed String value Object for the given raw value.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#buildTypedStringValueForMap(java.lang.String, java.lang.String, org.w3c.dom.Element)"><B>buildTypedStringValueForMap(String, String, Element)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Build a typed String value Object for the given raw value.
<DT><A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html#buildUrlsForHandler(java.lang.String, java.lang.Class)"><B>buildUrlsForHandler(String, Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/AbstractControllerUrlHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">AbstractControllerUrlHandlerMapping</A>
<DD>Abstract template method to be implemented by subclasses.
<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html#buildUrlsForHandler(java.lang.String, java.lang.Class)"><B>buildUrlsForHandler(String, Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">ControllerBeanNameHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html#buildUrlsForHandler(java.lang.String, java.lang.Class)"><B>buildUrlsForHandler(String, Class)</B></A> - 
Method in class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">ControllerClassNameHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#buildUserTransaction(javax.transaction.TransactionManager)"><B>buildUserTransaction(TransactionManager)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Build a UserTransaction handle based on the given TransactionManager.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html#buildValueArray(org.springframework.jdbc.core.namedparam.ParsedSql, org.springframework.jdbc.core.namedparam.SqlParameterSource, java.util.List)"><B>buildValueArray(ParsedSql, SqlParameterSource, List&lt;SqlParameter&gt;)</B></A> - 
Static method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterUtils</A>
<DD>Convert a Map of named parameter values to a corresponding array.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html#buildValueArray(java.lang.String, java.util.Map)"><B>buildValueArray(String, Map&lt;String, ?&gt;)</B></A> - 
Static method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/NamedParameterUtils.html" title="class in org.springframework.jdbc.core.namedparam">NamedParameterUtils</A>
<DD>Convert a Map of named parameter values to a corresponding array.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractTemplateViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractTemplateViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractTemplateViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view">InternalResourceViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Creates a new View instance of the specified view class and configures it.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html" title="class in org.springframework.web.servlet.view.velocity">VelocityLayoutViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html" title="class in org.springframework.web.servlet.view.velocity">VelocityViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltViewResolver.html#buildView(java.lang.String)"><B>buildView(String)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltViewResolver.html" title="class in org.springframework.web.servlet.view.xslt">XsltViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html#buildWiringInfo(java.lang.Object, org.springframework.beans.factory.annotation.Configurable)"><B>buildWiringInfo(Object, Configurable)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html" title="class in org.springframework.beans.factory.annotation">AnnotationBeanWiringInfoResolver</A>
<DD>Build the BeanWiringInfo for the given Configurable annotation.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#bulkUpdate(java.lang.String)"><B>bulkUpdate(String)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update/delete all objects according to the given query.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#bulkUpdate(java.lang.String, java.lang.Object)"><B>bulkUpdate(String, Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update/delete all objects according to the given query, binding one value
 to a "?" parameter in the query string.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#bulkUpdate(java.lang.String, java.lang.Object...)"><B>bulkUpdate(String, Object...)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Update/delete all objects according to the given query, binding a number of
 values to "?" parameters in the query string.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#bulkUpdate(java.lang.String)"><B>bulkUpdate(String)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#bulkUpdate(java.lang.String, java.lang.Object)"><B>bulkUpdate(String, Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#bulkUpdate(java.lang.String, java.lang.Object...)"><B>bulkUpdate(String, Object...)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html" title="class in org.springframework.remoting.caucho"><B>BurlapClientInterceptor</B></A> - Class in <A HREF="../org/springframework/remoting/caucho/package-summary.html">org.springframework.remoting.caucho</A><DD><A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/MethodInterceptor.html?is-external=true" title="class or interface in org.aopalliance.intercept"><CODE>MethodInterceptor</CODE></A> for accessing a Burlap service.<DT><A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html#BurlapClientInterceptor()"><B>BurlapClientInterceptor()</B></A> - 
Constructor for class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html" title="class in org.springframework.remoting.caucho">BurlapClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapExporter.html" title="class in org.springframework.remoting.caucho"><B>BurlapExporter</B></A> - Class in <A HREF="../org/springframework/remoting/caucho/package-summary.html">org.springframework.remoting.caucho</A><DD>General stream-based protocol exporter for a Burlap endpoint.<DT><A HREF="../org/springframework/remoting/caucho/BurlapExporter.html#BurlapExporter()"><B>BurlapExporter()</B></A> - 
Constructor for class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapExporter.html" title="class in org.springframework.remoting.caucho">BurlapExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapProxyFactoryBean.html" title="class in org.springframework.remoting.caucho"><B>BurlapProxyFactoryBean</B></A> - Class in <A HREF="../org/springframework/remoting/caucho/package-summary.html">org.springframework.remoting.caucho</A><DD><A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> for Burlap proxies.<DT><A HREF="../org/springframework/remoting/caucho/BurlapProxyFactoryBean.html#BurlapProxyFactoryBean()"><B>BurlapProxyFactoryBean()</B></A> - 
Constructor for class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapProxyFactoryBean.html" title="class in org.springframework.remoting.caucho">BurlapProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapServiceExporter.html" title="class in org.springframework.remoting.caucho"><B>BurlapServiceExporter</B></A> - Class in <A HREF="../org/springframework/remoting/caucho/package-summary.html">org.springframework.remoting.caucho</A><DD>Servlet-API-based HTTP request handler that exports the specified service bean
 as Burlap service endpoint, accessible via a Burlap proxy.<DT><A HREF="../org/springframework/remoting/caucho/BurlapServiceExporter.html#BurlapServiceExporter()"><B>BurlapServiceExporter()</B></A> - 
Constructor for class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapServiceExporter.html" title="class in org.springframework.remoting.caucho">BurlapServiceExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#byPassReturnParameter(java.lang.String)"><B>byPassReturnParameter(String)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Should we bypass the return parameter with the specified name.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#byPassReturnParameter(java.lang.String)"><B>byPassReturnParameter(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html#byPassReturnParameter(java.lang.String)"><B>byPassReturnParameter(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">PostgresCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html#byPassReturnParameter(java.lang.String)"><B>byPassReturnParameter(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/SqlServerCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">SqlServerCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html#byPassReturnParameter(java.lang.String)"><B>byPassReturnParameter(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/SybaseCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">SybaseCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/ByteArrayHttpMessageConverter.html" title="class in org.springframework.http.converter"><B>ByteArrayHttpMessageConverter</B></A> - Class in <A HREF="../org/springframework/http/converter/package-summary.html">org.springframework.http.converter</A><DD>Implementation of <A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter"><CODE>HttpMessageConverter</CODE></A> that can read and write byte arrays.<DT><A HREF="../org/springframework/http/converter/ByteArrayHttpMessageConverter.html#ByteArrayHttpMessageConverter()"><B>ByteArrayHttpMessageConverter()</B></A> - 
Constructor for class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ByteArrayHttpMessageConverter.html" title="class in org.springframework.http.converter">ByteArrayHttpMessageConverter</A>
<DD>Creates a new instance of the <code>ByteArrayHttpMessageConverter</code>.
<DT><A HREF="../org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html" title="class in org.springframework.web.multipart.support"><B>ByteArrayMultipartFileEditor</B></A> - Class in <A HREF="../org/springframework/web/multipart/support/package-summary.html">org.springframework.web.multipart.support</A><DD>Custom <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditor</CODE></A> for converting
 <A HREF="../org/springframework/web/multipart/MultipartFile.html" title="interface in org.springframework.web.multipart"><CODE>MultipartFiles</CODE></A> to byte arrays.<DT><A HREF="../org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html#ByteArrayMultipartFileEditor()"><B>ByteArrayMultipartFileEditor()</B></A> - 
Constructor for class org.springframework.web.multipart.support.<A HREF="../org/springframework/web/multipart/support/ByteArrayMultipartFileEditor.html" title="class in org.springframework.web.multipart.support">ByteArrayMultipartFileEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors"><B>ByteArrayPropertyEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for byte arrays.<DT><A HREF="../org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html#ByteArrayPropertyEditor()"><B>ByteArrayPropertyEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors">ByteArrayPropertyEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/ByteArrayResource.html" title="class in org.springframework.core.io"><B>ByteArrayResource</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> implementation for a given byte array.<DT><A HREF="../org/springframework/core/io/ByteArrayResource.html#ByteArrayResource(byte[])"><B>ByteArrayResource(byte[])</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ByteArrayResource.html" title="class in org.springframework.core.io">ByteArrayResource</A>
<DD>Create a new ByteArrayResource.
<DT><A HREF="../org/springframework/core/io/ByteArrayResource.html#ByteArrayResource(byte[], java.lang.String)"><B>ByteArrayResource(byte[], String)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ByteArrayResource.html" title="class in org.springframework.core.io">ByteArrayResource</A>
<DD>Create a new ByteArrayResource.
<DT><A HREF="../org/springframework/jca/cci/object/MappingCommAreaOperation.html#bytesToObject(byte[])"><B>bytesToObject(byte[])</B></A> - 
Method in class org.springframework.jca.cci.object.<A HREF="../org/springframework/jca/cci/object/MappingCommAreaOperation.html" title="class in org.springframework.jca.cci.object">MappingCommAreaOperation</A>
<DD>Method used to convert the COMMAREA's bytes to an object.
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-1.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-3.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-2.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-2.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>

</BODY>
</HTML>
