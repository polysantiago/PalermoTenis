<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:26:09 BST 2010 -->
<TITLE>
C-Index
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="C-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-2.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-4.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-3.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-3.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc"><B>C3P0NativeJdbcExtractor</B></A> - Class in <A HREF="../org/springframework/jdbc/support/nativejdbc/package-summary.html">org.springframework.jdbc.support.nativejdbc</A><DD>Implementation of the <A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc"><CODE>NativeJdbcExtractor</CODE></A> interface for the
 C3P0 connection pool.<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html#C3P0NativeJdbcExtractor()"><B>C3P0NativeJdbcExtractor()</B></A> - 
Constructor for class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/C3P0NativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">C3P0NativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#CACHE_AUTO"><B>CACHE_AUTO</B></A> - 
Static variable in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Constant that indicates automatic choice of an appropriate
 caching level (depending on the transaction management strategy).
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#CACHE_CONNECTION"><B>CACHE_CONNECTION</B></A> - 
Static variable in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Constant that indicates to cache a shared JMS Connection.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#CACHE_CONSUMER"><B>CACHE_CONSUMER</B></A> - 
Static variable in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Constant that indicates to cache a shared JMS Connection
 and a JMS Session for each listener thread, as well as
 a JMS MessageConsumer for each listener thread.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#CACHE_NONE"><B>CACHE_NONE</B></A> - 
Static variable in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Constant that indicates to cache no JMS resources at all.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#CACHE_SESSION"><B>CACHE_SESSION</B></A> - 
Static variable in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Constant that indicates to cache a shared JMS Connection
 and a JMS Session for each listener thread.
<DT><A HREF="../org/springframework/beans/CachedIntrospectionResults.html" title="class in org.springframework.beans"><B>CachedIntrospectionResults</B></A> - Class in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Internal class that caches JavaBeans <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyDescriptor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyDescriptor</CODE></A>
 information for a Java class.<DT><A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html#cacheForSeconds(javax.portlet.MimeResponse, int)"><B>cacheForSeconds(MimeResponse, int)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html" title="class in org.springframework.web.portlet.handler">PortletContentGenerator</A>
<DD>Set portlet response to allow caching for the given number of seconds.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int)"><B>cacheForSeconds(HttpServletResponse, int)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Set HTTP headers to allow caching for the given number of seconds.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#cacheForSeconds(javax.servlet.http.HttpServletResponse, int, boolean)"><B>cacheForSeconds(HttpServletResponse, int, boolean)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Set HTTP headers to allow caching for the given number of seconds.
<DT><A HREF="../org/springframework/test/jpa/AbstractJpaTests.html#cacheKeys()"><B>cacheKeys()</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractJpaTests.html" title="class in org.springframework.test.jpa">AbstractJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection"><B>CachingConnectionFactory</B></A> - Class in <A HREF="../org/springframework/jms/connection/package-summary.html">org.springframework.jms.connection</A><DD><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection"><CODE>SingleConnectionFactory</CODE></A> subclass that adds <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Session.html?is-external=true" title="class or interface in javax.jms"><CODE>Session</CODE></A>
 caching as well <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageProducer.html?is-external=true" title="class or interface in javax.jms"><CODE>MessageProducer</CODE></A> caching.<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html#CachingConnectionFactory()"><B>CachingConnectionFactory()</B></A> - 
Constructor for class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection">CachingConnectionFactory</A>
<DD>Create a new CachingConnectionFactory for bean-style usage.
<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html#CachingConnectionFactory(javax.jms.ConnectionFactory)"><B>CachingConnectionFactory(ConnectionFactory)</B></A> - 
Constructor for class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection">CachingConnectionFactory</A>
<DD>Create a new CachingConnectionFactory for the given target
 ConnectionFactory.
<DT><A HREF="../org/springframework/jms/support/destination/CachingDestinationResolver.html" title="interface in org.springframework.jms.support.destination"><B>CachingDestinationResolver</B></A> - Interface in <A HREF="../org/springframework/jms/support/destination/package-summary.html">org.springframework.jms.support.destination</A><DD>Extension of the DestinationResolver interface,
 exposing methods for clearing the cache.<DT><A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util"><B>CachingMapDecorator</B></A>&lt;<A HREF="../org/springframework/util/CachingMapDecorator.html" title="type parameter in CachingMapDecorator">K</A>,<A HREF="../org/springframework/util/CachingMapDecorator.html" title="type parameter in CachingMapDecorator">V</A>&gt; - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>A simple decorator for a Map, encapsulating the workflow for caching
 expensive values in a target Map.<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#CachingMapDecorator()"><B>CachingMapDecorator()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a CachingMapDecorator with strong keys,
 using an underlying synchronized Map.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#CachingMapDecorator(boolean)"><B>CachingMapDecorator(boolean)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a CachingMapDecorator,
 using an underlying synchronized Map.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#CachingMapDecorator(boolean, int)"><B>CachingMapDecorator(boolean, int)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a CachingMapDecorator with initial size,
 using an underlying synchronized Map.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#CachingMapDecorator(java.util.Map)"><B>CachingMapDecorator(Map&lt;K, V&gt;)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a CachingMapDecorator for the given Map.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#CachingMapDecorator(java.util.Map, boolean, boolean)"><B>CachingMapDecorator(Map&lt;K, V&gt;, boolean, boolean)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a CachingMapDecorator for the given Map.
<DT><A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html" title="class in org.springframework.core.type.classreading"><B>CachingMetadataReaderFactory</B></A> - Class in <A HREF="../org/springframework/core/type/classreading/package-summary.html">org.springframework.core.type.classreading</A><DD>Caching implementation of the <A HREF="../org/springframework/core/type/classreading/MetadataReaderFactory.html" title="interface in org.springframework.core.type.classreading"><CODE>MetadataReaderFactory</CODE></A> interface,
 caching <A HREF="../org/springframework/core/type/classreading/MetadataReader.html" title="interface in org.springframework.core.type.classreading"><CODE>MetadataReader</CODE></A> per Spring <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> handle
 (i.e.<DT><A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html#CachingMetadataReaderFactory()"><B>CachingMetadataReaderFactory()</B></A> - 
Constructor for class org.springframework.core.type.classreading.<A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html" title="class in org.springframework.core.type.classreading">CachingMetadataReaderFactory</A>
<DD>Create a new CachingMetadataReaderFactory for the default class loader.
<DT><A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html#CachingMetadataReaderFactory(org.springframework.core.io.ResourceLoader)"><B>CachingMetadataReaderFactory(ResourceLoader)</B></A> - 
Constructor for class org.springframework.core.type.classreading.<A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html" title="class in org.springframework.core.type.classreading">CachingMetadataReaderFactory</A>
<DD>Create a new CachingMetadataReaderFactory for the given resource loader.
<DT><A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html#CachingMetadataReaderFactory(java.lang.ClassLoader)"><B>CachingMetadataReaderFactory(ClassLoader)</B></A> - 
Constructor for class org.springframework.core.type.classreading.<A HREF="../org/springframework/core/type/classreading/CachingMetadataReaderFactory.html" title="class in org.springframework.core.type.classreading">CachingMetadataReaderFactory</A>
<DD>Create a new CachingMetadataReaderFactory for the given class loader.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#calculateAllFilenames(java.lang.String, java.util.Locale)"><B>calculateAllFilenames(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Calculate all filenames for the given bundle basename and Locale.
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#calculateArgumentBindings()"><B>calculateArgumentBindings()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>Do as much work as we can as part of the set-up so that argument binding
 on subsequent advice invocations can be as fast as possible.
<DT><A HREF="../org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html#calculateEndpointAddress(javax.xml.ws.Endpoint, java.lang.String)"><B>calculateEndpointAddress(Endpoint, String)</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/SimpleJaxWsServiceExporter.html" title="class in org.springframework.remoting.jaxws">SimpleJaxWsServiceExporter</A>
<DD>Calculate the full endpoint address for the given endpoint.
<DT><A HREF="../org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html#calculateEndpointPath(javax.xml.ws.Endpoint, java.lang.String)"><B>calculateEndpointPath(Endpoint, String)</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.html" title="class in org.springframework.remoting.jaxws">SimpleHttpServerJaxWsServiceExporter</A>
<DD>Calculate the full endpoint path for the given endpoint.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#calculateFilenamesForLocale(java.lang.String, java.util.Locale)"><B>calculateFilenamesForLocale(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Calculate the filenames for the given bundle basename and Locale,
 appending language code, country code, and variant code.
<DT><A HREF="../org/springframework/jdbc/core/JdbcOperations.html#call(org.springframework.jdbc.core.CallableStatementCreator, java.util.List)"><B>call(CallableStatementCreator, List&lt;SqlParameter&gt;)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcOperations.html" title="interface in org.springframework.jdbc.core">JdbcOperations</A>
<DD>Execute a SQL call using a CallableStatementCreator to provide SQL and any
 required parameters.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#call(org.springframework.jdbc.core.CallableStatementCreator, java.util.List)"><B>call(CallableStatementCreator, List&lt;SqlParameter&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCallback.html" title="interface in org.springframework.jdbc.core"><B>CallableStatementCallback</B></A>&lt;<A HREF="../org/springframework/jdbc/core/CallableStatementCallback.html" title="type parameter in CallableStatementCallback">T</A>&gt; - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Generic callback interface for code that operates on a CallableStatement.<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCreator.html" title="interface in org.springframework.jdbc.core"><B>CallableStatementCreator</B></A> - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>One of the three central callback interfaces used by the JdbcTemplate class.<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCreatorFactory.html" title="class in org.springframework.jdbc.core"><B>CallableStatementCreatorFactory</B></A> - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Helper class that efficiently creates multiple <A HREF="../org/springframework/jdbc/core/CallableStatementCreator.html" title="interface in org.springframework.jdbc.core"><CODE>CallableStatementCreator</CODE></A>
 objects with different parameters based on a SQL statement and a single
 set of parameter declarations.<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCreatorFactory.html#CallableStatementCreatorFactory(java.lang.String)"><B>CallableStatementCreatorFactory(String)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/CallableStatementCreatorFactory.html" title="class in org.springframework.jdbc.core">CallableStatementCreatorFactory</A>
<DD>Create a new factory.
<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCreatorFactory.html#CallableStatementCreatorFactory(java.lang.String, java.util.List)"><B>CallableStatementCreatorFactory(String, List&lt;SqlParameter&gt;)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/CallableStatementCreatorFactory.html" title="class in org.springframework.jdbc.core">CallableStatementCreatorFactory</A>
<DD>Create a new factory with the given SQL and the given parameters.
<DT><A HREF="../org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.html" title="interface in org.springframework.transaction.support"><B>CallbackPreferringPlatformTransactionManager</B></A> - Interface in <A HREF="../org/springframework/transaction/support/package-summary.html">org.springframework.transaction.support</A><DD>Extension of the <A HREF="../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A>
 interface, exposing a method for executing a given callback within a transaction.<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata"><B>CallMetaDataContext</B></A> - Class in <A HREF="../org/springframework/jdbc/core/metadata/package-summary.html">org.springframework.jdbc.core.metadata</A><DD>Class to manage context metadata used for the configuration and execution of the call.<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#CallMetaDataContext()"><B>CallMetaDataContext()</B></A> - 
Constructor for class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata"><B>CallMetaDataProvider</B></A> - Interface in <A HREF="../org/springframework/jdbc/core/metadata/package-summary.html">org.springframework.jdbc.core.metadata</A><DD>Interface specifying the API to be implemented by a class providing call metadata.<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html" title="class in org.springframework.jdbc.core.metadata"><B>CallMetaDataProviderFactory</B></A> - Class in <A HREF="../org/springframework/jdbc/core/metadata/package-summary.html">org.springframework.jdbc.core.metadata</A><DD>Factory used to create a <A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata"><CODE>CallMetaDataProvider</CODE></A> implementation based on the type of databse being used.<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html#CallMetaDataProviderFactory()"><B>CallMetaDataProviderFactory()</B></A> - 
Constructor for class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataProviderFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/jsf/DecoratingNavigationHandler.html#callNextHandlerInChain(javax.faces.context.FacesContext, java.lang.String, java.lang.String, javax.faces.application.NavigationHandler)"><B>callNextHandlerInChain(FacesContext, String, String, NavigationHandler)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/DecoratingNavigationHandler.html" title="class in org.springframework.web.jsf">DecoratingNavigationHandler</A>
<DD>Method to be called by subclasses when intending to delegate to the next
 handler in the NavigationHandler chain.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallParameterMetaData.html" title="class in org.springframework.jdbc.core.metadata"><B>CallParameterMetaData</B></A> - Class in <A HREF="../org/springframework/jdbc/core/metadata/package-summary.html">org.springframework.jdbc.core.metadata</A><DD>Holder of metadata for a specific parameter that is used for call processing.<DT><A HREF="../org/springframework/jdbc/core/metadata/CallParameterMetaData.html#CallParameterMetaData(java.lang.String, int, int, java.lang.String, boolean)"><B>CallParameterMetaData(String, int, int, String, boolean)</B></A> - 
Constructor for class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallParameterMetaData.html" title="class in org.springframework.jdbc.core.metadata">CallParameterMetaData</A>
<DD>Constructor taking all the properties
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#canApply(org.springframework.aop.Pointcut, java.lang.Class)"><B>canApply(Pointcut, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Can the given pointcut apply at all on the given class?
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#canApply(org.springframework.aop.Pointcut, java.lang.Class, boolean)"><B>canApply(Pointcut, Class&lt;?&gt;, boolean)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Can the given pointcut apply at all on the given class?
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#canApply(org.springframework.aop.Advisor, java.lang.Class)"><B>canApply(Advisor, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Can the given advisor apply at all on the given class?
 This is an important test as it can be used to optimize
 out a advisor for a class.
<DT><A HREF="../org/springframework/aop/support/AopUtils.html#canApply(org.springframework.aop.Advisor, java.lang.Class, boolean)"><B>canApply(Advisor, Class&lt;?&gt;, boolean)</B></A> - 
Static method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/AopUtils.html" title="class in org.springframework.aop.support">AopUtils</A>
<DD>Can the given advisor apply at all on the given class?
<DT><A HREF="../org/springframework/scheduling/annotation/AsyncResult.html#cancel(boolean)"><B>cancel(boolean)</B></A> - 
Method in class org.springframework.scheduling.annotation.<A HREF="../org/springframework/scheduling/annotation/AsyncResult.html" title="class in org.springframework.scheduling.annotation">AsyncResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html" title="class in org.springframework.web.servlet.mvc"><B>CancellableFormController</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/package-summary.html">org.springframework.web.servlet.mvc</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of annotated controllers</I><DT><A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html#CancellableFormController()"><B>CancellableFormController()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/CancellableFormController.html" title="class in org.springframework.web.servlet.mvc">CancellableFormController</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#cancelRefresh(org.springframework.beans.BeansException)"><B>cancelRefresh(BeansException)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Cancel this context's refresh attempt, resetting the <code>active</code> flag
 after an exception got thrown.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html#cancelRefresh(org.springframework.beans.BeansException)"><B>cancelRefresh(BeansException)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#cancelRefresh(org.springframework.beans.BeansException)"><B>cancelRefresh(BeansException)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeComparator.html#canCompare(java.lang.Object, java.lang.Object)"><B>canCompare(Object, Object)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeComparator.html" title="class in org.springframework.expression.spel.support">StandardTypeComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/TypeComparator.html#canCompare(java.lang.Object, java.lang.Object)"><B>canCompare(Object, Object)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/TypeComparator.html" title="interface in org.springframework.expression">TypeComparator</A>
<DD>Return true if the comparator can compare these two objects
<DT><A HREF="../org/springframework/core/convert/ConversionService.html#canConvert(java.lang.Class, java.lang.Class)"><B>canConvert(Class&lt;?&gt;, Class&lt;?&gt;)</B></A> - 
Method in interface org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>
<DD>Returns true if objects of sourceType can be converted to targetType.
<DT><A HREF="../org/springframework/core/convert/ConversionService.html#canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>canConvert(TypeDescriptor, TypeDescriptor)</B></A> - 
Method in interface org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>
<DD>Returns true if objects of sourceType can be converted to the targetType.
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#canConvert(java.lang.Class, java.lang.Class)"><B>canConvert(Class&lt;?&gt;, Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>canConvert(TypeDescriptor, TypeDescriptor)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeConverter.html#canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>canConvert(TypeDescriptor, TypeDescriptor)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeConverter.html" title="class in org.springframework.expression.spel.support">StandardTypeConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/TypeConverter.html#canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>canConvert(TypeDescriptor, TypeDescriptor)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/TypeConverter.html" title="interface in org.springframework.expression">TypeConverter</A>
<DD>Return true if the type converter can convert the specified type to the desired target type.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#canHandle(java.lang.String, java.util.Locale)"><B>canHandle(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Indicates whether or not this <A HREF="../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet"><CODE>ViewResolver</CODE></A> can
 handle the supplied view name.
<DT><A HREF="../org/springframework/dao/CannotAcquireLockException.html" title="class in org.springframework.dao"><B>CannotAcquireLockException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Exception thrown on failure to aquire a lock during an update,
 for example during a "select for update" statement.<DT><A HREF="../org/springframework/dao/CannotAcquireLockException.html#CannotAcquireLockException(java.lang.String)"><B>CannotAcquireLockException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/CannotAcquireLockException.html" title="class in org.springframework.dao">CannotAcquireLockException</A>
<DD>Constructor for CannotAcquireLockException.
<DT><A HREF="../org/springframework/dao/CannotAcquireLockException.html#CannotAcquireLockException(java.lang.String, java.lang.Throwable)"><B>CannotAcquireLockException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/CannotAcquireLockException.html" title="class in org.springframework.dao">CannotAcquireLockException</A>
<DD>Constructor for CannotAcquireLockException.
<DT><A HREF="../org/springframework/jca/cci/CannotCreateRecordException.html" title="class in org.springframework.jca.cci"><B>CannotCreateRecordException</B></A> - Exception in <A HREF="../org/springframework/jca/cci/package-summary.html">org.springframework.jca.cci</A><DD>Exception thrown when the creating of a CCI Record failed
 for connector-internal reasons.<DT><A HREF="../org/springframework/jca/cci/CannotCreateRecordException.html#CannotCreateRecordException(java.lang.String, javax.resource.ResourceException)"><B>CannotCreateRecordException(String, ResourceException)</B></A> - 
Constructor for exception org.springframework.jca.cci.<A HREF="../org/springframework/jca/cci/CannotCreateRecordException.html" title="class in org.springframework.jca.cci">CannotCreateRecordException</A>
<DD>Constructor for CannotCreateRecordException.
<DT><A HREF="../org/springframework/transaction/CannotCreateTransactionException.html" title="class in org.springframework.transaction"><B>CannotCreateTransactionException</B></A> - Exception in <A HREF="../org/springframework/transaction/package-summary.html">org.springframework.transaction</A><DD>Exception thrown when a transaction can't be created using an
 underlying transaction API such as JTA.<DT><A HREF="../org/springframework/transaction/CannotCreateTransactionException.html#CannotCreateTransactionException(java.lang.String)"><B>CannotCreateTransactionException(String)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/CannotCreateTransactionException.html" title="class in org.springframework.transaction">CannotCreateTransactionException</A>
<DD>Constructor for CannotCreateTransactionException.
<DT><A HREF="../org/springframework/transaction/CannotCreateTransactionException.html#CannotCreateTransactionException(java.lang.String, java.lang.Throwable)"><B>CannotCreateTransactionException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.transaction.<A HREF="../org/springframework/transaction/CannotCreateTransactionException.html" title="class in org.springframework.transaction">CannotCreateTransactionException</A>
<DD>Constructor for CannotCreateTransactionException.
<DT><A HREF="../org/springframework/jca/cci/CannotGetCciConnectionException.html" title="class in org.springframework.jca.cci"><B>CannotGetCciConnectionException</B></A> - Exception in <A HREF="../org/springframework/jca/cci/package-summary.html">org.springframework.jca.cci</A><DD>Fatal exception thrown when we can't connect to an EIS using CCI.<DT><A HREF="../org/springframework/jca/cci/CannotGetCciConnectionException.html#CannotGetCciConnectionException(java.lang.String, javax.resource.ResourceException)"><B>CannotGetCciConnectionException(String, ResourceException)</B></A> - 
Constructor for exception org.springframework.jca.cci.<A HREF="../org/springframework/jca/cci/CannotGetCciConnectionException.html" title="class in org.springframework.jca.cci">CannotGetCciConnectionException</A>
<DD>Constructor for CannotGetCciConnectionException.
<DT><A HREF="../org/springframework/jdbc/CannotGetJdbcConnectionException.html" title="class in org.springframework.jdbc"><B>CannotGetJdbcConnectionException</B></A> - Exception in <A HREF="../org/springframework/jdbc/package-summary.html">org.springframework.jdbc</A><DD>Fatal exception thrown when we can't connect to an RDBMS using JDBC.<DT><A HREF="../org/springframework/jdbc/CannotGetJdbcConnectionException.html#CannotGetJdbcConnectionException(java.lang.String, java.sql.SQLException)"><B>CannotGetJdbcConnectionException(String, SQLException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/CannotGetJdbcConnectionException.html" title="class in org.springframework.jdbc">CannotGetJdbcConnectionException</A>
<DD>Constructor for CannotGetJdbcConnectionException.
<DT><A HREF="../org/springframework/jdbc/CannotGetJdbcConnectionException.html#CannotGetJdbcConnectionException(java.lang.String, java.lang.ClassNotFoundException)"><B>CannotGetJdbcConnectionException(String, ClassNotFoundException)</B></A> - 
Constructor for exception org.springframework.jdbc.<A HREF="../org/springframework/jdbc/CannotGetJdbcConnectionException.html" title="class in org.springframework.jdbc">CannotGetJdbcConnectionException</A>
<DD><B>Deprecated.</B>&nbsp;<I>since Spring 2.5, in favor of throwing an
 IllegalStateException in case of the driver not being found</I>
<DT><A HREF="../org/springframework/beans/factory/CannotLoadBeanClassException.html" title="class in org.springframework.beans.factory"><B>CannotLoadBeanClassException</B></A> - Exception in <A HREF="../org/springframework/beans/factory/package-summary.html">org.springframework.beans.factory</A><DD>Exception thrown when the BeanFactory cannot load the specified class
 of a given bean.<DT><A HREF="../org/springframework/beans/factory/CannotLoadBeanClassException.html#CannotLoadBeanClassException(java.lang.String, java.lang.String, java.lang.String, java.lang.ClassNotFoundException)"><B>CannotLoadBeanClassException(String, String, String, ClassNotFoundException)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/CannotLoadBeanClassException.html" title="class in org.springframework.beans.factory">CannotLoadBeanClassException</A>
<DD>Create a new CannotLoadBeanClassException.
<DT><A HREF="../org/springframework/beans/factory/CannotLoadBeanClassException.html#CannotLoadBeanClassException(java.lang.String, java.lang.String, java.lang.String, java.lang.LinkageError)"><B>CannotLoadBeanClassException(String, String, String, LinkageError)</B></A> - 
Constructor for exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/CannotLoadBeanClassException.html" title="class in org.springframework.beans.factory">CannotLoadBeanClassException</A>
<DD>Create a new CannotLoadBeanClassException.
<DT><A HREF="../org/springframework/jdbc/datasource/init/CannotReadScriptException.html" title="class in org.springframework.jdbc.datasource.init"><B>CannotReadScriptException</B></A> - Exception in <A HREF="../org/springframework/jdbc/datasource/init/package-summary.html">org.springframework.jdbc.datasource.init</A><DD>Thrown by <A HREF="../org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html" title="class in org.springframework.jdbc.datasource.init"><CODE>ResourceDatabasePopulator</CODE></A> if one of its SQL scripts could
 not be read during population.<DT><A HREF="../org/springframework/jdbc/datasource/init/CannotReadScriptException.html#CannotReadScriptException(org.springframework.core.io.support.EncodedResource, java.lang.Throwable)"><B>CannotReadScriptException(EncodedResource, Throwable)</B></A> - 
Constructor for exception org.springframework.jdbc.datasource.init.<A HREF="../org/springframework/jdbc/datasource/init/CannotReadScriptException.html" title="class in org.springframework.jdbc.datasource.init">CannotReadScriptException</A>
<DD>Constructor a new CannotReadScriptException.
<DT><A HREF="../org/springframework/dao/CannotSerializeTransactionException.html" title="class in org.springframework.dao"><B>CannotSerializeTransactionException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Exception thrown on failure to complete a transaction in serialized mode
 due to update conflicts.<DT><A HREF="../org/springframework/dao/CannotSerializeTransactionException.html#CannotSerializeTransactionException(java.lang.String)"><B>CannotSerializeTransactionException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/CannotSerializeTransactionException.html" title="class in org.springframework.dao">CannotSerializeTransactionException</A>
<DD>Constructor for CannotSerializeTransactionException.
<DT><A HREF="../org/springframework/dao/CannotSerializeTransactionException.html#CannotSerializeTransactionException(java.lang.String, java.lang.Throwable)"><B>CannotSerializeTransactionException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/CannotSerializeTransactionException.html" title="class in org.springframework.dao">CannotSerializeTransactionException</A>
<DD>Constructor for CannotSerializeTransactionException.
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#canonicalFieldName(java.lang.String)"><B>canonicalFieldName(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>Determine the canonical field name for the given field.
<DT><A HREF="../org/springframework/validation/AbstractPropertyBindingResult.html#canonicalFieldName(java.lang.String)"><B>canonicalFieldName(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractPropertyBindingResult.html" title="class in org.springframework.validation">AbstractPropertyBindingResult</A>
<DD>Returns the canonical property name.
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#canonicalName(java.lang.String)"><B>canonicalName(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>Determine the raw name, resolving aliases to canonical names.
<DT><A HREF="../org/springframework/beans/PropertyAccessorUtils.html#canonicalPropertyName(java.lang.String)"><B>canonicalPropertyName(String)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyAccessorUtils.html" title="class in org.springframework.beans">PropertyAccessorUtils</A>
<DD>Determine the canonical name for the given property path.
<DT><A HREF="../org/springframework/beans/PropertyAccessorUtils.html#canonicalPropertyNames(java.lang.String[])"><B>canonicalPropertyNames(String[])</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyAccessorUtils.html" title="class in org.springframework.beans">PropertyAccessorUtils</A>
<DD>Determine the canonical names for the given property paths.
<DT><A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html#canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canRead(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html" title="class in org.springframework.context.expression">BeanExpressionContextAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html#canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canRead(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html" title="class in org.springframework.context.expression">BeanFactoryAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/MapAccessor.html#canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canRead(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/MapAccessor.html" title="class in org.springframework.context.expression">MapAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/PropertyAccessor.html#canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canRead(EvaluationContext, Object, String)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/PropertyAccessor.html" title="interface in org.springframework.expression">PropertyAccessor</A>
<DD>Called to determine if a resolver instance is able to access a specified property on a specified target object.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canRead(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Indicates whether the given class can be read by this converter.
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#canRead(org.springframework.http.MediaType)"><B>canRead(MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Returns true if any of the <A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#setSupportedMediaTypes(java.util.List)">supported media types</A>
 include the given media type.
<DT><A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter">BufferedImageHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html" title="class in org.springframework.http.converter">FormHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/HttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in interface org.springframework.http.converter.<A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>
<DD>Indicates whether the given class can be read by this converter.
<DT><A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.json.<A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html" title="class in org.springframework.http.converter.json">MappingJacksonHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter">ResourceHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html#canRead(java.lang.Class, org.springframework.http.MediaType)"><B>canRead(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">Jaxb2RootElementHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html#canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canWrite(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html" title="class in org.springframework.context.expression">BeanExpressionContextAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html#canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canWrite(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html" title="class in org.springframework.context.expression">BeanFactoryAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/MapAccessor.html#canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canWrite(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/MapAccessor.html" title="class in org.springframework.context.expression">MapAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/PropertyAccessor.html#canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canWrite(EvaluationContext, Object, String)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/PropertyAccessor.html" title="interface in org.springframework.expression">PropertyAccessor</A>
<DD>Called to determine if a resolver instance is able to write to a specified property on a specified target object.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>canWrite(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Indicates whether the given class can be written by this converter.
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#canWrite(org.springframework.http.MediaType)"><B>canWrite(MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Returns true if the given media type includes any of the
 <A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#setSupportedMediaTypes(java.util.List)">supported media types</A>.
<DT><A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter">BufferedImageHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html" title="class in org.springframework.http.converter">FormHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/HttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in interface org.springframework.http.converter.<A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>
<DD>Indicates whether the given class can be written by this converter.
<DT><A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.json.<A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html" title="class in org.springframework.http.converter.json">MappingJacksonHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter">ResourceHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html#canWrite(java.lang.Class, org.springframework.http.MediaType)"><B>canWrite(Class&lt;?&gt;, MediaType)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">Jaxb2RootElementHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#capitalize(java.lang.String)"><B>capitalize(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Capitalize a <code>String</code>, changing the first letter to
 upper case as per <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Character.html?is-external=true#toUpperCase(char)" title="class or interface in java.lang"><CODE>Character.toUpperCase(char)</CODE></A>.
<DT><A HREF="../org/springframework/oxm/castor/CastorMappingException.html" title="class in org.springframework.oxm.castor"><B>CastorMappingException</B></A> - Exception in <A HREF="../org/springframework/oxm/castor/package-summary.html">org.springframework.oxm.castor</A><DD>Exception thrown by <A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor"><CODE>CastorMarshaller</CODE></A> whenever it encounters a mapping problem.<DT><A HREF="../org/springframework/oxm/castor/CastorMappingException.html#CastorMappingException(java.lang.String, java.lang.Throwable)"><B>CastorMappingException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMappingException.html" title="class in org.springframework.oxm.castor">CastorMappingException</A>
<DD>Construct a <code>CastorMappingException</code> with the specified detail message
 and nested exception.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor"><B>CastorMarshaller</B></A> - Class in <A HREF="../org/springframework/oxm/castor/package-summary.html">org.springframework.oxm.castor</A><DD>Implementation of the <code>Marshaller</code> interface for Castor.<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#CastorMarshaller()"><B>CastorMarshaller()</B></A> - 
Constructor for class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#catalogNameToUse(java.lang.String)"><B>catalogNameToUse(String)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Provide any modification of the catalog name passed in to match the meta data currently used.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#catalogNameToUse(java.lang.String)"><B>catalogNameToUse(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html#catalogNameToUse(java.lang.String)"><B>catalogNameToUse(String)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericTableMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html#catalogNameToUse(java.lang.String)"><B>catalogNameToUse(String)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">TableMetaDataProvider</A>
<DD>Get the catalog name formatted based on metadata information.
<DT><A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html" title="class in org.springframework.jca.cci.core.support"><B>CciDaoSupport</B></A> - Class in <A HREF="../org/springframework/jca/cci/core/support/package-summary.html">org.springframework.jca.cci.core.support</A><DD>Convenient super class for CCI-based data access objects.<DT><A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html#CciDaoSupport()"><B>CciDaoSupport()</B></A> - 
Constructor for class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html" title="class in org.springframework.jca.cci.core.support">CciDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html" title="class in org.springframework.jca.cci.connection"><B>CciLocalTransactionManager</B></A> - Class in <A HREF="../org/springframework/jca/cci/connection/package-summary.html">org.springframework.jca.cci.connection</A><DD><A HREF="../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A> implementation
 that manages local transactions for a single CCI ConnectionFactory.<DT><A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html#CciLocalTransactionManager()"><B>CciLocalTransactionManager()</B></A> - 
Constructor for class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html" title="class in org.springframework.jca.cci.connection">CciLocalTransactionManager</A>
<DD>Create a new CciLocalTransactionManager instance.
<DT><A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html#CciLocalTransactionManager(javax.resource.cci.ConnectionFactory)"><B>CciLocalTransactionManager(ConnectionFactory)</B></A> - 
Constructor for class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/CciLocalTransactionManager.html" title="class in org.springframework.jca.cci.connection">CciLocalTransactionManager</A>
<DD>Create a new CciLocalTransactionManager instance.
<DT><A HREF="../org/springframework/jca/cci/CciOperationNotSupportedException.html" title="class in org.springframework.jca.cci"><B>CciOperationNotSupportedException</B></A> - Exception in <A HREF="../org/springframework/jca/cci/package-summary.html">org.springframework.jca.cci</A><DD>Exception thrown when the connector doesn't support a specific CCI operation.<DT><A HREF="../org/springframework/jca/cci/CciOperationNotSupportedException.html#CciOperationNotSupportedException(java.lang.String, javax.resource.ResourceException)"><B>CciOperationNotSupportedException(String, ResourceException)</B></A> - 
Constructor for exception org.springframework.jca.cci.<A HREF="../org/springframework/jca/cci/CciOperationNotSupportedException.html" title="class in org.springframework.jca.cci">CciOperationNotSupportedException</A>
<DD>Constructor for CciOperationNotSupportedException.
<DT><A HREF="../org/springframework/jca/cci/core/CciOperations.html" title="interface in org.springframework.jca.cci.core"><B>CciOperations</B></A> - Interface in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD>Interface that specifies a basic set of CCI operations on an EIS.<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core"><B>CciTemplate</B></A> - Class in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD><b>This is the central class in the CCI core package.</b>
 It simplifies the use of CCI and helps to avoid common errors.<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#CciTemplate()"><B>CciTemplate()</B></A> - 
Constructor for class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Construct a new CciTemplate for bean usage.
<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#CciTemplate(javax.resource.cci.ConnectionFactory)"><B>CciTemplate(ConnectionFactory)</B></A> - 
Constructor for class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Construct a new CciTemplate, given a ConnectionFactory to obtain Connections from.
<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#CciTemplate(javax.resource.cci.ConnectionFactory, javax.resource.cci.ConnectionSpec)"><B>CciTemplate(ConnectionFactory, ConnectionSpec)</B></A> - 
Constructor for class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Construct a new CciTemplate, given a ConnectionFactory to obtain Connections from.
<DT><A HREF="../org/springframework/util/ClassUtils.html#CGLIB_CLASS_SEPARATOR"><B>CGLIB_CLASS_SEPARATOR</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>The CGLIB class separator character "$$"
<DT><A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html" title="class in org.springframework.beans.factory.support"><B>CglibSubclassingInstantiationStrategy</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Default object instantiation strategy for use in BeanFactories.<DT><A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html#CglibSubclassingInstantiationStrategy()"><B>CglibSubclassingInstantiationStrategy()</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.html" title="class in org.springframework.beans.factory.support">CglibSubclassingInstantiationStrategy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/ChainedExceptionListener.html" title="class in org.springframework.jms.connection"><B>ChainedExceptionListener</B></A> - Class in <A HREF="../org/springframework/jms/connection/package-summary.html">org.springframework.jms.connection</A><DD>Implementation of the JMS ExceptionListener interface that supports chaining,
 allowing the addition of multiple ExceptionListener instances in order.<DT><A HREF="../org/springframework/jms/connection/ChainedExceptionListener.html#ChainedExceptionListener()"><B>ChainedExceptionListener()</B></A> - 
Constructor for class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ChainedExceptionListener.html" title="class in org.springframework.jms.connection">ChainedExceptionListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html" title="class in org.springframework.dao.support"><B>ChainedPersistenceExceptionTranslator</B></A> - Class in <A HREF="../org/springframework/dao/support/package-summary.html">org.springframework.dao.support</A><DD>Implementation of <A HREF="../org/springframework/dao/support/PersistenceExceptionTranslator.html" title="interface in org.springframework.dao.support"><CODE>PersistenceExceptionTranslator</CODE></A> that supports chaining,
 allowing the addition of PersistenceExceptionTranslator instances in order.<DT><A HREF="../org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html#ChainedPersistenceExceptionTranslator()"><B>ChainedPersistenceExceptionTranslator()</B></A> - 
Constructor for class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/ChainedPersistenceExceptionTranslator.html" title="class in org.springframework.dao.support">ChainedPersistenceExceptionTranslator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#changesSince(org.springframework.beans.PropertyValues)"><B>changesSince(PropertyValues)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyValues.html#changesSince(org.springframework.beans.PropertyValues)"><B>changesSince(PropertyValues)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>
<DD>Return the changes since the previous PropertyValues.
<DT><A HREF="../org/springframework/beans/propertyeditors/CharacterEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CharacterEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for a <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Character.html?is-external=true" title="class or interface in java.lang"><CODE>Character</CODE></A>, to populate a property
 of type <code>Character</code> or <code>char</code> from a String value.<DT><A HREF="../org/springframework/beans/propertyeditors/CharacterEditor.html#CharacterEditor(boolean)"><B>CharacterEditor(boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CharacterEditor.html" title="class in org.springframework.beans.propertyeditors">CharacterEditor</A>
<DD>Create a new CharacterEditor instance.
<DT><A HREF="../org/springframework/web/filter/CharacterEncodingFilter.html" title="class in org.springframework.web.filter"><B>CharacterEncodingFilter</B></A> - Class in <A HREF="../org/springframework/web/filter/package-summary.html">org.springframework.web.filter</A><DD>Servlet 2.3/2.4 Filter that allows one to specify a character encoding for
 requests.<DT><A HREF="../org/springframework/web/filter/CharacterEncodingFilter.html#CharacterEncodingFilter()"><B>CharacterEncodingFilter()</B></A> - 
Constructor for class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/CharacterEncodingFilter.html" title="class in org.springframework.web.filter">CharacterEncodingFilter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CharArrayPropertyEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for char arrays.<DT><A HREF="../org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html#CharArrayPropertyEditor()"><B>CharArrayPropertyEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CharArrayPropertyEditor.html" title="class in org.springframework.beans.propertyeditors">CharArrayPropertyEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/CharsetEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CharsetEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>java.nio.charset.Charset<code>, translating charset
 String representations into Charset objects and back.<DT><A HREF="../org/springframework/beans/propertyeditors/CharsetEditor.html#CharsetEditor()"><B>CharsetEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CharsetEditor.html" title="class in org.springframework.beans.propertyeditors">CharsetEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html#check(javax.portlet.PortletRequest, javax.portlet.PortletResponse)"><B>check(PortletRequest, PortletResponse)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html" title="class in org.springframework.web.portlet.handler">PortletContentGenerator</A>
<DD>Check and prepare the given request and response according to the settings
 of this generator.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#checkActive()"><B>checkActive()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Check whether this request is still active (that is, not completed yet),
 throwing an IllegalStateException if not active anymore.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#checkActive()"><B>checkActive()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>Check whether this request is still active (that is, not completed yet),
 throwing an IllegalStateException if not active anymore.
<DT><A HREF="../org/springframework/validation/DataBinder.html#checkAllowedFields(org.springframework.beans.MutablePropertyValues)"><B>checkAllowedFields(MutablePropertyValues)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Check the given property values against the allowed fields,
 removing values for fields that are not allowed.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html#checkAndPrepare(javax.portlet.PortletRequest, javax.portlet.MimeResponse)"><B>checkAndPrepare(PortletRequest, MimeResponse)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html" title="class in org.springframework.web.portlet.handler">PortletContentGenerator</A>
<DD>Check and prepare the given request and response according to the settings
 of this generator.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html#checkAndPrepare(javax.portlet.PortletRequest, javax.portlet.MimeResponse, int)"><B>checkAndPrepare(PortletRequest, MimeResponse, int)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletContentGenerator.html" title="class in org.springframework.web.portlet.handler">PortletContentGenerator</A>
<DD>Check and prepare the given request and response according to the settings
 of this generator.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)"><B>checkAndPrepare(HttpServletRequest, HttpServletResponse, boolean)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Check and prepare the given request and response according to the settings
 of this generator.
<DT><A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#checkAndPrepare(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int, boolean)"><B>checkAndPrepare(HttpServletRequest, HttpServletResponse, int, boolean)</B></A> - 
Method in class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html" title="class in org.springframework.web.servlet.support">WebContentGenerator</A>
<DD>Check and prepare the given request and response according to the settings
 of this generator.
<DT><A HREF="../org/springframework/web/servlet/tags/form/CheckboxesTag.html" title="class in org.springframework.web.servlet.tags.form"><B>CheckboxesTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/form/package-summary.html">org.springframework.web.servlet.tags.form</A><DD>Databinding-aware JSP tag for rendering multiple HTML '<code>input</code>'
 elements with a '<code>type</code>' of '<code>checkbox</code>'.<DT><A HREF="../org/springframework/web/servlet/tags/form/CheckboxesTag.html#CheckboxesTag()"><B>CheckboxesTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/CheckboxesTag.html" title="class in org.springframework.web.servlet.tags.form">CheckboxesTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/CheckboxTag.html" title="class in org.springframework.web.servlet.tags.form"><B>CheckboxTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/form/package-summary.html">org.springframework.web.servlet.tags.form</A><DD>Databinding-aware JSP tag for rendering an HTML '<code>input</code>'
 element with a '<code>type</code>' of '<code>checkbox</code>'.<DT><A HREF="../org/springframework/web/servlet/tags/form/CheckboxTag.html#CheckboxTag()"><B>CheckboxTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/CheckboxTag.html" title="class in org.springframework.web.servlet.tags.form">CheckboxTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html#checkCandidate(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><B>checkCandidate(String, BeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation">ClassPathBeanDefinitionScanner</A>
<DD>Check the given candidate's bean name, determining whether the corresponding
 bean definition needs to be registered or conflicts with an existing definition.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#checkCommand(java.lang.Object)"><B>checkCommand(Object)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Check if the given command object is a valid for this controller,
 i.e.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#checkCommand(java.lang.Object)"><B>checkCommand(Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Check if the given command object is a valid for this controller,
 i.e.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#checkCompiled()"><B>checkCompiled()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Check whether this operation has been compiled already;
 lazily compile it if not already compiled.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html#checkCompiled()"><B>checkCompiled()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcInsert</A>
<DD>Check whether this operation has been compiled already;
 lazily compile it if not already compiled.
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#checkCompiled()"><B>checkCompiled()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Check whether this operation has been compiled already;
 lazily compile it if not already compiled.
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html#checkConfigMembers(org.springframework.beans.factory.support.RootBeanDefinition)"><B>checkConfigMembers(RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/dao/support/DaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DaoSupport.html" title="class in org.springframework.dao.support">DaoSupport</A>
<DD>Abstract subclasses must override this to check their configuration.
<DT><A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html" title="class in org.springframework.jca.cci.core.support">CciDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html" title="class in org.springframework.jdbc.core.support">JdbcDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html" title="class in org.springframework.orm.hibernate3.support">HibernateDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/SqlMapClientDaoSupport.html" title="class in org.springframework.orm.ibatis.support">SqlMapClientDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html" title="class in org.springframework.orm.jdo.support">JdoDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html#checkDaoConfig()"><B>checkDaoConfig()</B></A> - 
Method in class org.springframework.orm.jpa.support.<A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html" title="class in org.springframework.orm.jpa.support">JpaDaoSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html#checkDefaultConnectionProperties(java.sql.Connection)"><B>checkDefaultConnectionProperties(Connection)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.html" title="class in org.springframework.jdbc.datasource">LazyConnectionDataSourceProxy</A>
<DD>Check the default connection properties (auto-commit, transaction isolation),
 keeping them to be able to expose them correctly without fetching an actual
 JDBC Connection from the target DataSource.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#checkDependencies(java.lang.String, org.springframework.beans.factory.support.AbstractBeanDefinition, java.beans.PropertyDescriptor[], org.springframework.beans.PropertyValues)"><B>checkDependencies(String, AbstractBeanDefinition, PropertyDescriptor[], PropertyValues)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Perform a dependency check that all properties exposed have been set,
 if desired.
<DT><A HREF="../org/springframework/test/AssertThrows.html#checkExceptionExpectations(java.lang.Exception)"><B>checkExceptionExpectations(Exception)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AssertThrows.html" title="class in org.springframework.test">AssertThrows</A>
<DD><B>Deprecated.</B>&nbsp;Does the donkey work of checking (verifying) that the
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><CODE>Exception</CODE></A> that was thrown in the body of a test is
 an instance of the <A HREF="../org/springframework/test/AssertThrows.html#getExpectedException()"><CODE>AssertThrows.getExpectedException()</CODE></A> class (or an
 instance of a subclass).
<DT><A HREF="../org/springframework/web/bind/WebDataBinder.html#checkFieldDefaults(org.springframework.beans.MutablePropertyValues)"><B>checkFieldDefaults(MutablePropertyValues)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind">WebDataBinder</A>
<DD>Check the given property values for field defaults,
 i.e.
<DT><A HREF="../org/springframework/web/bind/WebDataBinder.html#checkFieldMarkers(org.springframework.beans.MutablePropertyValues)"><B>checkFieldMarkers(MutablePropertyValues)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/WebDataBinder.html" title="class in org.springframework.web.bind">WebDataBinder</A>
<DD>Check the given property values for field markers,
 i.e.
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#checkForAliasCircle(java.lang.String, java.lang.String)"><B>checkForAliasCircle(String, String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>Check whether the given name points back to given alias as an alias
 in the other direction, catching a circular reference upfront and
 throwing a corresponding IllegalStateException.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html#checkIfConfigurationModificationIsAllowed()"><B>checkIfConfigurationModificationIsAllowed()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcInsert</A>
<DD>Method to check whether we are allowd to make any configuration changes at this time.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html#checkManagedBean(java.lang.Object)"><B>checkManagedBean(Object)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractMBeanInfoAssembler</A>
<DD>Check the given bean instance, throwing an IllegalArgumentException
 if it is not eligible for exposure with this assembler.
<DT><A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html#checkManagedBean(java.lang.Object)"><B>checkManagedBean(Object)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/MetadataMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">MetadataMBeanInfoAssembler</A>
<DD>Throws an IllegalArgumentException if it encounters a JDK dynamic proxy.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#checkMergedBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, java.lang.Object[])"><B>checkMergedBeanDefinition(RootBeanDefinition, String, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Check the given merged bean definition,
 potentially throwing validation exceptions.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#checkMessageListener(java.lang.Object)"><B>checkMessageListener(Object)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Check the given message listener, throwing an exception
 if it does not correspond to a supported listener type.
<DT><A HREF="../org/springframework/web/portlet/DispatcherPortlet.html#checkMultipart(javax.portlet.ActionRequest)"><B>checkMultipart(ActionRequest)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet">DispatcherPortlet</A>
<DD>Convert the request into a multipart request, and make multipart resolver available.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#checkMultipart(javax.servlet.http.HttpServletRequest)"><B>checkMultipart(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Convert the request into a multipart request, and make multipart resolver available.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#checkNameUniqueness(java.lang.String, java.util.List, org.w3c.dom.Element)"><B>checkNameUniqueness(String, List&lt;String&gt;, Element)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Validate that the specified bean name and aliases have not been used already.
<DT><A HREF="../org/springframework/web/context/request/FacesWebRequest.html#checkNotModified(long)"><B>checkNotModified(long)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesWebRequest.html" title="class in org.springframework.web.context.request">FacesWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/ServletWebRequest.html#checkNotModified(long)"><B>checkNotModified(long)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletWebRequest.html" title="class in org.springframework.web.context.request">ServletWebRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/WebRequest.html#checkNotModified(long)"><B>checkNotModified(long)</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/WebRequest.html" title="interface in org.springframework.web.context.request">WebRequest</A>
<DD>Check whether the request qualifies as not modified given the
 supplied last-modified timestamp (as determined by the application).
<DT><A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html#checkNotModified(long)"><B>checkNotModified(long)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletWebRequest.html" title="class in org.springframework.web.portlet.context">PortletWebRequest</A>
<DD>Last-modified handling not supported for portlet requests:
 As a consequence, this method always returns <code>false</code>.
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#checkPropertySkipping(org.springframework.beans.PropertyValues)"><B>checkPropertySkipping(PropertyValues)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata.InjectedElement</A>
<DD>Checks whether this injector's property needs to be skipped due to
 an explicit property value having been specified.
<DT><A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html#checkQualifier(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.annotation.Annotation, org.springframework.beans.TypeConverter)"><B>checkQualifier(BeanDefinitionHolder, Annotation, TypeConverter)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html" title="class in org.springframework.beans.factory.annotation">QualifierAnnotationAutowireCandidateResolver</A>
<DD>Match the given qualifier annotation against the candidate bean definition.
<DT><A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html#checkQualifiers(org.springframework.beans.factory.config.BeanDefinitionHolder, java.lang.annotation.Annotation[])"><B>checkQualifiers(BeanDefinitionHolder, Annotation[])</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.html" title="class in org.springframework.beans.factory.annotation">QualifierAnnotationAutowireCandidateResolver</A>
<DD>Match the given qualifier annotations against the candidate bean definition.
<DT><A HREF="../org/springframework/validation/DataBinder.html#checkRequiredFields(org.springframework.beans.MutablePropertyValues)"><B>checkRequiredFields(MutablePropertyValues)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Check the given property values against the required fields,
 generating missing field errors where appropriate.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractUrlBasedView.html#checkResource(java.util.Locale)"><B>checkResource(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractUrlBasedView.html" title="class in org.springframework.web.servlet.view">AbstractUrlBasedView</A>
<DD>Check whether the underlying resource that the configured URL points to
 actually exists.
<DT><A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html#checkResource(java.util.Locale)"><B>checkResource(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.freemarker.<A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html" title="class in org.springframework.web.servlet.view.freemarker">FreeMarkerView</A>
<DD>Check that the FreeMarker template used for this view exists and is valid.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html#checkResource(java.util.Locale)"><B>checkResource(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html" title="class in org.springframework.web.servlet.view.tiles2">TilesView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutView.html#checkResource(java.util.Locale)"><B>checkResource(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityLayoutView</A>
<DD>Overrides <code>VelocityView.checkTemplate()</code> to additionally check
 that both the layout template and the screen content template can be loaded.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#checkResource(java.util.Locale)"><B>checkResource(Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Check that the Velocity template used for this view exists and is valid.
<DT><A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html#checkResourceType(java.lang.Class)"><B>checkResourceType(Class)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/InjectionMetadata.InjectedElement.html" title="class in org.springframework.beans.factory.annotation">InjectionMetadata.InjectedElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/object/SqlUpdate.html#checkRowsAffected(int)"><B>checkRowsAffected(int)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlUpdate.html" title="class in org.springframework.jdbc.object">SqlUpdate</A>
<DD>Check the given number of affected rows against the
 specified maximum number or required number.
<DT><A HREF="../org/springframework/remoting/support/RemoteExporter.html#checkService()"><B>checkService()</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support">RemoteExporter</A>
<DD>Check whether the service reference has been set.
<DT><A HREF="../org/springframework/remoting/support/RemoteExporter.html#checkServiceInterface()"><B>checkServiceInterface()</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support">RemoteExporter</A>
<DD>Check whether a service reference has been set,
 and whether it matches the specified service.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#checkUserTransactionAndTransactionManager()"><B>checkUserTransactionAndTransactionManager()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Check the UserTransaction as well as the TransactionManager handle,
 assuming standard JTA requirements.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#checkWriteOperationAllowed(org.hibernate.Session)"><B>checkWriteOperationAllowed(Session)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Check whether write operations are allowed on the given Session.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html#childBeanDefinition(java.lang.String)"><B>childBeanDefinition(String)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support">BeanDefinitionBuilder</A>
<DD>Create a new <code>BeanDefinitionBuilder</code> used to construct a <A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support"><CODE>ChildBeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support"><B>ChildBeanDefinition</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Bean definition for beans which inherit settings from their parent.<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(java.lang.String)"><B>ChildBeanDefinition(String)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition for the given parent, to be
 configured through its bean properties and configuration methods.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(java.lang.String, org.springframework.beans.MutablePropertyValues)"><B>ChildBeanDefinition(String, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition for the given parent.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)"><B>ChildBeanDefinition(String, ConstructorArgumentValues, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition for the given parent.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(java.lang.String, java.lang.Class, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)"><B>ChildBeanDefinition(String, Class, ConstructorArgumentValues, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition for the given parent,
 providing constructor arguments and property values.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(java.lang.String, java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)"><B>ChildBeanDefinition(String, String, ConstructorArgumentValues, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition for the given parent,
 providing constructor arguments and property values.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#ChildBeanDefinition(org.springframework.beans.factory.support.ChildBeanDefinition)"><B>ChildBeanDefinition(ChildBeanDefinition)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>Create a new ChildBeanDefinition as deep copy of the given
 bean definition.
<DT><A HREF="../org/springframework/expression/spel/ast/SpelNodeImpl.html#children"><B>children</B></A> - 
Variable in class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/SpelNodeImpl.html" title="class in org.springframework.expression.spel.ast">SpelNodeImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#CLASS_ATTRIBUTE"><B>CLASS_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html#CLASS_ATTRIBUTE"><B>CLASS_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlElementTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ClassUtils.html#CLASS_FILE_SUFFIX"><B>CLASS_FILE_SUFFIX</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>The ".class" file suffix
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#CLASS_KEY"><B>CLASS_KEY</B></A> - 
Static variable in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Special key to distinguish <code>owner.(class)=com.myapp.MyClass</code>-
<DT><A HREF="../org/springframework/beans/propertyeditors/ClassArrayEditor.html" title="class in org.springframework.beans.propertyeditors"><B>ClassArrayEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for an array of <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang"><CODE>Classes</CODE></A>, to enable
 the direct population of a <code>Class[]</code> property without having to
 use a <code>String</code> class name property as bridge.<DT><A HREF="../org/springframework/beans/propertyeditors/ClassArrayEditor.html#ClassArrayEditor()"><B>ClassArrayEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ClassArrayEditor.html" title="class in org.springframework.beans.propertyeditors">ClassArrayEditor</A>
<DD>Create a default <code>ClassEditor</code>, using the thread
 context <code>ClassLoader</code>.
<DT><A HREF="../org/springframework/beans/propertyeditors/ClassArrayEditor.html#ClassArrayEditor(java.lang.ClassLoader)"><B>ClassArrayEditor(ClassLoader)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ClassArrayEditor.html" title="class in org.springframework.beans.propertyeditors">ClassArrayEditor</A>
<DD>Create a default <code>ClassArrayEditor</code>, using the given
 <code>ClassLoader</code>.
<DT><A HREF="../org/springframework/beans/propertyeditors/ClassEditor.html" title="class in org.springframework.beans.propertyeditors"><B>ClassEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang"><CODE>java.lang.Class</CODE></A>, to enable the direct
 population of a <code>Class</code> property without recourse to having to use a
 String class name property as bridge.<DT><A HREF="../org/springframework/beans/propertyeditors/ClassEditor.html#ClassEditor()"><B>ClassEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ClassEditor.html" title="class in org.springframework.beans.propertyeditors">ClassEditor</A>
<DD>Create a default ClassEditor, using the thread context ClassLoader.
<DT><A HREF="../org/springframework/beans/propertyeditors/ClassEditor.html#ClassEditor(java.lang.ClassLoader)"><B>ClassEditor(ClassLoader)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ClassEditor.html" title="class in org.springframework.beans.propertyeditors">ClassEditor</A>
<DD>Create a default ClassEditor, using the given ClassLoader.
<DT><A HREF="../org/springframework/aop/ClassFilter.html" title="interface in org.springframework.aop"><B>ClassFilter</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Filter that restricts matching of a pointcut or introduction to
 a given set of target classes.<DT><A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support"><B>ClassFilters</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Static utility methods for composing
 <A HREF="../org/springframework/aop/ClassFilter.html" title="interface in org.springframework.aop"><CODE>ClassFilters</CODE></A>.<DT><A HREF="../org/springframework/aop/support/ClassFilters.html#ClassFilters()"><B>ClassFilters()</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ClassFilters.html" title="class in org.springframework.aop.support">ClassFilters</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/type/ClassMetadata.html" title="interface in org.springframework.core.type"><B>ClassMetadata</B></A> - Interface in <A HREF="../org/springframework/core/type/package-summary.html">org.springframework.core.type</A><DD>Interface that defines abstract metadata of a specific class,
 in a form that does not require that class to be loaded yet.<DT><A HREF="../org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html" title="class in org.springframework.beans.factory.wiring"><B>ClassNameBeanWiringInfoResolver</B></A> - Class in <A HREF="../org/springframework/beans/factory/wiring/package-summary.html">org.springframework.beans.factory.wiring</A><DD>Simple default implementation of the <A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html" title="interface in org.springframework.beans.factory.wiring"><CODE>BeanWiringInfoResolver</CODE></A> interface,
 looking for a bean with the same name as the fully-qualified class name.<DT><A HREF="../org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html#ClassNameBeanWiringInfoResolver()"><B>ClassNameBeanWiringInfoResolver()</B></A> - 
Constructor for class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html" title="class in org.springframework.beans.factory.wiring">ClassNameBeanWiringInfoResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ClassUtils.html#classNamesToString(java.lang.Class...)"><B>classNamesToString(Class...)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Build a String that consists of the names of the classes/interfaces
 in the given array.
<DT><A HREF="../org/springframework/util/ClassUtils.html#classNamesToString(java.util.Collection)"><B>classNamesToString(Collection&lt;Class&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Build a String that consists of the names of the classes/interfaces
 in the given collection.
<DT><A HREF="../org/springframework/util/ClassUtils.html#classPackageAsResourcePath(java.lang.Class)"><B>classPackageAsResourcePath(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Given an input class object, return a string which consists of the
 class's package name as a pathname, i.e., all dots ('.') are replaced by
 slashes ('/').
<DT><A HREF="../org/springframework/core/io/support/ResourcePatternResolver.html#CLASSPATH_ALL_URL_PREFIX"><B>CLASSPATH_ALL_URL_PREFIX</B></A> - 
Static variable in interface org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourcePatternResolver.html" title="interface in org.springframework.core.io.support">ResourcePatternResolver</A>
<DD>Pseudo URL prefix for all matching resources from the class path: "classpath*:"
 This differs from ResourceLoader's classpath URL prefix in that it
 retrieves all matching resources for a given name (e.g.
<DT><A HREF="../org/springframework/core/io/ResourceLoader.html#CLASSPATH_URL_PREFIX"><B>CLASSPATH_URL_PREFIX</B></A> - 
Static variable in interface org.springframework.core.io.<A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io">ResourceLoader</A>
<DD>Pseudo URL prefix for loading from the class path: "classpath:"
<DT><A HREF="../org/springframework/util/Log4jConfigurer.html#CLASSPATH_URL_PREFIX"><B>CLASSPATH_URL_PREFIX</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/Log4jConfigurer.html" title="class in org.springframework.util">Log4jConfigurer</A>
<DD>Pseudo URL prefix for loading from the class path: "classpath:"
<DT><A HREF="../org/springframework/util/ResourceUtils.html#CLASSPATH_URL_PREFIX"><B>CLASSPATH_URL_PREFIX</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>Pseudo URL prefix for loading from the class path: "classpath:"
<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation"><B>ClassPathBeanDefinitionScanner</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>A bean definition scanner that detects bean candidates on the classpath,
 registering corresponding bean definitions with a given registry (BeanFactory
 or ApplicationContext).<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html#ClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>ClassPathBeanDefinitionScanner(BeanDefinitionRegistry)</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation">ClassPathBeanDefinitionScanner</A>
<DD>Create a new ClassPathBeanDefinitionScanner for the given bean factory.
<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html#ClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)"><B>ClassPathBeanDefinitionScanner(BeanDefinitionRegistry, boolean)</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation">ClassPathBeanDefinitionScanner</A>
<DD>Create a new ClassPathBeanDefinitionScanner for the given bean factory.
<DT><A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io"><B>ClassPathResource</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> implementation for class path resources.<DT><A HREF="../org/springframework/core/io/ClassPathResource.html#ClassPathResource(java.lang.String)"><B>ClassPathResource(String)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io">ClassPathResource</A>
<DD>Create a new ClassPathResource for ClassLoader usage.
<DT><A HREF="../org/springframework/core/io/ClassPathResource.html#ClassPathResource(java.lang.String, java.lang.ClassLoader)"><B>ClassPathResource(String, ClassLoader)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io">ClassPathResource</A>
<DD>Create a new ClassPathResource for ClassLoader usage.
<DT><A HREF="../org/springframework/core/io/ClassPathResource.html#ClassPathResource(java.lang.String, java.lang.Class)"><B>ClassPathResource(String, Class&lt;?&gt;)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io">ClassPathResource</A>
<DD>Create a new ClassPathResource for Class usage.
<DT><A HREF="../org/springframework/core/io/ClassPathResource.html#ClassPathResource(java.lang.String, java.lang.ClassLoader, java.lang.Class)"><B>ClassPathResource(String, ClassLoader, Class&lt;?&gt;)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io">ClassPathResource</A>
<DD>Create a new ClassPathResource with optional ClassLoader and Class.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation"><B>ClassPathScanningCandidateComponentProvider</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>A component provider that scans the classpath from a base package.<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#ClassPathScanningCandidateComponentProvider(boolean)"><B>ClassPathScanningCandidateComponentProvider(boolean)</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Create a ClassPathScanningCandidateComponentProvider.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support"><B>ClassPathXmlApplicationContext</B></A> - Class in <A HREF="../org/springframework/context/support/package-summary.html">org.springframework.context.support</A><DD>Standalone XML application context, taking the context definition files
 from the class path, interpreting plain paths as class path resource names
 that include the package path (e.g.<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext()"><B>ClassPathXmlApplicationContext()</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext for bean-style configuration.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(org.springframework.context.ApplicationContext)"><B>ClassPathXmlApplicationContext(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext for bean-style configuration.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String)"><B>ClassPathXmlApplicationContext(String)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext, loading the definitions
 from the given XML file and automatically refreshing the context.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String...)"><B>ClassPathXmlApplicationContext(String...)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext, loading the definitions
 from the given XML files and automatically refreshing the context.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String[], org.springframework.context.ApplicationContext)"><B>ClassPathXmlApplicationContext(String[], ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext with the given parent,
 loading the definitions from the given XML files and automatically
 refreshing the context.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String[], boolean)"><B>ClassPathXmlApplicationContext(String[], boolean)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext, loading the definitions
 from the given XML files.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String[], boolean, org.springframework.context.ApplicationContext)"><B>ClassPathXmlApplicationContext(String[], boolean, ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext with the given parent,
 loading the definitions from the given XML files.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String, java.lang.Class)"><B>ClassPathXmlApplicationContext(String, Class)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext, loading the definitions
 from the given XML file and automatically refreshing the context.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class)"><B>ClassPathXmlApplicationContext(String[], Class)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext, loading the definitions
 from the given XML files and automatically refreshing the context.
<DT><A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html#ClassPathXmlApplicationContext(java.lang.String[], java.lang.Class, org.springframework.context.ApplicationContext)"><B>ClassPathXmlApplicationContext(String[], Class, ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ClassPathXmlApplicationContext.html" title="class in org.springframework.context.support">ClassPathXmlApplicationContext</A>
<DD>Create a new ClassPathXmlApplicationContext with the given parent,
 loading the definitions from the given XML files and automatically
 refreshing the context.
<DT><A HREF="../org/springframework/core/io/ClassRelativeResourceLoader.html" title="class in org.springframework.core.io"><B>ClassRelativeResourceLoader</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><CODE>ResourceLoader</CODE></A> implementation that interprets plain resource paths
 as relative to a given <code>java.lang.Class</code>.<DT><A HREF="../org/springframework/core/io/ClassRelativeResourceLoader.html#ClassRelativeResourceLoader(java.lang.Class)"><B>ClassRelativeResourceLoader(Class)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassRelativeResourceLoader.html" title="class in org.springframework.core.io">ClassRelativeResourceLoader</A>
<DD>Create a new ClassRelativeResourceLoader for the given class.
<DT><A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util"><B>ClassUtils</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Miscellaneous class utility methods.<DT><A HREF="../org/springframework/util/ClassUtils.html#ClassUtils()"><B>ClassUtils()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#cleanPath(java.lang.String)"><B>cleanPath(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Normalize the path by suppressing sequences like "path/.." and
 inner simple dots.
<DT><A HREF="../org/springframework/jdbc/core/DisposableSqlTypeValue.html#cleanup()"><B>cleanup()</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/DisposableSqlTypeValue.html" title="interface in org.springframework.jdbc.core">DisposableSqlTypeValue</A>
<DD>Clean up resources held by this type value,
 for example the LobCreator in case of a SqlLobValue.
<DT><A HREF="../org/springframework/jdbc/core/support/SqlLobValue.html#cleanup()"><B>cleanup()</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/SqlLobValue.html" title="class in org.springframework.jdbc.core.support">SqlLobValue</A>
<DD>Close the LobCreator, if any.
<DT><A HREF="../org/springframework/jdbc/support/SqlValue.html#cleanup()"><B>cleanup()</B></A> - 
Method in interface org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/SqlValue.html" title="interface in org.springframework.jdbc.support">SqlValue</A>
<DD>Clean up resources held by this value object.
<DT><A HREF="../org/springframework/web/bind/support/DefaultSessionAttributeStore.html#cleanupAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)"><B>cleanupAttribute(WebRequest, String)</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/DefaultSessionAttributeStore.html" title="class in org.springframework.web.bind.support">DefaultSessionAttributeStore</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/support/SessionAttributeStore.html#cleanupAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)"><B>cleanupAttribute(WebRequest, String)</B></A> - 
Method in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/SessionAttributeStore.html" title="interface in org.springframework.web.bind.support">SessionAttributeStore</A>
<DD>Clean up the specified attribute in the backend session.
<DT><A HREF="../org/springframework/dao/CleanupFailureDataAccessException.html" title="class in org.springframework.dao"><B>CleanupFailureDataAccessException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Exception thrown when we couldn't cleanup after a data access operation,
 but the actual operation went OK.<DT><A HREF="../org/springframework/dao/CleanupFailureDataAccessException.html#CleanupFailureDataAccessException(java.lang.String, java.lang.Throwable)"><B>CleanupFailureDataAccessException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/CleanupFailureDataAccessException.html" title="class in org.springframework.dao">CleanupFailureDataAccessException</A>
<DD>Constructor for CleanupFailureDataAccessException.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html#cleanupFileItems(org.springframework.util.MultiValueMap)"><B>cleanupFileItems(MultiValueMap&lt;String, MultipartFile&gt;)</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html" title="class in org.springframework.web.multipart.commons">CommonsFileUploadSupport</A>
<DD>Cleanup the Spring MultipartFiles created during multipart parsing,
 potentially holding temporary data on disk.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html#cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)"><B>cleanupMultipart(MultipartHttpServletRequest)</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/multipart/MultipartResolver.html#cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)"><B>cleanupMultipart(MultipartHttpServletRequest)</B></A> - 
Method in interface org.springframework.web.multipart.<A HREF="../org/springframework/web/multipart/MultipartResolver.html" title="interface in org.springframework.web.multipart">MultipartResolver</A>
<DD>Cleanup any resources used for the multipart handling,
 like a storage for the uploaded files.
<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html#cleanupMultipart(org.springframework.web.portlet.multipart.MultipartActionRequest)"><B>cleanupMultipart(MultipartActionRequest)</B></A> - 
Method in class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart">CommonsPortletMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html#cleanupMultipart(org.springframework.web.portlet.multipart.MultipartActionRequest)"><B>cleanupMultipart(MultipartActionRequest)</B></A> - 
Method in interface org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html" title="interface in org.springframework.web.portlet.multipart">PortletMultipartResolver</A>
<DD>Cleanup any resources used for the multipart handling,
 such as storage for any uploaded file(s).
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#cleanupMultipart(javax.servlet.http.HttpServletRequest)"><B>cleanupMultipart(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Clean up any resources used by the given multipart request (if any).
<DT><A HREF="../org/springframework/jdbc/core/ParameterDisposer.html#cleanupParameters()"><B>cleanupParameters()</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ParameterDisposer.html" title="interface in org.springframework.jdbc.core">ParameterDisposer</A>
<DD>Close the resources allocated by parameters that the implementing
 object holds, for example in case of a DisposableSqlTypeValue
 (like a SqlLobValue).
<DT><A HREF="../org/springframework/jdbc/core/StatementCreatorUtils.html#cleanupParameters(java.lang.Object[])"><B>cleanupParameters(Object[])</B></A> - 
Static method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/StatementCreatorUtils.html" title="class in org.springframework.jdbc.core">StatementCreatorUtils</A>
<DD>Clean up all resources held by parameter values which were passed to an
 execute method.
<DT><A HREF="../org/springframework/jdbc/core/StatementCreatorUtils.html#cleanupParameters(java.util.Collection)"><B>cleanupParameters(Collection)</B></A> - 
Static method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/StatementCreatorUtils.html" title="class in org.springframework.jdbc.core">StatementCreatorUtils</A>
<DD>Clean up all resources held by parameter values which were passed to an
 execute method.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#cleanupResource(H, K, boolean)"><B>cleanupResource(H, K, boolean)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>Perform a cleanup on the given resource (which is left bound to the thread).
<DT><A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html#cleanupTransaction(java.lang.Object)"><B>cleanupTransaction(Object)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html" title="class in org.springframework.orm.jdo">DefaultJdoDialect</A>
<DD>This implementation does nothing, as the default beginTransaction implementation
 does not require any cleanup.
<DT><A HREF="../org/springframework/orm/jdo/JdoDialect.html#cleanupTransaction(java.lang.Object)"><B>cleanupTransaction(Object)</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoDialect.html" title="interface in org.springframework.orm.jdo">JdoDialect</A>
<DD>Clean up the transaction via the given transaction data.
<DT><A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html#cleanupTransaction(java.lang.Object)"><B>cleanupTransaction(Object)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html" title="class in org.springframework.orm.jpa">DefaultJpaDialect</A>
<DD>This implementation does nothing, since the default <code>beginTransaction</code>
 implementation does not require any cleanup.
<DT><A HREF="../org/springframework/orm/jpa/JpaDialect.html#cleanupTransaction(java.lang.Object)"><B>cleanupTransaction(Object)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaDialect.html" title="interface in org.springframework.orm.jpa">JpaDialect</A>
<DD>Clean up the transaction via the given transaction data.
<DT><A HREF="../org/springframework/orm/jpa/vendor/HibernateJpaDialect.html#cleanupTransaction(java.lang.Object)"><B>cleanupTransaction(Object)</B></A> - 
Method in class org.springframework.orm.jpa.vendor.<A HREF="../org/springframework/orm/jpa/vendor/HibernateJpaDialect.html" title="class in org.springframework.orm.jpa.vendor">HibernateJpaDialect</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#cleanupTransactionInfo(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo)"><B>cleanupTransactionInfo(TransactionAspectSupport.TransactionInfo)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Reset the TransactionInfo ThreadLocal.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues</A>
<DD>Clear this holder, removing all argument values.
<DT><A HREF="../org/springframework/http/HttpHeaders.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html" title="class in org.springframework.mock.jndi">SimpleNamingContextBuilder</A>
<DD>Clear all bindings in this context builder, while keeping it active.
<DT><A HREF="../org/springframework/mock/web/MockBodyContent.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockBodyContent.html" title="class in org.springframework.mock.web">MockBodyContent</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockJspWriter.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockJspWriter.html" title="class in org.springframework.mock.web">MockJspWriter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#clear()"><B>clear()</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Remove all objects from the <CODE>Session</CODE> cache, and
 cancel all pending saves, updates and deletes.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SessionHolder.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionHolder.html" title="class in org.springframework.orm.hibernate3">SessionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/PersistenceManagerHolder.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/PersistenceManagerHolder.html" title="class in org.springframework.orm.jdo">PersistenceManagerHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/EntityManagerHolder.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/EntityManagerHolder.html" title="class in org.springframework.orm.jpa">EntityManagerHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Clear the transactional state of this resource holder.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#clear()"><B>clear()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Clear the entire transaction synchronization state for the current thread:
 registered synchronizations as well as the various transaction characteristics.
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html" title="class in org.springframework.util">LinkedCaseInsensitiveMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedMultiValueMap.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedMultiValueMap.html" title="class in org.springframework.util">LinkedMultiValueMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html" title="class in org.springframework.util.xml">SimpleNamespaceContext</A>
<DD>Removes all declared prefixes.
<DT><A HREF="../org/springframework/web/portlet/ModelAndView.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/ModelAndView.html" title="class in org.springframework.web.portlet">ModelAndView</A>
<DD>Clear the state of this ModelAndView object.
<DT><A HREF="../org/springframework/web/servlet/ModelAndView.html#clear()"><B>clear()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ModelAndView.html" title="class in org.springframework.web.servlet">ModelAndView</A>
<DD>Clear the state of this ModelAndView object.
<DT><A HREF="../org/springframework/web/portlet/util/PortletUtils.html#clearAllRenderParameters(javax.portlet.ActionResponse)"><B>clearAllRenderParameters(ActionResponse)</B></A> - 
Static method in class org.springframework.web.portlet.util.<A HREF="../org/springframework/web/portlet/util/PortletUtils.html" title="class in org.springframework.web.portlet.util">PortletUtils</A>
<DD>Clear all the render parameters from the <CODE>ActionResponse</CODE>.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#clearAttributes()"><B>clearAttributes()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Clear all of this request's attributes.
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#clearAttributes()"><B>clearAttributes()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>Clear all of this session's attributes.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#clearAttributes()"><B>clearAttributes()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>Clear all of this session's attributes.
<DT><A HREF="../org/springframework/mock/web/MockBodyContent.html#clearBuffer()"><B>clearBuffer()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockBodyContent.html" title="class in org.springframework.mock.web">MockBodyContent</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockJspWriter.html#clearBuffer()"><B>clearBuffer()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockJspWriter.html" title="class in org.springframework.mock.web">MockJspWriter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#clearCache()"><B>clearCache()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Clear the resource bundle cache.
<DT><A HREF="../org/springframework/jms/support/destination/CachingDestinationResolver.html#clearCache()"><B>clearCache()</B></A> - 
Method in interface org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/CachingDestinationResolver.html" title="interface in org.springframework.jms.support.destination">CachingDestinationResolver</A>
<DD>Clear the entire destination cache.
<DT><A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html#clearCache()"><B>clearCache()</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html" title="class in org.springframework.jms.support.destination">JndiDestinationResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html#clearCache()"><B>clearCache()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractCachingViewResolver</A>
<DD>Clear the entire view cache, removing all cached view objects.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#clearCacheIncludingAncestors()"><B>clearCacheIncludingAncestors()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Clear the resource bundle caches of this MessageSource and all its ancestors.
<DT><A HREF="../org/springframework/beans/CachedIntrospectionResults.html#clearClassLoader(java.lang.ClassLoader)"><B>clearClassLoader(ClassLoader)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/CachedIntrospectionResults.html" title="class in org.springframework.beans">CachedIntrospectionResults</A>
<DD>Clear the introspection cache for the given ClassLoader, removing the
 introspection results for all classes underneath that ClassLoader,
 and deregistering the ClassLoader (and any of its children) from the
 acceptance list.
<DT><A HREF="../org/springframework/web/util/WebUtils.html#clearErrorRequestAttributes(javax.servlet.http.HttpServletRequest)"><B>clearErrorRequestAttributes(HttpServletRequest)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Clear the Servlet spec's error attributes as <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A>
 attributes under the keys defined in the Servlet 2.3 specification:
 <code>javax.servlet.error.status_code</code>,
 <code>javax.servlet.error.exception_type</code>,
 <code>javax.servlet.error.message</code>,
 <code>javax.servlet.error.exception</code>,
 <code>javax.servlet.error.request_uri</code>,
 <code>javax.servlet.error.servlet_name</code>.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#clearMergedBeanDefinition(java.lang.String)"><B>clearMergedBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Remove the merged bean definition for the specified bean,
 recreating it on next access.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#clearSynchronization()"><B>clearSynchronization()</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Deactivate transaction synchronization for the current thread.
<DT><A HREF="../org/springframework/http/client/ClientHttpRequest.html" title="interface in org.springframework.http.client"><B>ClientHttpRequest</B></A> - Interface in <A HREF="../org/springframework/http/client/package-summary.html">org.springframework.http.client</A><DD>Represents a client-side HTTP request.<DT><A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client"><B>ClientHttpRequestFactory</B></A> - Interface in <A HREF="../org/springframework/http/client/package-summary.html">org.springframework.http.client</A><DD>Factory for <A HREF="../org/springframework/http/client/ClientHttpRequest.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequest</CODE></A> objects.<DT><A HREF="../org/springframework/http/client/ClientHttpResponse.html" title="interface in org.springframework.http.client"><B>ClientHttpResponse</B></A> - Interface in <A HREF="../org/springframework/http/client/package-summary.html">org.springframework.http.client</A><DD>Represents a client-side HTTP response.<DT><A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html" title="class in org.springframework.orm.hibernate3.support"><B>ClobStringType</B></A> - Class in <A HREF="../org/springframework/orm/hibernate3/support/package-summary.html">org.springframework.orm.hibernate3.support</A><DD>Hibernate UserType implementation for Strings that get mapped to CLOBs.<DT><A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html#ClobStringType()"><B>ClobStringType()</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html" title="class in org.springframework.orm.hibernate3.support">ClobStringType</A>
<DD>Constructor used by Hibernate: fetches config-time LobHandler and
 config-time JTA TransactionManager from LocalSessionFactoryBean.
<DT><A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html#ClobStringType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager)"><B>ClobStringType(LobHandler, TransactionManager)</B></A> - 
Constructor for class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html" title="class in org.springframework.orm.hibernate3.support">ClobStringType</A>
<DD>Constructor used for testing: takes an explicit LobHandler
 and an explicit JTA TransactionManager (can be <code>null</code>).
<DT><A HREF="../org/springframework/orm/ibatis/support/ClobStringTypeHandler.html" title="class in org.springframework.orm.ibatis.support"><B>ClobStringTypeHandler</B></A> - Class in <A HREF="../org/springframework/orm/ibatis/support/package-summary.html">org.springframework.orm.ibatis.support</A><DD>iBATIS TypeHandler implementation for Strings that get mapped to CLOBs.<DT><A HREF="../org/springframework/orm/ibatis/support/ClobStringTypeHandler.html#ClobStringTypeHandler()"><B>ClobStringTypeHandler()</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/ClobStringTypeHandler.html" title="class in org.springframework.orm.ibatis.support">ClobStringTypeHandler</A>
<DD>Constructor used by iBATIS: fetches config-time LobHandler from
 SqlMapClientFactoryBean.
<DT><A HREF="../org/springframework/orm/ibatis/support/ClobStringTypeHandler.html#ClobStringTypeHandler(org.springframework.jdbc.support.lob.LobHandler)"><B>ClobStringTypeHandler(LobHandler)</B></A> - 
Constructor for class org.springframework.orm.ibatis.support.<A HREF="../org/springframework/orm/ibatis/support/ClobStringTypeHandler.html" title="class in org.springframework.orm.ibatis.support">ClobStringTypeHandler</A>
<DD>Constructor used for testing: takes an explicit LobHandler.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#clone()"><B>clone()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Public declaration of Object's <code>clone()</code> method.
<DT><A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html#clone()"><B>clone()</B></A> - 
Method in class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html" title="class in org.springframework.jca.cci.core.support">CommAreaRecord</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#cloneBeanDefinition()"><B>cloneBeanDefinition()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Clone this bean definition.
<DT><A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html#cloneBeanDefinition()"><B>cloneBeanDefinition()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ChildBeanDefinition.html" title="class in org.springframework.beans.factory.support">ChildBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/GenericBeanDefinition.html#cloneBeanDefinition()"><B>cloneBeanDefinition()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/GenericBeanDefinition.html" title="class in org.springframework.beans.factory.support">GenericBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#cloneBeanDefinition()"><B>cloneBeanDefinition()</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#close()"><B>close()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Close this application context, releasing all resources and locks that the
 implementation might hold.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#close()"><B>close()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Close this application context, destroying all beans in its bean factory.
<DT><A HREF="../org/springframework/http/client/ClientHttpResponse.html#close()"><B>close()</B></A> - 
Method in interface org.springframework.http.client.<A HREF="../org/springframework/http/client/ClientHttpResponse.html" title="interface in org.springframework.http.client">ClientHttpResponse</A>
<DD>Closes this response, freeing any resources created.
<DT><A HREF="../org/springframework/http/server/ServerHttpResponse.html#close()"><B>close()</B></A> - 
Method in interface org.springframework.http.server.<A HREF="../org/springframework/http/server/ServerHttpResponse.html" title="interface in org.springframework.http.server">ServerHttpResponse</A>
<DD>Close this response, freeing any resources created.
<DT><A HREF="../org/springframework/http/server/ServletServerHttpResponse.html#close()"><B>close()</B></A> - 
Method in class org.springframework.http.server.<A HREF="../org/springframework/http/server/ServletServerHttpResponse.html" title="class in org.springframework.http.server">ServletServerHttpResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html#close()"><B>close()</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/DefaultLobHandler.DefaultLobCreator.html" title="class in org.springframework.jdbc.support.lob">DefaultLobHandler.DefaultLobCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/lob/LobCreator.html#close()"><B>close()</B></A> - 
Method in interface org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/LobCreator.html" title="interface in org.springframework.jdbc.support.lob">LobCreator</A>
<DD>Close this LobCreator session and free its temporarily created BLOBs and CLOBs.
<DT><A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html#close()"><B>close()</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html" title="class in org.springframework.jdbc.support.lob">OracleLobHandler.OracleLobCreator</A>
<DD>Free all temporary BLOBs and CLOBs created by this creator.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/DelegatingServletInputStream.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/DelegatingServletInputStream.html" title="class in org.springframework.mock.web">DelegatingServletInputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/DelegatingServletOutputStream.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/DelegatingServletOutputStream.html" title="class in org.springframework.mock.web">DelegatingServletOutputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockBodyContent.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockBodyContent.html" title="class in org.springframework.mock.web">MockBodyContent</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Mark this request as completed, keeping its state.
<DT><A HREF="../org/springframework/mock/web/MockJspWriter.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockJspWriter.html" title="class in org.springframework.mock.web">MockJspWriter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#close()"><B>close()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>Mark this request as completed.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html#close()"><B>close()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html" title="class in org.springframework.orm.hibernate3">LocalDataSourceConnectionProvider</A>
<DD>This implementation does nothing:
 We're dealing with an externally managed DataSource.
<DT><A HREF="../org/springframework/util/CommonsLogWriter.html#close()"><B>close()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CommonsLogWriter.html" title="class in org.springframework.util">CommonsLogWriter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DataBinder.html#close()"><B>close()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>Close this DataBinder, which may result in throwing
 a BindException if it encountered any errors.
<DT><A HREF="../org/springframework/jms/connection/JmsResourceHolder.html#closeAll()"><B>closeAll()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#closeBeanFactory()"><B>closeBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Subclasses must implement this method to release their internal bean factory.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html#closeBeanFactory()"><B>closeBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#closeBeanFactory()"><B>closeBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>Not much to do: We hold a single internal BeanFactory that will never
 get released.
<DT><A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html#closeConnection(javax.resource.cci.Connection)"><B>closeConnection(Connection)</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html" title="class in org.springframework.jca.cci.connection">SingleConnectionFactory</A>
<DD>Close the given Connection.
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#closeConnection(java.sql.Connection)"><B>closeConnection(Connection)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Close the given JDBC Connection and ignore any thrown exception.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#closeConnection(javax.jms.Connection)"><B>closeConnection(Connection)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>Close the given Connection.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeConnection(javax.jms.Connection)"><B>closeConnection(Connection)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS Connection and ignore any thrown exception.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeConnection(javax.jms.Connection, boolean)"><B>closeConnection(Connection, boolean)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS Connection and ignore any thrown exception.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html#closeConnection(java.sql.Connection)"><B>closeConnection(Connection)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html" title="class in org.springframework.orm.hibernate3">LocalDataSourceConnectionProvider</A>
<DD>This implementation simply calls <code>Connection.close</code>.
<DT><A HREF="../org/springframework/scheduling/quartz/LocalDataSourceJobStore.html#closeConnection(java.sql.Connection)"><B>closeConnection(Connection)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/LocalDataSourceJobStore.html" title="class in org.springframework.scheduling.quartz">LocalDataSourceJobStore</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/EntityManagerFactoryUtils.html#closeEntityManager(javax.persistence.EntityManager)"><B>closeEntityManager(EntityManager)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/EntityManagerFactoryUtils.html" title="class in org.springframework.orm.jpa">EntityManagerFactoryUtils</A>
<DD>Close the given JPA EntityManager,
 catching and logging any cleanup exceptions thrown.
<DT><A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html#closeEntityManagerAfterFailedBegin(org.springframework.orm.jpa.JpaTransactionManager.JpaTransactionObject)"><B>closeEntityManagerAfterFailedBegin(JpaTransactionManager.JpaTransactionObject)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html" title="class in org.springframework.orm.jpa">JpaTransactionManager</A>
<DD>Close the current transaction's EntityManager.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#closeIterator(java.util.Iterator)"><B>closeIterator(Iterator)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Immediately close an <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util"><CODE>Iterator</CODE></A> created by any of the various
 <code>iterate(..)</code> operations, instead of waiting until the
 session is closed or disconnected.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#closeIterator(java.util.Iterator)"><B>closeIterator(Iterator)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeMessageConsumer(javax.jms.MessageConsumer)"><B>closeMessageConsumer(MessageConsumer)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS MessageConsumer and ignore any thrown exception.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeMessageProducer(javax.jms.MessageProducer)"><B>closeMessageProducer(MessageProducer)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS MessageProducer and ignore any thrown exception.
<DT><A HREF="../org/springframework/web/bind/ServletRequestDataBinder.html#closeNoCatch()"><B>closeNoCatch()</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/ServletRequestDataBinder.html" title="class in org.springframework.web.bind">ServletRequestDataBinder</A>
<DD>Treats errors as fatal.
<DT><A HREF="../org/springframework/web/bind/support/WebRequestDataBinder.html#closeNoCatch()"><B>closeNoCatch()</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/WebRequestDataBinder.html" title="class in org.springframework.web.bind.support">WebRequestDataBinder</A>
<DD>Treats errors as fatal.
<DT><A HREF="../org/springframework/web/portlet/bind/PortletRequestDataBinder.html#closeNoCatch()"><B>closeNoCatch()</B></A> - 
Method in class org.springframework.web.portlet.bind.<A HREF="../org/springframework/web/portlet/bind/PortletRequestDataBinder.html" title="class in org.springframework.web.portlet.bind">PortletRequestDataBinder</A>
<DD>Treats errors as fatal.
<DT><A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html#closePersistenceManagerAfterFailedBegin(org.springframework.orm.jdo.JdoTransactionManager.JdoTransactionObject)"><B>closePersistenceManagerAfterFailedBegin(JdoTransactionManager.JdoTransactionObject)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html" title="class in org.springframework.orm.jdo">JdoTransactionManager</A>
<DD>Close the current transaction's EntityManager.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeQueueBrowser(javax.jms.QueueBrowser)"><B>closeQueueBrowser(QueueBrowser)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS QueueBrowser and ignore any thrown exception.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeQueueRequestor(javax.jms.QueueRequestor)"><B>closeQueueRequestor(QueueRequestor)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS QueueRequestor and ignore any thrown exception.
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#closeResultSet(java.sql.ResultSet)"><B>closeResultSet(ResultSet)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Close the given JDBC ResultSet and ignore any thrown exception.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#closeSession(javax.jms.Session)"><B>closeSession(Session)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Close the given JMS Session and ignore any thrown exception.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#closeSession(org.hibernate.Session)"><B>closeSession(Session)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Perform actual closing of the Hibernate Session,
 catching and logging any cleanup exceptions thrown.
<DT><A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html#closeSession(org.hibernate.Session, org.hibernate.SessionFactory)"><B>closeSession(Session, SessionFactory)</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/OpenSessionInViewFilter.html" title="class in org.springframework.orm.hibernate3.support">OpenSessionInViewFilter</A>
<DD>Close the given Session.
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#closeStatement(java.sql.Statement)"><B>closeStatement(Statement)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Close the given JDBC Statement and ignore any thrown exception.
<DT><A HREF="../org/springframework/ui/freemarker/SpringTemplateLoader.html#closeTemplateSource(java.lang.Object)"><B>closeTemplateSource(Object)</B></A> - 
Method in class org.springframework.ui.freemarker.<A HREF="../org/springframework/ui/freemarker/SpringTemplateLoader.html" title="class in org.springframework.ui.freemarker">SpringTemplateLoader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#closeWebApplicationContext(javax.servlet.ServletContext)"><B>closeWebApplicationContext(ServletContext)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Close Spring's web application context for the given servlet context.
<DT><A HREF="../org/springframework/core/enums/LabeledEnum.html#CODE_ORDER"><B>CODE_ORDER</B></A> - 
Static variable in interface org.springframework.core.enums.<A HREF="../org/springframework/core/enums/LabeledEnum.html" title="interface in org.springframework.core.enums">LabeledEnum</A>
<DD><B>Deprecated.</B>&nbsp;Shared Comparator instance that sorts enumerations by <code>CODE_ORDER</code>.
<DT><A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html#CODE_SEPARATOR"><B>CODE_SEPARATOR</B></A> - 
Static variable in class org.springframework.validation.<A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html" title="class in org.springframework.validation">DefaultMessageCodesResolver</A>
<DD>The separator that this implementation uses when resolving message codes.
<DT><A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html" title="class in org.springframework.remoting.rmi"><B>CodebaseAwareObjectInputStream</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>Special ObjectInputStream subclass that falls back to a specified codebase
 to load classes from if not found locally.<DT><A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html#CodebaseAwareObjectInputStream(java.io.InputStream, java.lang.String)"><B>CodebaseAwareObjectInputStream(InputStream, String)</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html" title="class in org.springframework.remoting.rmi">CodebaseAwareObjectInputStream</A>
<DD>Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase.
<DT><A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html#CodebaseAwareObjectInputStream(java.io.InputStream, java.lang.ClassLoader, java.lang.String)"><B>CodebaseAwareObjectInputStream(InputStream, ClassLoader, String)</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html" title="class in org.springframework.remoting.rmi">CodebaseAwareObjectInputStream</A>
<DD>Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase.
<DT><A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core"><B>CollectionFactory</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Factory for collections, being aware of Java 5 and Java 6 collections.<DT><A HREF="../org/springframework/core/CollectionFactory.html#CollectionFactory()"><B>CollectionFactory()</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#collectionToCommaDelimitedString(java.util.Collection)"><B>collectionToCommaDelimitedString(Collection)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Convenience method to return a Collection as a CSV String.
<DT><A HREF="../org/springframework/util/StringUtils.html#collectionToDelimitedString(java.util.Collection, java.lang.String, java.lang.String, java.lang.String)"><B>collectionToDelimitedString(Collection, String, String, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Convenience method to return a Collection as a delimited (e.g.
<DT><A HREF="../org/springframework/util/StringUtils.html#collectionToDelimitedString(java.util.Collection, java.lang.String)"><B>collectionToDelimitedString(Collection, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Convenience method to return a Collection as a delimited (e.g.
<DT><A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util"><B>CollectionUtils</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Miscellaneous collection utility methods.<DT><A HREF="../org/springframework/util/CollectionUtils.html#CollectionUtils()"><B>CollectionUtils()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html#COLS_ATTRIBUTE"><B>COLS_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html" title="class in org.springframework.web.servlet.tags.form">TextareaTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/ColumnMapRowMapper.html" title="class in org.springframework.jdbc.core"><B>ColumnMapRowMapper</B></A> - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD><A HREF="../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core"><CODE>RowMapper</CODE></A> implementation that creates a <code>java.util.Map</code>
 for each row, representing all columns as key-value pairs: one
 entry for each column, with the column name as key.<DT><A HREF="../org/springframework/jdbc/core/ColumnMapRowMapper.html#ColumnMapRowMapper()"><B>ColumnMapRowMapper()</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ColumnMapRowMapper.html" title="class in org.springframework.jdbc.core">ColumnMapRowMapper</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AntPathMatcher.html#combine(java.lang.String, java.lang.String)"><B>combine(String, String)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AntPathMatcher.html" title="class in org.springframework.util">AntPathMatcher</A>
<DD>Combines two patterns into a new pattern that is returned.
<DT><A HREF="../org/springframework/util/PathMatcher.html#combine(java.lang.String, java.lang.String)"><B>combine(String, String)</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/PathMatcher.html" title="interface in org.springframework.util">PathMatcher</A>
<DD>Combines two patterns into a new pattern that is returned.
<DT><A HREF="../org/springframework/util/StringUtils.html#commaDelimitedListToSet(java.lang.String)"><B>commaDelimitedListToSet(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Convenience method to convert a CSV string list to a set.
<DT><A HREF="../org/springframework/util/StringUtils.html#commaDelimitedListToStringArray(java.lang.String)"><B>commaDelimitedListToStringArray(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Convert a CSV list into an array of Strings.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html#COMMAND_NAME_VARIABLE_NAME"><B>COMMAND_NAME_VARIABLE_NAME</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractDataBoundFormElementTag</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, in favor of <A HREF="../org/springframework/web/servlet/tags/form/FormTag.html#MODEL_ATTRIBUTE_VARIABLE_NAME"><CODE>FormTag.MODEL_ATTRIBUTE_VARIABLE_NAME</CODE></A></I>
<DT><A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html" title="class in org.springframework.jca.cci.core.support"><B>CommAreaRecord</B></A> - Class in <A HREF="../org/springframework/jca/cci/core/support/package-summary.html">org.springframework.jca.cci.core.support</A><DD>CCI Record implementation for a COMMAREA, holding a byte array.<DT><A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html#CommAreaRecord()"><B>CommAreaRecord()</B></A> - 
Constructor for class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html" title="class in org.springframework.jca.cci.core.support">CommAreaRecord</A>
<DD>Create a new CommAreaRecord.
<DT><A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html#CommAreaRecord(byte[])"><B>CommAreaRecord(byte[])</B></A> - 
Constructor for class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html" title="class in org.springframework.jca.cci.core.support">CommAreaRecord</A>
<DD>Create a new CommAreaRecord.
<DT><A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html#commit()"><B>commit()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html" title="class in org.springframework.transaction.jta">ManagedTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html#commit()"><B>commit()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html" title="class in org.springframework.transaction.jta">UserTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/PlatformTransactionManager.html#commit(org.springframework.transaction.TransactionStatus)"><B>commit(TransactionStatus)</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A>
<DD>Commit the given transaction, with regard to its status.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#commit(org.springframework.transaction.TransactionStatus)"><B>commit(TransactionStatus)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>This implementation of commit handles participating in existing
 transactions and programmatic rollback requests.
<DT><A HREF="../org/springframework/jms/connection/JmsResourceHolder.html#commitAll()"><B>commitAll()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#commitIfNecessary(javax.jms.Session, javax.jms.Message)"><B>commitIfNecessary(Session, Message)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Perform a commit or message acknowledgement, as appropriate.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#commitIfNecessary(javax.jms.Session)"><B>commitIfNecessary(Session)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Commit the Session if not within a JTA transaction.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo)"><B>commitTransactionAfterReturning(TransactionAspectSupport.TransactionInfo)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Execute after successful completion of call, but not after an exception was handled.
<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html#COMMON_ANNOTATION_PROCESSOR_BEAN_NAME"><B>COMMON_ANNOTATION_PROCESSOR_BEAN_NAME</B></A> - 
Static variable in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html" title="class in org.springframework.context.annotation">AnnotationConfigUtils</A>
<DD>The bean name of the internally managed JSR-250 annotation processor.
<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html" title="class in org.springframework.context.annotation"><B>CommonAnnotationBeanPostProcessor</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD><A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> implementation
 that supports common Java annotations out of the box, in particular the JSR-250
 annotations in the <code>javax.annotation</code> package.<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html#CommonAnnotationBeanPostProcessor()"><B>CommonAnnotationBeanPostProcessor()</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.html" title="class in org.springframework.context.annotation">CommonAnnotationBeanPostProcessor</A>
<DD>Create a new CommonAnnotationBeanPostProcessor,
 with the init and destroy annotation types set to
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/annotation/PostConstruct.html?is-external=true" title="class or interface in javax.annotation"><CODE>PostConstruct</CODE></A> and <A HREF="http://java.sun.com/javase/6/docs/api/javax/annotation/PreDestroy.html?is-external=true" title="class or interface in javax.annotation"><CODE>PreDestroy</CODE></A>,
 respectively.
<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html" title="class in org.springframework.context.annotation"><B>CommonAnnotationBeanPostProcessor.LookupElement</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Class representing generic injection information about an annotated field
 or setter method, supporting @Resource and related annotations.<DT><A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html#CommonAnnotationBeanPostProcessor.LookupElement(java.lang.reflect.Member, java.beans.PropertyDescriptor)"><B>CommonAnnotationBeanPostProcessor.LookupElement(Member, PropertyDescriptor)</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.LookupElement.html" title="class in org.springframework.context.annotation">CommonAnnotationBeanPostProcessor.LookupElement</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#commonDatabaseName(java.lang.String)"><B>commonDatabaseName(String)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Extract a common name for the database in use even if various drivers/platforms provide varying names.
<DT><A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html" title="class in org.springframework.http.client"><B>CommonsClientHttpRequestFactory</B></A> - Class in <A HREF="../org/springframework/http/client/package-summary.html">org.springframework.http.client</A><DD><A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequestFactory</CODE></A> implementation that uses
 <a href="http://jakarta.apache.org/commons/httpclient">Jakarta Commons HttpClient</a> to create requests.<DT><A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html#CommonsClientHttpRequestFactory()"><B>CommonsClientHttpRequestFactory()</B></A> - 
Constructor for class org.springframework.http.client.<A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html" title="class in org.springframework.http.client">CommonsClientHttpRequestFactory</A>
<DD>Create a new instance of the <code>CommonsHttpRequestFactory</code> with a default
 <A HREF="http://jakarta.apache.org/commons/httpclient/apidocs/org/apache/commons/httpclient/HttpClient.html?is-external=true" title="class or interface in org.apache.commons.httpclient"><CODE>HttpClient</CODE></A> that uses a default <A HREF="http://jakarta.apache.org/commons/httpclient/apidocs/org/apache/commons/httpclient/MultiThreadedHttpConnectionManager.html?is-external=true" title="class or interface in org.apache.commons.httpclient"><CODE>MultiThreadedHttpConnectionManager</CODE></A>.
<DT><A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html#CommonsClientHttpRequestFactory(org.apache.commons.httpclient.HttpClient)"><B>CommonsClientHttpRequestFactory(HttpClient)</B></A> - 
Constructor for class org.springframework.http.client.<A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html" title="class in org.springframework.http.client">CommonsClientHttpRequestFactory</A>
<DD>Create a new instance of the <code>CommonsHttpRequestFactory</code> with the given
 <A HREF="http://jakarta.apache.org/commons/httpclient/apidocs/org/apache/commons/httpclient/HttpClient.html?is-external=true" title="class or interface in org.apache.commons.httpclient"><CODE>HttpClient</CODE></A> instance.
<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc"><B>CommonsDbcpNativeJdbcExtractor</B></A> - Class in <A HREF="../org/springframework/jdbc/support/nativejdbc/package-summary.html">org.springframework.jdbc.support.nativejdbc</A><DD>Implementation of the <A HREF="../org/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor.html" title="interface in org.springframework.jdbc.support.nativejdbc"><CODE>NativeJdbcExtractor</CODE></A> interface for the
 Jakarta Commons DBCP connection pool, version 1.1 or higher.<DT><A HREF="../org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html#CommonsDbcpNativeJdbcExtractor()"><B>CommonsDbcpNativeJdbcExtractor()</B></A> - 
Constructor for class org.springframework.jdbc.support.nativejdbc.<A HREF="../org/springframework/jdbc/support/nativejdbc/CommonsDbcpNativeJdbcExtractor.html" title="class in org.springframework.jdbc.support.nativejdbc">CommonsDbcpNativeJdbcExtractor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html" title="class in org.springframework.web.multipart.commons"><B>CommonsFileUploadSupport</B></A> - Class in <A HREF="../org/springframework/web/multipart/commons/package-summary.html">org.springframework.web.multipart.commons</A><DD>Base class for multipart resolvers that use Jakarta Commons FileUpload
 1.2 or above.<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html#CommonsFileUploadSupport()"><B>CommonsFileUploadSupport()</B></A> - 
Constructor for class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.html" title="class in org.springframework.web.multipart.commons">CommonsFileUploadSupport</A>
<DD>Instantiate a new CommonsFileUploadSupport with its
 corresponding FileItemFactory and FileUpload instances.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.MultipartParsingResult.html" title="class in org.springframework.web.multipart.commons"><B>CommonsFileUploadSupport.MultipartParsingResult</B></A> - Class in <A HREF="../org/springframework/web/multipart/commons/package-summary.html">org.springframework.web.multipart.commons</A><DD>Holder for a Map of Spring MultipartFiles and a Map of
 multipart parameters.<DT><A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.MultipartParsingResult.html#CommonsFileUploadSupport.MultipartParsingResult(org.springframework.util.MultiValueMap, java.util.Map)"><B>CommonsFileUploadSupport.MultipartParsingResult(MultiValueMap&lt;String, MultipartFile&gt;, Map&lt;String, String[]&gt;)</B></A> - 
Constructor for class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsFileUploadSupport.MultipartParsingResult.html" title="class in org.springframework.web.multipart.commons">CommonsFileUploadSupport.MultipartParsingResult</A>
<DD>Create a new MultipartParsingResult.
<DT><A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker"><B>CommonsHttpInvokerRequestExecutor</B></A> - Class in <A HREF="../org/springframework/remoting/httpinvoker/package-summary.html">org.springframework.remoting.httpinvoker</A><DD><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerRequestExecutor.html" title="interface in org.springframework.remoting.httpinvoker"><CODE>HttpInvokerRequestExecutor</CODE></A> implementation that uses
 <a href="http://jakarta.apache.org/commons/httpclient">Jakarta Commons HttpClient</a>
 to execute POST requests.<DT><A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html#CommonsHttpInvokerRequestExecutor()"><B>CommonsHttpInvokerRequestExecutor()</B></A> - 
Constructor for class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">CommonsHttpInvokerRequestExecutor</A>
<DD>Create a new CommonsHttpInvokerRequestExecutor with a default
 HttpClient that uses a default MultiThreadedHttpConnectionManager.
<DT><A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html#CommonsHttpInvokerRequestExecutor(org.apache.commons.httpclient.HttpClient)"><B>CommonsHttpInvokerRequestExecutor(HttpClient)</B></A> - 
Constructor for class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">CommonsHttpInvokerRequestExecutor</A>
<DD>Create a new CommonsHttpInvokerRequestExecutor with the given
 HttpClient instance.
<DT><A HREF="../org/springframework/beans/factory/config/CommonsLogFactoryBean.html" title="class in org.springframework.beans.factory.config"><B>CommonsLogFactoryBean</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Factory bean for
 <a href="http://jakarta.apache.org/commons/logging.html">commons-logging</a>
 <A HREF="http://jakarta.apache.org/commons/logging/apidocs/org/apache/commons/logging/Log.html?is-external=true" title="class or interface in org.apache.commons.logging"><CODE>Log</CODE></A> instances.<DT><A HREF="../org/springframework/beans/factory/config/CommonsLogFactoryBean.html#CommonsLogFactoryBean()"><B>CommonsLogFactoryBean()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/CommonsLogFactoryBean.html" title="class in org.springframework.beans.factory.config">CommonsLogFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/velocity/CommonsLoggingLogSystem.html" title="class in org.springframework.ui.velocity"><B>CommonsLoggingLogSystem</B></A> - Class in <A HREF="../org/springframework/ui/velocity/package-summary.html">org.springframework.ui.velocity</A><DD>Velocity LogSystem implementation for Jakarta Commons Logging.<DT><A HREF="../org/springframework/ui/velocity/CommonsLoggingLogSystem.html#CommonsLoggingLogSystem()"><B>CommonsLoggingLogSystem()</B></A> - 
Constructor for class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/CommonsLoggingLogSystem.html" title="class in org.springframework.ui.velocity">CommonsLoggingLogSystem</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CommonsLogWriter.html" title="class in org.springframework.util"><B>CommonsLogWriter</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD><code>java.io.Writer</code> adapter for a Commons Logging <code>Log</code>.<DT><A HREF="../org/springframework/util/CommonsLogWriter.html#CommonsLogWriter(org.apache.commons.logging.Log)"><B>CommonsLogWriter(Log)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CommonsLogWriter.html" title="class in org.springframework.util">CommonsLogWriter</A>
<DD>Create a new CommonsLogWriter for the given Commons Logging logger.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html" title="class in org.springframework.web.multipart.commons"><B>CommonsMultipartFile</B></A> - Class in <A HREF="../org/springframework/web/multipart/commons/package-summary.html">org.springframework.web.multipart.commons</A><DD>MultipartFile implementation for Jakarta Commons FileUpload.<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html#CommonsMultipartFile(org.apache.commons.fileupload.FileItem)"><B>CommonsMultipartFile(FileItem)</B></A> - 
Constructor for class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartFile.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartFile</A>
<DD>Create an instance wrapping the given FileItem.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons"><B>CommonsMultipartResolver</B></A> - Class in <A HREF="../org/springframework/web/multipart/commons/package-summary.html">org.springframework.web.multipart.commons</A><DD>Servlet-based <A HREF="../org/springframework/web/multipart/MultipartResolver.html" title="interface in org.springframework.web.multipart"><CODE>MultipartResolver</CODE></A> implementation
 for <a href="http://jakarta.apache.org/commons/fileupload">Jakarta Commons FileUpload</a>
 1.2 or above.<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html#CommonsMultipartResolver()"><B>CommonsMultipartResolver()</B></A> - 
Constructor for class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartResolver</A>
<DD>Constructor for use as bean.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html#CommonsMultipartResolver(javax.servlet.ServletContext)"><B>CommonsMultipartResolver(ServletContext)</B></A> - 
Constructor for class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartResolver</A>
<DD>Constructor for standalone usage.
<DT><A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html" title="class in org.springframework.aop.target"><B>CommonsPoolTargetSource</B></A> - Class in <A HREF="../org/springframework/aop/target/package-summary.html">org.springframework.aop.target</A><DD>TargetSource implementation that holds objects in a configurable
 Jakarta Commons Pool.<DT><A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html#CommonsPoolTargetSource()"><B>CommonsPoolTargetSource()</B></A> - 
Constructor for class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html" title="class in org.springframework.aop.target">CommonsPoolTargetSource</A>
<DD>Create a CommonsPoolTargetSource with default settings.
<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart"><B>CommonsPortletMultipartResolver</B></A> - Class in <A HREF="../org/springframework/web/portlet/multipart/package-summary.html">org.springframework.web.portlet.multipart</A><DD><A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html" title="interface in org.springframework.web.portlet.multipart"><CODE>PortletMultipartResolver</CODE></A> implementation for
 <a href="http://jakarta.apache.org/commons/fileupload">Jakarta Commons FileUpload</a>
 1.2 or above.<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html#CommonsPortletMultipartResolver()"><B>CommonsPortletMultipartResolver()</B></A> - 
Constructor for class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart">CommonsPortletMultipartResolver</A>
<DD>Constructor for use as bean.
<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html#CommonsPortletMultipartResolver(javax.portlet.PortletContext)"><B>CommonsPortletMultipartResolver(PortletContext)</B></A> - 
Constructor for class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart">CommonsPortletMultipartResolver</A>
<DD>Constructor for standalone usage.
<DT><A HREF="../org/springframework/web/filter/CommonsRequestLoggingFilter.html" title="class in org.springframework.web.filter"><B>CommonsRequestLoggingFilter</B></A> - Class in <A HREF="../org/springframework/web/filter/package-summary.html">org.springframework.web.filter</A><DD>Simple request logging filter that writes the request URI
 (and optionally the query string) to the Commons Log.<DT><A HREF="../org/springframework/web/filter/CommonsRequestLoggingFilter.html#CommonsRequestLoggingFilter()"><B>CommonsRequestLoggingFilter()</B></A> - 
Constructor for class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/CommonsRequestLoggingFilter.html" title="class in org.springframework.web.filter">CommonsRequestLoggingFilter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/ComparableComparator.html" title="class in org.springframework.util.comparator"><B>ComparableComparator</B></A>&lt;<A HREF="../org/springframework/util/comparator/ComparableComparator.html" title="type parameter in ComparableComparator">T</A> extends <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html?is-external=true" title="class or interface in java.lang">Comparable</A>&lt;<A HREF="../org/springframework/util/comparator/ComparableComparator.html" title="type parameter in ComparableComparator">T</A>&gt;&gt; - Class in <A HREF="../org/springframework/util/comparator/package-summary.html">org.springframework.util.comparator</A><DD>Comparator that adapts Comparables to the Comparator interface.<DT><A HREF="../org/springframework/util/comparator/ComparableComparator.html#ComparableComparator()"><B>ComparableComparator()</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/ComparableComparator.html" title="class in org.springframework.util.comparator">ComparableComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/PropertyComparator.html#compare(java.lang.Object, java.lang.Object)"><B>compare(Object, Object)</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/PropertyComparator.html" title="class in org.springframework.beans.support">PropertyComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/ExceptionDepthComparator.html#compare(java.lang.Class, java.lang.Class)"><B>compare(Class&lt;? extends Throwable&gt;, Class&lt;? extends Throwable&gt;)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/ExceptionDepthComparator.html" title="class in org.springframework.core">ExceptionDepthComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/OrderComparator.html#compare(java.lang.Object, java.lang.Object)"><B>compare(Object, Object)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/OrderComparator.html" title="class in org.springframework.core">OrderComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeComparator.html#compare(java.lang.Object, java.lang.Object)"><B>compare(Object, Object)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeComparator.html" title="class in org.springframework.expression.spel.support">StandardTypeComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/TypeComparator.html#compare(java.lang.Object, java.lang.Object)"><B>compare(Object, Object)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/TypeComparator.html" title="interface in org.springframework.expression">TypeComparator</A>
<DD>Compare two objects.
<DT><A HREF="../org/springframework/util/comparator/BooleanComparator.html#compare(java.lang.Boolean, java.lang.Boolean)"><B>compare(Boolean, Boolean)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/BooleanComparator.html" title="class in org.springframework.util.comparator">BooleanComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/ComparableComparator.html#compare(T, T)"><B>compare(T, T)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/ComparableComparator.html" title="class in org.springframework.util.comparator">ComparableComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html#compare(T, T)"><B>compare(T, T)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator">CompoundComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/InvertibleComparator.html#compare(T, T)"><B>compare(T, T)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/InvertibleComparator.html" title="class in org.springframework.util.comparator">InvertibleComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/comparator/NullSafeComparator.html#compare(T, T)"><B>compare(T, T)</B></A> - 
Method in class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/NullSafeComparator.html" title="class in org.springframework.util.comparator">NullSafeComparator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/enums/AbstractLabeledEnum.html#compareTo(java.lang.Object)"><B>compareTo(Object)</B></A> - 
Method in class org.springframework.core.enums.<A HREF="../org/springframework/core/enums/AbstractLabeledEnum.html" title="class in org.springframework.core.enums">AbstractLabeledEnum</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/http/MediaType.html#compareTo(org.springframework.http.MediaType)"><B>compareTo(MediaType)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http">MediaType</A>
<DD>Compares this <A HREF="../org/springframework/http/MediaType.html" title="class in org.springframework.http"><CODE>MediaType</CODE></A> to another alphabetically.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#compile()"><B>compile()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Compile this JdbcCall using provided parameters and meta data plus other settings.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html#compile()"><B>compile()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcInsert</A>
<DD>Compile this JdbcInsert using provided parameters and meta data plus other settings.
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#compile()"><B>compile()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Compile this query.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html#compileInternal()"><B>compileInternal()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcCall.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcCall</A>
<DD>Method to perform the actual compilation.
<DT><A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html#compileInternal()"><B>compileInternal()</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/AbstractJdbcInsert.html" title="class in org.springframework.jdbc.core.simple">AbstractJdbcInsert</A>
<DD>Method to perform the actual compilation.
<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#compileInternal()"><B>compileInternal()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>Subclasses must implement this template method to perform their own compilation.
<DT><A HREF="../org/springframework/jdbc/object/SqlCall.html#compileInternal()"><B>compileInternal()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlCall.html" title="class in org.springframework.jdbc.object">SqlCall</A>
<DD>Overridden method to configure the CallableStatementCreatorFactory
 based on our declared parameters.
<DT><A HREF="../org/springframework/jdbc/object/SqlOperation.html#compileInternal()"><B>compileInternal()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlOperation.html" title="class in org.springframework.jdbc.object">SqlOperation</A>
<DD>Overridden method to configure the PreparedStatementCreatorFactory
 based on our declared parameters.
<DT><A HREF="../org/springframework/aop/framework/AopProxyUtils.html#completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport)"><B>completeProxiedInterfaces(AdvisedSupport)</B></A> - 
Static method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AopProxyUtils.html" title="class in org.springframework.aop.framework">AopProxyUtils</A>
<DD>Determine the complete set of interfaces to proxy for the given AOP configuration.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo, java.lang.Throwable)"><B>completeTransactionAfterThrowing(TransactionAspectSupport.TransactionInfo, Throwable)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Handle a throwable, completing the transaction.
<DT><A HREF="../org/springframework/stereotype/Component.html" title="annotation in org.springframework.stereotype"><B>Component</B></A> - Annotation Type in <A HREF="../org/springframework/stereotype/package-summary.html">org.springframework.stereotype</A><DD>Indicates that an annotated class is a "component".<DT><A HREF="../org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html" title="class in org.springframework.web.servlet.view.tiles"><B>ComponentControllerSupport</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/tiles/package-summary.html">org.springframework.web.servlet.view.tiles</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0</I><DT><A HREF="../org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html#ComponentControllerSupport()"><B>ComponentControllerSupport()</B></A> - 
Constructor for class org.springframework.web.servlet.view.tiles.<A HREF="../org/springframework/web/servlet/view/tiles/ComponentControllerSupport.html" title="class in org.springframework.web.servlet.view.tiles">ComponentControllerSupport</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/ComponentDefinition.html" title="interface in org.springframework.beans.factory.parsing"><B>ComponentDefinition</B></A> - Interface in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>Interface that describes the logical view of a set of <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinitions</CODE></A>
 and <A HREF="../org/springframework/beans/factory/config/BeanReference.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanReferences</CODE></A> as presented in some configuration context.<DT><A HREF="../org/springframework/beans/factory/parsing/EmptyReaderEventListener.html#componentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)"><B>componentRegistered(ComponentDefinition)</B></A> - 
Method in class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/EmptyReaderEventListener.html" title="class in org.springframework.beans.factory.parsing">EmptyReaderEventListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/ReaderEventListener.html#componentRegistered(org.springframework.beans.factory.parsing.ComponentDefinition)"><B>componentRegistered(ComponentDefinition)</B></A> - 
Method in interface org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ReaderEventListener.html" title="interface in org.springframework.beans.factory.parsing">ReaderEventListener</A>
<DD>Notification that the given component has been registered.
<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation"><B>ComponentScanBeanDefinitionParser</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Parser for the &lt;context:component-scan/&gt; element.<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html#ComponentScanBeanDefinitionParser()"><B>ComponentScanBeanDefinitionParser()</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation">ComponentScanBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support"><B>ComposablePointcut</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Convenient class for building up pointcuts.<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#ComposablePointcut()"><B>ComposablePointcut()</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Create a default ComposablePointcut, with <code>ClassFilter.TRUE</code>
 and <code>MethodMatcher.TRUE</code>.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#ComposablePointcut(org.springframework.aop.Pointcut)"><B>ComposablePointcut(Pointcut)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Create a ComposablePointcut based on the given Pointcut.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#ComposablePointcut(org.springframework.aop.ClassFilter)"><B>ComposablePointcut(ClassFilter)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Create a ComposablePointcut for the given ClassFilter,
 with <code>MethodMatcher.TRUE</code>.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#ComposablePointcut(org.springframework.aop.MethodMatcher)"><B>ComposablePointcut(MethodMatcher)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Create a ComposablePointcut for the given MethodMatcher,
 with <code>ClassFilter.TRUE</code>.
<DT><A HREF="../org/springframework/aop/support/ComposablePointcut.html#ComposablePointcut(org.springframework.aop.ClassFilter, org.springframework.aop.MethodMatcher)"><B>ComposablePointcut(ClassFilter, MethodMatcher)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ComposablePointcut.html" title="class in org.springframework.aop.support">ComposablePointcut</A>
<DD>Create a ComposablePointcut for the given ClassFilter and MethodMatcher.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#composeName(java.lang.String, java.lang.String)"><B>composeName(String, String)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#composeName(javax.naming.Name, javax.naming.Name)"><B>composeName(Name, Name)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/CompositeComponentDefinition.html" title="class in org.springframework.beans.factory.parsing"><B>CompositeComponentDefinition</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD><A HREF="../org/springframework/beans/factory/parsing/ComponentDefinition.html" title="interface in org.springframework.beans.factory.parsing"><CODE>ComponentDefinition</CODE></A> implementation that holds one or more nested
 <A HREF="../org/springframework/beans/factory/parsing/ComponentDefinition.html" title="interface in org.springframework.beans.factory.parsing"><CODE>ComponentDefinition</CODE></A> instances, aggregating them into a named group
 of components.<DT><A HREF="../org/springframework/beans/factory/parsing/CompositeComponentDefinition.html#CompositeComponentDefinition(java.lang.String, java.lang.Object)"><B>CompositeComponentDefinition(String, Object)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/CompositeComponentDefinition.html" title="class in org.springframework.beans.factory.parsing">CompositeComponentDefinition</A>
<DD>Create a new CompositeComponentDefinition.
<DT><A HREF="../org/springframework/util/CompositeIterator.html" title="class in org.springframework.util"><B>CompositeIterator</B></A>&lt;<A HREF="../org/springframework/util/CompositeIterator.html" title="type parameter in CompositeIterator">E</A>&gt; - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Iterator that combines multiple other iterators.<DT><A HREF="../org/springframework/util/CompositeIterator.html#CompositeIterator()"><B>CompositeIterator()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CompositeIterator.html" title="class in org.springframework.util">CompositeIterator</A>
<DD>Create a new composite iterator.
<DT><A HREF="../org/springframework/expression/common/CompositeStringExpression.html" title="class in org.springframework.expression.common"><B>CompositeStringExpression</B></A> - Class in <A HREF="../org/springframework/expression/common/package-summary.html">org.springframework.expression.common</A><DD>Represents a template expression broken into pieces.<DT><A HREF="../org/springframework/expression/common/CompositeStringExpression.html#CompositeStringExpression(java.lang.String, org.springframework.expression.Expression[])"><B>CompositeStringExpression(String, Expression[])</B></A> - 
Constructor for class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/CompositeStringExpression.html" title="class in org.springframework.expression.common">CompositeStringExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/CompositeTransactionAttributeSource.html" title="class in org.springframework.transaction.interceptor"><B>CompositeTransactionAttributeSource</B></A> - Class in <A HREF="../org/springframework/transaction/interceptor/package-summary.html">org.springframework.transaction.interceptor</A><DD>Composite <A HREF="../org/springframework/transaction/interceptor/TransactionAttributeSource.html" title="interface in org.springframework.transaction.interceptor"><CODE>TransactionAttributeSource</CODE></A> implementation that iterates
 over a given array of <A HREF="../org/springframework/transaction/interceptor/TransactionAttributeSource.html" title="interface in org.springframework.transaction.interceptor"><CODE>TransactionAttributeSource</CODE></A> instances.<DT><A HREF="../org/springframework/transaction/interceptor/CompositeTransactionAttributeSource.html#CompositeTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource[])"><B>CompositeTransactionAttributeSource(TransactionAttributeSource[])</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/CompositeTransactionAttributeSource.html" title="class in org.springframework.transaction.interceptor">CompositeTransactionAttributeSource</A>
<DD>Create a new CompositeTransactionAttributeSource for the given sources.
<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator"><B>CompoundComparator</B></A>&lt;<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="type parameter in CompoundComparator">T</A>&gt; - Class in <A HREF="../org/springframework/util/comparator/package-summary.html">org.springframework.util.comparator</A><DD>A comparator that chains a sequence of one or more more Comparators.<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html#CompoundComparator()"><B>CompoundComparator()</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator">CompoundComparator</A>
<DD>Construct a CompoundComparator with initially no Comparators.
<DT><A HREF="../org/springframework/util/comparator/CompoundComparator.html#CompoundComparator(java.util.Comparator[])"><B>CompoundComparator(Comparator[])</B></A> - 
Constructor for class org.springframework.util.comparator.<A HREF="../org/springframework/util/comparator/CompoundComparator.html" title="class in org.springframework.util.comparator">CompoundComparator</A>
<DD>Construct a CompoundComparator from the Comparators in the provided array.
<DT><A HREF="../org/springframework/expression/spel/ast/CompoundExpression.html" title="class in org.springframework.expression.spel.ast"><B>CompoundExpression</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Represents a DOT separated expression sequence, such as 'property1.property2.methodOne()'<DT><A HREF="../org/springframework/expression/spel/ast/CompoundExpression.html#CompoundExpression(int, org.springframework.expression.spel.ast.SpelNodeImpl...)"><B>CompoundExpression(int, SpelNodeImpl...)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/CompoundExpression.html" title="class in org.springframework.expression.spel.ast">CompoundExpression</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#concatenateStringArrays(java.lang.String[], java.lang.String[])"><B>concatenateStringArrays(String[], String[])</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Concatenate the given String arrays into one,
 with overlapping array elements included twice.
<DT><A HREF="../org/springframework/dao/ConcurrencyFailureException.html" title="class in org.springframework.dao"><B>ConcurrencyFailureException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Exception thrown on concurrency failure.<DT><A HREF="../org/springframework/dao/ConcurrencyFailureException.html#ConcurrencyFailureException(java.lang.String)"><B>ConcurrencyFailureException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/ConcurrencyFailureException.html" title="class in org.springframework.dao">ConcurrencyFailureException</A>
<DD>Constructor for ConcurrencyFailureException.
<DT><A HREF="../org/springframework/dao/ConcurrencyFailureException.html#ConcurrencyFailureException(java.lang.String, java.lang.Throwable)"><B>ConcurrencyFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/ConcurrencyFailureException.html" title="class in org.springframework.dao">ConcurrencyFailureException</A>
<DD>Constructor for ConcurrencyFailureException.
<DT><A HREF="../org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html" title="class in org.springframework.aop.interceptor"><B>ConcurrencyThrottleInterceptor</B></A> - Class in <A HREF="../org/springframework/aop/interceptor/package-summary.html">org.springframework.aop.interceptor</A><DD>Interceptor that throttles concurrent access, blocking invocations
 if a specified concurrency limit is reached.<DT><A HREF="../org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html#ConcurrencyThrottleInterceptor()"><B>ConcurrencyThrottleInterceptor()</B></A> - 
Constructor for class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ConcurrencyThrottleInterceptor.html" title="class in org.springframework.aop.interceptor">ConcurrencyThrottleInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html" title="class in org.springframework.util"><B>ConcurrencyThrottleSupport</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Support class for throttling concurrent access to a specific resource.<DT><A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html#ConcurrencyThrottleSupport()"><B>ConcurrencyThrottleSupport()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/ConcurrencyThrottleSupport.html" title="class in org.springframework.util">ConcurrencyThrottleSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/task/support/ConcurrentExecutorAdapter.html" title="class in org.springframework.core.task.support"><B>ConcurrentExecutorAdapter</B></A> - Class in <A HREF="../org/springframework/core/task/support/package-summary.html">org.springframework.core.task.support</A><DD>Adapter that exposes the <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executor.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>Executor</CODE></A> interface
 for any Spring <A HREF="../org/springframework/core/task/TaskExecutor.html" title="interface in org.springframework.core.task"><CODE>TaskExecutor</CODE></A>.<DT><A HREF="../org/springframework/core/task/support/ConcurrentExecutorAdapter.html#ConcurrentExecutorAdapter(org.springframework.core.task.TaskExecutor)"><B>ConcurrentExecutorAdapter(TaskExecutor)</B></A> - 
Constructor for class org.springframework.core.task.support.<A HREF="../org/springframework/core/task/support/ConcurrentExecutorAdapter.html" title="class in org.springframework.core.task.support">ConcurrentExecutorAdapter</A>
<DD>Create a new ConcurrentExecutorAdapter for the given Spring TaskExecutor.
<DT><A HREF="../org/springframework/core/ConcurrentMap.html" title="interface in org.springframework.core"><B>ConcurrentMap</B></A> - Interface in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, since standard <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ConcurrentMap.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ConcurrentMap</CODE></A>
 is available on Java 5+ anyway</I><DT><A HREF="../org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.backportconcurrent"><B>ConcurrentTaskExecutor</B></A> - Class in <A HREF="../org/springframework/scheduling/backportconcurrent/package-summary.html">org.springframework.scheduling.backportconcurrent</A><DD>Adapter that takes a JSR-166 backport
 <code>edu.emory.mathcs.backport.java.util.concurrent.Executor</code> and
 exposes a Spring <A HREF="../org/springframework/core/task/TaskExecutor.html" title="interface in org.springframework.core.task"><CODE>TaskExecutor</CODE></A> for it.<DT><A HREF="../org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html#ConcurrentTaskExecutor()"><B>ConcurrentTaskExecutor()</B></A> - 
Constructor for class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.backportconcurrent">ConcurrentTaskExecutor</A>
<DD>Create a new ConcurrentTaskExecutor,
 using a single thread executor as default.
<DT><A HREF="../org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html#ConcurrentTaskExecutor(edu.emory.mathcs.backport.java.util.concurrent.Executor)"><B>ConcurrentTaskExecutor(Executor)</B></A> - 
Constructor for class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.backportconcurrent">ConcurrentTaskExecutor</A>
<DD>Create a new ConcurrentTaskExecutor,
 using the given JSR-166 backport concurrent executor.
<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.concurrent"><B>ConcurrentTaskExecutor</B></A> - Class in <A HREF="../org/springframework/scheduling/concurrent/package-summary.html">org.springframework.scheduling.concurrent</A><DD>Adapter that takes a JDK 1.5 <code>java.util.concurrent.Executor</code> and
 exposes a Spring <A HREF="../org/springframework/core/task/TaskExecutor.html" title="interface in org.springframework.core.task"><CODE>TaskExecutor</CODE></A> for it.<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html#ConcurrentTaskExecutor()"><B>ConcurrentTaskExecutor()</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.concurrent">ConcurrentTaskExecutor</A>
<DD>Create a new ConcurrentTaskExecutor,
 using a single thread executor as default.
<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html#ConcurrentTaskExecutor(java.util.concurrent.Executor)"><B>ConcurrentTaskExecutor(Executor)</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskExecutor.html" title="class in org.springframework.scheduling.concurrent">ConcurrentTaskExecutor</A>
<DD>Create a new ConcurrentTaskExecutor,
 using the given JDK 1.5 concurrent executor.
<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html" title="class in org.springframework.scheduling.concurrent"><B>ConcurrentTaskScheduler</B></A> - Class in <A HREF="../org/springframework/scheduling/concurrent/package-summary.html">org.springframework.scheduling.concurrent</A><DD>Adapter that takes a JDK 1.5 <code>java.util.concurrent.ScheduledExecutorService</code>
 and exposes a Spring <A HREF="../org/springframework/scheduling/TaskScheduler.html" title="interface in org.springframework.scheduling"><CODE>TaskScheduler</CODE></A> for it.<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html#ConcurrentTaskScheduler()"><B>ConcurrentTaskScheduler()</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html" title="class in org.springframework.scheduling.concurrent">ConcurrentTaskScheduler</A>
<DD>Create a new ConcurrentTaskScheduler,
 using a single thread executor as default.
<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html#ConcurrentTaskScheduler(java.util.concurrent.ScheduledExecutorService)"><B>ConcurrentTaskScheduler(ScheduledExecutorService)</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html" title="class in org.springframework.scheduling.concurrent">ConcurrentTaskScheduler</A>
<DD>Create a new ConcurrentTaskScheduler,
 using the given JDK 1.5 executor as shared delegate.
<DT><A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html#ConcurrentTaskScheduler(java.util.concurrent.Executor, java.util.concurrent.ScheduledExecutorService)"><B>ConcurrentTaskScheduler(Executor, ScheduledExecutorService)</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ConcurrentTaskScheduler.html" title="class in org.springframework.scheduling.concurrent">ConcurrentTaskScheduler</A>
<DD>Create a new ConcurrentTaskScheduler,
 using the given JDK 1.5 executors as delegates.
<DT><A HREF="../org/springframework/core/convert/converter/ConditionalGenericConverter.html" title="interface in org.springframework.core.convert.converter"><B>ConditionalGenericConverter</B></A> - Interface in <A HREF="../org/springframework/core/convert/converter/package-summary.html">org.springframework.core.convert.converter</A><DD>A generic converter that conditionally executes.<DT><A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test"><B>ConditionalTestCase</B></A> - Class in <A HREF="../org/springframework/test/package-summary.html">org.springframework.test</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of using the listener-based test context framework
 (<A HREF="../org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html" title="class in org.springframework.test.context.junit38"><CODE>AbstractJUnit38SpringContextTests</CODE></A>)</I><DT><A HREF="../org/springframework/test/ConditionalTestCase.html#ConditionalTestCase()"><B>ConditionalTestCase()</B></A> - 
Constructor for class org.springframework.test.<A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test">ConditionalTestCase</A>
<DD><B>Deprecated.</B>&nbsp;Default constructor for ConditionalTestCase.
<DT><A HREF="../org/springframework/test/ConditionalTestCase.html#ConditionalTestCase(java.lang.String)"><B>ConditionalTestCase(String)</B></A> - 
Constructor for class org.springframework.test.<A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test">ConditionalTestCase</A>
<DD><B>Deprecated.</B>&nbsp;Constructor for ConditionalTestCase with a JUnit name.
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#CONFIG_LOCATION_DELIMITERS"><B>CONFIG_LOCATION_DELIMITERS</B></A> - 
Static variable in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Any number of these characters are considered delimiters between
 multiple context config paths in a single String value.
<DT><A HREF="../org/springframework/jca/context/SpringContextResourceAdapter.html#CONFIG_LOCATION_DELIMITERS"><B>CONFIG_LOCATION_DELIMITERS</B></A> - 
Static variable in class org.springframework.jca.context.<A HREF="../org/springframework/jca/context/SpringContextResourceAdapter.html" title="class in org.springframework.jca.context">SpringContextResourceAdapter</A>
<DD>Any number of these characters are considered delimiters between
 multiple context config paths in a single String value.
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#CONFIG_LOCATION_PARAM"><B>CONFIG_LOCATION_PARAM</B></A> - 
Static variable in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Name of servlet context parameter (i.e., "<code>contextConfigLocation</code>")
 that can specify the config location for the root context, falling back
 to the implementation's default otherwise.
<DT><A HREF="../org/springframework/web/util/Log4jWebConfigurer.html#CONFIG_LOCATION_PARAM"><B>CONFIG_LOCATION_PARAM</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/Log4jWebConfigurer.html" title="class in org.springframework.web.util">Log4jWebConfigurer</A>
<DD>Parameter specifying the location of the log4j config file
<DT><A HREF="../org/springframework/beans/factory/annotation/Configurable.html" title="annotation in org.springframework.beans.factory.annotation"><B>Configurable</B></A> - Annotation Type in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD>Marks a class as being eligible for Spring-driven configuration.<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context"><B>ConfigurableApplicationContext</B></A> - Interface in <A HREF="../org/springframework/context/package-summary.html">org.springframework.context</A><DD>SPI interface to be implemented by most if not all application contexts.<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><B>ConfigurableBeanFactory</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Configuration interface to be implemented by most bean factories.<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports"><B>ConfigurableJasperReportsView</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/jasperreports/package-summary.html">org.springframework.web.servlet.view.jasperreports</A><DD>Configurable JasperReports View, allowing to specify the JasperReports exporter
 to be specified through bean properties rather than through the view class name.<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html#ConfigurableJasperReportsView()"><B>ConfigurableJasperReportsView()</B></A> - 
Constructor for class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">ConfigurableJasperReportsView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><B>ConfigurableListableBeanFactory</B></A> - Interface in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Configuration interface to be implemented by most listable bean factories.<DT><A HREF="../org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html" title="class in org.springframework.mail.javamail"><B>ConfigurableMimeFileTypeMap</B></A> - Class in <A HREF="../org/springframework/mail/javamail/package-summary.html">org.springframework.mail.javamail</A><DD>Spring-configurable <code>FileTypeMap</code> implementation that will read
 MIME type to file extension mappings from a standard JavaMail MIME type
 mapping file, using a standard <code>MimetypesFileTypeMap</code> underneath.<DT><A HREF="../org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html#ConfigurableMimeFileTypeMap()"><B>ConfigurableMimeFileTypeMap()</B></A> - 
Constructor for class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html" title="class in org.springframework.mail.javamail">ConfigurableMimeFileTypeMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/aspectj/ConfigurableObject.html" title="interface in org.springframework.beans.factory.aspectj"><B>ConfigurableObject</B></A> - Interface in <A HREF="../org/springframework/beans/factory/aspectj/package-summary.html">org.springframework.beans.factory.aspectj</A><DD>Marker interface for domain object that need DI through aspects.<DT><A HREF="../org/springframework/core/ConfigurableObjectInputStream.html" title="class in org.springframework.core"><B>ConfigurableObjectInputStream</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Special ObjectInputStream subclass that resolves class names
 against a specific ClassLoader.<DT><A HREF="../org/springframework/core/ConfigurableObjectInputStream.html#ConfigurableObjectInputStream(java.io.InputStream, java.lang.ClassLoader)"><B>ConfigurableObjectInputStream(InputStream, ClassLoader)</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/ConfigurableObjectInputStream.html" title="class in org.springframework.core">ConfigurableObjectInputStream</A>
<DD>Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader.
<DT><A HREF="../org/springframework/web/portlet/context/ConfigurablePortletApplicationContext.html" title="interface in org.springframework.web.portlet.context"><B>ConfigurablePortletApplicationContext</B></A> - Interface in <A HREF="../org/springframework/web/portlet/context/package-summary.html">org.springframework.web.portlet.context</A><DD>Interface to be implemented by configurable portlet application contexts.<DT><A HREF="../org/springframework/beans/ConfigurablePropertyAccessor.html" title="interface in org.springframework.beans"><B>ConfigurablePropertyAccessor</B></A> - Interface in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Interface that encapsulates configuration methods for a PropertyAccessor.<DT><A HREF="../org/springframework/web/context/ConfigurableWebApplicationContext.html" title="interface in org.springframework.web.context"><B>ConfigurableWebApplicationContext</B></A> - Interface in <A HREF="../org/springframework/web/context/package-summary.html">org.springframework.web.context</A><DD>Interface to be implemented by configurable web application contexts.<DT><A HREF="../org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html" title="class in org.springframework.web.bind.support"><B>ConfigurableWebBindingInitializer</B></A> - Class in <A HREF="../org/springframework/web/bind/support/package-summary.html">org.springframework.web.bind.support</A><DD>Convenient <A HREF="../org/springframework/web/bind/support/WebBindingInitializer.html" title="interface in org.springframework.web.bind.support"><CODE>WebBindingInitializer</CODE></A> for declarative configuration
 in a Spring application context.<DT><A HREF="../org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html#ConfigurableWebBindingInitializer()"><B>ConfigurableWebBindingInitializer()</B></A> - 
Constructor for class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/ConfigurableWebBindingInitializer.html" title="class in org.springframework.web.bind.support">ConfigurableWebBindingInitializer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/Configuration.html" title="annotation in org.springframework.context.annotation"><B>Configuration</B></A> - Annotation Type in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD>Indicates that a class declares one or more <A HREF="../org/springframework/context/annotation/Bean.html" title="annotation in org.springframework.context.annotation"><CODE>Bean</CODE></A> methods and may be processed
 by the Spring container to generate bean definitions and service requests for those beans
 at runtime.<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html#CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME"><B>CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME</B></A> - 
Static variable in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html" title="class in org.springframework.context.annotation">AnnotationConfigUtils</A>
<DD>The bean name of the internally managed Configuration annotation processor.
<DT><A HREF="../org/springframework/context/annotation/ConfigurationClassPostProcessor.html" title="class in org.springframework.context.annotation"><B>ConfigurationClassPostProcessor</B></A> - Class in <A HREF="../org/springframework/context/annotation/package-summary.html">org.springframework.context.annotation</A><DD><A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanFactoryPostProcessor</CODE></A> used for bootstrapping processing of
 <A HREF="../org/springframework/context/annotation/Configuration.html" title="annotation in org.springframework.context.annotation"><CODE>@Configuration</CODE></A> classes.<DT><A HREF="../org/springframework/context/annotation/ConfigurationClassPostProcessor.html#ConfigurationClassPostProcessor()"><B>ConfigurationClassPostProcessor()</B></A> - 
Constructor for class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ConfigurationClassPostProcessor.html" title="class in org.springframework.context.annotation">ConfigurationClassPostProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html#configure(java.util.Properties)"><B>configure(Properties)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.html" title="class in org.springframework.orm.hibernate3">LocalDataSourceConnectionProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html#configure(java.util.Properties)"><B>configure(Properties)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html" title="class in org.springframework.orm.hibernate3">SpringTransactionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#configureBean(java.lang.Object, java.lang.String)"><B>configureBean(Object, String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Configure the given raw bean: autowiring bean properties, applying
 bean property values, applying factory callbacks such as <code>setBeanName</code>
 and <code>setBeanFactory</code>, and also applying all bean post processors
 (including ones which might wrap the given raw bean).
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#configureBean(java.lang.Object, java.lang.String)"><B>configureBean(Object, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html#configureBean(java.lang.Object)"><B>configureBean(Object)</B></A> - 
Method in class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html" title="class in org.springframework.beans.factory.wiring">BeanConfigurerSupport</A>
<DD>Configure the bean instance.
<DT><A HREF="../org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html#configureBeanPostProcessor(org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor, java.lang.Object)"><B>configureBeanPostProcessor(AutowiredAnnotationBeanPostProcessor, Object)</B></A> - 
Method in class org.springframework.ejb.interceptor.<A HREF="../org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html" title="class in org.springframework.ejb.interceptor">SpringBeanAutowiringInterceptor</A>
<DD>Template method for configuring the
 <A HREF="../org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation"><CODE>AutowiredAnnotationBeanPostProcessor</CODE></A> used for autowiring.
<DT><A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurer.html#configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties, java.lang.String)"><B>configureConnectionProperties(ConnectionProperties, String)</B></A> - 
Method in interface org.springframework.jdbc.datasource.embedded.<A HREF="../org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseConfigurer.html" title="interface in org.springframework.jdbc.datasource.embedded">EmbeddedDatabaseConfigurer</A>
<DD>Configure the properties required to create and connect to the embedded database instance.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#configureIndentation(javax.xml.transform.Transformer)"><B>configureIndentation(Transformer)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Configure the indentation settings for the supplied <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Transformer</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#configureResponse(java.util.Map, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer)"><B>configureResponse(Map&lt;String, Object&gt;, HttpServletResponse, Transformer)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Configure the supplied <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletResponse.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletResponse</CODE></A>.
<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html#configureScanner(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)"><B>configureScanner(ParserContext, Element)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation">ComponentScanBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#configureTransformer(java.util.Map, javax.servlet.http.HttpServletResponse, javax.xml.transform.Transformer)"><B>configureTransformer(Map&lt;String, Object&gt;, HttpServletResponse, Transformer)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Configure the supplied <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Transformer</CODE></A> instance.
<DT><A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html#CONNECTION_SYNCHRONIZATION_ORDER"><B>CONNECTION_SYNCHRONIZATION_ORDER</B></A> - 
Static variable in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html" title="class in org.springframework.jdbc.datasource">DataSourceUtils</A>
<DD>Order value for TransactionSynchronization objects that clean up JDBC Connections.
<DT><A HREF="../org/springframework/jca/cci/core/ConnectionCallback.html" title="interface in org.springframework.jca.cci.core"><B>ConnectionCallback</B></A>&lt;<A HREF="../org/springframework/jca/cci/core/ConnectionCallback.html" title="type parameter in ConnectionCallback">T</A>&gt; - Interface in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD>Generic callback interface for code that operates on a CCI Connection.<DT><A HREF="../org/springframework/jdbc/core/ConnectionCallback.html" title="interface in org.springframework.jdbc.core"><B>ConnectionCallback</B></A>&lt;<A HREF="../org/springframework/jdbc/core/ConnectionCallback.html" title="type parameter in ConnectionCallback">T</A>&gt; - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Generic callback interface for code that operates on a JDBC Connection.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jca.cci.connection"><B>ConnectionFactoryUtils</B></A> - Class in <A HREF="../org/springframework/jca/cci/connection/package-summary.html">org.springframework.jca.cci.connection</A><DD>Helper class that provides static methods for obtaining CCI Connections
 from a <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/resource/cci/ConnectionFactory.html?is-external=true" title="class or interface in javax.resource.cci"><CODE>ConnectionFactory</CODE></A>.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html#ConnectionFactoryUtils()"><B>ConnectionFactoryUtils()</B></A> - 
Constructor for class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jca.cci.connection">ConnectionFactoryUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jms.connection"><B>ConnectionFactoryUtils</B></A> - Class in <A HREF="../org/springframework/jms/connection/package-summary.html">org.springframework.jms.connection</A><DD>Helper class for managing a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/ConnectionFactory.html?is-external=true" title="class or interface in javax.jms"><CODE>ConnectionFactory</CODE></A>, in particular
 for obtaining transactional JMS resources for a given ConnectionFactory.<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html#ConnectionFactoryUtils()"><B>ConnectionFactoryUtils()</B></A> - 
Constructor for class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jms.connection">ConnectionFactoryUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html" title="interface in org.springframework.jms.connection"><B>ConnectionFactoryUtils.ResourceFactory</B></A> - Interface in <A HREF="../org/springframework/jms/connection/package-summary.html">org.springframework.jms.connection</A><DD>Callback interface for resource creation.<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource"><B>ConnectionHandle</B></A> - Interface in <A HREF="../org/springframework/jdbc/datasource/package-summary.html">org.springframework.jdbc.datasource</A><DD>Simple interface to be implemented by handles for a JDBC Connection.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionHolder.html" title="class in org.springframework.jca.cci.connection"><B>ConnectionHolder</B></A> - Class in <A HREF="../org/springframework/jca/cci/connection/package-summary.html">org.springframework.jca.cci.connection</A><DD>Connection holder, wrapping a CCI Connection.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionHolder.html#ConnectionHolder(javax.resource.cci.Connection)"><B>ConnectionHolder(Connection)</B></A> - 
Constructor for class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionHolder.html" title="class in org.springframework.jca.cci.connection">ConnectionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource"><B>ConnectionHolder</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/package-summary.html">org.springframework.jdbc.datasource</A><DD>Connection holder, wrapping a JDBC Connection.<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#ConnectionHolder(org.springframework.jdbc.datasource.ConnectionHandle)"><B>ConnectionHolder(ConnectionHandle)</B></A> - 
Constructor for class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Create a new ConnectionHolder for the given ConnectionHandle.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#ConnectionHolder(java.sql.Connection)"><B>ConnectionHolder(Connection)</B></A> - 
Constructor for class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Create a new ConnectionHolder for the given JDBC Connection,
 wrapping it with a <A HREF="../org/springframework/jdbc/datasource/SimpleConnectionHandle.html" title="class in org.springframework.jdbc.datasource"><CODE>SimpleConnectionHandle</CODE></A>,
 assuming that there is no ongoing transaction.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#ConnectionHolder(java.sql.Connection, boolean)"><B>ConnectionHolder(Connection, boolean)</B></A> - 
Constructor for class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Create a new ConnectionHolder for the given JDBC Connection,
 wrapping it with a <A HREF="../org/springframework/jdbc/datasource/SimpleConnectionHandle.html" title="class in org.springframework.jdbc.datasource"><CODE>SimpleConnectionHandle</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/datasource/embedded/ConnectionProperties.html" title="interface in org.springframework.jdbc.datasource.embedded"><B>ConnectionProperties</B></A> - Interface in <A HREF="../org/springframework/jdbc/datasource/embedded/package-summary.html">org.springframework.jdbc.datasource.embedded</A><DD>DataSourceFactory helper that allows essential JDBC connection properties to be configured consistently,
 independent of the actual DataSource implementation.<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionProxy.html" title="interface in org.springframework.jdbc.datasource"><B>ConnectionProxy</B></A> - Interface in <A HREF="../org/springframework/jdbc/datasource/package-summary.html">org.springframework.jdbc.datasource</A><DD>Subinterface of <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/Connection.html?is-external=true" title="class or interface in java.sql"><CODE>Connection</CODE></A> to be implemented by
 Connection proxies.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html" title="class in org.springframework.jca.cci.connection"><B>ConnectionSpecConnectionFactoryAdapter</B></A> - Class in <A HREF="../org/springframework/jca/cci/connection/package-summary.html">org.springframework.jca.cci.connection</A><DD>An adapter for a target CCI <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/resource/cci/ConnectionFactory.html?is-external=true" title="class or interface in javax.resource.cci"><CODE>ConnectionFactory</CODE></A>,
 applying the given ConnectionSpec to every standard <code>getConnection()</code>
 call, that is, implicitly invoking <code>getConnection(ConnectionSpec)</code>
 on the target.<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html#ConnectionSpecConnectionFactoryAdapter()"><B>ConnectionSpecConnectionFactoryAdapter()</B></A> - 
Constructor for class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html" title="class in org.springframework.jca.cci.connection">ConnectionSpecConnectionFactoryAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/ConnectorServerFactoryBean.html" title="class in org.springframework.jmx.support"><B>ConnectorServerFactoryBean</B></A> - Class in <A HREF="../org/springframework/jmx/support/package-summary.html">org.springframework.jmx.support</A><DD><A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> that creates a JSR-160 <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/remote/JMXConnectorServer.html?is-external=true" title="class or interface in javax.management.remote"><CODE>JMXConnectorServer</CODE></A>,
 optionally registers it with the <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/MBeanServer.html?is-external=true" title="class or interface in javax.management"><CODE>MBeanServer</CODE></A> and then starts it.<DT><A HREF="../org/springframework/jmx/support/ConnectorServerFactoryBean.html#ConnectorServerFactoryBean()"><B>ConnectorServerFactoryBean()</B></A> - 
Constructor for class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/ConnectorServerFactoryBean.html" title="class in org.springframework.jmx.support">ConnectorServerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/ConstantException.html" title="class in org.springframework.core"><B>ConstantException</B></A> - Exception in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Exception thrown when the <A HREF="../org/springframework/core/Constants.html" title="class in org.springframework.core"><CODE>Constants</CODE></A> class is asked for
 an invalid constant name.<DT><A HREF="../org/springframework/core/ConstantException.html#ConstantException(java.lang.String, java.lang.String, java.lang.String)"><B>ConstantException(String, String, String)</B></A> - 
Constructor for exception org.springframework.core.<A HREF="../org/springframework/core/ConstantException.html" title="class in org.springframework.core">ConstantException</A>
<DD>Thrown when an invalid constant name is requested.
<DT><A HREF="../org/springframework/core/ConstantException.html#ConstantException(java.lang.String, java.lang.String, java.lang.Object)"><B>ConstantException(String, String, Object)</B></A> - 
Constructor for exception org.springframework.core.<A HREF="../org/springframework/core/ConstantException.html" title="class in org.springframework.core">ConstantException</A>
<DD>Thrown when an invalid constant value is looked up.
<DT><A HREF="../org/springframework/core/Constants.html" title="class in org.springframework.core"><B>Constants</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>This class can be used to parse other classes containing constant definitions
 in public static final members.<DT><A HREF="../org/springframework/core/Constants.html#Constants(java.lang.Class)"><B>Constants(Class)</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/Constants.html" title="class in org.springframework.core">Constants</A>
<DD>Create a new Constants converter class wrapping the given class.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#CONSTRUCTOR_ARG_ELEMENT"><B>CONSTRUCTOR_ARG_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#CONSTRUCTOR_ARG_PREFIX"><B>CONSTRUCTOR_ARG_PREFIX</B></A> - 
Static variable in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Prefix used to denote a constructor argument definition.
<DT><A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html" title="class in org.springframework.beans.factory.parsing"><B>ConstructorArgumentEntry</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD><A HREF="../org/springframework/beans/factory/parsing/ParseState.html" title="class in org.springframework.beans.factory.parsing"><CODE>ParseState</CODE></A> entry representing a (possibly indexed)
 constructor argument.<DT><A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html#ConstructorArgumentEntry()"><B>ConstructorArgumentEntry()</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html" title="class in org.springframework.beans.factory.parsing">ConstructorArgumentEntry</A>
<DD>Creates a new instance of the <A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html" title="class in org.springframework.beans.factory.parsing"><CODE>ConstructorArgumentEntry</CODE></A> class
 representing a constructor argument with a (currently) unknown index.
<DT><A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html#ConstructorArgumentEntry(int)"><B>ConstructorArgumentEntry(int)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html" title="class in org.springframework.beans.factory.parsing">ConstructorArgumentEntry</A>
<DD>Creates a new instance of the <A HREF="../org/springframework/beans/factory/parsing/ConstructorArgumentEntry.html" title="class in org.springframework.beans.factory.parsing"><CODE>ConstructorArgumentEntry</CODE></A> class
 representing a constructor argument at the supplied <code>index</code>.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html" title="class in org.springframework.beans.factory.config"><B>ConstructorArgumentValues</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Holder for constructor argument values, typically as part of a bean definition.<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html#ConstructorArgumentValues()"><B>ConstructorArgumentValues()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues</A>
<DD>Create a new empty ConstructorArgumentValues object.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html#ConstructorArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)"><B>ConstructorArgumentValues(ConstructorArgumentValues)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues</A>
<DD>Deep copy constructor.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config"><B>ConstructorArgumentValues.ValueHolder</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Holder for a constructor argument value, with an optional type
 attribute indicating the target type of the actual constructor argument.<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html#ConstructorArgumentValues.ValueHolder(java.lang.Object)"><B>ConstructorArgumentValues.ValueHolder(Object)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues.ValueHolder</A>
<DD>Create a new ValueHolder for the given value.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html#ConstructorArgumentValues.ValueHolder(java.lang.Object, java.lang.String)"><B>ConstructorArgumentValues.ValueHolder(Object, String)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues.ValueHolder</A>
<DD>Create a new ValueHolder for the given value and type.
<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html#ConstructorArgumentValues.ValueHolder(java.lang.Object, java.lang.String, java.lang.String)"><B>ConstructorArgumentValues.ValueHolder(Object, String, String)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues.ValueHolder</A>
<DD>Create a new ValueHolder for the given value, type and name.
<DT><A HREF="../org/springframework/expression/ConstructorExecutor.html" title="interface in org.springframework.expression"><B>ConstructorExecutor</B></A> - Interface in <A HREF="../org/springframework/expression/package-summary.html">org.springframework.expression</A><DD>Executors are built by resolvers and can be cached by the infrastructure to repeat an operation quickly without going
 back to the resolvers.<DT><A HREF="../org/springframework/expression/spel/ast/ConstructorReference.html" title="class in org.springframework.expression.spel.ast"><B>ConstructorReference</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>Represents the invocation of a constructor.<DT><A HREF="../org/springframework/expression/spel/ast/ConstructorReference.html#ConstructorReference(int, org.springframework.expression.spel.ast.SpelNodeImpl...)"><B>ConstructorReference(int, SpelNodeImpl...)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/ConstructorReference.html" title="class in org.springframework.expression.spel.ast">ConstructorReference</A>
<DD>Create a constructor reference.
<DT><A HREF="../org/springframework/expression/spel/ast/ConstructorReference.html#ConstructorReference(int, org.springframework.expression.spel.ast.SpelNodeImpl[], org.springframework.expression.spel.ast.SpelNodeImpl...)"><B>ConstructorReference(int, SpelNodeImpl[], SpelNodeImpl...)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/ConstructorReference.html" title="class in org.springframework.expression.spel.ast">ConstructorReference</A>
<DD>Create a constructor reference.
<DT><A HREF="../org/springframework/expression/ConstructorResolver.html" title="interface in org.springframework.expression"><B>ConstructorResolver</B></A> - Interface in <A HREF="../org/springframework/expression/package-summary.html">org.springframework.expression</A><DD>A constructor resolver attempts locate a constructor and returns a ConstructorExecutor that can be used to invoke
 that constructor.<DT><A HREF="../org/springframework/jndi/JndiLocatorSupport.html#CONTAINER_PREFIX"><B>CONTAINER_PREFIX</B></A> - 
Static variable in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">JndiLocatorSupport</A>
<DD>JNDI prefix used in a J2EE container
<DT><A HREF="../org/springframework/beans/factory/BeanCreationException.html#contains(java.lang.Class)"><B>contains(Class)</B></A> - 
Method in exception org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanCreationException.html" title="class in org.springframework.beans.factory">BeanCreationException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#contains(java.lang.String)"><B>contains(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyBatchUpdateException.html#contains(java.lang.Class)"><B>contains(Class)</B></A> - 
Method in exception org.springframework.beans.<A HREF="../org/springframework/beans/PropertyBatchUpdateException.html" title="class in org.springframework.beans">PropertyBatchUpdateException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyValues.html#contains(java.lang.String)"><B>contains(String)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyValues.html" title="interface in org.springframework.beans">PropertyValues</A>
<DD>Is there a property value (or other processing entry) for this property?
<DT><A HREF="../org/springframework/core/NestedCheckedException.html#contains(java.lang.Class)"><B>contains(Class)</B></A> - 
Method in exception org.springframework.core.<A HREF="../org/springframework/core/NestedCheckedException.html" title="class in org.springframework.core">NestedCheckedException</A>
<DD>Check whether this exception contains an exception of the given type:
 either it is of the given class itself or it contains a nested cause
 of the given type.
<DT><A HREF="../org/springframework/core/NestedRuntimeException.html#contains(java.lang.Class)"><B>contains(Class)</B></A> - 
Method in exception org.springframework.core.<A HREF="../org/springframework/core/NestedRuntimeException.html" title="class in org.springframework.core">NestedRuntimeException</A>
<DD>Check whether this exception contains an exception of the given type:
 either it is of the given class itself or it contains a nested cause
 of the given type.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#contains(java.lang.Object)"><B>contains(Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Check whether the given object is in the Session cache.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#contains(java.lang.Object)"><B>contains(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaOperations.html#contains(java.lang.Object)"><B>contains(Object)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaOperations.html" title="interface in org.springframework.orm.jpa">JpaOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaTemplate.html#contains(java.lang.Object)"><B>contains(Object)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTemplate.html" title="class in org.springframework.orm.jpa">JpaTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/TransactionSystemException.html#contains(java.lang.Class)"><B>contains(Class)</B></A> - 
Method in exception org.springframework.transaction.<A HREF="../org/springframework/transaction/TransactionSystemException.html" title="class in org.springframework.transaction">TransactionSystemException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#contains(java.lang.Object)"><B>contains(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CollectionUtils.html#contains(java.util.Iterator, java.lang.Object)"><B>contains(Iterator, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Check whether the given Iterator contains the given element.
<DT><A HREF="../org/springframework/util/CollectionUtils.html#contains(java.util.Enumeration, java.lang.Object)"><B>contains(Enumeration, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Check whether the given Enumeration contains the given element.
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#containsAll(java.util.Collection)"><B>containsAll(Collection)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CollectionUtils.html#containsAny(java.util.Collection, java.util.Collection)"><B>containsAny(Collection, Collection)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Return <code>true</code> if any element in '<code>candidates</code>' is
 contained in '<code>source</code>'; otherwise returns <code>false</code>.
<DT><A HREF="../org/springframework/ui/Model.html#containsAttribute(java.lang.String)"><B>containsAttribute(String)</B></A> - 
Method in interface org.springframework.ui.<A HREF="../org/springframework/ui/Model.html" title="interface in org.springframework.ui">Model</A>
<DD>Does this model contain an attribute of the given name?
<DT><A HREF="../org/springframework/ui/ModelMap.html#containsAttribute(java.lang.String)"><B>containsAttribute(String)</B></A> - 
Method in class org.springframework.ui.<A HREF="../org/springframework/ui/ModelMap.html" title="class in org.springframework.ui">ModelMap</A>
<DD>Does this model contain an attribute of the given name?
<DT><A HREF="../org/springframework/beans/factory/BeanFactory.html#containsBean(java.lang.String)"><B>containsBean(String)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory">BeanFactory</A>
<DD>Does this bean factory contain a bean with the given name? More specifically,
 is <A HREF="../org/springframework/beans/factory/BeanFactory.html#getBean(java.lang.String)"><CODE>BeanFactory.getBean(java.lang.String)</CODE></A> able to obtain a bean instance for the given name?
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#containsBean(java.lang.String)"><B>containsBean(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html#containsBean(java.lang.String)"><B>containsBean(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#containsBean(java.lang.String)"><B>containsBean(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html#containsBean(java.lang.String)"><B>containsBean(String)</B></A> - 
Method in class org.springframework.jndi.support.<A HREF="../org/springframework/jndi/support/SimpleJndiBeanFactory.html" title="class in org.springframework.jndi.support">SimpleJndiBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/ListableBeanFactory.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/ListableBeanFactory.html" title="interface in org.springframework.beans.factory">ListableBeanFactory</A>
<DD>Check if this bean factory contains a bean definition with the given name.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Check if this bean factory contains a bean definition with the given name.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support">BeanDefinitionRegistry</A>
<DD>Check if this registry contains a bean definition with the given name.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html" title="class in org.springframework.beans.factory.support">SimpleBeanDefinitionRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/StaticListableBeanFactory.html" title="class in org.springframework.beans.factory.support">StaticListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#containsBeanDefinition(java.lang.String)"><B>containsBeanDefinition(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ObjectUtils.html#containsElement(java.lang.Object[], java.lang.Object)"><B>containsElement(Object[], Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ObjectUtils.html" title="class in org.springframework.util">ObjectUtils</A>
<DD>Check whether the given array contains the given element.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#containsHeader(java.lang.String)"><B>containsHeader(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CollectionUtils.html#containsInstance(java.util.Collection, java.lang.Object)"><B>containsInstance(Collection, Object)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/CollectionUtils.html" title="class in org.springframework.util">CollectionUtils</A>
<DD>Check whether the given Collection contains the given element instance.
<DT><A HREF="../org/springframework/http/HttpHeaders.html#containsKey(java.lang.Object)"><B>containsKey(Object)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#containsKey(java.lang.Object)"><B>containsKey(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html#containsKey(java.lang.Object)"><B>containsKey(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html" title="class in org.springframework.util">LinkedCaseInsensitiveMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedMultiValueMap.html#containsKey(java.lang.Object)"><B>containsKey(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedMultiValueMap.html" title="class in org.springframework.util">LinkedMultiValueMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/HierarchicalBeanFactory.html#containsLocalBean(java.lang.String)"><B>containsLocalBean(String)</B></A> - 
Method in interface org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/HierarchicalBeanFactory.html" title="interface in org.springframework.beans.factory">HierarchicalBeanFactory</A>
<DD>Return whether the local bean factory contains a bean of the given name,
 ignoring beans defined in ancestor contexts.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#containsLocalBean(java.lang.String)"><B>containsLocalBean(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#containsLocalBean(java.lang.String)"><B>containsLocalBean(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html#containsObject(java.lang.String)"><B>containsObject(String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanExpressionContext.html" title="class in org.springframework.beans.factory.config">BeanExpressionContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/JmsResourceHolder.html#containsSession(javax.jms.Session)"><B>containsSession(Session)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsResourceHolder.html" title="class in org.springframework.jms.connection">JmsResourceHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/SessionHolder.html#containsSession(org.hibernate.Session)"><B>containsSession(Session)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionHolder.html" title="class in org.springframework.orm.hibernate3">SessionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/SingletonBeanRegistry.html#containsSingleton(java.lang.String)"><B>containsSingleton(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/SingletonBeanRegistry.html" title="interface in org.springframework.beans.factory.config">SingletonBeanRegistry</A>
<DD>Check if this registry contains a singleton instance with the given name.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#containsSingleton(java.lang.String)"><B>containsSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/jdbc/JdbcTestUtils.html#containsSqlScriptDelimiters(java.lang.String, char)"><B>containsSqlScriptDelimiters(String, char)</B></A> - 
Static method in class org.springframework.test.jdbc.<A HREF="../org/springframework/test/jdbc/JdbcTestUtils.html" title="class in org.springframework.test.jdbc">JdbcTestUtils</A>
<DD>Does the provided SQL script contain the specified delimiter?
<DT><A HREF="../org/springframework/http/HttpHeaders.html#containsValue(java.lang.Object)"><B>containsValue(Object)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#containsValue(java.lang.Object)"><B>containsValue(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedMultiValueMap.html#containsValue(java.lang.Object)"><B>containsValue(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedMultiValueMap.html" title="class in org.springframework.util">LinkedMultiValueMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/StringUtils.html#containsWhitespace(java.lang.CharSequence)"><B>containsWhitespace(CharSequence)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Check whether the given CharSequence contains any whitespace characters.
<DT><A HREF="../org/springframework/util/StringUtils.html#containsWhitespace(java.lang.String)"><B>containsWhitespace(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Check whether the given String contains any whitespace characters.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#CONTENT_DISPOSITION_INLINE"><B>CONTENT_DISPOSITION_INLINE</B></A> - 
Static variable in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>The default Content-Disposition header.
<DT><A HREF="../org/springframework/web/util/WebUtils.html#CONTENT_TYPE_CHARSET_PREFIX"><B>CONTENT_TYPE_CHARSET_PREFIX</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Prefix of the charset clause in a content type String: ";charset="
<DT><A HREF="../org/springframework/remoting/caucho/HessianExporter.html#CONTENT_TYPE_HESSIAN"><B>CONTENT_TYPE_HESSIAN</B></A> - 
Static variable in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianExporter.html" title="class in org.springframework.remoting.caucho">HessianExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html#CONTENT_TYPE_SERIALIZED_OBJECT"><B>CONTENT_TYPE_SERIALIZED_OBJECT</B></A> - 
Static variable in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">AbstractHttpInvokerRequestExecutor</A>
<DD>Default content type: "application/x-java-serialized-object"
<DT><A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html#CONTENT_TYPE_SERIALIZED_OBJECT"><B>CONTENT_TYPE_SERIALIZED_OBJECT</B></A> - 
Static variable in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html" title="class in org.springframework.remoting.rmi">RemoteInvocationSerializingExporter</A>
<DD>Default content type: "application/x-java-serialized-object"
<DT><A HREF="../org/springframework/core/io/AbstractFileResolvingResource.html#contentLength()"><B>contentLength()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractFileResolvingResource.html" title="class in org.springframework.core.io">AbstractFileResolvingResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/AbstractResource.html#contentLength()"><B>contentLength()</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractResource.html" title="class in org.springframework.core.io">AbstractResource</A>
<DD>This implementation checks the timestamp of the underlying File,
 if available.
<DT><A HREF="../org/springframework/core/io/Resource.html#contentLength()"><B>contentLength()</B></A> - 
Method in interface org.springframework.core.io.<A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io">Resource</A>
<DD>Determine the content length for this resource.
<DT><A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html" title="class in org.springframework.web.servlet.view"><B>ContentNegotiatingViewResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>Implementation of <A HREF="../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet"><CODE>ViewResolver</CODE></A> that resolves a view based on the request file name or <code>Accept</code> header.<DT><A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html#ContentNegotiatingViewResolver()"><B>ContentNegotiatingViewResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html" title="class in org.springframework.web.servlet.view">ContentNegotiatingViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/WebApplicationContext.html#CONTEXT_ATTRIBUTES_BEAN_NAME"><B>CONTEXT_ATTRIBUTES_BEAN_NAME</B></A> - 
Static variable in interface org.springframework.web.context.<A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context">WebApplicationContext</A>
<DD>Name of the ServletContext/PortletContext attributes environment bean in the factory.
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#CONTEXT_CLASS_PARAM"><B>CONTEXT_CLASS_PARAM</B></A> - 
Static variable in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Config param for the root WebApplicationContext implementation class to
 use: "<code>contextClass</code>"
<DT><A HREF="../org/springframework/web/context/WebApplicationContext.html#CONTEXT_PARAMETERS_BEAN_NAME"><B>CONTEXT_PARAMETERS_BEAN_NAME</B></A> - 
Static variable in interface org.springframework.web.context.<A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context">WebApplicationContext</A>
<DD>Name of the ServletContext/PortletContext init-params environment bean in the factory.
<DT><A HREF="../org/springframework/context/access/ContextBeanFactoryReference.html" title="class in org.springframework.context.access"><B>ContextBeanFactoryReference</B></A> - Class in <A HREF="../org/springframework/context/access/package-summary.html">org.springframework.context.access</A><DD>ApplicationContext-specific implementation of BeanFactoryReference,
 wrapping a newly created ApplicationContext, closing it on release.<DT><A HREF="../org/springframework/context/access/ContextBeanFactoryReference.html#ContextBeanFactoryReference(org.springframework.context.ApplicationContext)"><B>ContextBeanFactoryReference(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextBeanFactoryReference.html" title="class in org.springframework.context.access">ContextBeanFactoryReference</A>
<DD>Create a new ContextBeanFactoryReference for the given context.
<DT><A HREF="../org/springframework/web/context/ContextCleanupListener.html" title="class in org.springframework.web.context"><B>ContextCleanupListener</B></A> - Class in <A HREF="../org/springframework/web/context/package-summary.html">org.springframework.web.context</A><DD>Web application listener that cleans up remaining disposable attributes
 in the ServletContext, i.e.<DT><A HREF="../org/springframework/web/context/ContextCleanupListener.html#ContextCleanupListener()"><B>ContextCleanupListener()</B></A> - 
Constructor for class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextCleanupListener.html" title="class in org.springframework.web.context">ContextCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/ContextClosedEvent.html" title="class in org.springframework.context.event"><B>ContextClosedEvent</B></A> - Class in <A HREF="../org/springframework/context/event/package-summary.html">org.springframework.context.event</A><DD>Event raised when an <code>ApplicationContext</code> gets closed.<DT><A HREF="../org/springframework/context/event/ContextClosedEvent.html#ContextClosedEvent(org.springframework.context.ApplicationContext)"><B>ContextClosedEvent(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.event.<A HREF="../org/springframework/context/event/ContextClosedEvent.html" title="class in org.springframework.context.event">ContextClosedEvent</A>
<DD>Creates a new ContextClosedEvent.
<DT><A HREF="../org/springframework/test/context/ContextConfiguration.html" title="annotation in org.springframework.test.context"><B>ContextConfiguration</B></A> - Annotation Type in <A HREF="../org/springframework/test/context/package-summary.html">org.springframework.test.context</A><DD>ContextConfiguration defines class-level metadata which can be used to
 instruct client code with regard to how to load and configure an
 <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A>.<DT><A HREF="../org/springframework/web/context/ContextCleanupListener.html#contextDestroyed(javax.servlet.ServletContextEvent)"><B>contextDestroyed(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextCleanupListener.html" title="class in org.springframework.web.context">ContextCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/ContextLoaderListener.html#contextDestroyed(javax.servlet.ServletContextEvent)"><B>contextDestroyed(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoaderListener.html" title="class in org.springframework.web.context">ContextLoaderListener</A>
<DD>Close the root web application context.
<DT><A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html#contextDestroyed(javax.servlet.ServletContextEvent)"><B>contextDestroyed(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html" title="class in org.springframework.web.util">IntrospectorCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/Log4jConfigListener.html#contextDestroyed(javax.servlet.ServletContextEvent)"><B>contextDestroyed(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/Log4jConfigListener.html" title="class in org.springframework.web.util">Log4jConfigListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebAppRootListener.html#contextDestroyed(javax.servlet.ServletContextEvent)"><B>contextDestroyed(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebAppRootListener.html" title="class in org.springframework.web.util">WebAppRootListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ContextExposingHttpServletRequest.html" title="class in org.springframework.web.context.support"><B>ContextExposingHttpServletRequest</B></A> - Class in <A HREF="../org/springframework/web/context/support/package-summary.html">org.springframework.web.context.support</A><DD>HttpServletRequest decorator that makes all Spring beans in a
 given WebApplicationContext accessible as request attributes,
 through lazy checking once an attribute gets accessed.<DT><A HREF="../org/springframework/web/context/support/ContextExposingHttpServletRequest.html#ContextExposingHttpServletRequest(javax.servlet.http.HttpServletRequest, org.springframework.web.context.WebApplicationContext)"><B>ContextExposingHttpServletRequest(HttpServletRequest, WebApplicationContext)</B></A> - 
Constructor for class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ContextExposingHttpServletRequest.html" title="class in org.springframework.web.context.support">ContextExposingHttpServletRequest</A>
<DD>Create a new ContextExposingHttpServletRequest for the given request.
<DT><A HREF="../org/springframework/web/context/support/ContextExposingHttpServletRequest.html#ContextExposingHttpServletRequest(javax.servlet.http.HttpServletRequest, org.springframework.web.context.WebApplicationContext, java.util.Set)"><B>ContextExposingHttpServletRequest(HttpServletRequest, WebApplicationContext, Set&lt;String&gt;)</B></A> - 
Constructor for class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ContextExposingHttpServletRequest.html" title="class in org.springframework.web.context.support">ContextExposingHttpServletRequest</A>
<DD>Create a new ContextExposingHttpServletRequest for the given request.
<DT><A HREF="../org/springframework/web/context/ContextCleanupListener.html#contextInitialized(javax.servlet.ServletContextEvent)"><B>contextInitialized(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextCleanupListener.html" title="class in org.springframework.web.context">ContextCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/ContextLoaderListener.html#contextInitialized(javax.servlet.ServletContextEvent)"><B>contextInitialized(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoaderListener.html" title="class in org.springframework.web.context">ContextLoaderListener</A>
<DD>Initialize the root web application context.
<DT><A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html#contextInitialized(javax.servlet.ServletContextEvent)"><B>contextInitialized(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/IntrospectorCleanupListener.html" title="class in org.springframework.web.util">IntrospectorCleanupListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/Log4jConfigListener.html#contextInitialized(javax.servlet.ServletContextEvent)"><B>contextInitialized(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/Log4jConfigListener.html" title="class in org.springframework.web.util">Log4jConfigListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebAppRootListener.html#contextInitialized(javax.servlet.ServletContextEvent)"><B>contextInitialized(ServletContextEvent)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebAppRootListener.html" title="class in org.springframework.web.util">WebAppRootListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access"><B>ContextJndiBeanFactoryLocator</B></A> - Class in <A HREF="../org/springframework/context/access/package-summary.html">org.springframework.context.access</A><DD>BeanFactoryLocator implementation that creates the BeanFactory from one or
 more classpath locations specified in a JNDI environment variable.<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html#ContextJndiBeanFactoryLocator()"><B>ContextJndiBeanFactoryLocator()</B></A> - 
Constructor for class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextJndiBeanFactoryLocator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html#contextKey()"><B>contextKey()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html" title="class in org.springframework.test">AbstractSingleSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Return a key for this context.
<DT><A HREF="../org/springframework/test/AbstractSpringContextTests.html#contextKeyString(java.lang.Object)"><B>contextKeyString(Object)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSpringContextTests.html" title="class in org.springframework.test">AbstractSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Subclasses can override this to return a String representation of their
 context key for use in caching and logging.
<DT><A HREF="../org/springframework/test/context/ContextLoader.html" title="interface in org.springframework.test.context"><B>ContextLoader</B></A> - Interface in <A HREF="../org/springframework/test/context/package-summary.html">org.springframework.test.context</A><DD>Strategy interface for loading an
 <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>application context</CODE></A>.<DT><A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context"><B>ContextLoader</B></A> - Class in <A HREF="../org/springframework/web/context/package-summary.html">org.springframework.web.context</A><DD>Performs the actual initialization work for the root application context.<DT><A HREF="../org/springframework/web/context/ContextLoader.html#ContextLoader()"><B>ContextLoader()</B></A> - 
Constructor for class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/ContextLoaderListener.html" title="class in org.springframework.web.context"><B>ContextLoaderListener</B></A> - Class in <A HREF="../org/springframework/web/context/package-summary.html">org.springframework.web.context</A><DD>Bootstrap listener to start up and shut down Spring's root <A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context"><CODE>WebApplicationContext</CODE></A>.<DT><A HREF="../org/springframework/web/context/ContextLoaderListener.html#ContextLoaderListener()"><B>ContextLoaderListener()</B></A> - 
Constructor for class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoaderListener.html" title="class in org.springframework.web.context">ContextLoaderListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html" title="class in org.springframework.web.struts"><B>ContextLoaderPlugIn</B></A> - Class in <A HREF="../org/springframework/web/struts/package-summary.html">org.springframework.web.struts</A><DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0</I><DT><A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html#ContextLoaderPlugIn()"><B>ContextLoaderPlugIn()</B></A> - 
Constructor for class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html" title="class in org.springframework.web.struts">ContextLoaderPlugIn</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/context/config/ContextNamespaceHandler.html" title="class in org.springframework.context.config"><B>ContextNamespaceHandler</B></A> - Class in <A HREF="../org/springframework/context/config/package-summary.html">org.springframework.context.config</A><DD><A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html" title="interface in org.springframework.beans.factory.xml"><CODE>NamespaceHandler</CODE></A>
 for the '<code>context</code>' namespace.<DT><A HREF="../org/springframework/context/config/ContextNamespaceHandler.html#ContextNamespaceHandler()"><B>ContextNamespaceHandler()</B></A> - 
Constructor for class org.springframework.context.config.<A HREF="../org/springframework/context/config/ContextNamespaceHandler.html" title="class in org.springframework.context.config">ContextNamespaceHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/ContextRefreshedEvent.html" title="class in org.springframework.context.event"><B>ContextRefreshedEvent</B></A> - Class in <A HREF="../org/springframework/context/event/package-summary.html">org.springframework.context.event</A><DD>Event raised when an <code>ApplicationContext</code> gets initialized or refreshed.<DT><A HREF="../org/springframework/context/event/ContextRefreshedEvent.html#ContextRefreshedEvent(org.springframework.context.ApplicationContext)"><B>ContextRefreshedEvent(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.event.<A HREF="../org/springframework/context/event/ContextRefreshedEvent.html" title="class in org.springframework.context.event">ContextRefreshedEvent</A>
<DD>Create a new ContextRefreshedEvent.
<DT><A HREF="../org/springframework/core/io/ContextResource.html" title="interface in org.springframework.core.io"><B>ContextResource</B></A> - Interface in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD>Extended interface for a resource that is loaded from an enclosing
 'context', e.g.<DT><A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html" title="class in org.springframework.context.access"><B>ContextSingletonBeanFactoryLocator</B></A> - Class in <A HREF="../org/springframework/context/access/package-summary.html">org.springframework.context.access</A><DD>Variant of <A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html" title="class in org.springframework.beans.factory.access"><CODE>SingletonBeanFactoryLocator</CODE></A>
 which creates its internal bean factory reference as an
 <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A> instead of
 SingletonBeanFactoryLocator's simple BeanFactory.<DT><A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html#ContextSingletonBeanFactoryLocator(java.lang.String)"><B>ContextSingletonBeanFactoryLocator(String)</B></A> - 
Constructor for class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextSingletonBeanFactoryLocator</A>
<DD>Constructor which uses the the specified name as the resource name
 of the definition file(s).
<DT><A HREF="../org/springframework/context/event/ContextStartedEvent.html" title="class in org.springframework.context.event"><B>ContextStartedEvent</B></A> - Class in <A HREF="../org/springframework/context/event/package-summary.html">org.springframework.context.event</A><DD>Event raised when an <code>ApplicationContext</code> gets started.<DT><A HREF="../org/springframework/context/event/ContextStartedEvent.html#ContextStartedEvent(org.springframework.context.ApplicationContext)"><B>ContextStartedEvent(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.event.<A HREF="../org/springframework/context/event/ContextStartedEvent.html" title="class in org.springframework.context.event">ContextStartedEvent</A>
<DD>Create a new ContextStartedEvent.
<DT><A HREF="../org/springframework/context/event/ContextStoppedEvent.html" title="class in org.springframework.context.event"><B>ContextStoppedEvent</B></A> - Class in <A HREF="../org/springframework/context/event/package-summary.html">org.springframework.context.event</A><DD>Event raised when an <code>ApplicationContext</code> gets stopped.<DT><A HREF="../org/springframework/context/event/ContextStoppedEvent.html#ContextStoppedEvent(org.springframework.context.ApplicationContext)"><B>ContextStoppedEvent(ApplicationContext)</B></A> - 
Constructor for class org.springframework.context.event.<A HREF="../org/springframework/context/event/ContextStoppedEvent.html" title="class in org.springframework.context.event">ContextStoppedEvent</A>
<DD>Create a new ContextStoppedEvent.
<DT><A HREF="../org/springframework/core/ControlFlow.html" title="interface in org.springframework.core"><B>ControlFlow</B></A> - Interface in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Interface to be implemented by objects that can return information about
 the current call stack.<DT><A HREF="../org/springframework/core/ControlFlowFactory.html" title="class in org.springframework.core"><B>ControlFlowFactory</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Static factory to conceal the automatic choice of the ControlFlow
 implementation class.<DT><A HREF="../org/springframework/core/ControlFlowFactory.html#ControlFlowFactory()"><B>ControlFlowFactory()</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/ControlFlowFactory.html" title="class in org.springframework.core">ControlFlowFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/ControlFlowPointcut.html" title="class in org.springframework.aop.support"><B>ControlFlowPointcut</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Pointcut and method matcher for use in simple <b>cflow</b>-style pointcut.<DT><A HREF="../org/springframework/aop/support/ControlFlowPointcut.html#ControlFlowPointcut(java.lang.Class)"><B>ControlFlowPointcut(Class)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ControlFlowPointcut.html" title="class in org.springframework.aop.support">ControlFlowPointcut</A>
<DD>Construct a new pointcut that matches all control flows below that class.
<DT><A HREF="../org/springframework/aop/support/ControlFlowPointcut.html#ControlFlowPointcut(java.lang.Class, java.lang.String)"><B>ControlFlowPointcut(Class, String)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/ControlFlowPointcut.html" title="class in org.springframework.aop.support">ControlFlowPointcut</A>
<DD>Construct a new pointcut that matches all calls below the
 given method in the given class.
<DT><A HREF="../org/springframework/stereotype/Controller.html" title="annotation in org.springframework.stereotype"><B>Controller</B></A> - Annotation Type in <A HREF="../org/springframework/stereotype/package-summary.html">org.springframework.stereotype</A><DD>Indicates that an annotated class is a "Controller" (e.g.<DT><A HREF="../org/springframework/web/portlet/mvc/Controller.html" title="interface in org.springframework.web.portlet.mvc"><B>Controller</B></A> - Interface in <A HREF="../org/springframework/web/portlet/mvc/package-summary.html">org.springframework.web.portlet.mvc</A><DD>Base portlet Controller interface, representing a component that receives 
 RenderRequest/RenderResponse and ActionRequest/ActionResponse like a 
 <code>Portlet</code> but is able to participate in an MVC workflow.<DT><A HREF="../org/springframework/web/servlet/mvc/Controller.html" title="interface in org.springframework.web.servlet.mvc"><B>Controller</B></A> - Interface in <A HREF="../org/springframework/web/servlet/mvc/package-summary.html">org.springframework.web.servlet.mvc</A><DD>Base Controller interface, representing a component that receives
 <code>HttpServletRequest</code> and <code>HttpServletResponse</code>
 instances just like a <code>HttpServlet</code> but is able to
 participate in an MVC workflow.<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support"><B>ControllerBeanNameHandlerMapping</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/support/package-summary.html">org.springframework.web.servlet.mvc.support</A><DD>Implementation of <A HREF="../org/springframework/web/servlet/HandlerMapping.html" title="interface in org.springframework.web.servlet"><CODE>HandlerMapping</CODE></A> that
 follows a simple convention for generating URL path mappings from the <i>bean names</i>
 of registered <A HREF="../org/springframework/web/servlet/mvc/Controller.html" title="interface in org.springframework.web.servlet.mvc"><CODE>Controller</CODE></A> beans
 as well as <code>@Controller</code> annotated beans.<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html#ControllerBeanNameHandlerMapping()"><B>ControllerBeanNameHandlerMapping()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/ControllerBeanNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">ControllerBeanNameHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support"><B>ControllerClassNameHandlerMapping</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/support/package-summary.html">org.springframework.web.servlet.mvc.support</A><DD>Implementation of <A HREF="../org/springframework/web/servlet/HandlerMapping.html" title="interface in org.springframework.web.servlet"><CODE>HandlerMapping</CODE></A> that
 follows a simple convention for generating URL path mappings from the <i>class names</i>
 of registered <A HREF="../org/springframework/web/servlet/mvc/Controller.html" title="interface in org.springframework.web.servlet.mvc"><CODE>Controller</CODE></A> beans
 as well as <code>@Controller</code> annotated beans.<DT><A HREF="../org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html#ControllerClassNameHandlerMapping()"><B>ControllerClassNameHandlerMapping()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.support.<A HREF="../org/springframework/web/servlet/mvc/support/ControllerClassNameHandlerMapping.html" title="class in org.springframework.web.servlet.mvc.support">ControllerClassNameHandlerMapping</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/Conventions.html" title="class in org.springframework.core"><B>Conventions</B></A> - Class in <A HREF="../org/springframework/core/package-summary.html">org.springframework.core</A><DD>Provides methods to support various naming and other conventions used
 throughout the framework.<DT><A HREF="../org/springframework/core/Conventions.html#Conventions()"><B>Conventions()</B></A> - 
Constructor for class org.springframework.core.<A HREF="../org/springframework/core/Conventions.html" title="class in org.springframework.core">Conventions</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#CONVERSION_SERVICE_BEAN_NAME"><B>CONVERSION_SERVICE_BEAN_NAME</B></A> - 
Static variable in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Name of the ConversionService bean in the factory.
<DT><A HREF="../org/springframework/core/convert/ConversionException.html" title="class in org.springframework.core.convert"><B>ConversionException</B></A> - Exception in <A HREF="../org/springframework/core/convert/package-summary.html">org.springframework.core.convert</A><DD>Base class for exceptions thrown by the conversion system.<DT><A HREF="../org/springframework/core/convert/ConversionException.html#ConversionException(java.lang.String)"><B>ConversionException(String)</B></A> - 
Constructor for exception org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionException.html" title="class in org.springframework.core.convert">ConversionException</A>
<DD>Construct a new conversion exception.
<DT><A HREF="../org/springframework/core/convert/ConversionException.html#ConversionException(java.lang.String, java.lang.Throwable)"><B>ConversionException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionException.html" title="class in org.springframework.core.convert">ConversionException</A>
<DD>Construct a new conversion exception.
<DT><A HREF="../org/springframework/core/convert/ConversionFailedException.html" title="class in org.springframework.core.convert"><B>ConversionFailedException</B></A> - Exception in <A HREF="../org/springframework/core/convert/package-summary.html">org.springframework.core.convert</A><DD>Exception to be thrown when an actual type conversion attempt fails.<DT><A HREF="../org/springframework/core/convert/ConversionFailedException.html#ConversionFailedException(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, java.lang.Object, java.lang.Throwable)"><B>ConversionFailedException(TypeDescriptor, TypeDescriptor, Object, Throwable)</B></A> - 
Constructor for exception org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionFailedException.html" title="class in org.springframework.core.convert">ConversionFailedException</A>
<DD>Create a new conversion exception.
<DT><A HREF="../org/springframework/beans/ConversionNotSupportedException.html" title="class in org.springframework.beans"><B>ConversionNotSupportedException</B></A> - Exception in <A HREF="../org/springframework/beans/package-summary.html">org.springframework.beans</A><DD>Exception thrown when no suitable editor or converter can be found for a bean property.<DT><A HREF="../org/springframework/beans/ConversionNotSupportedException.html#ConversionNotSupportedException(java.beans.PropertyChangeEvent, java.lang.Class, java.lang.Throwable)"><B>ConversionNotSupportedException(PropertyChangeEvent, Class, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/ConversionNotSupportedException.html" title="class in org.springframework.beans">ConversionNotSupportedException</A>
<DD>Create a new ConversionNotSupportedException.
<DT><A HREF="../org/springframework/beans/ConversionNotSupportedException.html#ConversionNotSupportedException(java.lang.Object, java.lang.Class, java.lang.Throwable)"><B>ConversionNotSupportedException(Object, Class, Throwable)</B></A> - 
Constructor for exception org.springframework.beans.<A HREF="../org/springframework/beans/ConversionNotSupportedException.html" title="class in org.springframework.beans">ConversionNotSupportedException</A>
<DD>Create a new ConversionNotSupportedException.
<DT><A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert"><B>ConversionService</B></A> - Interface in <A HREF="../org/springframework/core/convert/package-summary.html">org.springframework.core.convert</A><DD>A service interface for type conversion.<DT><A HREF="../org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html" title="class in org.springframework.web.servlet.handler"><B>ConversionServiceExposingInterceptor</B></A> - Class in <A HREF="../org/springframework/web/servlet/handler/package-summary.html">org.springframework.web.servlet.handler</A><DD>Interceptor that places the configured <A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert"><CODE>ConversionService</CODE></A> in request scope
 so it's available during request processing.<DT><A HREF="../org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html#ConversionServiceExposingInterceptor(org.springframework.core.convert.ConversionService)"><B>ConversionServiceExposingInterceptor(ConversionService)</B></A> - 
Constructor for class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html" title="class in org.springframework.web.servlet.handler">ConversionServiceExposingInterceptor</A>
<DD>Creates a new <A HREF="../org/springframework/web/servlet/handler/ConversionServiceExposingInterceptor.html" title="class in org.springframework.web.servlet.handler"><CODE>ConversionServiceExposingInterceptor</CODE></A>.
<DT><A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html" title="class in org.springframework.core.convert.support"><B>ConversionServiceFactory</B></A> - Class in <A HREF="../org/springframework/core/convert/support/package-summary.html">org.springframework.core.convert.support</A><DD>A factory for common <A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert"><CODE>ConversionService</CODE></A>
 configurations.<DT><A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html#ConversionServiceFactory()"><B>ConversionServiceFactory()</B></A> - 
Constructor for class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html" title="class in org.springframework.core.convert.support">ConversionServiceFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html" title="class in org.springframework.context.support"><B>ConversionServiceFactoryBean</B></A> - Class in <A HREF="../org/springframework/context/support/package-summary.html">org.springframework.context.support</A><DD>A factory for a ConversionService that installs default converters appropriate for most environments.<DT><A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html#ConversionServiceFactoryBean()"><B>ConversionServiceFactoryBean()</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html" title="class in org.springframework.context.support">ConversionServiceFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/ConversionService.html#convert(java.lang.Object, java.lang.Class)"><B>convert(Object, Class&lt;T&gt;)</B></A> - 
Method in interface org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>
<DD>Convert the source to targetType.
<DT><A HREF="../org/springframework/core/convert/ConversionService.html#convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convert(Object, TypeDescriptor, TypeDescriptor)</B></A> - 
Method in interface org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert">ConversionService</A>
<DD>Convert the source to targetType.
<DT><A HREF="../org/springframework/core/convert/converter/Converter.html#convert(S)"><B>convert(S)</B></A> - 
Method in interface org.springframework.core.convert.converter.<A HREF="../org/springframework/core/convert/converter/Converter.html" title="interface in org.springframework.core.convert.converter">Converter</A>
<DD>Convert the source of type S to target type T.
<DT><A HREF="../org/springframework/core/convert/converter/GenericConverter.html#convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convert(Object, TypeDescriptor, TypeDescriptor)</B></A> - 
Method in interface org.springframework.core.convert.converter.<A HREF="../org/springframework/core/convert/converter/GenericConverter.html" title="interface in org.springframework.core.convert.converter">GenericConverter</A>
<DD>Convert the source to the targetType described by the TypeDescriptor.
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#convert(java.lang.Object, java.lang.Class)"><B>convert(Object, Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convert(Object, TypeDescriptor, TypeDescriptor)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/serializer/support/DeserializingConverter.html#convert(byte[])"><B>convert(byte[])</B></A> - 
Method in class org.springframework.core.serializer.support.<A HREF="../org/springframework/core/serializer/support/DeserializingConverter.html" title="class in org.springframework.core.serializer.support">DeserializingConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/serializer/support/SerializingConverter.html#convert(java.lang.Object)"><B>convert(Object)</B></A> - 
Method in class org.springframework.core.serializer.support.<A HREF="../org/springframework/core/serializer/support/SerializingConverter.html" title="class in org.springframework.core.serializer.support">SerializingConverter</A>
<DD>Serializes the source object and returns the byte array result.
<DT><A HREF="../org/springframework/expression/common/ExpressionUtils.html#convert(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.Class)"><B>convert(EvaluationContext, Object, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/ExpressionUtils.html" title="class in org.springframework.expression.common">ExpressionUtils</A>
<DD>Determines if there is a type converter available in the specified context and attempts to use it to convert the
 supplied value to the specified type.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.html#convertAllArguments(org.springframework.expression.TypeConverter, java.lang.Object[], java.lang.reflect.Method)"><B>convertAllArguments(TypeConverter, Object[], Method)</B></A> - 
Static method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectionHelper.html" title="class in org.springframework.expression.spel.support">ReflectionHelper</A>
<DD>Convert a supplied set of arguments into the requested types.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(java.lang.Object)"><B>convertAndSend(Object)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the default destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(javax.jms.Destination, java.lang.Object)"><B>convertAndSend(Destination, Object)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the specified destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(java.lang.String, java.lang.Object)"><B>convertAndSend(String, Object)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the specified destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(Object, MessagePostProcessor)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the default destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(javax.jms.Destination, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(Destination, Object, MessagePostProcessor)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the specified destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#convertAndSend(java.lang.String, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(String, Object, MessagePostProcessor)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Send the given object to the specified destination, converting the object
 to a JMS message with a configured MessageConverter.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(java.lang.Object)"><B>convertAndSend(Object)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(javax.jms.Destination, java.lang.Object)"><B>convertAndSend(Destination, Object)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(java.lang.String, java.lang.Object)"><B>convertAndSend(String, Object)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(Object, MessagePostProcessor)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(javax.jms.Destination, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(Destination, Object, MessagePostProcessor)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#convertAndSend(java.lang.String, java.lang.Object, org.springframework.jms.core.MessagePostProcessor)"><B>convertAndSend(String, Object, MessagePostProcessor)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html#convertBurlapAccessException(java.lang.Throwable)"><B>convertBurlapAccessException(Throwable)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html" title="class in org.springframework.remoting.caucho">BurlapClientInterceptor</A>
<DD>Convert the given Burlap access exception to an appropriate
 Spring RemoteAccessException.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#convertCastorException(org.exolab.castor.xml.XMLException, boolean)"><B>convertCastorException(XMLException, boolean)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Convert the given <code>XMLException</code> to an appropriate exception
 from the <code>org.springframework.oxm</code> hierarchy.
<DT><A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html#convertClassLoaderURL(java.net.URL)"><B>convertClassLoaderURL(URL)</B></A> - 
Method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html" title="class in org.springframework.core.io.support">PathMatchingResourcePatternResolver</A>
<DD>Convert the given URL as returned from the ClassLoader into a Resource object.
<DT><A HREF="../org/springframework/util/ClassUtils.html#convertClassNameToResourcePath(java.lang.String)"><B>convertClassNameToResourcePath(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Convert a "."-based fully qualified class name to a "/"-based resource path.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html#convertElement(java.lang.Object)"><B>convertElement(Object)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html" title="class in org.springframework.beans.propertyeditors">CustomCollectionEditor</A>
<DD>Hook to convert each encountered Collection/array element.
<DT><A HREF="../org/springframework/core/convert/converter/Converter.html" title="interface in org.springframework.core.convert.converter"><B>Converter</B></A>&lt;<A HREF="../org/springframework/core/convert/converter/Converter.html" title="type parameter in Converter">S</A>,<A HREF="../org/springframework/core/convert/converter/Converter.html" title="type parameter in Converter">T</A>&gt; - Interface in <A HREF="../org/springframework/core/convert/converter/package-summary.html">org.springframework.core.convert.converter</A><DD>A converter converts a source object of type S to a target of type T.<DT><A HREF="../org/springframework/core/convert/converter/ConverterFactory.html" title="interface in org.springframework.core.convert.converter"><B>ConverterFactory</B></A>&lt;<A HREF="../org/springframework/core/convert/converter/ConverterFactory.html" title="type parameter in ConverterFactory">S</A>,<A HREF="../org/springframework/core/convert/converter/ConverterFactory.html" title="type parameter in ConverterFactory">R</A>&gt; - Interface in <A HREF="../org/springframework/core/convert/converter/package-summary.html">org.springframework.core.convert.converter</A><DD>A factory for "ranged" converters that can convert objects from S to subtypes of R.<DT><A HREF="../org/springframework/core/convert/ConverterNotFoundException.html" title="class in org.springframework.core.convert"><B>ConverterNotFoundException</B></A> - Exception in <A HREF="../org/springframework/core/convert/package-summary.html">org.springframework.core.convert</A><DD>Thrown when a suitable converter could not be found in a conversion service.<DT><A HREF="../org/springframework/core/convert/ConverterNotFoundException.html#ConverterNotFoundException(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>ConverterNotFoundException(TypeDescriptor, TypeDescriptor)</B></A> - 
Constructor for exception org.springframework.core.convert.<A HREF="../org/springframework/core/convert/ConverterNotFoundException.html" title="class in org.springframework.core.convert">ConverterNotFoundException</A>
<DD>Creates a new conversion executor not found exception.
<DT><A HREF="../org/springframework/core/convert/converter/ConverterRegistry.html" title="interface in org.springframework.core.convert.converter"><B>ConverterRegistry</B></A> - Interface in <A HREF="../org/springframework/core/convert/converter/package-summary.html">org.springframework.core.convert.converter</A><DD>For registering converters with a type conversion system.<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#convertExporterParameters()"><B>convertExporterParameters()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Converts the exporter parameters passed in by the user which may be keyed
 by <code>String</code>s corresponding to the fully qualified name of the
 <code>JRExporterParameter</code> into parameters which are keyed by
 <code>JRExporterParameter</code>.
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#convertForProperty(java.lang.Object, java.lang.String)"><B>convertForProperty(Object, String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>Convert the given value for the specified property to the latter's type.
<DT><A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html#convertHessianAccessException(java.lang.Throwable)"><B>convertHessianAccessException(Throwable)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html" title="class in org.springframework.remoting.caucho">HessianClientInterceptor</A>
<DD>Convert the given Hessian access exception to an appropriate
 Spring RemoteAccessException.
<DT><A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html#convertHibernateAccessException(org.hibernate.HibernateException)"><B>convertHibernateAccessException(HibernateException)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/AbstractSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">AbstractSessionFactoryBean</A>
<DD>Convert the given HibernateException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html#convertHibernateAccessException(org.hibernate.HibernateException)"><B>convertHibernateAccessException(HibernateException)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html" title="class in org.springframework.orm.hibernate3">HibernateAccessor</A>
<DD>Convert the given HibernateException to an appropriate exception
 from the <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html#convertHibernateAccessException(org.hibernate.HibernateException)"><B>convertHibernateAccessException(HibernateException)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html" title="class in org.springframework.orm.hibernate3">HibernateTransactionManager</A>
<DD>Convert the given HibernateException to an appropriate exception
 from the <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#convertHibernateAccessException(org.hibernate.HibernateException)"><B>convertHibernateAccessException(HibernateException)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Convert the given HibernateException to an appropriate exception
 from the <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html#convertHibernateAccessException(org.hibernate.HibernateException)"><B>convertHibernateAccessException(HibernateException)</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html" title="class in org.springframework.orm.hibernate3.support">HibernateDaoSupport</A>
<DD>Convert the given HibernateException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html#convertHttpInvokerAccessException(java.lang.Throwable)"><B>convertHttpInvokerAccessException(Throwable)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerClientInterceptor.html" title="class in org.springframework.remoting.httpinvoker">HttpInvokerClientInterceptor</A>
<DD>Convert the given HTTP invoker access exception to an appropriate
 Spring RemoteAccessException.
<DT><A HREF="../org/springframework/beans/AbstractPropertyAccessor.html#convertIfNecessary(java.lang.Object, java.lang.Class)"><B>convertIfNecessary(Object, Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/AbstractPropertyAccessor.html" title="class in org.springframework.beans">AbstractPropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/BeanWrapperImpl.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><B>convertIfNecessary(Object, Class&lt;T&gt;, MethodParameter)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanWrapperImpl.html" title="class in org.springframework.beans">BeanWrapperImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/DirectFieldAccessor.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><B>convertIfNecessary(Object, Class&lt;T&gt;, MethodParameter)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/DirectFieldAccessor.html" title="class in org.springframework.beans">DirectFieldAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/SimpleTypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class)"><B>convertIfNecessary(Object, Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/SimpleTypeConverter.html" title="class in org.springframework.beans">SimpleTypeConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/SimpleTypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><B>convertIfNecessary(Object, Class&lt;T&gt;, MethodParameter)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/SimpleTypeConverter.html" title="class in org.springframework.beans">SimpleTypeConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/TypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class)"><B>convertIfNecessary(Object, Class&lt;T&gt;)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/TypeConverter.html" title="interface in org.springframework.beans">TypeConverter</A>
<DD>Convert the value to the required type (if necessary from a String).
<DT><A HREF="../org/springframework/beans/TypeConverter.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><B>convertIfNecessary(Object, Class&lt;T&gt;, MethodParameter)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/TypeConverter.html" title="interface in org.springframework.beans">TypeConverter</A>
<DD>Convert the value to the required type (if necessary from a String).
<DT><A HREF="../org/springframework/validation/DataBinder.html#convertIfNecessary(java.lang.Object, java.lang.Class)"><B>convertIfNecessary(Object, Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DataBinder.html#convertIfNecessary(java.lang.Object, java.lang.Class, org.springframework.core.MethodParameter)"><B>convertIfNecessary(Object, Class&lt;T&gt;, MethodParameter)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html" title="class in org.springframework.core.convert.support"><B>ConvertingPropertyEditorAdapter</B></A> - Class in <A HREF="../org/springframework/core/convert/support/package-summary.html">org.springframework.core.convert.support</A><DD>Adapter that exposes a <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditor</CODE></A> for any given
 <A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert"><CODE>ConversionService</CODE></A> and specific target type.<DT><A HREF="../org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html#ConvertingPropertyEditorAdapter(org.springframework.core.convert.ConversionService, org.springframework.core.convert.TypeDescriptor)"><B>ConvertingPropertyEditorAdapter(ConversionService, TypeDescriptor)</B></A> - 
Constructor for class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/ConvertingPropertyEditorAdapter.html" title="class in org.springframework.core.convert.support">ConvertingPropertyEditorAdapter</A>
<DD>Create a new ConvertingPropertyEditorAdapter for a given
 <A HREF="../org/springframework/core/convert/ConversionService.html" title="interface in org.springframework.core.convert"><CODE>ConversionService</CODE></A>
 and the given target type.
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#convertJaxbException(javax.xml.bind.JAXBException)"><B>convertJaxbException(JAXBException)</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>Convert the given <code>JAXBException</code> to an appropriate exception from the
 <code>org.springframework.oxm</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html#convertJdbcAccessException(org.hibernate.JDBCException, org.springframework.jdbc.support.SQLExceptionTranslator)"><B>convertJdbcAccessException(JDBCException, SQLExceptionTranslator)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html" title="class in org.springframework.orm.hibernate3">HibernateAccessor</A>
<DD>Convert the given Hibernate JDBCException to an appropriate exception
 from the <code>org.springframework.dao</code> hierarchy, using the
 given SQLExceptionTranslator.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html#convertJdbcAccessException(java.sql.SQLException)"><B>convertJdbcAccessException(SQLException)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateAccessor.html" title="class in org.springframework.orm.hibernate3">HibernateAccessor</A>
<DD>Convert the given SQLException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html#convertJdbcAccessException(org.hibernate.JDBCException, org.springframework.jdbc.support.SQLExceptionTranslator)"><B>convertJdbcAccessException(JDBCException, SQLExceptionTranslator)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTransactionManager.html" title="class in org.springframework.orm.hibernate3">HibernateTransactionManager</A>
<DD>Convert the given Hibernate JDBCException to an appropriate exception
 from the <code>org.springframework.dao</code> hierarchy, using the
 given SQLExceptionTranslator.
<DT><A HREF="../org/springframework/orm/jdo/JdoAccessor.html#convertJdoAccessException(javax.jdo.JDOException)"><B>convertJdoAccessException(JDOException)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoAccessor.html" title="class in org.springframework.orm.jdo">JdoAccessor</A>
<DD>Convert the given JDOException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html#convertJdoAccessException(javax.jdo.JDOException)"><B>convertJdoAccessException(JDOException)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTransactionManager.html" title="class in org.springframework.orm.jdo">JdoTransactionManager</A>
<DD>Convert the given JDOException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html#convertJdoAccessException(javax.jdo.JDOException)"><B>convertJdoAccessException(JDOException)</B></A> - 
Static method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html" title="class in org.springframework.orm.jdo">PersistenceManagerFactoryUtils</A>
<DD>Convert the given JDOException to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html#convertJdoAccessException(javax.jdo.JDOException)"><B>convertJdoAccessException(JDOException)</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html" title="class in org.springframework.orm.jdo.support">JdoDaoSupport</A>
<DD>Convert the given JDOException to an appropriate exception from the
 org.springframework.dao hierarchy.
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#convertJibxException(org.jibx.runtime.JiBXException, boolean)"><B>convertJibxException(JiBXException, boolean)</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>Convert the given <code>JiBXException</code> to an appropriate exception from the
 <code>org.springframework.oxm</code> hierarchy.
<DT><A HREF="../org/springframework/jms/support/JmsAccessor.html#convertJmsAccessException(javax.jms.JMSException)"><B>convertJmsAccessException(JMSException)</B></A> - 
Method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A>
<DD>Convert the specified checked <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms"><CODE>JMSException</CODE></A> to
 a Spring runtime <A HREF="../org/springframework/jms/JmsException.html" title="class in org.springframework.jms"><CODE>JmsException</CODE></A>
 equivalent.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#convertJmsAccessException(javax.jms.JMSException)"><B>convertJmsAccessException(JMSException)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Convert the specified checked <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/JMSException.html?is-external=true" title="class or interface in javax.jms"><CODE>JMSException</CODE></A> to a
 Spring runtime <A HREF="../org/springframework/jms/JmsException.html" title="class in org.springframework.jms"><CODE>JmsException</CODE></A> equivalent.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#convertJmsInvokerAccessException(javax.jms.JMSException)"><B>convertJmsInvokerAccessException(JMSException)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Convert the given JMS invoker access exception to an appropriate
 Spring RemoteAccessException.
<DT><A HREF="../org/springframework/jndi/JndiLocatorSupport.html#convertJndiName(java.lang.String)"><B>convertJndiName(String)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiLocatorSupport.html" title="class in org.springframework.jndi">JndiLocatorSupport</A>
<DD>Convert the given JNDI name into the actual JNDI name to use.
<DT><A HREF="../org/springframework/orm/jpa/EntityManagerFactoryUtils.html#convertJpaAccessExceptionIfPossible(java.lang.RuntimeException)"><B>convertJpaAccessExceptionIfPossible(RuntimeException)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/EntityManagerFactoryUtils.html" title="class in org.springframework.orm.jpa">EntityManagerFactoryUtils</A>
<DD>Convert the given runtime exception to an appropriate exception from the
 <code>org.springframework.dao</code> hierarchy.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html#convertKey(java.lang.Object)"><B>convertKey(Object)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors">CustomMapEditor</A>
<DD>Hook to convert each encountered Map key.
<DT><A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html#convertKey(java.lang.String)"><B>convertKey(String)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html" title="class in org.springframework.util">LinkedCaseInsensitiveMap</A>
<DD>Convert the given key to a case-insensitive key.
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#convertNullSource(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convertNullSource(TypeDescriptor, TypeDescriptor)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>Template method to convert a null source.
<DT><A HREF="../org/springframework/util/NumberUtils.html#convertNumberToTargetClass(java.lang.Number, java.lang.Class)"><B>convertNumberToTargetClass(Number, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/NumberUtils.html" title="class in org.springframework.util">NumberUtils</A>
<DD>Convert the given number into an instance of the given target class.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#convertParameterValue(net.sf.jasperreports.engine.JRExporterParameter, java.lang.Object)"><B>convertParameterValue(JRExporterParameter, Object)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Convert the supplied parameter value into the actual type required by the
 corresponding <CODE>JRExporterParameter</CODE>.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html#convertProperties(java.util.Properties)"><B>convertProperties(Properties)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyResourceConfigurer</A>
<DD>Convert the given merged properties, converting property values
 if necessary.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html#convertProperty(java.lang.String, java.lang.String)"><B>convertProperty(String, String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyResourceConfigurer</A>
<DD>Convert the given property from the properties source to the value
 which should be applied.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html#convertPropertyValue(java.lang.String)"><B>convertPropertyValue(String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyResourceConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyResourceConfigurer</A>
<DD>Convert the given property value from the properties source to the value
 which should be applied.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#convertReportData(java.lang.Object)"><B>convertReportData(Object)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Convert the given report data value to a <code>JRDataSource</code>.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#convertReportData(java.lang.Object)"><B>convertReportData(Object)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Convert the given report data value to a <code>JRDataSource</code>.
<DT><A HREF="../org/springframework/util/ClassUtils.html#convertResourcePathToClassName(java.lang.String)"><B>convertResourcePathToClassName(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Convert a "/"-based resource path to a "."-based fully qualified class name.
<DT><A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html#convertResultValueIfNecessary(java.lang.Object, org.springframework.core.MethodParameter)"><B>convertResultValueIfNecessary(Object, MethodParameter)</B></A> - 
Method in class org.springframework.jmx.access.<A HREF="../org/springframework/jmx/access/MBeanClientInterceptor.html" title="class in org.springframework.jmx.access">MBeanClientInterceptor</A>
<DD>Convert the given result object (from attribute access or operation invocation)
 to the specified target class for returning from the proxy method.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#convertRmiAccessException(java.lang.reflect.Method, java.lang.Throwable, java.lang.String)"><B>convertRmiAccessException(Method, Throwable, String)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>Wrap the given arbitrary exception that happened during remote access
 in either a RemoteException or a Spring RemoteAccessException (if the
 method signature does not support RemoteException).
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#convertRmiAccessException(java.lang.reflect.Method, java.rmi.RemoteException, java.lang.String)"><B>convertRmiAccessException(Method, RemoteException, String)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>Convert the given RemoteException that happened during remote access
 to Spring's RemoteAccessException if the method signature does not
 support RemoteException.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#convertRmiAccessException(java.lang.reflect.Method, java.rmi.RemoteException, boolean, java.lang.String)"><B>convertRmiAccessException(Method, RemoteException, boolean, String)</B></A> - 
Static method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>Convert the given RemoteException that happened during remote access
 to Spring's RemoteAccessException if the method signature does not
 support RemoteException.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#convertSource(java.lang.Object)"><B>convertSource(Object)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Convert the supplied <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><CODE>Object</CODE></A> into an XSLT <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> if the
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang"><CODE>Object</CODE></A> type is <A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#getSourceTypes()"><CODE>supported</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html#convertToDisplayString(java.lang.Object)"><B>convertToDisplayString(Object)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractDataBoundFormElementTag</A>
<DD>Get a display String for the given value, converted by a PropertyEditor
 that the BindStatus may have registered for the value's Class.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#convertToExporterParameter(java.lang.String)"><B>convertToExporterParameter(String)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Convert the given fully qualified field name to a corresponding
 JRExporterParameter instance.
<DT><A HREF="../org/springframework/jmx/export/metadata/JmxMetadataUtils.html#convertToModelMBeanNotificationInfo(org.springframework.jmx.export.metadata.ManagedNotification)"><B>convertToModelMBeanNotificationInfo(ManagedNotification)</B></A> - 
Static method in class org.springframework.jmx.export.metadata.<A HREF="../org/springframework/jmx/export/metadata/JmxMetadataUtils.html" title="class in org.springframework.jmx.export.metadata">JmxMetadataUtils</A>
<DD>Convert the supplied <A HREF="../org/springframework/jmx/export/metadata/ManagedNotification.html" title="class in org.springframework.jmx.export.metadata"><CODE>ManagedNotification</CODE></A> into the corresponding
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/modelmbean/ModelMBeanNotificationInfo.html?is-external=true" title="class or interface in javax.management.modelmbean"><CODE>ModelMBeanNotificationInfo</CODE></A>.
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#convertToScriptSource(java.lang.String, java.lang.String, org.springframework.core.io.ResourceLoader)"><B>convertToScriptSource(String, String, ResourceLoader)</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Convert the given script source locator to a ScriptSource instance.
<DT><A HREF="../org/springframework/oxm/mime/MimeContainer.html#convertToXopPackage()"><B>convertToXopPackage()</B></A> - 
Method in interface org.springframework.oxm.mime.<A HREF="../org/springframework/oxm/mime/MimeContainer.html" title="interface in org.springframework.oxm.mime">MimeContainer</A>
<DD>Turn this message into a XOP package.
<DT><A HREF="../org/springframework/expression/common/ExpressionUtils.html#convertTypedValue(org.springframework.expression.EvaluationContext, org.springframework.expression.TypedValue, java.lang.Class)"><B>convertTypedValue(EvaluationContext, TypedValue, Class&lt;T&gt;)</B></A> - 
Static method in class org.springframework.expression.common.<A HREF="../org/springframework/expression/common/ExpressionUtils.html" title="class in org.springframework.expression.common">ExpressionUtils</A>
<DD>Determines if there is a type converter available in the specified context and attempts to use it to convert the
 supplied value to the specified type.
<DT><A HREF="../org/springframework/jdbc/support/JdbcUtils.html#convertUnderscoreNameToPropertyName(java.lang.String)"><B>convertUnderscoreNameToPropertyName(String)</B></A> - 
Static method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/JdbcUtils.html" title="class in org.springframework.jdbc.support">JdbcUtils</A>
<DD>Convert a column name with underscores to the corresponding property name using "camel case".
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html#convertValue(java.lang.Object)"><B>convertValue(Object)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors">CustomMapEditor</A>
<DD>Hook to convert each encountered Map value.
<DT><A HREF="../org/springframework/expression/spel/ExpressionState.html#convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor)"><B>convertValue(Object, TypeDescriptor)</B></A> - 
Method in class org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/ExpressionState.html#convertValue(org.springframework.expression.TypedValue, org.springframework.core.convert.TypeDescriptor)"><B>convertValue(TypedValue, TypeDescriptor)</B></A> - 
Method in class org.springframework.expression.spel.<A HREF="../org/springframework/expression/spel/ExpressionState.html" title="class in org.springframework.expression.spel">ExpressionState</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeConverter.html#convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convertValue(Object, TypeDescriptor, TypeDescriptor)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeConverter.html" title="class in org.springframework.expression.spel.support">StandardTypeConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/TypeConverter.html#convertValue(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)"><B>convertValue(Object, TypeDescriptor, TypeDescriptor)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/TypeConverter.html" title="interface in org.springframework.expression">TypeConverter</A>
<DD>Convert (may coerce) a value from one type to another, for example from a boolean to a string.
<DT><A HREF="../org/springframework/jdbc/core/SingleColumnRowMapper.html#convertValueToRequiredType(java.lang.Object, java.lang.Class)"><B>convertValueToRequiredType(Object, Class)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SingleColumnRowMapper.html" title="class in org.springframework.jdbc.core">SingleColumnRowMapper</A>
<DD>Convert the given column value to the specified required type.
<DT><A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html#convertXmlBeansException(java.lang.Exception, boolean)"><B>convertXmlBeansException(Exception, boolean)</B></A> - 
Method in class org.springframework.oxm.xmlbeans.<A HREF="../org/springframework/oxm/xmlbeans/XmlBeansMarshaller.html" title="class in org.springframework.oxm.xmlbeans">XmlBeansMarshaller</A>
<DD>Convert the given XMLBeans exception to an appropriate exception from the
 <code>org.springframework.oxm</code> hierarchy.
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#convertXStreamException(java.lang.Exception, boolean)"><B>convertXStreamException(Exception, boolean)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>Convert the given XStream exception to an appropriate exception from the
 <code>org.springframework.oxm</code> hierarchy.
<DT><A HREF="../org/springframework/web/util/CookieGenerator.html" title="class in org.springframework.web.util"><B>CookieGenerator</B></A> - Class in <A HREF="../org/springframework/web/util/package-summary.html">org.springframework.web.util</A><DD>Helper class for cookie generation, carrying cookie descriptor settings
 as bean properties and being able to add and remove cookie to/from a
 given response.<DT><A HREF="../org/springframework/web/util/CookieGenerator.html#CookieGenerator()"><B>CookieGenerator()</B></A> - 
Constructor for class org.springframework.web.util.<A HREF="../org/springframework/web/util/CookieGenerator.html" title="class in org.springframework.web.util">CookieGenerator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html" title="class in org.springframework.web.servlet.i18n"><B>CookieLocaleResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/i18n/package-summary.html">org.springframework.web.servlet.i18n</A><DD><A HREF="../org/springframework/web/servlet/LocaleResolver.html" title="interface in org.springframework.web.servlet"><CODE>LocaleResolver</CODE></A> implementation that uses a cookie sent back to the user
 in case of a custom setting, with a fallback to the specified default locale
 or the request's accept-header locale.<DT><A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html#CookieLocaleResolver()"><B>CookieLocaleResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.i18n.<A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html" title="class in org.springframework.web.servlet.i18n">CookieLocaleResolver</A>
<DD>Creates a new instance of the <A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html" title="class in org.springframework.web.servlet.i18n"><CODE>CookieLocaleResolver</CODE></A> class
 using the <A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html#DEFAULT_COOKIE_NAME"><CODE>default cookie name</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/theme/CookieThemeResolver.html" title="class in org.springframework.web.servlet.theme"><B>CookieThemeResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/theme/package-summary.html">org.springframework.web.servlet.theme</A><DD>Implementation of ThemeResolver that uses a cookie sent back to the user
 in case of a custom setting, with a fallback to the default theme.<DT><A HREF="../org/springframework/web/servlet/theme/CookieThemeResolver.html#CookieThemeResolver()"><B>CookieThemeResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.theme.<A HREF="../org/springframework/web/servlet/theme/CookieThemeResolver.html" title="class in org.springframework.web.servlet.theme">CookieThemeResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/CookieValue.html" title="annotation in org.springframework.web.bind.annotation"><B>CookieValue</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation which indicates that a method parameter should be bound to an HTTP cookie.<DT><A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html#copy()"><B>copy()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConstructorArgumentValues.ValueHolder.html" title="class in org.springframework.beans.factory.config">ConstructorArgumentValues.ValueHolder</A>
<DD>Create a copy of this ValueHolder: that is, an independent
 ValueHolder instance with the same contents.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(java.io.File, java.io.File)"><B>copy(File, File)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given input File to the given output File.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(byte[], java.io.File)"><B>copy(byte[], File)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given byte array to the given output File.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(java.io.InputStream, java.io.OutputStream)"><B>copy(InputStream, OutputStream)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given InputStream to the given OutputStream.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(byte[], java.io.OutputStream)"><B>copy(byte[], OutputStream)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given byte array to the given OutputStream.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(java.io.Reader, java.io.Writer)"><B>copy(Reader, Writer)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given Reader to the given Writer.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copy(java.lang.String, java.io.Writer)"><B>copy(String, Writer)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given String to the given output Writer.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#COPYABLE_FIELDS"><B>COPYABLE_FIELDS</B></A> - 
Static variable in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Pre-built FieldFilter that matches all non-static, non-final fields.
<DT><A HREF="../org/springframework/core/AttributeAccessorSupport.html#copyAttributesFrom(org.springframework.core.AttributeAccessor)"><B>copyAttributesFrom(AttributeAccessor)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/AttributeAccessorSupport.html" title="class in org.springframework.core">AttributeAccessorSupport</A>
<DD>Copy the attributes from the supplied AttributeAccessor to this accessor.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport)"><B>copyConfigurationFrom(AdvisedSupport)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>Call this method on a new instance created by the no-arg constructor
 to create an independent copy of the configuration from the given object.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List)"><B>copyConfigurationFrom(AdvisedSupport, TargetSource, List&lt;Advisor&gt;)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>Copy the AOP configuration from the given AdvisedSupport object,
 but allow substitution of a fresh TargetSource and a given interceptor chain.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)"><B>copyConfigurationFrom(ConfigurableBeanFactory)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Copy all relevant configuration from the given other factory.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)"><B>copyConfigurationFrom(ConfigurableBeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)"><B>copyConfigurationFrom(ConfigurableBeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#copyConfigurationFrom(org.springframework.beans.factory.config.ConfigurableBeanFactory)"><B>copyConfigurationFrom(ConfigurableBeanFactory)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#copyCustomEditorsTo(org.springframework.beans.PropertyEditorRegistry, java.lang.String)"><B>copyCustomEditorsTo(PropertyEditorRegistry, String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>Copy the custom editors registered in this instance to the given target registry.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#copyDefaultEditorsTo(org.springframework.beans.PropertyEditorRegistrySupport)"><B>copyDefaultEditorsTo(PropertyEditorRegistrySupport)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>Copy the default editors registered in this instance to the given target registry.
<DT><A HREF="../org/springframework/aop/framework/ProxyConfig.html#copyFrom(org.springframework.aop.framework.ProxyConfig)"><B>copyFrom(ProxyConfig)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyConfig.html" title="class in org.springframework.aop.framework">ProxyConfig</A>
<DD>Copy configuration from the other config object.
<DT><A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html#copyFrom(org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource)"><B>copyFrom(AbstractBeanFactoryBasedTargetSource)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html" title="class in org.springframework.aop.target">AbstractBeanFactoryBasedTargetSource</A>
<DD>Copy configuration from the other AbstractBeanFactoryBasedTargetSource object.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#copyModelParameters(java.util.Map, javax.xml.transform.Transformer)"><B>copyModelParameters(Map&lt;String, Object&gt;, Transformer)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Copy all entries from the supplied Map into the
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true#setParameter(java.lang.String, java.lang.Object)" title="class or interface in javax.xml.transform"><CODE>parameter set</CODE></A>
 of the supplied <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Transformer</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#copyOutputProperties(javax.xml.transform.Transformer)"><B>copyOutputProperties(Transformer)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Copy the configured output <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Properties.html?is-external=true" title="class or interface in java.util"><CODE>Properties</CODE></A>, if any, into the
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true#setOutputProperty(java.lang.String, java.lang.String)" title="class or interface in javax.xml.transform"><CODE>output property set</CODE></A> of the supplied
 <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Transformer</CODE></A>.
<DT><A HREF="../org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html#copyOverrides(org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader)"><B>copyOverrides(ResourceOverridingShadowingClassLoader)</B></A> - 
Method in class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html" title="class in org.springframework.instrument.classloading">ResourceOverridingShadowingClassLoader</A>
<DD>Copy all overrides from the given ClassLoader.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#copyProperties(java.lang.Object, java.lang.Object)"><B>copyProperties(Object, Object)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Copy the property values of the given source bean into the target bean.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#copyProperties(java.lang.Object, java.lang.Object, java.lang.Class)"><B>copyProperties(Object, Object, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Copy the property values of the given source bean into the given target bean,
 only setting properties defined in the given "editable" class (or interface).
<DT><A HREF="../org/springframework/beans/BeanUtils.html#copyProperties(java.lang.Object, java.lang.Object, java.lang.String[])"><B>copyProperties(Object, Object, String[])</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Copy the property values of the given source bean into the given target bean,
 ignoring the given "ignoreProperties".
<DT><A HREF="../org/springframework/beans/annotation/AnnotationBeanUtils.html#copyPropertiesToBean(java.lang.annotation.Annotation, java.lang.Object, java.lang.String...)"><B>copyPropertiesToBean(Annotation, Object, String...)</B></A> - 
Static method in class org.springframework.beans.annotation.<A HREF="../org/springframework/beans/annotation/AnnotationBeanUtils.html" title="class in org.springframework.beans.annotation">AnnotationBeanUtils</A>
<DD>Copy the properties of the supplied <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/annotation/Annotation.html?is-external=true" title="class or interface in java.lang.annotation"><CODE>Annotation</CODE></A> to the supplied target bean.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#copyQualifiersFrom(org.springframework.beans.factory.support.AbstractBeanDefinition)"><B>copyQualifiersFrom(AbstractBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Copy the qualifiers from the supplied AbstractBeanDefinition to this bean definition.
<DT><A HREF="../org/springframework/util/FileSystemUtils.html#copyRecursively(java.io.File, java.io.File)"><B>copyRecursively(File, File)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileSystemUtils.html" title="class in org.springframework.util">FileSystemUtils</A>
<DD>Recursively copy the contents of the <code>src</code> file/directory
 to the <code>dest</code> file/directory.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#copyRegisteredEditorsTo(org.springframework.beans.PropertyEditorRegistry)"><B>copyRegisteredEditorsTo(PropertyEditorRegistry)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Initialize the given PropertyEditorRegistry with the custom editors
 that have been registered with this BeanFactory.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#copyRegisteredEditorsTo(org.springframework.beans.PropertyEditorRegistry)"><B>copyRegisteredEditorsTo(PropertyEditorRegistry)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/PagedListHolder.html#copySortDefinition(org.springframework.beans.support.SortDefinition)"><B>copySortDefinition(SortDefinition)</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/PagedListHolder.html" title="class in org.springframework.beans.support">PagedListHolder</A>
<DD>Create a deep copy of the given sort definition,
 for use as state holder to compare a modified sort definition against.
<DT><A HREF="../org/springframework/mail/SimpleMailMessage.html#copyTo(org.springframework.mail.MailMessage)"><B>copyTo(MailMessage)</B></A> - 
Method in class org.springframework.mail.<A HREF="../org/springframework/mail/SimpleMailMessage.html" title="class in org.springframework.mail">SimpleMailMessage</A>
<DD>Copy the contents of this message to the given target message.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copyToByteArray(java.io.File)"><B>copyToByteArray(File)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given input File into a new byte array.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copyToByteArray(java.io.InputStream)"><B>copyToByteArray(InputStream)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given InputStream into a new byte array.
<DT><A HREF="../org/springframework/util/FileCopyUtils.html#copyToString(java.io.Reader)"><B>copyToString(Reader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/FileCopyUtils.html" title="class in org.springframework.util">FileCopyUtils</A>
<DD>Copy the contents of the given Reader into a String.
<DT><A HREF="../org/springframework/instrument/classloading/ShadowingClassLoader.html#copyTransformers(org.springframework.instrument.classloading.ShadowingClassLoader)"><B>copyTransformers(ShadowingClassLoader)</B></A> - 
Method in class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ShadowingClassLoader.html" title="class in org.springframework.instrument.classloading">ShadowingClassLoader</A>
<DD>Copy all ClassFileTransformers from the given ClassLoader to the list of
 transformers that this ClassLoader will apply.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#countAdvicesOfType(java.lang.Class)"><B>countAdvicesOfType(Class)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>Count advices of the given class.
<DT><A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html#countBeansIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory)"><B>countBeansIncludingAncestors(ListableBeanFactory)</B></A> - 
Static method in class org.springframework.beans.factory.<A HREF="../org/springframework/beans/factory/BeanFactoryUtils.html" title="class in org.springframework.beans.factory">BeanFactoryUtils</A>
<DD>Count all beans in any hierarchy in which this factory participates.
<DT><A HREF="../org/springframework/util/StringUtils.html#countOccurrencesOf(java.lang.String, java.lang.String)"><B>countOccurrencesOf(String, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Count the occurrences of the substring in string s.
<DT><A HREF="../org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html#countRowsInTable(java.lang.String)"><B>countRowsInTable(String)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractTransactionalDataSourceSpringContextTests.html" title="class in org.springframework.test">AbstractTransactionalDataSourceSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Count the rows in the given table
<DT><A HREF="../org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html#countRowsInTable(java.lang.String)"><B>countRowsInTable(String)</B></A> - 
Method in class org.springframework.test.context.junit38.<A HREF="../org/springframework/test/context/junit38/AbstractTransactionalJUnit38SpringContextTests.html" title="class in org.springframework.test.context.junit38">AbstractTransactionalJUnit38SpringContextTests</A>
<DD>Count the rows in the given table.
<DT><A HREF="../org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html#countRowsInTable(java.lang.String)"><B>countRowsInTable(String)</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/AbstractTransactionalJUnit4SpringContextTests.html" title="class in org.springframework.test.context.junit4">AbstractTransactionalJUnit4SpringContextTests</A>
<DD>Count the rows in the given table.
<DT><A HREF="../org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html#countRowsInTable(java.lang.String)"><B>countRowsInTable(String)</B></A> - 
Method in class org.springframework.test.context.testng.<A HREF="../org/springframework/test/context/testng/AbstractTransactionalTestNGSpringContextTests.html" title="class in org.springframework.test.context.testng">AbstractTransactionalTestNGSpringContextTests</A>
<DD>Count the rows in the given table.
<DT><A HREF="../org/springframework/test/jdbc/SimpleJdbcTestUtils.html#countRowsInTable(org.springframework.jdbc.core.simple.SimpleJdbcTemplate, java.lang.String)"><B>countRowsInTable(SimpleJdbcTemplate, String)</B></A> - 
Static method in class org.springframework.test.jdbc.<A HREF="../org/springframework/test/jdbc/SimpleJdbcTestUtils.html" title="class in org.springframework.test.jdbc">SimpleJdbcTestUtils</A>
<DD>Count the rows in the given table.
<DT><A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#create()"><B>create()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A>
<DD>Invokes the <code>create()</code> method on the cached EJB home object.
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#create(K)"><B>create(K)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>Create a value to cache for the given key.
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#createActionURL()"><B>createActionURL()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.html#createActivationSpec(javax.resource.spi.ResourceAdapter, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)"><B>createActivationSpec(ResourceAdapter, JmsActivationSpecConfig)</B></A> - 
Method in interface org.springframework.jms.listener.endpoint.<A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecFactory.html" title="interface in org.springframework.jms.listener.endpoint">JmsActivationSpecFactory</A>
<DD>Create a JCA 1.5 ActivationSpec object based on the given
 <A HREF="../org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.html" title="class in org.springframework.jms.listener.endpoint"><CODE>JmsActivationSpecConfig</CODE></A> object.
<DT><A HREF="../org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html#createActivationSpec(javax.resource.spi.ResourceAdapter, org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)"><B>createActivationSpec(ResourceAdapter, JmsActivationSpecConfig)</B></A> - 
Method in class org.springframework.jms.listener.endpoint.<A HREF="../org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.html" title="class in org.springframework.jms.listener.endpoint">StandardJmsActivationSpecFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html#createAdvisorIntroducingNamedBean(java.lang.String)"><B>createAdvisorIntroducingNamedBean(String)</B></A> - 
Static method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html" title="class in org.springframework.aop.interceptor">ExposeBeanNameAdvisors</A>
<DD>Create a new advisor that will expose the given bean name, introducing
 the NamedBean interface to make the bean name accessible without forcing
 the target object to be aware of this Spring IoC concept.
<DT><A HREF="../org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html#createAdvisorWithoutIntroduction(java.lang.String)"><B>createAdvisorWithoutIntroduction(String)</B></A> - 
Static method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ExposeBeanNameAdvisors.html" title="class in org.springframework.aop.interceptor">ExposeBeanNameAdvisors</A>
<DD>Create a new advisor that will expose the given bean name,
 with no introduction
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#createAndConfigureMBean(java.lang.Object, java.lang.String)"><B>createAndConfigureMBean(Object, String)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Creates an MBean that is configured with the appropriate management
 interface for the supplied managed resource.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#createAndHoldSavepoint()"><B>createAndHoldSavepoint()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Create a savepoint and hold it for the transaction.
<DT><A HREF="../org/springframework/aop/framework/AopProxyFactory.html#createAopProxy(org.springframework.aop.framework.AdvisedSupport)"><B>createAopProxy(AdvisedSupport)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AopProxyFactory.html" title="interface in org.springframework.aop.framework">AopProxyFactory</A>
<DD>Create an <A HREF="../org/springframework/aop/framework/AopProxy.html" title="interface in org.springframework.aop.framework"><CODE>AopProxy</CODE></A> for the given AOP configuration.
<DT><A HREF="../org/springframework/aop/framework/DefaultAopProxyFactory.html#createAopProxy(org.springframework.aop.framework.AdvisedSupport)"><B>createAopProxy(AdvisedSupport)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/DefaultAopProxyFactory.html" title="class in org.springframework.aop.framework">DefaultAopProxyFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html#createAopProxy()"><B>createAopProxy()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html" title="class in org.springframework.aop.framework">ProxyCreatorSupport</A>
<DD>Subclasses should call this to get a new AOP proxy.
<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html#createApplicationContext(java.lang.String[])"><B>createApplicationContext(String[])</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextJndiBeanFactoryLocator</A>
<DD>Create the ApplicationContext instance, given an array of class path resource
 Strings which should be combined
<DT><A HREF="../org/springframework/jca/context/SpringContextResourceAdapter.html#createApplicationContext(javax.resource.spi.BootstrapContext)"><B>createApplicationContext(BootstrapContext)</B></A> - 
Method in class org.springframework.jca.context.<A HREF="../org/springframework/jca/context/SpringContextResourceAdapter.html" title="class in org.springframework.jca.context">SpringContextResourceAdapter</A>
<DD>Build a Spring ApplicationContext for the given JCA BootstrapContext.
<DT><A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html#createApplicationContext(java.lang.String[])"><B>createApplicationContext(String[])</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html" title="class in org.springframework.test">AbstractSingleSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Create a Spring <A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context"><CODE>ConfigurableApplicationContext</CODE></A> for use by this test.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html#createApplicationContext(java.lang.Object)"><B>createApplicationContext(Object)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/SpringTilesApplicationContextFactory.html" title="class in org.springframework.web.servlet.view.tiles2">SpringTilesApplicationContextFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations)"><B>createApplicationManagedEntityManager(EntityManager, EntityManagerPlusOperations)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that can join transactions with the
 <code>joinTransaction()</code> method, but is not automatically
 managed by the container.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations, org.springframework.dao.support.PersistenceExceptionTranslator)"><B>createApplicationManagedEntityManager(EntityManager, EntityManagerPlusOperations, PersistenceExceptionTranslator)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that can join transactions with the
 <code>joinTransaction()</code> method, but is not automatically
 managed by the container.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createApplicationManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerFactoryInfo)"><B>createApplicationManagedEntityManager(EntityManager, EntityManagerFactoryInfo)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that can join transactions with the
 <code>joinTransaction()</code> method, but is not automatically
 managed by the container.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createApproximateCollection(java.lang.Object, int)"><B>createApproximateCollection(Object, int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Create the most approximate collection for the given collection.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createApproximateMap(java.lang.Object, int)"><B>createApproximateMap(Object, int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Create the most approximate map for the given map.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html#createBatch(java.util.Map[])"><B>createBatch(Map[])</B></A> - 
Static method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html" title="class in org.springframework.jdbc.core.namedparam">SqlParameterSourceUtils</A>
<DD>Create an array of MapSqlParameterSource objects populated with data from the
 values passed in.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html#createBatch(java.lang.Object[])"><B>createBatch(Object[])</B></A> - 
Static method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.html" title="class in org.springframework.jdbc.core.namedparam">SqlParameterSourceUtils</A>
<DD>Create an array of BeanPropertySqlParameterSource objects populated with data
 from the values passed in.
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#createBean(java.lang.Class)"><B>createBean(Class&lt;T&gt;)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Fully create a new bean instance of the given class.
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#createBean(java.lang.Class, int, boolean)"><B>createBean(Class, int, boolean)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Fully create a new bean instance of the given class with the specified
 autowire strategy.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#createBean(java.lang.Class)"><B>createBean(Class&lt;T&gt;)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#createBean(java.lang.Class, int, boolean)"><B>createBean(Class, int, boolean)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#createBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])"><B>createBean(String, RootBeanDefinition, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Central method of this class: creates a bean instance,
 populates the bean instance, applies post-processors, etc.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#createBean(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])"><B>createBean(String, RootBeanDefinition, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Create a bean instance for the given bean definition.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html#createBeanDefinition(java.lang.String, java.lang.String, java.lang.ClassLoader)"><B>createBeanDefinition(String, String, ClassLoader)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html" title="class in org.springframework.beans.factory.support">BeanDefinitionReaderUtils</A>
<DD>Create a new GenericBeanDefinition for the given parent name and class name,
 eagerly loading the bean class if a ClassLoader has been specified.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#createBeanDefinition(java.lang.String, java.lang.String)"><B>createBeanDefinition(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>Create a bean definition for the given class name and parent name.
<DT><A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html#createBeanDefinitionDocumentReader()"><B>createBeanDefinitionDocumentReader()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml">XmlBeanDefinitionReader</A>
<DD>Create the <A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionDocumentReader</CODE></A> to use for actually
 reading bean definitions from an XML document.
<DT><A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html#createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)"><B>createBeanDefinitionReader(GenericApplicationContext)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html" title="class in org.springframework.test">AbstractSingleSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Factory method for creating new <A HREF="../org/springframework/beans/factory/support/BeanDefinitionReader.html" title="interface in org.springframework.beans.factory.support"><CODE>BeanDefinitionReader</CODE></A>s for
 loading bean definitions into the supplied
 <A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support"><CODE>context</CODE></A>.
<DT><A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html#createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)"><B>createBeanDefinitionReader(GenericApplicationContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html" title="class in org.springframework.test.context.support">AbstractGenericContextLoader</A>
<DD>Factory method for creating new <A HREF="../org/springframework/beans/factory/support/BeanDefinitionReader.html" title="interface in org.springframework.beans.factory.support"><CODE>BeanDefinitionReader</CODE></A>s for
 loading bean definitions into the supplied
 <A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support"><CODE>context</CODE></A>.
<DT><A HREF="../org/springframework/test/context/support/GenericPropertiesContextLoader.html#createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)"><B>createBeanDefinitionReader(GenericApplicationContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/GenericPropertiesContextLoader.html" title="class in org.springframework.test.context.support">GenericPropertiesContextLoader</A>
<DD>
 Creates a new <A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support"><CODE>PropertiesBeanDefinitionReader</CODE></A>.
<DT><A HREF="../org/springframework/test/context/support/GenericXmlContextLoader.html#createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)"><B>createBeanDefinitionReader(GenericApplicationContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/GenericXmlContextLoader.html" title="class in org.springframework.test.context.support">GenericXmlContextLoader</A>
<DD>Create a new <A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml"><CODE>XmlBeanDefinitionReader</CODE></A>.
<DT><A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html#createBeanFactory(java.lang.String[])"><B>createBeanFactory(String[])</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextJndiBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextJndiBeanFactoryLocator</A>
<DD>Create the BeanFactory instance, given an array of class path resource Strings
 which should be combined.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html#createBeanFactory()"><B>createBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>
<DD>Create an internal bean factory for this context.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html#createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)"><B>createBeanFactoryBasedTargetSource(Class&lt;?&gt;, String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">AbstractBeanFactoryBasedTargetSourceCreator</A>
<DD>Subclasses must implement this method to return a new AbstractPrototypeBasedTargetSource
 if they wish to create a custom TargetSource for this bean, or <code>null</code> if they are
 not interested it in, in which case no special target source will be created.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html#createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)"><B>createBeanFactoryBasedTargetSource(Class, String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/LazyInitTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">LazyInitTargetSourceCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html#createBeanFactoryBasedTargetSource(java.lang.Class, java.lang.String)"><B>createBeanFactoryBasedTargetSource(Class, String)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.target.<A HREF="../org/springframework/aop/framework/autoproxy/target/QuickTargetSourceCreator.html" title="class in org.springframework.aop.framework.autoproxy.target">QuickTargetSourceCreator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#createBeanInstance(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition, java.lang.Object[])"><B>createBeanInstance(String, RootBeanDefinition, Object[])</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Create a new instance for the specified bean, using an appropriate instantiation strategy:
 factory method, constructor autowiring, or simple instantiation.
<DT><A HREF="../org/springframework/validation/BeanPropertyBindingResult.html#createBeanWrapper()"><B>createBeanWrapper()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/BeanPropertyBindingResult.html" title="class in org.springframework.validation">BeanPropertyBindingResult</A>
<DD>Create a new <A HREF="../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans"><CODE>BeanWrapper</CODE></A> for the underlying target object.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#createBinder(org.springframework.web.context.request.NativeWebRequest, java.lang.Object, java.lang.String)"><B>createBinder(NativeWebRequest, Object, String)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createBinder(javax.portlet.PortletRequest, java.lang.Object, java.lang.String)"><B>createBinder(PortletRequest, Object, String)</B></A> - 
Method in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.portlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>Template method for creating a new PortletRequestDataBinder instance.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#createBinder(javax.portlet.PortletRequest, java.lang.Object)"><B>createBinder(PortletRequest, Object)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Create a new binder instance for the given command and request.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object, java.lang.String)"><B>createBinder(HttpServletRequest, Object, String)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>Template method for creating a new ServletRequestDataBinder instance.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>createBinder(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Create a new binder instance for the given command and request.
<DT><A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html#createBinder(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>createBinder(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.multiaction.<A HREF="../org/springframework/web/servlet/mvc/multiaction/MultiActionController.html" title="class in org.springframework.web.servlet.mvc.multiaction">MultiActionController</A>
<DD>Create a new binder instance for the given command and request.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#createBrowser(javax.jms.Session, javax.jms.Queue, java.lang.String)"><B>createBrowser(Session, Queue, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Create a JMS MessageProducer for the given Session and Destination,
 configuring it to disable message ids and/or timestamps (if necessary).
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#createBrowser(javax.jms.Session, javax.jms.Queue, java.lang.String)"><B>createBrowser(Session, Queue, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html#createBshObject(java.lang.String)"><B>createBshObject(String)</B></A> - 
Static method in class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html" title="class in org.springframework.scripting.bsh">BshScriptUtils</A>
<DD>Create a new BeanShell-scripted object from the given script source.
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html#createBshObject(java.lang.String, java.lang.Class[])"><B>createBshObject(String, Class[])</B></A> - 
Static method in class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html" title="class in org.springframework.scripting.bsh">BshScriptUtils</A>
<DD>Create a new BeanShell-scripted object from the given script source,
 using the default ClassLoader.
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html#createBshObject(java.lang.String, java.lang.Class[], java.lang.ClassLoader)"><B>createBshObject(String, Class[], ClassLoader)</B></A> - 
Static method in class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptUtils.html" title="class in org.springframework.scripting.bsh">BshScriptUtils</A>
<DD>Create a new BeanShell-scripted object from the given script source.
<DT><A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html#createBurlapProxy(com.caucho.burlap.client.BurlapProxyFactory)"><B>createBurlapProxy(BurlapProxyFactory)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/BurlapClientInterceptor.html" title="class in org.springframework.remoting.caucho">BurlapClientInterceptor</A>
<DD>Create the Burlap proxy that is wrapped by this interceptor.
<DT><A HREF="../org/springframework/cache/ehcache/EhCacheFactoryBean.html#createCache()"><B>createCache()</B></A> - 
Method in class org.springframework.cache.ehcache.<A HREF="../org/springframework/cache/ehcache/EhCacheFactoryBean.html" title="class in org.springframework.cache.ehcache">EhCacheFactoryBean</A>
<DD>Create a raw Cache object based on the configuration of this FactoryBean.
<DT><A HREF="../org/springframework/jdbc/core/CallableStatementCreator.html#createCallableStatement(java.sql.Connection)"><B>createCallableStatement(Connection)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/CallableStatementCreator.html" title="interface in org.springframework.jdbc.core">CallableStatementCreator</A>
<DD>Create a callable statement in this connection.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#createCallString()"><B>createCallString()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Build the call string based on configuration and metadata information.
<DT><A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html#createCciTemplate(javax.resource.cci.ConnectionFactory)"><B>createCciTemplate(ConnectionFactory)</B></A> - 
Method in class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html" title="class in org.springframework.jca.cci.core.support">CciDaoSupport</A>
<DD>Create a CciTemplate for the given ConnectionFactory.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html#createCollection(java.lang.Class, int)"><B>createCollection(Class, int)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html" title="class in org.springframework.beans.propertyeditors">CustomCollectionEditor</A>
<DD>Create a Collection of the given type, with the given
 initial capacity (if supported by the Collection type).
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createCollection(java.lang.Class, int)"><B>createCollection(Class&lt;?&gt;, int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Create the most appropriate collection for the given collection type.
<DT><A HREF="../org/springframework/jdbc/core/ColumnMapRowMapper.html#createColumnMap(int)"><B>createColumnMap(int)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ColumnMapRowMapper.html" title="class in org.springframework.jdbc.core">ColumnMapRowMapper</A>
<DD>Create a Map instance to be used as column map.
<DT><A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html#createCommand()"><B>createCommand()</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/BaseCommandController.html" title="class in org.springframework.web.portlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Create a new command instance for the command class of this controller.
<DT><A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html#createCommand()"><B>createCommand()</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/BaseCommandController.html" title="class in org.springframework.web.servlet.mvc">BaseCommandController</A>
<DD><B>Deprecated.</B>&nbsp;Create a new command instance for the command class of this controller.
<DT><A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html#createCommonsHttpMethod(org.springframework.http.HttpMethod, java.lang.String)"><B>createCommonsHttpMethod(HttpMethod, String)</B></A> - 
Method in class org.springframework.http.client.<A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html" title="class in org.springframework.http.client">CommonsClientHttpRequestFactory</A>
<DD>Create a Commons HttpMethodBase object for the given HTTP method
 and URI specification.
<DT><A HREF="../org/springframework/aop/framework/ProxyFactoryBean.html#createCompositeInterface(java.lang.Class[])"><B>createCompositeInterface(Class[])</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyFactoryBean.html" title="class in org.springframework.aop.framework">ProxyFactoryBean</A>
<DD>Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.
<DT><A HREF="../org/springframework/jndi/JndiObjectFactoryBean.html#createCompositeInterface(java.lang.Class[])"><B>createCompositeInterface(Class[])</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiObjectFactoryBean.html" title="class in org.springframework.jndi">JndiObjectFactoryBean</A>
<DD>Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createCompositeInterface(java.lang.Class[])"><B>createCompositeInterface(Class[])</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.
<DT><A HREF="../org/springframework/util/ClassUtils.html#createCompositeInterface(java.lang.Class[], java.lang.ClassLoader)"><B>createCompositeInterface(Class&lt;?&gt;[], ClassLoader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Create a composite interface Class for the given interfaces,
 implementing the given interfaces in one single Class.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createConcurrentMap(int)"><B>createConcurrentMap(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, for usage on JDK 1.5 or higher</I>
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createConcurrentMapIfPossible(int)"><B>createConcurrentMapIfPossible(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, for usage on JDK 1.5 or higher</I>
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createConfigInterface(org.springframework.beans.factory.config.BeanDefinition, java.lang.Class[])"><B>createConfigInterface(BeanDefinition, Class[])</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Create a config interface for the given bean definition, defining setter
 methods for the defined property values as well as an init method and
 a destroy method (if defined).
<DT><A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html#createConfiguration()"><B>createConfiguration()</B></A> - 
Method in class org.springframework.ui.freemarker.<A HREF="../org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.html" title="class in org.springframework.ui.freemarker">FreeMarkerConfigurationFactory</A>
<DD>Prepare the FreeMarker Configuration and return it.
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html#createConnection()"><B>createConnection()</B></A> - 
Method in interface org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html" title="interface in org.springframework.jms.connection">ConnectionFactoryUtils.ResourceFactory</A>
<DD>Create a new JMS Connection for registration with a JmsResourceHolder.
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createConnection(java.lang.String, java.lang.String)"><B>createConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager.html" title="class in org.springframework.jms.connection">JmsTransactionManager</A>
<DD>Create a JMS Connection via this template's ConnectionFactory.
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html" title="class in org.springframework.jms.connection">JmsTransactionManager102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createConnection(java.lang.String, java.lang.String)"><B>createConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createConnection(java.lang.String, java.lang.String)"><B>createConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Determine whether there are currently thread-bound credentials,
 using them if available, falling back to the statically specified
 username and password (i.e.
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createConnection(java.lang.String, java.lang.String)"><B>createConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Delegate the call straight to the target ConnectionFactory.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Create a new JMS Connection for this JMS invoker,
 ideally a <code>javax.jms.QueueConnection</code>.
<DT><A HREF="../org/springframework/jms/support/JmsAccessor.html#createConnection()"><B>createConnection()</B></A> - 
Method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A>
<DD>Create a JMS Connection via this template's ConnectionFactory.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#createConnectionProxy(java.sql.Connection)"><B>createConnectionProxy(Connection)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Create a close-suppressing proxy for the given JDBC Connection.
<DT><A HREF="../org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html#createConnectionSpec(java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String)"><B>createConnectionSpec(Integer, Boolean, String, String)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource">WebSphereDataSourceAdapter</A>
<DD>Create a WebSphere <code>JDBCConnectionSpec</code> object for the given charateristics.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#createConsumer(javax.jms.Session, javax.jms.Destination, java.lang.String)"><B>createConsumer(Session, Destination, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Create a JMS MessageConsumer for the given Session and Destination.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#createConsumer(javax.jms.Session, javax.jms.Destination, java.lang.String)"><B>createConsumer(Session, Destination, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#createConsumer(javax.jms.Session, javax.jms.Destination)"><B>createConsumer(Session, Destination)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>Create a JMS MessageConsumer for the given Session and Destination.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html#createConsumer(javax.jms.Session, javax.jms.Destination)"><B>createConsumer(Session, Destination)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html#createConsumer(javax.jms.Session, javax.jms.Destination)"><B>createConsumer(Session, Destination)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer</A>
<DD>Create a JMS MessageConsumer for the given Session and Destination.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html#createConsumer(javax.jms.Session, javax.jms.Destination)"><B>createConsumer(Session, Destination)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations)"><B>createContainerManagedEntityManager(EntityManager, EntityManagerPlusOperations)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that automatically joins transactions on each
 operation in a transaction.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerPlusOperations, org.springframework.dao.support.PersistenceExceptionTranslator)"><B>createContainerManagedEntityManager(EntityManager, EntityManagerPlusOperations, PersistenceExceptionTranslator)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that automatically joins transactions on each
 operation in a transaction.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createContainerManagedEntityManager(javax.persistence.EntityManager, org.springframework.orm.jpa.EntityManagerFactoryInfo)"><B>createContainerManagedEntityManager(EntityManager, EntityManagerFactoryInfo)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that automatically joins transactions on each
 operation in a transaction.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createContainerManagedEntityManager(javax.persistence.EntityManagerFactory)"><B>createContainerManagedEntityManager(EntityManagerFactory)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that automatically joins transactions on each
 operation in a transaction.
<DT><A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html#createContainerManagedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map)"><B>createContainerManagedEntityManager(EntityManagerFactory, Map)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/ExtendedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">ExtendedEntityManagerCreator</A>
<DD>Create an EntityManager that automatically joins transactions on each
 operation in a transaction.
<DT><A HREF="../org/springframework/test/jpa/AbstractJpaTests.html#createContainerManagedEntityManager()"><B>createContainerManagedEntityManager()</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractJpaTests.html" title="class in org.springframework.test.jpa">AbstractJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;Create an EntityManager that will always automatically enlist itself in current
 transactions, in contrast to an EntityManager returned by
 <code>EntityManagerFactory.createEntityManager()</code>
 (which requires an explicit <code>joinTransaction()</code> call).
<DT><A HREF="../org/springframework/util/xml/DomUtils.html#createContentHandler(org.w3c.dom.Node)"><B>createContentHandler(Node)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/DomUtils.html" title="class in org.springframework.util.xml">DomUtils</A>
<DD>Returns a SAX <code>ContentHandler</code> that transforms callback calls to DOM <code>Node</code>s.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createContentHandler(javax.xml.stream.XMLStreamWriter)"><B>createContentHandler(XMLStreamWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a SAX <A HREF="http://java.sun.com/javase/6/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax"><CODE>ContentHandler</CODE></A> that writes to the given StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamWriter</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createContentHandler(javax.xml.stream.XMLEventWriter)"><B>createContentHandler(XMLEventWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a SAX <A HREF="http://java.sun.com/javase/6/docs/api/org/xml/sax/ContentHandler.html?is-external=true" title="class or interface in org.xml.sax"><CODE>ContentHandler</CODE></A> that writes events to the given StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventWriter</CODE></A>.
<DT><A HREF="../org/springframework/web/context/ContextLoaderListener.html#createContextLoader()"><B>createContextLoader()</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoaderListener.html" title="class in org.springframework.web.context">ContextLoaderListener</A>
<DD><B>Deprecated.</B>&nbsp;<I>in favor of simply subclassing ContextLoaderListener itself
 (which extends ContextLoader, as of Spring 3.0)</I>
<DT><A HREF="../org/springframework/core/ControlFlowFactory.html#createControlFlow()"><B>createControlFlow()</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/ControlFlowFactory.html" title="class in org.springframework.core">ControlFlowFactory</A>
<DD>Return an appropriate <A HREF="../org/springframework/core/ControlFlow.html" title="interface in org.springframework.core"><CODE>ControlFlow</CODE></A> instance.
<DT><A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html#createConversionService()"><B>createConversionService()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ConversionServiceFactoryBean.html" title="class in org.springframework.context.support">ConversionServiceFactoryBean</A>
<DD>Create the ConversionService instance returned by this factory bean.
<DT><A HREF="../org/springframework/web/util/CookieGenerator.html#createCookie(java.lang.String)"><B>createCookie(String)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/CookieGenerator.html" title="class in org.springframework.web.util">CookieGenerator</A>
<DD>Create a cookie with the given value, using the cookie descriptor
 settings of this generator (except for "cookieMaxAge").
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createCopyOnWriteSet()"><B>createCopyOnWriteSet()</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, for usage on JDK 1.5 or higher</I>
<DT><A HREF="../org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html#createCustomException(java.lang.String, java.lang.String, java.sql.SQLException, java.lang.Class)"><B>createCustomException(String, String, SQLException, Class)</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html" title="class in org.springframework.jdbc.support">SQLErrorCodeSQLExceptionTranslator</A>
<DD>Create a custom DataAccessException, based on a given exception
 class from a CustomSQLErrorCodesTranslation definition.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createCustomStaxResult(javax.xml.stream.XMLStreamWriter)"><B>createCustomStaxResult(XMLStreamWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a custom, non-JAXP 1.4 StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamWriter</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createCustomStaxResult(javax.xml.stream.XMLEventWriter)"><B>createCustomStaxResult(XMLEventWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a custom, non-JAXP 1.4 StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventWriter</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createCustomStaxSource(javax.xml.stream.XMLStreamReader)"><B>createCustomStaxSource(XMLStreamReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a custom, non-JAXP 1.4 StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamReader</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createCustomStaxSource(javax.xml.stream.XMLEventReader)"><B>createCustomStaxSource(XMLEventReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a custom, non-JAXP 1.4 StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventReader</CODE></A>.
<DT><A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html#createDatabaseSchema()"><B>createDatabaseSchema()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/LocalSessionFactoryBean.html" title="class in org.springframework.orm.hibernate3">LocalSessionFactoryBean</A>
<DD>Execute schema creation script, determined by the Configuration object
 used for creating the SessionFactory.
<DT><A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html#createDataSource(org.springframework.core.io.InputStreamSource, java.lang.String, java.lang.String)"><B>createDataSource(InputStreamSource, String, String)</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail">MimeMessageHelper</A>
<DD>Create an Activation Framework DataSource for the given InputStreamSource.
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html#createDefaultBeanWiringInfoResolver()"><B>createDefaultBeanWiringInfoResolver()</B></A> - 
Method in class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanConfigurerSupport.html" title="class in org.springframework.beans.factory.wiring">BeanConfigurerSupport</A>
<DD>Create the default BeanWiringInfoResolver to be used if none was
 specified explicitly.
<DT><A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html#createDefaultConversionService()"><B>createDefaultConversionService()</B></A> - 
Static method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html" title="class in org.springframework.core.convert.support">ConversionServiceFactory</A>
<DD>Create a new default ConversionService instance that can be safely modified.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#createDefaultInOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultInOutParameter(String, CallParameterMetaData)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Create a default inout parameter based on the provided meta data.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#createDefaultInOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultInOutParameter(String, CallParameterMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#createDefaultInParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultInParameter(String, CallParameterMetaData)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Create a default in parameter based on the provided meta data.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#createDefaultInParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultInParameter(String, CallParameterMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html#createDefaultNamespaceHandlerResolver()"><B>createDefaultNamespaceHandlerResolver()</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml">XmlBeanDefinitionReader</A>
<DD>Create the default implementation of <A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerResolver.html" title="interface in org.springframework.beans.factory.xml"><CODE>NamespaceHandlerResolver</CODE></A> used if none is specified.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html#createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultOutParameter(String, CallParameterMetaData)</B></A> - 
Method in interface org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProvider.html" title="interface in org.springframework.jdbc.core.metadata">CallMetaDataProvider</A>
<DD>Create a default out parameter based on the provided meta data.
<DT><A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html#createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultOutParameter(String, CallParameterMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">GenericCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html#createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultOutParameter(String, CallParameterMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/OracleCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">OracleCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html#createDefaultOutParameter(java.lang.String, org.springframework.jdbc.core.metadata.CallParameterMetaData)"><B>createDefaultOutParameter(String, CallParameterMetaData)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/PostgresCallMetaDataProvider.html" title="class in org.springframework.jdbc.core.metadata">PostgresCallMetaDataProvider</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/DispatcherPortlet.html#createDefaultStrategy(org.springframework.context.ApplicationContext, java.lang.Class)"><B>createDefaultStrategy(ApplicationContext, Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet">DispatcherPortlet</A>
<DD>Create a default strategy.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#createDefaultStrategy(org.springframework.context.ApplicationContext, java.lang.Class)"><B>createDefaultStrategy(ApplicationContext, Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Create a default strategy.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#createDefaultTaskExecutor()"><B>createDefaultTaskExecutor()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Create a default TaskExecutor.
<DT><A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html#createDefinition(java.lang.String, java.lang.String)"><B>createDefinition(String, String)</B></A> - 
Method in class org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/SingletonBeanFactoryLocator.html" title="class in org.springframework.beans.factory.access">SingletonBeanFactoryLocator</A>
<DD>Actually creates definition in the form of a BeanFactory, given a resource name
 which supports standard Spring resource prefixes ('classpath:', 'classpath*:', etc.)
 This is split out as a separate method so that subclasses can override the actual
 type used (to be an ApplicationContext, for example).
<DT><A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html#createDefinition(java.lang.String, java.lang.String)"><B>createDefinition(String, String)</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextSingletonBeanFactoryLocator.html" title="class in org.springframework.context.access">ContextSingletonBeanFactoryLocator</A>
<DD>Overrides the default method to create definition object as an ApplicationContext
 instead of the default BeanFactory.
<DT><A HREF="../org/springframework/web/servlet/view/tiles/TilesConfigurer.html#createDefinitionsFactory(org.apache.struts.tiles.DefinitionsFactoryConfig)"><B>createDefinitionsFactory(DefinitionsFactoryConfig)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles.<A HREF="../org/springframework/web/servlet/view/tiles/TilesConfigurer.html" title="class in org.springframework.web.servlet.view.tiles">TilesConfigurer</A>
<DD><B>Deprecated.</B>&nbsp;Create the Tiles DefinitionsFactory and expose it to the ServletContext.
<DT><A HREF="../org/springframework/validation/DirectFieldBindingResult.html#createDirectFieldAccessor()"><B>createDirectFieldAccessor()</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DirectFieldBindingResult.html" title="class in org.springframework.validation">DirectFieldBindingResult</A>
<DD>Create a new DirectFieldAccessor for the underlying target object.
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultDocumentLoader.html#createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory, org.xml.sax.EntityResolver, org.xml.sax.ErrorHandler)"><B>createDocumentBuilder(DocumentBuilderFactory, EntityResolver, ErrorHandler)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultDocumentLoader.html" title="class in org.springframework.beans.factory.xml">DefaultDocumentLoader</A>
<DD>Create a JAXP DocumentBuilder that this bean definition reader
 will use for parsing XML documents.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory)"><B>createDocumentBuilder(DocumentBuilderFactory)</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Create a <code>DocumentBuilder</code> that this marshaller will use for creating
 DOM documents when passed an empty <code>DOMSource</code>.
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultDocumentLoader.html#createDocumentBuilderFactory(int, boolean)"><B>createDocumentBuilderFactory(int, boolean)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultDocumentLoader.html" title="class in org.springframework.beans.factory.xml">DefaultDocumentLoader</A>
<DD>Create the <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/parsers/DocumentBuilderFactory.html?is-external=true" title="class or interface in javax.xml.parsers"><CODE>DocumentBuilderFactory</CODE></A> instance.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#createDocumentBuilderFactory()"><B>createDocumentBuilderFactory()</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Create a <code>DocumentBuilder</code> that this marshaller will use for creating
 DOM documents when passed an empty <code>DOMSource</code>.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletResponse.html#createElement(java.lang.String)"><B>createElement(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletResponse.html" title="class in org.springframework.mock.web.portlet">MockPortletResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.ElementFactory.html#createElement(int)"><B>createElement(int)</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.ElementFactory.html" title="interface in org.springframework.util">AutoPopulatingList.ElementFactory</A>
<DD>Create the element for the supplied index.
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html#createEndpoint(javax.transaction.xa.XAResource)"><B>createEndpoint(XAResource)</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory</A>
<DD>The standard JCA 1.5 version of <code>createEndpoint</code>.
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html#createEndpoint(javax.transaction.xa.XAResource, long)"><B>createEndpoint(XAResource, long)</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory</A>
<DD>The alternative JCA 1.6 version of <code>createEndpoint</code>.
<DT><A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointFactory.html#createEndpoint(javax.transaction.xa.XAResource)"><B>createEndpoint(XAResource)</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">GenericMessageEndpointFactory</A>
<DD>Wrap each concrete endpoint instance with an AOP proxy,
 exposing the message listener's interfaces as well as the
 endpoint SPI through an AOP introduction.
<DT><A HREF="../org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html#createEndpoint(java.lang.Object)"><B>createEndpoint(Object)</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/AbstractJaxWsServiceExporter.html" title="class in org.springframework.remoting.jaxws">AbstractJaxWsServiceExporter</A>
<DD>Create the actual Endpoint instance.
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html#createEndpointInternal()"><B>createEndpointInternal()</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory</A>
<DD>Create the actual endpoint instance, as a subclass of the
 <A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html" title="class in org.springframework.jca.endpoint"><CODE>AbstractMessageEndpointFactory.AbstractMessageEndpoint</CODE></A> inner class of this factory.
<DT><A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointFactory.html#createEndpointInternal()"><B>createEndpointInternal()</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/GenericMessageEndpointFactory.html" title="class in org.springframework.jca.endpoint">GenericMessageEndpointFactory</A>
<DD>Creates a concrete generic message endpoint, internal to this factory.
<DT><A HREF="../org/springframework/jms/listener/endpoint/JmsMessageEndpointFactory.html#createEndpointInternal()"><B>createEndpointInternal()</B></A> - 
Method in class org.springframework.jms.listener.endpoint.<A HREF="../org/springframework/jms/listener/endpoint/JmsMessageEndpointFactory.html" title="class in org.springframework.jms.listener.endpoint">JmsMessageEndpointFactory</A>
<DD>Creates a concrete JMS message endpoint, internal to this factory.
<DT><A HREF="../org/springframework/orm/jpa/EntityManagerFactoryAccessor.html#createEntityManager()"><B>createEntityManager()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/EntityManagerFactoryAccessor.html" title="class in org.springframework.orm.jpa">EntityManagerFactoryAccessor</A>
<DD>Obtain a new EntityManager from this accessor's EntityManagerFactory.
<DT><A HREF="../org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html#createEntityManager(javax.persistence.EntityManagerFactory)"><B>createEntityManager(EntityManagerFactory)</B></A> - 
Method in class org.springframework.orm.jpa.support.<A HREF="../org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.html" title="class in org.springframework.orm.jpa.support">OpenEntityManagerInViewFilter</A>
<DD>Create a JPA EntityManager to be bound to a request.
<DT><A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html#createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)"><B>createEntityManagerFactoryProxy(EntityManagerFactory)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html" title="class in org.springframework.orm.jpa">AbstractEntityManagerFactoryBean</A>
<DD>Create a proxy of the given EntityManagerFactory.
<DT><A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html#createEntityManagerForTransaction()"><B>createEntityManagerForTransaction()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTransactionManager.html" title="class in org.springframework.orm.jpa">JpaTransactionManager</A>
<DD>Create a JPA EntityManager to be used for a transaction.
<DT><A HREF="../org/springframework/orm/jpa/JpaTemplate.html#createEntityManagerProxy(javax.persistence.EntityManager)"><B>createEntityManagerProxy(EntityManager)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTemplate.html" title="class in org.springframework.orm.jpa">JpaTemplate</A>
<DD>Create a close-suppressing proxy for the given JPA EntityManager.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createEventStreamReader(javax.xml.stream.XMLEventReader)"><B>createEventStreamReader(XMLEventReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Return a <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamReader</CODE></A> that reads from a <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventReader</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createEventStreamWriter(javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLEventFactory)"><B>createEventStreamWriter(XMLEventWriter, XMLEventFactory)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Return a <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamWriter</CODE></A> that writes to a <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventWriter</CODE></A>.
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html#createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>createExecutor(int, ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorFactoryBean</A>
<DD>Create a new <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledExecutorService.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ScheduledExecutorService</CODE></A> instance.
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html#createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler)"><B>createExecutor(int, ThreadFactory, RejectedExecutionHandler)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolTaskScheduler</A>
<DD>Create a new <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledExecutorService.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ScheduledExecutorService</CODE></A> instance.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsSingleFormatView</A>
<DD>Create a JasperReports exporter for a specific output format,
 which will be used to render the report to the HTTP response.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/ConfigurableJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">ConfigurableJasperReportsView</A>
<DD>Returns a new instance of the specified <CODE>JRExporter</CODE> class.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsCsvView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsCsvView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsHtmlView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsHtmlView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsPdfView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsPdfView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html#createExporter()"><B>createExporter()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsXlsView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsXlsView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html#createFileTypeMap(org.springframework.core.io.Resource, java.lang.String[])"><B>createFileTypeMap(Resource, String[])</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.html" title="class in org.springframework.mail.javamail">ConfigurableMimeFileTypeMap</A>
<DD>Compile a <A HREF="http://java.sun.com/javase/6/docs/api/javax/activation/FileTypeMap.html?is-external=true" title="class or interface in javax.activation"><CODE>FileTypeMap</CODE></A> from the mappings in the given mapping file
 and the given mapping entries.
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#createHelper(org.springframework.beans.factory.xml.XmlReaderContext, org.w3c.dom.Element)"><B>createHelper(XmlReaderContext, Element)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html#createHessianProxy(com.caucho.hessian.client.HessianProxyFactory)"><B>createHessianProxy(HessianProxyFactory)</B></A> - 
Method in class org.springframework.remoting.caucho.<A HREF="../org/springframework/remoting/caucho/HessianClientInterceptor.html" title="class in org.springframework.remoting.caucho">HessianClientInterceptor</A>
<DD>Create the Hessian proxy that is wrapped by this interceptor.
<DT><A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html#createHibernateTemplate(org.hibernate.SessionFactory)"><B>createHibernateTemplate(SessionFactory)</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html" title="class in org.springframework.orm.hibernate3.support">HibernateDaoSupport</A>
<DD>Create a HibernateTemplate for the given SessionFactory.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#createHttpInputMessage(org.springframework.web.context.request.NativeWebRequest)"><B>createHttpInputMessage(NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Return a <A HREF="../org/springframework/http/HttpInputMessage.html" title="interface in org.springframework.http"><CODE>HttpInputMessage</CODE></A> for the given <A HREF="../org/springframework/web/context/request/NativeWebRequest.html" title="interface in org.springframework.web.context.request"><CODE>NativeWebRequest</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createHttpInputMessage(javax.servlet.http.HttpServletRequest)"><B>createHttpInputMessage(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>Template method for creating a new HttpInputMessage instance.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#createHttpOutputMessage(org.springframework.web.context.request.NativeWebRequest)"><B>createHttpOutputMessage(NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Return a <A HREF="../org/springframework/http/HttpOutputMessage.html" title="interface in org.springframework.http"><CODE>HttpOutputMessage</CODE></A> for the given <A HREF="../org/springframework/web/context/request/NativeWebRequest.html" title="interface in org.springframework.web.context.request"><CODE>NativeWebRequest</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html#createHttpOutputMessage(javax.servlet.http.HttpServletResponse)"><B>createHttpOutputMessage(HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerAdapter.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerAdapter</A>
<DD>Template method for creating a new HttpOuputMessage instance.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createIdentityMapIfPossible(int)"><B>createIdentityMapIfPossible(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, for usage on JDK 1.4 or higher</I>
<DT><A HREF="../org/springframework/jca/cci/connection/NotSupportedRecordFactory.html#createIndexedRecord(java.lang.String)"><B>createIndexedRecord(String)</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/NotSupportedRecordFactory.html" title="class in org.springframework.jca.cci.connection">NotSupportedRecordFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#createIndexedRecord(java.lang.String)"><B>createIndexedRecord(String)</B></A> - 
Method in class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Create an indexed Record through the ConnectionFactory's RecordFactory.
<DT><A HREF="../org/springframework/jndi/JndiTemplate.html#createInitialContext()"><B>createInitialContext()</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiTemplate.html" title="class in org.springframework.jndi">JndiTemplate</A>
<DD>Create a new JNDI initial context.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html#createInitialContextFactory(java.util.Hashtable)"><B>createInitialContextFactory(Hashtable&lt;?, ?&gt;)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContextBuilder.html" title="class in org.springframework.mock.jndi">SimpleNamingContextBuilder</A>
<DD>Simple InitialContextFactoryBuilder implementation,
 creating a new SimpleNamingContext instance.
<DT><A HREF="../org/springframework/jca/cci/object/MappingCommAreaOperation.html#createInputRecord(javax.resource.cci.RecordFactory, java.lang.Object)"><B>createInputRecord(RecordFactory, Object)</B></A> - 
Method in class org.springframework.jca.cci.object.<A HREF="../org/springframework/jca/cci/object/MappingCommAreaOperation.html" title="class in org.springframework.jca.cci.object">MappingCommAreaOperation</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/object/MappingRecordOperation.html#createInputRecord(javax.resource.cci.RecordFactory, java.lang.Object)"><B>createInputRecord(RecordFactory, Object)</B></A> - 
Method in class org.springframework.jca.cci.object.<A HREF="../org/springframework/jca/cci/object/MappingRecordOperation.html" title="class in org.springframework.jca.cci.object">MappingRecordOperation</A>
<DD>Subclasses must implement this method to generate an input Record
 from an input object passed into the <code>execute</code> method.
<DT><A HREF="../org/springframework/oxm/support/SaxResourceUtils.html#createInputSource(org.springframework.core.io.Resource)"><B>createInputSource(Resource)</B></A> - 
Static method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/SaxResourceUtils.html" title="class in org.springframework.oxm.support">SaxResourceUtils</A>
<DD>Create a SAX <code>InputSource</code> from the given resource.
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#createInsertString(java.lang.String[])"><B>createInsertString(String[])</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Build the insert string based on configuration and metadata information
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#createInsertTypes()"><B>createInsertTypes()</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Build the array of <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/Types.html?is-external=true" title="class or interface in java.sql"><CODE>Types</CODE></A> based on configuration and metadata information
<DT><A HREF="../org/springframework/beans/factory/config/AbstractFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AbstractFactoryBean.html" title="class in org.springframework.beans.factory.config">AbstractFactoryBean</A>
<DD>Template method that subclasses must override to construct
 the object returned by this factory.
<DT><A HREF="../org/springframework/beans/factory/config/ListFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ListFactoryBean.html" title="class in org.springframework.beans.factory.config">ListFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/MapFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/MapFactoryBean.html" title="class in org.springframework.beans.factory.config">MapFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ObjectFactoryCreatingFactoryBean.html" title="class in org.springframework.beans.factory.config">ObjectFactoryCreatingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html" title="class in org.springframework.beans.factory.config">PropertiesFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of <A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html#createProperties()"><CODE>PropertiesFactoryBean.createProperties()</CODE></A></I>
<DT><A HREF="../org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ProviderCreatingFactoryBean.html" title="class in org.springframework.beans.factory.config">ProviderCreatingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/SetFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/SetFactoryBean.html" title="class in org.springframework.beans.factory.config">SetFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.beans.factory.serviceloader.<A HREF="../org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html" title="class in org.springframework.beans.factory.serviceloader">AbstractServiceLoaderBasedFactoryBean</A>
<DD>Delegates to <A HREF="../org/springframework/beans/factory/serviceloader/AbstractServiceLoaderBasedFactoryBean.html#getObjectToExpose(java.util.ServiceLoader)"><CODE>AbstractServiceLoaderBasedFactoryBean.getObjectToExpose(java.util.ServiceLoader)</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/config/SortedResourcesFactoryBean.html#createInstance()"><B>createInstance()</B></A> - 
Method in class org.springframework.jdbc.config.<A HREF="../org/springframework/jdbc/config/SortedResourcesFactoryBean.html" title="class in org.springframework.jdbc.config">SortedResourcesFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html#createInterceptorDefinition(org.w3c.dom.Node)"><B>createInterceptorDefinition(Node)</B></A> - 
Method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AbstractInterceptorDrivenBeanDefinitionDecorator.html" title="class in org.springframework.aop.config">AbstractInterceptorDrivenBeanDefinitionDecorator</A>
<DD>Subclasses should implement this method to return the <code>BeanDefinition</code>
 for the interceptor they wish to apply to the bean being decorated.
<DT><A HREF="../org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html#createInvocationTraceName(org.aopalliance.intercept.MethodInvocation)"><B>createInvocationTraceName(MethodInvocation)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/AbstractMonitoringInterceptor.html" title="class in org.springframework.aop.interceptor">AbstractMonitoringInterceptor</A>
<DD>Create a <code>String</code> name for the given <code>MethodInvocation</code>
 that can be used for trace/logging purposes.
<DT><A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html#createJaxRpcService()"><B>createJaxRpcService()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html" title="class in org.springframework.remoting.jaxrpc">LocalJaxRpcServiceFactory</A>
<DD><B>Deprecated.</B>&nbsp;Create a JAX-RPC Service according to the parameters of this factory.
<DT><A HREF="../org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html#createJaxWsService()"><B>createJaxWsService()</B></A> - 
Method in class org.springframework.remoting.jaxws.<A HREF="../org/springframework/remoting/jaxws/LocalJaxWsServiceFactory.html" title="class in org.springframework.remoting.jaxws">LocalJaxWsServiceFactory</A>
<DD>Create a JAX-WS Service according to the parameters of this factory.
<DT><A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html#createJdbcTemplate(javax.sql.DataSource)"><B>createJdbcTemplate(DataSource)</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html" title="class in org.springframework.jdbc.core.support">JdbcDaoSupport</A>
<DD>Create a JdbcTemplate for the given DataSource.
<DT><A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html#createJdoTemplate(javax.jdo.PersistenceManagerFactory)"><B>createJdoTemplate(PersistenceManagerFactory)</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html" title="class in org.springframework.orm.jdo.support">JdoDaoSupport</A>
<DD>Create a JdoTemplate for the given PersistenceManagerFactory.
<DT><A HREF="../org/springframework/jms/core/support/JmsGatewaySupport.html#createJmsTemplate(javax.jms.ConnectionFactory)"><B>createJmsTemplate(ConnectionFactory)</B></A> - 
Method in class org.springframework.jms.core.support.<A HREF="../org/springframework/jms/core/support/JmsGatewaySupport.html" title="class in org.springframework.jms.core.support">JmsGatewaySupport</A>
<DD>Create a JmsTemplate for the given ConnectionFactory.
<DT><A HREF="../org/springframework/scheduling/quartz/AdaptableJobFactory.html#createJobInstance(org.quartz.spi.TriggerFiredBundle)"><B>createJobInstance(TriggerFiredBundle)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/AdaptableJobFactory.html" title="class in org.springframework.scheduling.quartz">AdaptableJobFactory</A>
<DD>Create an instance of the specified job class.
<DT><A HREF="../org/springframework/scheduling/quartz/SpringBeanJobFactory.html#createJobInstance(org.quartz.spi.TriggerFiredBundle)"><B>createJobInstance(TriggerFiredBundle)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SpringBeanJobFactory.html" title="class in org.springframework.scheduling.quartz">SpringBeanJobFactory</A>
<DD>Create the job instance, populating it with property values taken
 from the scheduler context, job data map and trigger data map.
<DT><A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html#createJpaTemplate(javax.persistence.EntityManagerFactory)"><B>createJpaTemplate(EntityManagerFactory)</B></A> - 
Method in class org.springframework.orm.jpa.support.<A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html" title="class in org.springframework.orm.jpa.support">JpaDaoSupport</A>
<DD>Create a JpaTemplate for the given EntityManagerFactory.
<DT><A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html#createJpaTemplate(javax.persistence.EntityManager)"><B>createJpaTemplate(EntityManager)</B></A> - 
Method in class org.springframework.orm.jpa.support.<A HREF="../org/springframework/orm/jpa/support/JpaDaoSupport.html" title="class in org.springframework.orm.jpa.support">JpaDaoSupport</A>
<DD>Create a JpaTemplate for the given EntityManager.
<DT><A HREF="../org/springframework/scripting/jruby/JRubyScriptUtils.html#createJRubyObject(java.lang.String, java.lang.Class[])"><B>createJRubyObject(String, Class[])</B></A> - 
Static method in class org.springframework.scripting.jruby.<A HREF="../org/springframework/scripting/jruby/JRubyScriptUtils.html" title="class in org.springframework.scripting.jruby">JRubyScriptUtils</A>
<DD>Create a new JRuby-scripted object from the given script source,
 using the default <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/ClassLoader.html?is-external=true" title="class or interface in java.lang"><CODE>ClassLoader</CODE></A>.
<DT><A HREF="../org/springframework/scripting/jruby/JRubyScriptUtils.html#createJRubyObject(java.lang.String, java.lang.Class[], java.lang.ClassLoader)"><B>createJRubyObject(String, Class[], ClassLoader)</B></A> - 
Static method in class org.springframework.scripting.jruby.<A HREF="../org/springframework/scripting/jruby/JRubyScriptUtils.html" title="class in org.springframework.scripting.jruby">JRubyScriptUtils</A>
<DD>Create a new JRuby-scripted object from the given script source.
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createLinkedCaseInsensitiveMapIfPossible(int)"><B>createLinkedCaseInsensitiveMapIfPossible(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, for usage on JDK 1.5 or higher</I>
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createLinkedMapIfPossible(int)"><B>createLinkedMapIfPossible(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, for usage on JDK 1.4 or higher</I>
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createLinkedSetIfPossible(int)"><B>createLinkedSetIfPossible(int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 2.5, for usage on JDK 1.4 or higher</I>
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#createListenerConsumer(javax.jms.Session)"><B>createListenerConsumer(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>Create a MessageConsumer for the given JMS Session,
 registering a MessageListener for the specified listener.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html#createListenerConsumer(javax.jms.Session)"><B>createListenerConsumer(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer</A>
<DD>Create a MessageConsumer for the given JMS Session,
 registering a MessageListener for the specified listener.
<DT><A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html#createLob(java.sql.PreparedStatement, boolean, org.springframework.jdbc.support.lob.OracleLobHandler.LobCallback)"><B>createLob(PreparedStatement, boolean, OracleLobHandler.LobCallback)</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.OracleLobCreator.html" title="class in org.springframework.jdbc.support.lob">OracleLobHandler.OracleLobCreator</A>
<DD>Create a LOB instance for the given PreparedStatement,
 populating it via the given callback.
<DT><A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html#createMainInterceptor()"><B>createMainInterceptor()</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html" title="class in org.springframework.aop.framework">AbstractSingletonProxyFactoryBean</A>
<DD>Create the "main" interceptor for this proxy factory bean.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html#createMainInterceptor()"><B>createMainInterceptor()</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionProxyFactoryBean.html" title="class in org.springframework.transaction.interceptor">TransactionProxyFactoryBean</A>
<DD>Creates an advisor for this FactoryBean's TransactionInterceptor.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html#createMap(java.lang.Class, int)"><B>createMap(Class, int)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors">CustomMapEditor</A>
<DD>Create a Map of the given type, with the given
 initial capacity (if supported by the Map type).
<DT><A HREF="../org/springframework/core/CollectionFactory.html#createMap(java.lang.Class, int)"><B>createMap(Class&lt;?&gt;, int)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/CollectionFactory.html" title="class in org.springframework.core">CollectionFactory</A>
<DD>Create the most approximate map for the given map.
<DT><A HREF="../org/springframework/jdbc/core/ParameterMapper.html#createMap(java.sql.Connection)"><B>createMap(Connection)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ParameterMapper.html" title="interface in org.springframework.jdbc.core">ParameterMapper</A>
<DD>Create a Map of input parameters, keyed by name.
<DT><A HREF="../org/springframework/jca/cci/connection/NotSupportedRecordFactory.html#createMappedRecord(java.lang.String)"><B>createMappedRecord(String)</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/NotSupportedRecordFactory.html" title="class in org.springframework.jca.cci.connection">NotSupportedRecordFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#createMappedRecord(java.lang.String)"><B>createMappedRecord(String)</B></A> - 
Method in class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Create a mapped Record from the ConnectionFactory's RecordFactory.
<DT><A HREF="../org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html#createMarshaller(java.lang.Class)"><B>createMarshaller(Class)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractJaxb2HttpMessageConverter</A>
<DD>Creates a new <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/bind/Marshaller.html?is-external=true" title="class or interface in javax.xml.bind"><CODE>Marshaller</CODE></A> for the given class.
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#createMarshaller()"><B>createMarshaller()</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>Return a newly created JAXB marshaller.
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#createMarshallingContext()"><B>createMarshallingContext()</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>Create a new <code>IMarshallingContext</code>, configured with the correct indentation.
<DT><A HREF="../org/springframework/jmx/support/MBeanServerFactoryBean.html#createMBeanServer(java.lang.String, boolean)"><B>createMBeanServer(String, boolean)</B></A> - 
Method in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanServerFactoryBean.html" title="class in org.springframework.jmx.support">MBeanServerFactoryBean</A>
<DD>Create a new <code>MBeanServer</code> instance and register it with the
 <code>MBeanServerFactory</code>, if desired.
<DT><A HREF="../org/springframework/jms/core/MessageCreator.html#createMessage(javax.jms.Session)"><B>createMessage(Session)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/MessageCreator.html" title="interface in org.springframework.jms.core">MessageCreator</A>
<DD>Create a <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Message.html?is-external=true" title="class or interface in javax.jms"><CODE>Message</CODE></A> to be sent.
<DT><A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html#createMessage(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"><B>createMessage(HttpServletRequest, String, String)</B></A> - 
Method in class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/AbstractRequestLoggingFilter.html" title="class in org.springframework.web.filter">AbstractRequestLoggingFilter</A>
<DD>Create a log message for the given request, prefix and suffix.
<DT><A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html#createMessageForByteArray(byte[], javax.jms.Session)"><B>createMessageForByteArray(byte[], Session)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html" title="class in org.springframework.jms.support.converter">SimpleMessageConverter</A>
<DD>Create a JMS BytesMessage for the given byte array.
<DT><A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html#createMessageForMap(java.util.Map, javax.jms.Session)"><B>createMessageForMap(Map&lt;?, ?&gt;, Session)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html" title="class in org.springframework.jms.support.converter">SimpleMessageConverter</A>
<DD>Create a JMS MapMessage for the given Map.
<DT><A HREF="../org/springframework/context/support/MessageSourceSupport.html#createMessageFormat(java.lang.String, java.util.Locale)"><B>createMessageFormat(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/MessageSourceSupport.html" title="class in org.springframework.context.support">MessageSourceSupport</A>
<DD>Create a MessageFormat for the given message and Locale.
<DT><A HREF="../org/springframework/test/AssertThrows.html#createMessageForNoExceptionThrown()"><B>createMessageForNoExceptionThrown()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AssertThrows.html" title="class in org.springframework.test">AssertThrows</A>
<DD><B>Deprecated.</B>&nbsp;Creates the failure message used if the test fails
 (i.e.
<DT><A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html#createMessageForSerializable(java.io.Serializable, javax.jms.Session)"><B>createMessageForSerializable(Serializable, Session)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html" title="class in org.springframework.jms.support.converter">SimpleMessageConverter</A>
<DD>Create a JMS ObjectMessage for the given Serializable object.
<DT><A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html#createMessageForString(java.lang.String, javax.jms.Session)"><B>createMessageForString(String, Session)</B></A> - 
Method in class org.springframework.jms.support.converter.<A HREF="../org/springframework/jms/support/converter/SimpleMessageConverter.html" title="class in org.springframework.jms.support.converter">SimpleMessageConverter</A>
<DD>Create a JMS TextMessage for the given String.
<DT><A HREF="../org/springframework/test/AssertThrows.html#createMessageForWrongThrownExceptionType(java.lang.Exception)"><B>createMessageForWrongThrownExceptionType(Exception)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AssertThrows.html" title="class in org.springframework.test">AssertThrows</A>
<DD><B>Deprecated.</B>&nbsp;Creates the failure message used if the wrong type
 of <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><CODE>Exception</CODE></A> is thrown in the body of the test.
<DT><A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html#createMessageSource(java.lang.String)"><B>createMessageSource(String)</B></A> - 
Method in class org.springframework.ui.context.support.<A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html" title="class in org.springframework.ui.context.support">ResourceBundleThemeSource</A>
<DD>Create a MessageSource for the given basename,
 to be used as MessageSource for the corresponding theme.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html#createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.CallMetaDataContext)"><B>createMetaDataProvider(DataSource, CallMetaDataContext)</B></A> - 
Static method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataProviderFactory</A>
<DD>Create a CallMetaDataProvider based on the database metedata
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html#createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.TableMetaDataContext)"><B>createMetaDataProvider(DataSource, TableMetaDataContext)</B></A> - 
Static method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataProviderFactory</A>
<DD>Create a TableMetaDataProvider based on the database metedata
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html#createMetaDataProvider(javax.sql.DataSource, org.springframework.jdbc.core.metadata.TableMetaDataContext, org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)"><B>createMetaDataProvider(DataSource, TableMetaDataContext, NativeJdbcExtractor)</B></A> - 
Static method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataProviderFactory</A>
<DD>Create a TableMetaDataProvider based on the database metedata
<DT><A HREF="../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage()"><B>createMimeMessage()</B></A> - 
Method in interface org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/JavaMailSender.html" title="interface in org.springframework.mail.javamail">JavaMailSender</A>
<DD>Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender.
<DT><A HREF="../org/springframework/mail/javamail/JavaMailSender.html#createMimeMessage(java.io.InputStream)"><B>createMimeMessage(InputStream)</B></A> - 
Method in interface org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/JavaMailSender.html" title="interface in org.springframework.mail.javamail">JavaMailSender</A>
<DD>Create a new JavaMail MimeMessage for the underlying JavaMail Session
 of this sender, using the given input stream as the message source.
<DT><A HREF="../org/springframework/mail/javamail/JavaMailSenderImpl.html#createMimeMessage()"><B>createMimeMessage()</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail">JavaMailSenderImpl</A>
<DD>This implementation creates a SmartMimeMessage, holding the specified
 default encoding and default FileTypeMap.
<DT><A HREF="../org/springframework/mail/javamail/JavaMailSenderImpl.html#createMimeMessage(java.io.InputStream)"><B>createMimeMessage(InputStream)</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/JavaMailSenderImpl.html" title="class in org.springframework.mail.javamail">JavaMailSenderImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html#createMimeMultiparts(javax.mail.internet.MimeMessage, int)"><B>createMimeMultiparts(MimeMessage, int)</B></A> - 
Method in class org.springframework.mail.javamail.<A HREF="../org/springframework/mail/javamail/MimeMessageHelper.html" title="class in org.springframework.mail.javamail">MimeMessageHelper</A>
<DD>Determine the MimeMultipart objects to use, which will be used
 to store attachments on the one hand and text(s) and inline elements
 on the other hand.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#createModelMBean()"><B>createModelMBean()</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Create an instance of a class that implements <code>ModelMBean</code>.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#createModelMBeanOperationInfo(java.lang.reflect.Method, java.lang.String, java.lang.String)"><B>createModelMBeanOperationInfo(Method, String, String)</B></A> - 
Method in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Creates an instance of <code>ModelMBeanOperationInfo</code> for the
 given method.
<DT><A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html#createNativeEntityManagerFactory()"><B>createNativeEntityManagerFactory()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.html" title="class in org.springframework.orm.jpa">AbstractEntityManagerFactoryBean</A>
<DD>Subclasses must implement this method to create the EntityManagerFactory
 that will be returned by the <code>getObject()</code> method.
<DT><A HREF="../org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html#createNativeEntityManagerFactory()"><B>createNativeEntityManagerFactory()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.html" title="class in org.springframework.orm.jpa">LocalContainerEntityManagerFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/LocalEntityManagerFactoryBean.html#createNativeEntityManagerFactory()"><B>createNativeEntityManagerFactory()</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/LocalEntityManagerFactoryBean.html" title="class in org.springframework.orm.jpa">LocalEntityManagerFactoryBean</A>
<DD>Initialize the EntityManagerFactory for the given configuration.
<DT><A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html#createObject()"><B>createObject()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html" title="class in org.springframework.aop.target">AbstractLazyCreationTargetSource</A>
<DD>Subclasses should implement this method to return the lazy initialized object.
<DT><A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html#createObjectInputStream(java.io.InputStream, java.lang.String)"><B>createObjectInputStream(InputStream, String)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">AbstractHttpInvokerRequestExecutor</A>
<DD>Create an ObjectInputStream for the given InputStream and codebase.
<DT><A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html#createObjectInputStream(java.io.InputStream)"><B>createObjectInputStream(InputStream)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html" title="class in org.springframework.remoting.rmi">RemoteInvocationSerializingExporter</A>
<DD>Create an ObjectInputStream for the given InputStream.
<DT><A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html#createObjectOutputStream(java.io.OutputStream)"><B>createObjectOutputStream(OutputStream)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html" title="class in org.springframework.remoting.rmi">RemoteInvocationSerializingExporter</A>
<DD>Create an ObjectOutputStream for the given OutputStream.
<DT><A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html#createObjectPool()"><B>createObjectPool()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html" title="class in org.springframework.aop.target">CommonsPoolTargetSource</A>
<DD>Subclasses can override this if they want to return a specific Commons pool.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#createOptimalAccessor(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>createOptimalAccessor(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>Attempt to create an optimized property accessor tailored for a property of a particular name on
 a particular class.
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#createParameterNameDiscoverer()"><B>createParameterNameDiscoverer()</B></A> - 
Method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>Create a ParameterNameDiscoverer to be used for argument binding.
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#createPersistenceManagerProxy(javax.jdo.PersistenceManager)"><B>createPersistenceManagerProxy(PersistenceManager)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>Create a close-suppressing proxy for the given JDO PersistenceManager.
<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html#createPointcut()"><B>createPointcut()</B></A> - 
Method in class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support">RegexpMethodPointcutAdvisor</A>
<DD>Create the actual pointcut: By default, a <A HREF="../org/springframework/aop/support/JdkRegexpMethodPointcut.html" title="class in org.springframework.aop.support"><CODE>JdkRegexpMethodPointcut</CODE></A>
 will be used.
<DT><A HREF="../org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html#createPointcutExpression(java.lang.reflect.Method, java.lang.Class, java.lang.String[])"><B>createPointcutExpression(Method, Class, String[])</B></A> - 
Method in class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/AbstractAspectJAdvisorFactory.html" title="class in org.springframework.aop.aspectj.annotation">AbstractAspectJAdvisorFactory</A>
<DD>The pointcut and advice annotations both have an "argNames" member which contains a 
 comma-separated list of the argument names.
<DT><A HREF="../org/springframework/aop/target/AbstractPoolingTargetSource.html#createPool()"><B>createPool()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractPoolingTargetSource.html" title="class in org.springframework.aop.target">AbstractPoolingTargetSource</A>
<DD>Create the pool.
<DT><A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html#createPool()"><B>createPool()</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html" title="class in org.springframework.aop.target">CommonsPoolTargetSource</A>
<DD>Creates and holds an ObjectPool instance.
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#createPortletApplicationContext(org.springframework.context.ApplicationContext)"><B>createPortletApplicationContext(ApplicationContext)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>Instantiate the Portlet ApplicationContext for this portlet, either a default
 XmlPortletApplicationContext or a custom context class if set.
<DT><A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html#createPostMethod(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)"><B>createPostMethod(HttpInvokerClientConfiguration)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/CommonsHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">CommonsHttpInvokerRequestExecutor</A>
<DD>Create a PostMethod for the given configuration.
<DT><A HREF="../org/springframework/jdbc/core/PreparedStatementCreator.html#createPreparedStatement(java.sql.Connection)"><B>createPreparedStatement(Connection)</B></A> - 
Method in interface org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/PreparedStatementCreator.html" title="interface in org.springframework.jdbc.core">PreparedStatementCreator</A>
<DD>Create a statement in this connection.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#createProducer(javax.jms.Session, javax.jms.Destination)"><B>createProducer(Session, Destination)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Create a JMS MessageProducer for the given Session and Destination,
 configuring it to disable message ids and/or timestamps (if necessary).
<DT><A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html#createProperties()"><B>createProperties()</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertiesFactoryBean.html" title="class in org.springframework.beans.factory.config">PropertiesFactoryBean</A>
<DD>Template method that subclasses may override to construct the object
 returned by this factory.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html#createProxy(java.lang.Class, java.lang.String, java.lang.Object[], org.springframework.aop.TargetSource)"><B>createProxy(Class&lt;?&gt;, String, Object[], TargetSource)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAutoProxyCreator</A>
<DD>Create an AOP proxy for the given bean.
<DT><A HREF="../org/springframework/web/servlet/tags/UrlTag.html#createQueryString(java.util.List, java.util.Set, boolean)"><B>createQueryString(List&lt;Param&gt;, Set&lt;String&gt;, boolean)</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/UrlTag.html" title="class in org.springframework.web.servlet.tags">UrlTag</A>
<DD>Build the query string from available parameters that have not already
 been applied as template params.
<DT><A HREF="../org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html#createQueue(int)"><B>createQueue(int)</B></A> - 
Method in class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/ThreadPoolTaskExecutor.html" title="class in org.springframework.scheduling.backportconcurrent">ThreadPoolTaskExecutor</A>
<DD>Create the BlockingQueue to use for the ThreadPoolExecutor.
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html#createQueue(int)"><B>createQueue(int)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolExecutorFactoryBean</A>
<DD>Create the BlockingQueue to use for the ThreadPoolExecutor.
<DT><A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html#createQueue(int)"><B>createQueue(int)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.html" title="class in org.springframework.scheduling.concurrent">ThreadPoolTaskExecutor</A>
<DD>Create the BlockingQueue to use for the ThreadPoolExecutor.
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createQueueConnection()"><B>createQueueConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createQueueConnection(java.lang.String, java.lang.String)"><B>createQueueConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createQueueConnection()"><B>createQueueConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createQueueConnection(java.lang.String, java.lang.String)"><B>createQueueConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createQueueConnection()"><B>createQueueConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createQueueConnection(java.lang.String, java.lang.String)"><B>createQueueConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createQueueConnection()"><B>createQueueConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Determine whether there are currently thread-bound credentials,
 using them if available, falling back to the statically specified
 username and password (i.e.
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createQueueConnection(java.lang.String, java.lang.String)"><B>createQueueConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Delegate the call straight to the target QueueConnectionFactory.
<DT><A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html#createReaderContext(org.springframework.core.io.Resource)"><B>createReaderContext(Resource)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml">XmlBeanDefinitionReader</A>
<DD>Create the <A HREF="../org/springframework/beans/factory/xml/XmlReaderContext.html" title="class in org.springframework.beans.factory.xml"><CODE>XmlReaderContext</CODE></A> to pass over to the document reader.
<DT><A HREF="../org/springframework/jca/cci/core/CciTemplate.html#createRecord(org.springframework.jca.cci.core.RecordCreator)"><B>createRecord(RecordCreator)</B></A> - 
Method in class org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/CciTemplate.html" title="class in org.springframework.jca.cci.core">CciTemplate</A>
<DD>Invoke the given RecordCreator, converting JCA ResourceExceptions
 to Spring's DataAccessException hierarchy.
<DT><A HREF="../org/springframework/jca/cci/core/RecordCreator.html#createRecord(javax.resource.cci.RecordFactory)"><B>createRecord(RecordFactory)</B></A> - 
Method in interface org.springframework.jca.cci.core.<A HREF="../org/springframework/jca/cci/core/RecordCreator.html" title="interface in org.springframework.jca.cci.core">RecordCreator</A>
<DD>Create a CCI Record instance, usually based on the passed-in CCI RecordFactory.
<DT><A HREF="../org/springframework/jca/cci/object/MappingRecordOperation.RecordCreatorImpl.html#createRecord(javax.resource.cci.RecordFactory)"><B>createRecord(RecordFactory)</B></A> - 
Method in class org.springframework.jca.cci.object.<A HREF="../org/springframework/jca/cci/object/MappingRecordOperation.RecordCreatorImpl.html" title="class in org.springframework.jca.cci.object">MappingRecordOperation.RecordCreatorImpl</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createRefreshableProxy(org.springframework.aop.TargetSource, java.lang.Class[])"><B>createRefreshableProxy(TargetSource, Class[])</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Create a refreshable proxy for the given AOP TargetSource.
<DT><A HREF="../org/springframework/core/io/AbstractResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/AbstractResource.html" title="class in org.springframework.core.io">AbstractResource</A>
<DD>This implementation throws a FileNotFoundException, assuming
 that relative resources cannot be created for this resource.
<DT><A HREF="../org/springframework/core/io/ClassPathResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/ClassPathResource.html" title="class in org.springframework.core.io">ClassPathResource</A>
<DD>This implementation creates a ClassPathResource, applying the given path
 relative to the path of the underlying resource of this descriptor.
<DT><A HREF="../org/springframework/core/io/FileSystemResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/FileSystemResource.html" title="class in org.springframework.core.io">FileSystemResource</A>
<DD>This implementation creates a FileSystemResource, applying the given path
 relative to the path of the underlying file of this resource descriptor.
<DT><A HREF="../org/springframework/core/io/Resource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in interface org.springframework.core.io.<A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io">Resource</A>
<DD>Create a resource relative to this resource.
<DT><A HREF="../org/springframework/core/io/UrlResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/UrlResource.html" title="class in org.springframework.core.io">UrlResource</A>
<DD>This implementation creates a UrlResource, applying the given path
 relative to the path of the underlying URL of this resource descriptor.
<DT><A HREF="../org/springframework/core/io/VfsResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/VfsResource.html" title="class in org.springframework.core.io">VfsResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextResource.html" title="class in org.springframework.web.context.support">ServletContextResource</A>
<DD>This implementation creates a ServletContextResource, applying the given path
 relative to the path of the underlying file of this resource descriptor.
<DT><A HREF="../org/springframework/web/portlet/context/PortletContextResource.html#createRelative(java.lang.String)"><B>createRelative(String)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletContextResource.html" title="class in org.springframework.web.portlet.context">PortletContextResource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>createRemoteInvocation(MethodInvocation)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Create a new RemoteInvocation object for the given AOP method invocation.
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>createRemoteInvocation(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">JndiRmiClientInterceptor</A>
<DD>Create a new RemoteInvocation object for the given AOP method invocation.
<DT><A HREF="../org/springframework/remoting/support/DefaultRemoteInvocationFactory.html#createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>createRemoteInvocation(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/DefaultRemoteInvocationFactory.html" title="class in org.springframework.remoting.support">DefaultRemoteInvocationFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html#createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>createRemoteInvocation(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedAccessor</A>
<DD>Create a new RemoteInvocation object for the given AOP method invocation.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationFactory.html#createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>createRemoteInvocation(MethodInvocation)</B></A> - 
Method in interface org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationFactory.html" title="interface in org.springframework.remoting.support">RemoteInvocationFactory</A>
<DD>Create a serializable RemoteInvocation object from the given AOP
 MethodInvocation.
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#createRenderURL()"><B>createRenderURL()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#createReport(net.sf.jasperreports.engine.JRDataSourceProvider)"><B>createReport(JRDataSourceProvider)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Create a report using the given provider.
<DT><A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html#createRequest(java.net.URI, org.springframework.http.HttpMethod)"><B>createRequest(URI, HttpMethod)</B></A> - 
Method in interface org.springframework.http.client.<A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client">ClientHttpRequestFactory</A>
<DD>Create a new <A HREF="../org/springframework/http/client/ClientHttpRequest.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequest</CODE></A> for the specified URI and HTTP method.
<DT><A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html#createRequest(java.net.URI, org.springframework.http.HttpMethod)"><B>createRequest(URI, HttpMethod)</B></A> - 
Method in class org.springframework.http.client.<A HREF="../org/springframework/http/client/CommonsClientHttpRequestFactory.html" title="class in org.springframework.http.client">CommonsClientHttpRequestFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/client/SimpleClientHttpRequestFactory.html#createRequest(java.net.URI, org.springframework.http.HttpMethod)"><B>createRequest(URI, HttpMethod)</B></A> - 
Method in class org.springframework.http.client.<A HREF="../org/springframework/http/client/SimpleClientHttpRequestFactory.html" title="class in org.springframework.http.client">SimpleClientHttpRequestFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/client/support/HttpAccessor.html#createRequest(java.net.URI, org.springframework.http.HttpMethod)"><B>createRequest(URI, HttpMethod)</B></A> - 
Method in class org.springframework.http.client.support.<A HREF="../org/springframework/http/client/support/HttpAccessor.html" title="class in org.springframework.http.client.support">HttpAccessor</A>
<DD>Create a new <A HREF="../org/springframework/http/client/ClientHttpRequest.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequest</CODE></A> via this template's <A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequestFactory</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractView.html#createRequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Map)"><B>createRequestContext(HttpServletRequest, HttpServletResponse, Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A>
<DD>Create a RequestContext to expose under the specified attribute name.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#createRequestMessage(javax.jms.Session, org.springframework.remoting.support.RemoteInvocation)"><B>createRequestMessage(Session, RemoteInvocation)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Create the invoker request message.
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#createResourceURL()"><B>createResourceURL()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerServiceExporter.html#createResponseMessage(javax.jms.Message, javax.jms.Session, org.springframework.remoting.support.RemoteInvocationResult)"><B>createResponseMessage(Message, Session, RemoteInvocationResult)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerServiceExporter.html" title="class in org.springframework.jms.remoting">JmsInvokerServiceExporter</A>
<DD>Create the invocation result response message.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#createResult(javax.servlet.http.HttpServletResponse)"><B>createResult(HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Create the XSLT <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> used to render the result of the transformation.
<DT><A HREF="../org/springframework/jdbc/core/JdbcTemplate.html#createResultsMap()"><B>createResultsMap()</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core">JdbcTemplate</A>
<DD>Create a Map instance to be used as results map.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#createReturnResultSetParameter(java.lang.String, org.springframework.jdbc.core.RowMapper)"><B>createReturnResultSetParameter(String, RowMapper)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Create a ReturnResultSetParameter/SqlOutParameter depending on the support provided
 by the JDBC driver used for the database in use.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#createSavepoint()"><B>createSavepoint()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Create a new JDBC 3.0 Savepoint for the current Connection,
 using generated savepoint names that are unique for the Connection.
<DT><A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html#createSavepoint()"><B>createSavepoint()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html" title="class in org.springframework.jdbc.datasource">JdbcTransactionObjectSupport</A>
<DD>This implementation creates a JDBC 3.0 Savepoint and returns it.
<DT><A HREF="../org/springframework/transaction/SavepointManager.html#createSavepoint()"><B>createSavepoint()</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/SavepointManager.html" title="interface in org.springframework.transaction">SavepointManager</A>
<DD>Create a new savepoint.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#createSavepoint()"><B>createSavepoint()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>This implementation delegates to a SavepointManager for the
 underlying transaction, if possible.
<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html#createScanner(org.springframework.beans.factory.xml.XmlReaderContext, boolean)"><B>createScanner(XmlReaderContext, boolean)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation">ComponentScanBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html#createScheduler(org.quartz.SchedulerFactory, java.lang.String)"><B>createScheduler(SchedulerFactory, String)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerFactoryBean.html" title="class in org.springframework.scheduling.quartz">SchedulerFactoryBean</A>
<DD>Create the Scheduler instance for the given factory and scheduler name.
<DT><A HREF="../org/springframework/aop/scope/ScopedProxyUtils.html#createScopedProxy(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry, boolean)"><B>createScopedProxy(BeanDefinitionHolder, BeanDefinitionRegistry, boolean)</B></A> - 
Static method in class org.springframework.aop.scope.<A HREF="../org/springframework/aop/scope/ScopedProxyUtils.html" title="class in org.springframework.aop.scope">ScopedProxyUtils</A>
<DD>Generates a scoped proxy for the supplied target bean, registering the target
 bean with an internal name and setting 'targetBeanName' on the scoped proxy.
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createScriptedObjectBeanDefinition(org.springframework.beans.factory.config.BeanDefinition, java.lang.String, org.springframework.scripting.ScriptSource, java.lang.Class[])"><B>createScriptedObjectBeanDefinition(BeanDefinition, String, ScriptSource, Class[])</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Create a bean definition for the scripted object, based on the given script
 definition, extracting the definition data that is relevant for the scripted
 object (that is, everything but bean class and constructor arguments).
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#createScriptFactoryBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)"><B>createScriptFactoryBeanDefinition(BeanDefinition)</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Create a ScriptFactory bean definition based on the given script definition,
 extracting only the definition data that is relevant for the ScriptFactory
 (that is, only bean class and constructor arguments).
<DT><A HREF="../org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html#createServerSpecificLoadTimeWeaver(java.lang.ClassLoader)"><B>createServerSpecificLoadTimeWeaver(ClassLoader)</B></A> - 
Method in class org.springframework.context.weaving.<A HREF="../org/springframework/context/weaving/DefaultContextLoadTimeWeaver.html" title="class in org.springframework.context.weaving">DefaultContextLoadTimeWeaver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html#createService(javax.xml.rpc.ServiceFactory)"><B>createService(ServiceFactory)</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html" title="class in org.springframework.remoting.jaxrpc">LocalJaxRpcServiceFactory</A>
<DD><B>Deprecated.</B>&nbsp;Actually create the JAX-RPC Service instance,
 based on this factory's settings.
<DT><A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html#createServiceFactory()"><B>createServiceFactory()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/LocalJaxRpcServiceFactory.html" title="class in org.springframework.remoting.jaxrpc">LocalJaxRpcServiceFactory</A>
<DD><B>Deprecated.</B>&nbsp;Create a JAX-RPC ServiceFactory, either of the specified class
 or the default.
<DT><A HREF="../org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html#createServiceLocatorException(java.lang.reflect.Constructor, org.springframework.beans.BeansException)"><B>createServiceLocatorException(Constructor, BeansException)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ServiceLocatorFactoryBean.html" title="class in org.springframework.beans.factory.config">ServiceLocatorFactoryBean</A>
<DD>Create a service locator exception for the given cause.
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in interface org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.ResourceFactory.html" title="interface in org.springframework.jms.connection">ConnectionFactoryUtils.ResourceFactory</A>
<DD>Create a new JMS Session for registration with a JmsResourceHolder.
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager.html" title="class in org.springframework.jms.connection">JmsTransactionManager</A>
<DD>Create a JMS Session for the given Connection.
<DT><A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/JmsTransactionManager102.html" title="class in org.springframework.jms.connection">JmsTransactionManager102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createSession(javax.jms.Connection, java.lang.Integer)"><B>createSession(Connection, Integer)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>Create a default Session for this ConnectionFactory,
 adaptign to JMS 1.0.2 style queue/topic mode if necessary.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate102.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate102.html" title="class in org.springframework.jms.core">JmsTemplate102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer102.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/SimpleMessageListenerContainer102.html" title="class in org.springframework.jms.listener">SimpleMessageListenerContainer102</A>
<DD><B>Deprecated.</B>&nbsp;This implementation overrides the superclass method to use JMS 1.0.2 API.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Create a new JMS Session for this JMS invoker,
 ideally a <code>javax.jms.QueueSession</code>.
<DT><A HREF="../org/springframework/jms/support/JmsAccessor.html#createSession(javax.jms.Connection)"><B>createSession(Connection)</B></A> - 
Method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsAccessor.html" title="class in org.springframework.jms.support">JmsAccessor</A>
<DD>Create a JMS Session for the given Connection.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#createSessionProxy(org.hibernate.Session)"><B>createSessionProxy(Session)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>Create a close-suppressing proxy for the given Hibernate Session.
<DT><A HREF="../org/springframework/test/jpa/AbstractJpaTests.html#createShadowingClassLoader(java.lang.ClassLoader)"><B>createShadowingClassLoader(ClassLoader)</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractJpaTests.html" title="class in org.springframework.test.jpa">AbstractJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;NB: This method must <b>not</b> have a return type of ShadowingClassLoader as that would cause that
 class to be loaded eagerly when this test case loads, creating verify errors at runtime.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#createSharedConnection()"><B>createSharedConnection()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Create a shared Connection for this container.
<DT><A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html#createSharedEntityManager(javax.persistence.EntityManagerFactory)"><B>createSharedEntityManager(EntityManagerFactory)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">SharedEntityManagerCreator</A>
<DD>Create a transactional EntityManager proxy for the given EntityManagerFactory.
<DT><A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html#createSharedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map)"><B>createSharedEntityManager(EntityManagerFactory, Map)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">SharedEntityManagerCreator</A>
<DD>Create a transactional EntityManager proxy for the given EntityManagerFactory.
<DT><A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html#createSharedEntityManager(javax.persistence.EntityManagerFactory, java.util.Map, java.lang.Class...)"><B>createSharedEntityManager(EntityManagerFactory, Map, Class...)</B></A> - 
Static method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/SharedEntityManagerCreator.html" title="class in org.springframework.orm.jpa">SharedEntityManagerCreator</A>
<DD>Create a transactional EntityManager proxy for the given EntityManagerFactory.
<DT><A HREF="../org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html#createSqlRowSet(java.sql.ResultSet)"><B>createSqlRowSet(ResultSet)</B></A> - 
Method in class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/SqlRowSetResultSetExtractor.html" title="class in org.springframework.jdbc.core">SqlRowSetResultSetExtractor</A>
<DD>Create a SqlRowSet that wraps the given ResultSet,
 representing its data in a disconnected fashion.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createStaxResult(javax.xml.stream.XMLStreamWriter)"><B>createStaxResult(XMLStreamWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamWriter</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createStaxResult(javax.xml.stream.XMLEventWriter)"><B>createStaxResult(XMLEventWriter)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Result.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Result</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventWriter.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventWriter</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createStaxSource(javax.xml.stream.XMLStreamReader)"><B>createStaxSource(XMLStreamReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamReader</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createStaxSource(javax.xml.stream.XMLEventReader)"><B>createStaxSource(XMLEventReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> for the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventReader</CODE></A>.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#createSubcontext(java.lang.String)"><B>createSubcontext(String)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#createSubcontext(javax.naming.Name)"><B>createSubcontext(Name)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractFormTag.html#createTagWriter()"><B>createTagWriter()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractFormTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractFormTag</A>
<DD>Create the <A HREF="../org/springframework/web/servlet/tags/form/TagWriter.html" title="class in org.springframework.web.servlet.tags.form"><CODE>TagWriter</CODE></A> which all output will be written to.
<DT><A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html#createTargetSource(java.lang.Object)"><B>createTargetSource(Object)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html" title="class in org.springframework.aop.framework">AbstractSingletonProxyFactoryBean</A>
<DD>Determine a TargetSource for the given target (or TargetSource).
<DT><A HREF="../org/springframework/web/servlet/view/AbstractView.html#createTemporaryOutputStream()"><B>createTemporaryOutputStream()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A>
<DD>Create a temporary OutputStream for this view.
<DT><A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#createTest()"><B>createTest()</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html" title="class in org.springframework.test.context.junit4">SpringJUnit4ClassRunner</A>
<DD>Delegates to the parent implementation for creating the test instance and
 then allows the <A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#getTestContextManager()"><CODE>TestContextManager</CODE></A> to
 prepare the test instance before returning it.
<DT><A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#createTestContextManager(java.lang.Class)"><B>createTestContextManager(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html" title="class in org.springframework.test.context.junit4">SpringJUnit4ClassRunner</A>
<DD>Creates a new <A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context"><CODE>TestContextManager</CODE></A> for the supplied test class and
 the configured <em>default <code>ContextLoader</code> class name</em>.
<DT><A HREF="../org/springframework/util/CustomizableThreadCreator.html#createThread(java.lang.Runnable)"><B>createThread(Runnable)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CustomizableThreadCreator.html" title="class in org.springframework.util">CustomizableThreadCreator</A>
<DD>Template method for the creation of a Thread.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/TilesConfigurer.html#createTilesInitializer()"><B>createTilesInitializer()</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/TilesConfigurer.html" title="class in org.springframework.web.servlet.view.tiles2">TilesConfigurer</A>
<DD>Creates a new instance of <A HREF="http://tiles.apache.org/framework/apidocs/org/apache/tiles/startup/BasicTilesInitializer.html?is-external=true" title="class or interface in org.apache.tiles.startup"><CODE>BasicTilesInitializer</CODE></A>.
<DT><A HREF="../org/springframework/jca/support/SimpleBootstrapContext.html#createTimer()"><B>createTimer()</B></A> - 
Method in class org.springframework.jca.support.<A HREF="../org/springframework/jca/support/SimpleBootstrapContext.html" title="class in org.springframework.jca.support">SimpleBootstrapContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html#createTimer(java.lang.String, boolean)"><B>createTimer(String, boolean)</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html" title="class in org.springframework.scheduling.timer">TimerFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;Create a new Timer instance.
<DT><A HREF="../org/springframework/scheduling/timer/TimerTaskExecutor.html#createTimer()"><B>createTimer()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/TimerTaskExecutor.html" title="class in org.springframework.scheduling.timer">TimerTaskExecutor</A>
<DD><B>Deprecated.</B>&nbsp;Create a new <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Timer.html?is-external=true" title="class or interface in java.util"><CODE>Timer</CODE></A> instance.
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createTopicConnection()"><B>createTopicConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html#createTopicConnection(java.lang.String, java.lang.String)"><B>createTopicConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/DelegatingConnectionFactory.html" title="class in org.springframework.jms.connection">DelegatingConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createTopicConnection()"><B>createTopicConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#createTopicConnection(java.lang.String, java.lang.String)"><B>createTopicConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createTopicConnection()"><B>createTopicConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html#createTopicConnection(java.lang.String, java.lang.String)"><B>createTopicConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy.html" title="class in org.springframework.jms.connection">TransactionAwareConnectionFactoryProxy</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createTopicConnection()"><B>createTopicConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Determine whether there are currently thread-bound credentials,
 using them if available, falling back to the statically specified
 username and password (i.e.
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#createTopicConnection(java.lang.String, java.lang.String)"><B>createTopicConnection(String, String)</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Delegate the call straight to the target TopicConnectionFactory.
<DT><A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html#createTransaction(org.hibernate.jdbc.JDBCContext, org.hibernate.transaction.TransactionFactory.Context)"><B>createTransaction(JDBCContext, TransactionFactory.Context)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SpringTransactionFactory.html" title="class in org.springframework.orm.hibernate3">SpringTransactionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#createTransaction(java.lang.String, int)"><B>createTransaction(String, int)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/OC4JJtaTransactionManager.html#createTransaction(java.lang.String, int)"><B>createTransaction(String, int)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/OC4JJtaTransactionManager.html" title="class in org.springframework.transaction.jta">OC4JJtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/SimpleTransactionFactory.html#createTransaction(java.lang.String, int)"><B>createTransaction(String, int)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/SimpleTransactionFactory.html" title="class in org.springframework.transaction.jta">SimpleTransactionFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/TransactionFactory.html#createTransaction(java.lang.String, int)"><B>createTransaction(String, int)</B></A> - 
Method in interface org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/TransactionFactory.html" title="interface in org.springframework.transaction.jta">TransactionFactory</A>
<DD>Create an active Transaction object based on the given name and timeout.
<DT><A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html#createTransaction(java.lang.String, int)"><B>createTransaction(String, int)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html" title="class in org.springframework.transaction.jta">WebLogicJtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#createTransactionIfNecessary(java.lang.reflect.Method, java.lang.Class)"><B>createTransactionIfNecessary(Method, Class)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Create a transaction if necessary, based on the given method and class.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#createTransactionIfNecessary(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String)"><B>createTransactionIfNecessary(PlatformTransactionManager, TransactionAttribute, String)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Create a transaction if necessary based on the given TransactionAttribute.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#createTransformer(javax.xml.transform.Templates)"><B>createTransformer(Templates)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>Create the <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Transformer.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Transformer</CODE></A> instance used to prefer the XSLT transformation.
<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html#createTypeFilter(org.w3c.dom.Element, java.lang.ClassLoader)"><B>createTypeFilter(Element, ClassLoader)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation">ComponentScanBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/support/AbstractSqlTypeValue.html#createTypeValue(java.sql.Connection, int, java.lang.String)"><B>createTypeValue(Connection, int, String)</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/AbstractSqlTypeValue.html" title="class in org.springframework.jdbc.core.support">AbstractSqlTypeValue</A>
<DD>Create the type value to be passed into <code>PreparedStatement.setObject</code>.
<DT><A HREF="../org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html#createUnmarshaller(java.lang.Class)"><B>createUnmarshaller(Class)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/AbstractJaxb2HttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractJaxb2HttpMessageConverter</A>
<DD>Creates a new <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/bind/Unmarshaller.html?is-external=true" title="class or interface in javax.xml.bind"><CODE>Unmarshaller</CODE></A> for the given class.
<DT><A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html#createUnmarshaller()"><B>createUnmarshaller()</B></A> - 
Method in class org.springframework.oxm.jaxb.<A HREF="../org/springframework/oxm/jaxb/Jaxb2Marshaller.html" title="class in org.springframework.oxm.jaxb">Jaxb2Marshaller</A>
<DD>Return a newly created JAXB unmarshaller.
<DT><A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html#createUnmarshallingContext()"><B>createUnmarshallingContext()</B></A> - 
Method in class org.springframework.oxm.jibx.<A HREF="../org/springframework/oxm/jibx/JibxMarshaller.html" title="class in org.springframework.oxm.jibx">JibxMarshaller</A>
<DD>Create a new <code>IUnmarshallingContext</code>.
<DT><A HREF="../org/springframework/beans/propertyeditors/URIEditor.html#createURI(java.lang.String)"><B>createURI(String)</B></A> - 
Method in class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/URIEditor.html" title="class in org.springframework.beans.propertyeditors">URIEditor</A>
<DD>Create a URI instance for the given (resolved) String value.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityToolboxView.html#createVelocityContext(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>createVelocityContext(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityToolboxView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityToolboxView</A>
<DD>Overridden to create a ChainedContext, which is part of the view package
 of Velocity Tools, as special context.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#createVelocityContext(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>createVelocityContext(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Create a Velocity Context instance for the given model,
 to be passed to the template for merging.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#createVelocityContext(java.util.Map)"><B>createVelocityContext(Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Create a Velocity Context instance for the given model,
 to be passed to the template for merging.
<DT><A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html#createVelocityEngine()"><B>createVelocityEngine()</B></A> - 
Method in class org.springframework.ui.velocity.<A HREF="../org/springframework/ui/velocity/VelocityEngineFactory.html" title="class in org.springframework.ui.velocity">VelocityEngineFactory</A>
<DD>Prepare the VelocityEngine instance and return it.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html#createView(java.lang.String, java.util.Locale)"><B>createView(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractCachingViewResolver</A>
<DD>Create the actual View object.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#createView(java.lang.String, java.util.Locale)"><B>createView(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Overridden to implement check for "redirect:" prefix.
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#createWebApplicationContext(javax.servlet.ServletContext, org.springframework.context.ApplicationContext)"><B>createWebApplicationContext(ServletContext, ApplicationContext)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Instantiate the root WebApplicationContext for this loader, either the
 default context class or a custom context class if specified.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#createWebApplicationContext(org.springframework.context.ApplicationContext)"><B>createWebApplicationContext(ApplicationContext)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Instantiate the WebApplicationContext for this servlet, either a default
 <A HREF="../org/springframework/web/context/support/XmlWebApplicationContext.html" title="class in org.springframework.web.context.support"><CODE>XmlWebApplicationContext</CODE></A>
 or a <A HREF="../org/springframework/web/servlet/FrameworkServlet.html#setContextClass(java.lang.Class)"><CODE>custom context class</CODE></A>, if set.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#createWebApplicationContext(org.springframework.web.context.WebApplicationContext)"><B>createWebApplicationContext(WebApplicationContext)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Instantiate the WebApplicationContext for this servlet, either a default
 <A HREF="../org/springframework/web/context/support/XmlWebApplicationContext.html" title="class in org.springframework.web.context.support"><CODE>XmlWebApplicationContext</CODE></A>
 or a <A HREF="../org/springframework/web/servlet/FrameworkServlet.html#setContextClass(java.lang.Class)"><CODE>custom context class</CODE></A>, if set.
<DT><A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html#createWebApplicationContext(org.springframework.web.context.WebApplicationContext)"><B>createWebApplicationContext(WebApplicationContext)</B></A> - 
Method in class org.springframework.web.struts.<A HREF="../org/springframework/web/struts/ContextLoaderPlugIn.html" title="class in org.springframework.web.struts">ContextLoaderPlugIn</A>
<DD><B>Deprecated.</B>&nbsp;Instantiate the WebApplicationContext for the ActionServlet, either a default
 XmlWebApplicationContext or a custom context class if set.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#createXMLContext(org.springframework.core.io.Resource[], java.lang.Class[], java.lang.String[])"><B>createXMLContext(Resource[], Class[], String[])</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Create the Castor <code>XMLContext</code>.
<DT><A HREF="../org/springframework/oxm/support/AbstractMarshaller.html#createXmlReader()"><B>createXmlReader()</B></A> - 
Method in class org.springframework.oxm.support.<A HREF="../org/springframework/oxm/support/AbstractMarshaller.html" title="class in org.springframework.oxm.support">AbstractMarshaller</A>
<DD>Create a <code>XMLReader</code> that this marshaller will when passed an empty <code>SAXSource</code>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createXMLReader(javax.xml.stream.XMLStreamReader)"><B>createXMLReader(XMLStreamReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a SAX <A HREF="http://java.sun.com/javase/6/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax"><CODE>XMLReader</CODE></A> that reads from the given StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLStreamReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLStreamReader</CODE></A>.
<DT><A HREF="../org/springframework/util/xml/StaxUtils.html#createXMLReader(javax.xml.stream.XMLEventReader)"><B>createXMLReader(XMLEventReader)</B></A> - 
Static method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/StaxUtils.html" title="class in org.springframework.util.xml">StaxUtils</A>
<DD>Create a SAX <A HREF="http://java.sun.com/javase/6/docs/api/org/xml/sax/XMLReader.html?is-external=true" title="class or interface in org.xml.sax"><CODE>XMLReader</CODE></A> that reads from the given StAX <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/stream/XMLEventReader.html?is-external=true" title="class or interface in javax.xml.stream"><CODE>XMLEventReader</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#createXsltSource(java.util.Map, java.lang.String, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>createXsltSource(Map&lt;String, Object&gt;, String, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;Return the XML <A HREF="http://java.sun.com/javase/6/docs/api/javax/xml/transform/Source.html?is-external=true" title="class or interface in javax.xml.transform"><CODE>Source</CODE></A> to transform.
<DT><A HREF="../org/springframework/scheduling/support/CronSequenceGenerator.html" title="class in org.springframework.scheduling.support"><B>CronSequenceGenerator</B></A> - Class in <A HREF="../org/springframework/scheduling/support/package-summary.html">org.springframework.scheduling.support</A><DD>Date sequence generator for a <a href="http://www.manpagez.com/man/5/crontab/">Crontab pattern</a>,
 allowing clients to specify a pattern that the sequence matches.<DT><A HREF="../org/springframework/scheduling/support/CronSequenceGenerator.html#CronSequenceGenerator(java.lang.String, java.util.TimeZone)"><B>CronSequenceGenerator(String, TimeZone)</B></A> - 
Constructor for class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/CronSequenceGenerator.html" title="class in org.springframework.scheduling.support">CronSequenceGenerator</A>
<DD>Construct a <A HREF="../org/springframework/scheduling/support/CronSequenceGenerator.html" title="class in org.springframework.scheduling.support"><CODE>CronSequenceGenerator</CODE></A> from the pattern provided.
<DT><A HREF="../org/springframework/scheduling/support/CronTrigger.html" title="class in org.springframework.scheduling.support"><B>CronTrigger</B></A> - Class in <A HREF="../org/springframework/scheduling/support/package-summary.html">org.springframework.scheduling.support</A><DD><A HREF="../org/springframework/scheduling/Trigger.html" title="interface in org.springframework.scheduling"><CODE>Trigger</CODE></A> implementation for cron expressions.<DT><A HREF="../org/springframework/scheduling/support/CronTrigger.html#CronTrigger(java.lang.String)"><B>CronTrigger(String)</B></A> - 
Constructor for class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/CronTrigger.html" title="class in org.springframework.scheduling.support">CronTrigger</A>
<DD>Build a <A HREF="../org/springframework/scheduling/support/CronTrigger.html" title="class in org.springframework.scheduling.support"><CODE>CronTrigger</CODE></A> from the pattern provided in the default time zone.
<DT><A HREF="../org/springframework/scheduling/support/CronTrigger.html#CronTrigger(java.lang.String, java.util.TimeZone)"><B>CronTrigger(String, TimeZone)</B></A> - 
Constructor for class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/CronTrigger.html" title="class in org.springframework.scheduling.support">CronTrigger</A>
<DD>Build a <A HREF="../org/springframework/scheduling/support/CronTrigger.html" title="class in org.springframework.scheduling.support"><CODE>CronTrigger</CODE></A> from the pattern provided.
<DT><A HREF="../org/springframework/scheduling/quartz/CronTriggerBean.html" title="class in org.springframework.scheduling.quartz"><B>CronTriggerBean</B></A> - Class in <A HREF="../org/springframework/scheduling/quartz/package-summary.html">org.springframework.scheduling.quartz</A><DD>Convenience subclass of Quartz's <CODE>CronTrigger</CODE> class,
 making bean-style usage easier.<DT><A HREF="../org/springframework/scheduling/quartz/CronTriggerBean.html#CronTriggerBean()"><B>CronTriggerBean()</B></A> - 
Constructor for class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/CronTriggerBean.html" title="class in org.springframework.scheduling.quartz">CronTriggerBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/CurrencyEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CurrencyEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Editor for <code>java.util.Currency</code>, translating currency codes into Currency
 objects.<DT><A HREF="../org/springframework/beans/propertyeditors/CurrencyEditor.html#CurrencyEditor()"><B>CurrencyEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CurrencyEditor.html" title="class in org.springframework.beans.propertyeditors">CurrencyEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/format/number/CurrencyFormatter.html" title="class in org.springframework.format.number"><B>CurrencyFormatter</B></A> - Class in <A HREF="../org/springframework/format/number/package-summary.html">org.springframework.format.number</A><DD>A BigDecimal formatter for currency values.<DT><A HREF="../org/springframework/format/number/CurrencyFormatter.html#CurrencyFormatter()"><B>CurrencyFormatter()</B></A> - 
Constructor for class org.springframework.format.number.<A HREF="../org/springframework/format/number/CurrencyFormatter.html" title="class in org.springframework.format.number">CurrencyFormatter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html#currentFormObject(javax.servlet.http.HttpServletRequest, java.lang.Object)"><B>currentFormObject(HttpServletRequest, Object)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Return the current form object to use for binding and further processing,
 based on the passed-in form object as found in the HttpSession.
<DT><A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html#currentInvocation()"><B>currentInvocation()</B></A> - 
Static method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/ExposeInvocationInterceptor.html" title="class in org.springframework.aop.interceptor">ExposeInvocationInterceptor</A>
<DD>Return the AOP Alliance MethodInvocation object associated with the current invocation.
<DT><A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html#currentJoinPoint()"><B>currentJoinPoint()</B></A> - 
Static method in class org.springframework.aop.aspectj.<A HREF="../org/springframework/aop/aspectj/AbstractAspectJAdvice.html" title="class in org.springframework.aop.aspectj">AbstractAspectJAdvice</A>
<DD>Lazily instantiate joinpoint for the current invocation.
<DT><A HREF="../org/springframework/aop/framework/AopContext.html#currentProxy()"><B>currentProxy()</B></A> - 
Static method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AopContext.html" title="class in org.springframework.aop.framework">AopContext</A>
<DD>Try to return the current AOP proxy.
<DT><A HREF="../org/springframework/web/context/request/RequestContextHolder.html#currentRequestAttributes()"><B>currentRequestAttributes()</B></A> - 
Static method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request">RequestContextHolder</A>
<DD>Return the RequestAttributes currently bound to the thread.
<DT><A HREF="../org/springframework/orm/hibernate3/SpringSessionContext.html#currentSession()"><B>currentSession()</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SpringSessionContext.html" title="class in org.springframework.orm.hibernate3">SpringSessionContext</A>
<DD>Retrieve the Spring-managed Session for the current thread, if any.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#currentTransactionInfo()"><B>currentTransactionInfo()</B></A> - 
Static method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Subclasses can use this to return the current TransactionInfo.
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html#currentTransactionStatus()"><B>currentTransactionStatus()</B></A> - 
Static method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAspectSupport.html" title="class in org.springframework.transaction.interceptor">TransactionAspectSupport</A>
<DD>Return the transaction status of the current method invocation.
<DT><A HREF="../org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html" title="class in org.springframework.beans.factory.annotation"><B>CustomAutowireConfigurer</B></A> - Class in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD>A <A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanFactoryPostProcessor</CODE></A>
 implementation that allows for convenient registration of custom autowire
 qualifier types.<DT><A HREF="../org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html#CustomAutowireConfigurer()"><B>CustomAutowireConfigurer()</B></A> - 
Constructor for class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/CustomAutowireConfigurer.html" title="class in org.springframework.beans.factory.annotation">CustomAutowireConfigurer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomBooleanEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CustomBooleanEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for Boolean/boolean properties.<DT><A HREF="../org/springframework/beans/propertyeditors/CustomBooleanEditor.html#CustomBooleanEditor(boolean)"><B>CustomBooleanEditor(boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomBooleanEditor.html" title="class in org.springframework.beans.propertyeditors">CustomBooleanEditor</A>
<DD>Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"
 and "false"/"off"/"no" as recognized String values.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomBooleanEditor.html#CustomBooleanEditor(java.lang.String, java.lang.String, boolean)"><B>CustomBooleanEditor(String, String, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomBooleanEditor.html" title="class in org.springframework.beans.propertyeditors">CustomBooleanEditor</A>
<DD>Create a new CustomBooleanEditor instance,
 with configurable String values for true and false.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CustomCollectionEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for Collections, converting any source Collection
 to a given target Collection type.<DT><A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html#CustomCollectionEditor(java.lang.Class)"><B>CustomCollectionEditor(Class)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html" title="class in org.springframework.beans.propertyeditors">CustomCollectionEditor</A>
<DD>Create a new CustomCollectionEditor for the given target type,
 keeping an incoming <code>null</code> as-is.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html#CustomCollectionEditor(java.lang.Class, boolean)"><B>CustomCollectionEditor(Class, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomCollectionEditor.html" title="class in org.springframework.beans.propertyeditors">CustomCollectionEditor</A>
<DD>Create a new CustomCollectionEditor for the given target type.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomDateEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CustomDateEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for <code>java.util.Date</code>,
 supporting a custom <code>java.text.DateFormat</code>.<DT><A HREF="../org/springframework/beans/propertyeditors/CustomDateEditor.html#CustomDateEditor(java.text.DateFormat, boolean)"><B>CustomDateEditor(DateFormat, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomDateEditor.html" title="class in org.springframework.beans.propertyeditors">CustomDateEditor</A>
<DD>Create a new CustomDateEditor instance, using the given DateFormat
 for parsing and rendering.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomDateEditor.html#CustomDateEditor(java.text.DateFormat, boolean, int)"><B>CustomDateEditor(DateFormat, boolean, int)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomDateEditor.html" title="class in org.springframework.beans.propertyeditors">CustomDateEditor</A>
<DD>Create a new CustomDateEditor instance, using the given DateFormat
 for parsing and rendering.
<DT><A HREF="../org/springframework/beans/factory/config/CustomEditorConfigurer.html" title="class in org.springframework.beans.factory.config"><B>CustomEditorConfigurer</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD><A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanFactoryPostProcessor</CODE></A> implementation that allows for convenient
 registration of custom <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>property editors</CODE></A>.<DT><A HREF="../org/springframework/beans/factory/config/CustomEditorConfigurer.html#CustomEditorConfigurer()"><B>CustomEditorConfigurer()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/CustomEditorConfigurer.html" title="class in org.springframework.beans.factory.config">CustomEditorConfigurer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CustomizableThreadCreator.html" title="class in org.springframework.util"><B>CustomizableThreadCreator</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Simple customizable helper class for creating threads.<DT><A HREF="../org/springframework/util/CustomizableThreadCreator.html#CustomizableThreadCreator()"><B>CustomizableThreadCreator()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CustomizableThreadCreator.html" title="class in org.springframework.util">CustomizableThreadCreator</A>
<DD>Create a new CustomizableThreadCreator with default thread name prefix.
<DT><A HREF="../org/springframework/util/CustomizableThreadCreator.html#CustomizableThreadCreator(java.lang.String)"><B>CustomizableThreadCreator(String)</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/CustomizableThreadCreator.html" title="class in org.springframework.util">CustomizableThreadCreator</A>
<DD>Create a new CustomizableThreadCreator with the given thread name prefix.
<DT><A HREF="../org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.backportconcurrent"><B>CustomizableThreadFactory</B></A> - Class in <A HREF="../org/springframework/scheduling/backportconcurrent/package-summary.html">org.springframework.scheduling.backportconcurrent</A><DD>Implementation of the JSR-166 backport
 <CODE>ThreadFactory</CODE> interface,
 allowing for customizing the created threads (name, priority, etc).<DT><A HREF="../org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html#CustomizableThreadFactory()"><B>CustomizableThreadFactory()</B></A> - 
Constructor for class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.backportconcurrent">CustomizableThreadFactory</A>
<DD>Create a new CustomizableThreadFactory with default thread name prefix.
<DT><A HREF="../org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html#CustomizableThreadFactory(java.lang.String)"><B>CustomizableThreadFactory(String)</B></A> - 
Constructor for class org.springframework.scheduling.backportconcurrent.<A HREF="../org/springframework/scheduling/backportconcurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.backportconcurrent">CustomizableThreadFactory</A>
<DD>Create a new CustomizableThreadFactory with the given thread name prefix.
<DT><A HREF="../org/springframework/scheduling/concurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.concurrent"><B>CustomizableThreadFactory</B></A> - Class in <A HREF="../org/springframework/scheduling/concurrent/package-summary.html">org.springframework.scheduling.concurrent</A><DD>Implementation of the JDK 1.5 <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadFactory.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ThreadFactory</CODE></A>
 interface, allowing for customizing the created threads (name, priority, etc).<DT><A HREF="../org/springframework/scheduling/concurrent/CustomizableThreadFactory.html#CustomizableThreadFactory()"><B>CustomizableThreadFactory()</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.concurrent">CustomizableThreadFactory</A>
<DD>Create a new CustomizableThreadFactory with default thread name prefix.
<DT><A HREF="../org/springframework/scheduling/concurrent/CustomizableThreadFactory.html#CustomizableThreadFactory(java.lang.String)"><B>CustomizableThreadFactory(String)</B></A> - 
Constructor for class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/CustomizableThreadFactory.html" title="class in org.springframework.scheduling.concurrent">CustomizableThreadFactory</A>
<DD>Create a new CustomizableThreadFactory with the given thread name prefix.
<DT><A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html" title="class in org.springframework.aop.interceptor"><B>CustomizableTraceInterceptor</B></A> - Class in <A HREF="../org/springframework/aop/interceptor/package-summary.html">org.springframework.aop.interceptor</A><DD><code>MethodInterceptor</code> implementation that allows for highly customizable
 method-level tracing, using placeholders.<DT><A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html#CustomizableTraceInterceptor()"><B>CustomizableTraceInterceptor()</B></A> - 
Constructor for class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html" title="class in org.springframework.aop.interceptor">CustomizableTraceInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/groovy/GroovyObjectCustomizer.html#customize(groovy.lang.GroovyObject)"><B>customize(GroovyObject)</B></A> - 
Method in interface org.springframework.scripting.groovy.<A HREF="../org/springframework/scripting/groovy/GroovyObjectCustomizer.html" title="interface in org.springframework.scripting.groovy">GroovyObjectCustomizer</A>
<DD>Customize the supplied <CODE>GroovyObject</CODE>.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html#customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)"><B>customizeBeanFactory(DefaultListableBeanFactory)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>
<DD>Customize the internal bean factory used by this context.
<DT><A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html#customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)"><B>customizeBeanFactory(DefaultListableBeanFactory)</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AbstractSingleSpringContextTests.html" title="class in org.springframework.test">AbstractSingleSpringContextTests</A>
<DD><B>Deprecated.</B>&nbsp;Customize the internal bean factory of the ApplicationContext used by
 this test.
<DT><A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html#customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory)"><B>customizeBeanFactory(DefaultListableBeanFactory)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html" title="class in org.springframework.test.context.support">AbstractGenericContextLoader</A>
<DD>Customize the internal bean factory of the ApplicationContext created by
 this ContextLoader.
<DT><A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html#customizeContext(org.springframework.context.support.GenericApplicationContext)"><B>customizeContext(GenericApplicationContext)</B></A> - 
Method in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/AbstractGenericContextLoader.html" title="class in org.springframework.test.context.support">AbstractGenericContextLoader</A>
<DD>Customize the <A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support"><CODE>GenericApplicationContext</CODE></A> created by this ContextLoader
 <i>after</i> bean definitions have been loaded into the context but
 before the context is refreshed.
<DT><A HREF="../org/springframework/web/context/ContextLoader.html#customizeContext(javax.servlet.ServletContext, org.springframework.web.context.ConfigurableWebApplicationContext)"><B>customizeContext(ServletContext, ConfigurableWebApplicationContext)</B></A> - 
Method in class org.springframework.web.context.<A HREF="../org/springframework/web/context/ContextLoader.html" title="class in org.springframework.web.context">ContextLoader</A>
<DD>Customize the <A HREF="../org/springframework/web/context/ConfigurableWebApplicationContext.html" title="interface in org.springframework.web.context"><CODE>ConfigurableWebApplicationContext</CODE></A> created by this
 ContextLoader after config locations have been supplied to the context
 but before the context is <em>refreshed</em>.
<DT><A HREF="../org/springframework/context/expression/StandardBeanExpressionResolver.html#customizeEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext)"><B>customizeEvaluationContext(StandardEvaluationContext)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/StandardBeanExpressionResolver.html" title="class in org.springframework.context.expression">StandardBeanExpressionResolver</A>
<DD>Template method for customizing the expression evaluation context.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#customizeMarshaller(org.exolab.castor.xml.Marshaller)"><B>customizeMarshaller(Marshaller)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Template method that allows for customizing of the given Castor <CODE>Marshaller</CODE>.
<DT><A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html#customizeProxyFactory(org.springframework.aop.framework.ProxyFactory)"><B>customizeProxyFactory(ProxyFactory)</B></A> - 
Method in class org.springframework.aop.framework.autoproxy.<A HREF="../org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.html" title="class in org.springframework.aop.framework.autoproxy">AbstractAutoProxyCreator</A>
<DD>Subclasses may choose to implement this: for example,
 to change the interfaces exposed.
<DT><A HREF="../org/springframework/test/jpa/AbstractAspectjJpaTests.html#customizeResourceOverridingShadowingClassLoader(java.lang.ClassLoader)"><B>customizeResourceOverridingShadowingClassLoader(ClassLoader)</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractAspectjJpaTests.html" title="class in org.springframework.test.jpa">AbstractAspectjJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/test/jpa/AbstractJpaTests.html#customizeResourceOverridingShadowingClassLoader(java.lang.ClassLoader)"><B>customizeResourceOverridingShadowingClassLoader(ClassLoader)</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractJpaTests.html" title="class in org.springframework.test.jpa">AbstractJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;Customize the shadowing class loader.
<DT><A HREF="../org/springframework/oxm/castor/CastorMarshaller.html#customizeUnmarshaller(org.exolab.castor.xml.Unmarshaller)"><B>customizeUnmarshaller(Unmarshaller)</B></A> - 
Method in class org.springframework.oxm.castor.<A HREF="../org/springframework/oxm/castor/CastorMarshaller.html" title="class in org.springframework.oxm.castor">CastorMarshaller</A>
<DD>Template method that allows for customizing of the given Castor
 <CODE>Unmarshaller</CODE>.
<DT><A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html#customizeXStream(com.thoughtworks.xstream.XStream)"><B>customizeXStream(XStream)</B></A> - 
Method in class org.springframework.oxm.xstream.<A HREF="../org/springframework/oxm/xstream/XStreamMarshaller.html" title="class in org.springframework.oxm.xstream">XStreamMarshaller</A>
<DD>Template to allow for customizing of the given <CODE>XStream</CODE>.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CustomMapEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for Maps, converting any source Map
 to a given target Map type.<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html#CustomMapEditor(java.lang.Class)"><B>CustomMapEditor(Class)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors">CustomMapEditor</A>
<DD>Create a new CustomMapEditor for the given target type,
 keeping an incoming <code>null</code> as-is.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html#CustomMapEditor(java.lang.Class, boolean)"><B>CustomMapEditor(Class, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomMapEditor.html" title="class in org.springframework.beans.propertyeditors">CustomMapEditor</A>
<DD>Create a new CustomMapEditor for the given target type.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomNumberEditor.html" title="class in org.springframework.beans.propertyeditors"><B>CustomNumberEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD>Property editor for any Number subclass such as Short, Integer, Long,
 BigInteger, Float, Double, BigDecimal.<DT><A HREF="../org/springframework/beans/propertyeditors/CustomNumberEditor.html#CustomNumberEditor(java.lang.Class, boolean)"><B>CustomNumberEditor(Class, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomNumberEditor.html" title="class in org.springframework.beans.propertyeditors">CustomNumberEditor</A>
<DD>Create a new CustomNumberEditor instance, using the default
 <code>valueOf</code> methods for parsing and <code>toString</code>
 methods for rendering.
<DT><A HREF="../org/springframework/beans/propertyeditors/CustomNumberEditor.html#CustomNumberEditor(java.lang.Class, java.text.NumberFormat, boolean)"><B>CustomNumberEditor(Class, NumberFormat, boolean)</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/CustomNumberEditor.html" title="class in org.springframework.beans.propertyeditors">CustomNumberEditor</A>
<DD>Create a new CustomNumberEditor instance, using the given NumberFormat
 for parsing and rendering.
<DT><A HREF="../org/springframework/beans/factory/config/CustomScopeConfigurer.html" title="class in org.springframework.beans.factory.config"><B>CustomScopeConfigurer</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Simple <A HREF="../org/springframework/beans/factory/config/BeanFactoryPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanFactoryPostProcessor</CODE></A> implementation that registers
 custom <A HREF="../org/springframework/beans/factory/config/Scope.html" title="interface in org.springframework.beans.factory.config"><CODE>Scope(s)</CODE></A> with the containing <A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config"><CODE>ConfigurableBeanFactory</CODE></A>.<DT><A HREF="../org/springframework/beans/factory/config/CustomScopeConfigurer.html#CustomScopeConfigurer()"><B>CustomScopeConfigurer()</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/CustomScopeConfigurer.html" title="class in org.springframework.beans.factory.config">CustomScopeConfigurer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html" title="class in org.springframework.jdbc.support"><B>CustomSQLErrorCodesTranslation</B></A> - Class in <A HREF="../org/springframework/jdbc/support/package-summary.html">org.springframework.jdbc.support</A><DD>JavaBean for holding custom JDBC error codes translation for a particular
 database.<DT><A HREF="../org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html#CustomSQLErrorCodesTranslation()"><B>CustomSQLErrorCodesTranslation()</B></A> - 
Constructor for class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/CustomSQLErrorCodesTranslation.html" title="class in org.springframework.jdbc.support">CustomSQLErrorCodesTranslation</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html#customTranslate(java.lang.String, java.lang.String, java.sql.SQLException)"><B>customTranslate(String, String, SQLException)</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.html" title="class in org.springframework.jdbc.support">SQLErrorCodeSQLExceptionTranslator</A>
<DD>Subclasses can override this method to attempt a custom mapping from SQLException
 to DataAccessException.
<DT><A HREF="../org/springframework/validation/beanvalidation/CustomValidatorBean.html" title="class in org.springframework.validation.beanvalidation"><B>CustomValidatorBean</B></A> - Class in <A HREF="../org/springframework/validation/beanvalidation/package-summary.html">org.springframework.validation.beanvalidation</A><DD>Configurable bean class that exposes a specific JSR-303 Validator
 through its original interface as well as through the Spring
 <A HREF="../org/springframework/validation/Validator.html" title="interface in org.springframework.validation"><CODE>Validator</CODE></A> interface.<DT><A HREF="../org/springframework/validation/beanvalidation/CustomValidatorBean.html#CustomValidatorBean()"><B>CustomValidatorBean()</B></A> - 
Constructor for class org.springframework.validation.beanvalidation.<A HREF="../org/springframework/validation/beanvalidation/CustomValidatorBean.html" title="class in org.springframework.validation.beanvalidation">CustomValidatorBean</A>
<DD>&nbsp;
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-2.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-4.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-3.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-3.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>

</BODY>
</HTML>
