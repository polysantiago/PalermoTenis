<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_21) on Wed Oct 20 16:26:26 BST 2010 -->
<TITLE>
R-Index
</TITLE>

<META NAME="date" CONTENT="2010-10-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../spring-javadoc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="R-Index";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-17.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-19.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-18.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-18.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>
<A NAME="_R_"><!-- --></A><H2>
<B>R</B></H2>
<DL>
<DT><A HREF="../org/springframework/web/servlet/tags/form/RadioButtonsTag.html" title="class in org.springframework.web.servlet.tags.form"><B>RadioButtonsTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/form/package-summary.html">org.springframework.web.servlet.tags.form</A><DD>Databinding-aware JSP tag for rendering multiple HTML '<code>input</code>'
 elements with a '<code>type</code>' of '<code>radio</code>'.<DT><A HREF="../org/springframework/web/servlet/tags/form/RadioButtonsTag.html#RadioButtonsTag()"><B>RadioButtonsTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/RadioButtonsTag.html" title="class in org.springframework.web.servlet.tags.form">RadioButtonsTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/RadioButtonTag.html" title="class in org.springframework.web.servlet.tags.form"><B>RadioButtonTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/form/package-summary.html">org.springframework.web.servlet.tags.form</A><DD>Databinding-aware JSP tag for rendering an HTML '<code>input</code>'
 element with a '<code>type</code>' of '<code>radio</code>'.<DT><A HREF="../org/springframework/web/servlet/tags/form/RadioButtonTag.html#RadioButtonTag()"><B>RadioButtonTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/RadioButtonTag.html" title="class in org.springframework.web.servlet.tags.form">RadioButtonTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#raiseMissingCookieException(java.lang.String, java.lang.Class)"><B>raiseMissingCookieException(String, Class)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#raiseMissingHeaderException(java.lang.String, java.lang.Class)"><B>raiseMissingHeaderException(String, Class)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#raiseMissingParameterException(java.lang.String, java.lang.Class)"><B>raiseMissingParameterException(String, Class)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#raiseSessionRequiredException(java.lang.String)"><B>raiseSessionRequiredException(String)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/RawTargetAccess.html" title="interface in org.springframework.aop"><B>RawTargetAccess</B></A> - Interface in <A HREF="../org/springframework/aop/package-summary.html">org.springframework.aop</A><DD>Marker for AOP proxy interfaces (in particular: introduction interfaces)
 that explicitly intend to return the raw target object (which would normally
 get replaced with the proxy object when returned from a method invocation).<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object"><B>RdbmsOperation</B></A> - Class in <A HREF="../org/springframework/jdbc/object/package-summary.html">org.springframework.jdbc.object</A><DD>An "RDBMS operation" is a multi-threaded, reusable object representing a query,
 update, or stored procedure call.<DT><A HREF="../org/springframework/jdbc/object/RdbmsOperation.html#RdbmsOperation()"><B>RdbmsOperation()</B></A> - 
Constructor for class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/RdbmsOperation.html" title="class in org.springframework.jdbc.object">RdbmsOperation</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html#read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>read(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanExpressionContextAccessor.html" title="class in org.springframework.context.expression">BeanExpressionContextAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html#read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>read(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryAccessor.html" title="class in org.springframework.context.expression">BeanFactoryAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/expression/MapAccessor.html#read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>read(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/MapAccessor.html" title="class in org.springframework.context.expression">MapAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/PropertyAccessor.html#read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>read(EvaluationContext, Object, String)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/PropertyAccessor.html" title="interface in org.springframework.expression">PropertyAccessor</A>
<DD>Called to read a property from a specified target object
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)"><B>read(EvaluationContext, Object, String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>read(Class&lt;? extends T&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Read an object of the given type form the given input message, and returns it.
<DT><A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>read(Class&lt;? extends BufferedImage&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/BufferedImageHttpMessageConverter.html" title="class in org.springframework.http.converter">BufferedImageHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>read(Class&lt;? extends MultiValueMap&lt;String, ?&gt;&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/FormHttpMessageConverter.html" title="class in org.springframework.http.converter">FormHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/HttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>read(Class&lt;? extends T&gt;, HttpInputMessage)</B></A> - 
Method in interface org.springframework.http.converter.<A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter">HttpMessageConverter</A>
<DD>Read an object of the given type form the given input message, and returns it.
<DT><A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>read(Class&lt;? extends Resource&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter">ResourceHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html#read(java.io.InputStream)"><B>read(InputStream)</B></A> - 
Method in class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CommAreaRecord.html" title="class in org.springframework.jca.cci.core.support">CommAreaRecord</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/DelegatingServletInputStream.html#read()"><B>read()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/DelegatingServletInputStream.html" title="class in org.springframework.mock.web">DelegatingServletInputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/DefaultTransactionDefinition.html#READ_ONLY_MARKER"><B>READ_ONLY_MARKER</B></A> - 
Static variable in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/DefaultTransactionDefinition.html" title="class in org.springframework.transaction.support">DefaultTransactionDefinition</A>
<DD>Marker for read-only transactions in description strings
<DT><A HREF="../org/springframework/format/datetime/joda/ReadableInstantPrinter.html" title="class in org.springframework.format.datetime.joda"><B>ReadableInstantPrinter</B></A> - Class in <A HREF="../org/springframework/format/datetime/joda/package-summary.html">org.springframework.format.datetime.joda</A><DD>Prints JodaTime <CODE>ReadableInstant</CODE> instances using a <CODE>DateTimeFormatter</CODE>.<DT><A HREF="../org/springframework/format/datetime/joda/ReadableInstantPrinter.html#ReadableInstantPrinter(org.joda.time.format.DateTimeFormatter)"><B>ReadableInstantPrinter(DateTimeFormatter)</B></A> - 
Constructor for class org.springframework.format.datetime.joda.<A HREF="../org/springframework/format/datetime/joda/ReadableInstantPrinter.html" title="class in org.springframework.format.datetime.joda">ReadableInstantPrinter</A>
<DD>Create a new ReadableInstantPrinter.
<DT><A HREF="../org/springframework/format/datetime/joda/ReadablePartialPrinter.html" title="class in org.springframework.format.datetime.joda"><B>ReadablePartialPrinter</B></A> - Class in <A HREF="../org/springframework/format/datetime/joda/package-summary.html">org.springframework.format.datetime.joda</A><DD>Prints JodaTime <CODE>ReadablePartial</CODE> instances using a <CODE>DateTimeFormatter</CODE>.<DT><A HREF="../org/springframework/format/datetime/joda/ReadablePartialPrinter.html#ReadablePartialPrinter(org.joda.time.format.DateTimeFormatter)"><B>ReadablePartialPrinter(DateTimeFormatter)</B></A> - 
Constructor for class org.springframework.format.datetime.joda.<A HREF="../org/springframework/format/datetime/joda/ReadablePartialPrinter.html" title="class in org.springframework.format.datetime.joda">ReadablePartialPrinter</A>
<DD>Create a new ReadableInstantPrinter.
<DT><A HREF="../org/springframework/web/servlet/tags/EscapeBodyTag.html#readBodyContent()"><B>readBodyContent()</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/EscapeBodyTag.html" title="class in org.springframework.web.servlet.tags">EscapeBodyTag</A>
<DD>Read the unescaped body content from the page.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#readerCache"><B>readerCache</B></A> - 
Variable in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/ReaderContext.html" title="class in org.springframework.beans.factory.parsing"><B>ReaderContext</B></A> - Class in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>Context that gets passed along a bean definition reading process,
 encapsulating all relevant configuration as well as state.<DT><A HREF="../org/springframework/beans/factory/parsing/ReaderContext.html#ReaderContext(org.springframework.core.io.Resource, org.springframework.beans.factory.parsing.ProblemReporter, org.springframework.beans.factory.parsing.ReaderEventListener, org.springframework.beans.factory.parsing.SourceExtractor)"><B>ReaderContext(Resource, ProblemReporter, ReaderEventListener, SourceExtractor)</B></A> - 
Constructor for class org.springframework.beans.factory.parsing.<A HREF="../org/springframework/beans/factory/parsing/ReaderContext.html" title="class in org.springframework.beans.factory.parsing">ReaderContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/parsing/ReaderEventListener.html" title="interface in org.springframework.beans.factory.parsing"><B>ReaderEventListener</B></A> - Interface in <A HREF="../org/springframework/beans/factory/parsing/package-summary.html">org.springframework.beans.factory.parsing</A><DD>Interface that receives callbacks for component, alias and import
 registrations during a bean definition reading process.<DT><A HREF="../org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html#readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)"><B>readFromSource(Class&lt;? extends T&gt;, HttpHeaders, Source)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractXmlHttpMessageConverter</A>
<DD>Abstract template method called from <A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#read(java.lang.Class, org.springframework.http.HttpInputMessage)"><CODE>AbstractHttpMessageConverter.read(Class, HttpInputMessage)</CODE></A>.
<DT><A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html#readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)"><B>readFromSource(Class&lt;?&gt;, HttpHeaders, Source)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">Jaxb2RootElementHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html#readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)"><B>readFromSource(Class&lt;?&gt;, HttpHeaders, Source)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/MarshallingHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">MarshallingHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/xml/SourceHttpMessageConverter.html#readFromSource(java.lang.Class, org.springframework.http.HttpHeaders, javax.xml.transform.Source)"><B>readFromSource(Class, HttpHeaders, Source)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/SourceHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">SourceHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class&lt;? extends T&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/AbstractHttpMessageConverter.html" title="class in org.springframework.http.converter">AbstractHttpMessageConverter</A>
<DD>Abstract template method that reads the actualy object.
<DT><A HREF="../org/springframework/http/converter/ByteArrayHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ByteArrayHttpMessageConverter.html" title="class in org.springframework.http.converter">ByteArrayHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class&lt;? extends T&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.feed.<A HREF="../org/springframework/http/converter/feed/AbstractWireFeedHttpMessageConverter.html" title="class in org.springframework.http.converter.feed">AbstractWireFeedHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class&lt;?&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.json.<A HREF="../org/springframework/http/converter/json/MappingJacksonHttpMessageConverter.html" title="class in org.springframework.http.converter.json">MappingJacksonHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/StringHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/StringHttpMessageConverter.html" title="class in org.springframework.http.converter">StringHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html#readInternal(java.lang.Class, org.springframework.http.HttpInputMessage)"><B>readInternal(Class&lt;? extends T&gt;, HttpInputMessage)</B></A> - 
Method in class org.springframework.http.converter.xml.<A HREF="../org/springframework/http/converter/xml/AbstractXmlHttpMessageConverter.html" title="class in org.springframework.http.converter.xml">AbstractXmlHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html#READONLY_ATTRIBUTE"><B>READONLY_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlInputElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlInputElementTag</A>
<DD>The name of the '<code>readonly</code>' attribute.
<DT><A HREF="../org/springframework/web/servlet/tags/form/InputTag.html#READONLY_ATTRIBUTE"><B>READONLY_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/InputTag.html" title="class in org.springframework.web.servlet.tags.form">InputTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html#READONLY_ATTRIBUTE"><B>READONLY_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html" title="class in org.springframework.web.servlet.tags.form">TextareaTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/HttpHeaders.html#readOnlyHttpHeaders(org.springframework.http.HttpHeaders)"><B>readOnlyHttpHeaders(HttpHeaders)</B></A> - 
Static method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>Returns <code>HttpHeaders</code> object that can only be read, not written to.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractPdfStamperView.html#readPdfResource()"><B>readPdfResource()</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractPdfStamperView.html" title="class in org.springframework.web.servlet.view.document">AbstractPdfStamperView</A>
<DD>Read the raw PDF resource into an iText PdfReader.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerServiceExporter.html#readRemoteInvocation(javax.jms.Message)"><B>readRemoteInvocation(Message)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerServiceExporter.html" title="class in org.springframework.jms.remoting">JmsInvokerServiceExporter</A>
<DD>Read a RemoteInvocation from the given JMS message.
<DT><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html#readRemoteInvocation(javax.servlet.http.HttpServletRequest)"><B>readRemoteInvocation(HttpServletRequest)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html" title="class in org.springframework.remoting.httpinvoker">HttpInvokerServiceExporter</A>
<DD>Read a RemoteInvocation from the given HTTP request.
<DT><A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html#readRemoteInvocation(javax.servlet.http.HttpServletRequest, java.io.InputStream)"><B>readRemoteInvocation(HttpServletRequest, InputStream)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html" title="class in org.springframework.remoting.httpinvoker">HttpInvokerServiceExporter</A>
<DD>Deserialize a RemoteInvocation object from the given InputStream.
<DT><A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html#readRemoteInvocation(com.sun.net.httpserver.HttpExchange)"><B>readRemoteInvocation(HttpExchange)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html" title="class in org.springframework.remoting.httpinvoker">SimpleHttpInvokerServiceExporter</A>
<DD>Read a RemoteInvocation from the given HTTP request.
<DT><A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html#readRemoteInvocation(com.sun.net.httpserver.HttpExchange, java.io.InputStream)"><B>readRemoteInvocation(HttpExchange, InputStream)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.html" title="class in org.springframework.remoting.httpinvoker">SimpleHttpInvokerServiceExporter</A>
<DD>Deserialize a RemoteInvocation object from the given InputStream.
<DT><A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html#readRemoteInvocationResult(java.io.InputStream, java.lang.String)"><B>readRemoteInvocationResult(InputStream, String)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">AbstractHttpInvokerRequestExecutor</A>
<DD>Deserialize a RemoteInvocationResult object from the given InputStream.
<DT><A HREF="../org/springframework/core/enums/StaticLabeledEnum.html#readResolve()"><B>readResolve()</B></A> - 
Method in class org.springframework.core.enums.<A HREF="../org/springframework/core/enums/StaticLabeledEnum.html" title="class in org.springframework.core.enums">StaticLabeledEnum</A>
<DD><B>Deprecated.</B>&nbsp;Return the resolved type safe static enum instance.
<DT><A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html#readResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration, java.net.HttpURLConnection)"><B>readResponseBody(HttpInvokerClientConfiguration, HttpURLConnection)</B></A> - 
Method in class org.springframework.remoting.httpinvoker.<A HREF="../org/springframework/remoting/httpinvoker/SimpleHttpInvokerRequestExecutor.html" title="class in org.springframework.remoting.httpinvoker">SimpleHttpInvokerRequestExecutor</A>
<DD>Extract the response body from the given executed remote invocation
 request.
<DT><A HREF="../org/springframework/test/jdbc/JdbcTestUtils.html#readScript(java.io.LineNumberReader)"><B>readScript(LineNumberReader)</B></A> - 
Static method in class org.springframework.test.jdbc.<A HREF="../org/springframework/test/jdbc/JdbcTestUtils.html" title="class in org.springframework.test.jdbc">JdbcTestUtils</A>
<DD>Read a script from the LineNumberReader and build a String containing the
 lines.
<DT><A HREF="../org/springframework/expression/spel/ast/RealLiteral.html" title="class in org.springframework.expression.spel.ast"><B>RealLiteral</B></A> - Class in <A HREF="../org/springframework/expression/spel/ast/package-summary.html">org.springframework.expression.spel.ast</A><DD>&nbsp;<DT><A HREF="../org/springframework/expression/spel/ast/RealLiteral.html#RealLiteral(java.lang.String, int, double)"><B>RealLiteral(String, int, double)</B></A> - 
Constructor for class org.springframework.expression.spel.ast.<A HREF="../org/springframework/expression/spel/ast/RealLiteral.html" title="class in org.springframework.expression.spel.ast">RealLiteral</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jndi/JndiTemplate.html#rebind(java.lang.String, java.lang.Object)"><B>rebind(String, Object)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiTemplate.html" title="class in org.springframework.jndi">JndiTemplate</A>
<DD>Rebind the given object to the current JNDI context, using the given name.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#rebind(java.lang.String, java.lang.Object)"><B>rebind(String, Object)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#rebind(javax.naming.Name, java.lang.Object)"><B>rebind(Name, Object)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiServiceExporter.html#rebind()"><B>rebind()</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiServiceExporter.html" title="class in org.springframework.remoting.rmi">JndiRmiServiceExporter</A>
<DD>Rebind the specified service to JNDI, for recovering in case
 of the target registry having been restarted.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receive()"><B>receive()</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the default destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receive(javax.jms.Destination)"><B>receive(Destination)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receive(java.lang.String)"><B>receive(String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receive()"><B>receive()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receive(javax.jms.Destination)"><B>receive(Destination)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receive(java.lang.String)"><B>receive(String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#RECEIVE_TIMEOUT_INDEFINITE_WAIT"><B>RECEIVE_TIMEOUT_INDEFINITE_WAIT</B></A> - 
Static variable in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Timeout value indicating a blocking receive without timeout.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#RECEIVE_TIMEOUT_NO_WAIT"><B>RECEIVE_TIMEOUT_NO_WAIT</B></A> - 
Static variable in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>Timeout value indicating that a receive operation should
 check if a message is immediately available without blocking.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveAndConvert()"><B>receiveAndConvert()</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the default destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveAndConvert(javax.jms.Destination)"><B>receiveAndConvert(Destination)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveAndConvert(java.lang.String)"><B>receiveAndConvert(String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveAndConvert()"><B>receiveAndConvert()</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveAndConvert(javax.jms.Destination)"><B>receiveAndConvert(Destination)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveAndConvert(java.lang.String)"><B>receiveAndConvert(String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer)"><B>receiveAndExecute(Object, Session, MessageConsumer)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>Execute the listener for a message received from the given consumer,
 wrapping the entire operation in an external transaction if demanded.
<DT><A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html#receiveMessage(javax.jms.MessageConsumer)"><B>receiveMessage(MessageConsumer)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractPollingMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractPollingMessageListenerContainer</A>
<DD>Receive a message from the given consumer.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelected(java.lang.String)"><B>receiveSelected(String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the default destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelected(javax.jms.Destination, java.lang.String)"><B>receiveSelected(Destination, String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelected(java.lang.String, java.lang.String)"><B>receiveSelected(String, String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelected(java.lang.String)"><B>receiveSelected(String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelected(javax.jms.Destination, java.lang.String)"><B>receiveSelected(Destination, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelected(java.lang.String, java.lang.String)"><B>receiveSelected(String, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelectedAndConvert(java.lang.String)"><B>receiveSelectedAndConvert(String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the default destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelectedAndConvert(javax.jms.Destination, java.lang.String)"><B>receiveSelectedAndConvert(Destination, String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsOperations.html#receiveSelectedAndConvert(java.lang.String, java.lang.String)"><B>receiveSelectedAndConvert(String, String)</B></A> - 
Method in interface org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsOperations.html" title="interface in org.springframework.jms.core">JmsOperations</A>
<DD>Receive a message synchronously from the specified destination, but only
 wait up to a specified time for delivery.
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelectedAndConvert(java.lang.String)"><B>receiveSelectedAndConvert(String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelectedAndConvert(javax.jms.Destination, java.lang.String)"><B>receiveSelectedAndConvert(Destination, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/core/JmsTemplate.html#receiveSelectedAndConvert(java.lang.String, java.lang.String)"><B>receiveSelectedAndConvert(String, String)</B></A> - 
Method in class org.springframework.jms.core.<A HREF="../org/springframework/jms/core/JmsTemplate.html" title="class in org.springframework.jms.core">JmsTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html#reconcileColumnsToUse(java.util.List, java.lang.String[])"><B>reconcileColumnsToUse(List&lt;String&gt;, String[])</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/TableMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">TableMetaDataContext</A>
<DD>Compare columns created from metadata with declared columns and return a reconciled list.
<DT><A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html#reconcileParameters(java.util.List)"><B>reconcileParameters(List&lt;SqlParameter&gt;)</B></A> - 
Method in class org.springframework.jdbc.core.metadata.<A HREF="../org/springframework/jdbc/core/metadata/CallMetaDataContext.html" title="class in org.springframework.jdbc.core.metadata">CallMetaDataContext</A>
<DD>Reconcile the provided parameters with available metadata and add new ones where appropriate
<DT><A HREF="../org/springframework/jca/cci/core/RecordCreator.html" title="interface in org.springframework.jca.cci.core"><B>RecordCreator</B></A> - Interface in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD>Callback interface for creating a CCI Record instance,
 usually based on the passed-in CCI RecordFactory.<DT><A HREF="../org/springframework/test/ConditionalTestCase.html#recordDisabled()"><B>recordDisabled()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test">ConditionalTestCase</A>
<DD><B>Deprecated.</B>&nbsp;Record a disabled test.
<DT><A HREF="../org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html#recordDisabled(java.lang.reflect.Method)"><B>recordDisabled(Method)</B></A> - 
Method in class org.springframework.test.context.junit38.<A HREF="../org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html" title="class in org.springframework.test.context.junit38">AbstractJUnit38SpringContextTests</A>
<DD>Records the supplied test method as <em>disabled</em> in the current
 environment by incrementing the total number of disabled tests and
 logging a debug message.
<DT><A HREF="../org/springframework/jca/cci/core/RecordExtractor.html" title="interface in org.springframework.jca.cci.core"><B>RecordExtractor</B></A>&lt;<A HREF="../org/springframework/jca/cci/core/RecordExtractor.html" title="type parameter in RecordExtractor">T</A>&gt; - Interface in <A HREF="../org/springframework/jca/cci/core/package-summary.html">org.springframework.jca.cci.core</A><DD>Callback interface for extracting a result object from a CCI Record instance.<DT><A HREF="../org/springframework/validation/AbstractBindingResult.html#recordSuppressedField(java.lang.String)"><B>recordSuppressedField(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractBindingResult.html" title="class in org.springframework.validation">AbstractBindingResult</A>
<DD>Mark the specified disallowed field as suppressed.
<DT><A HREF="../org/springframework/validation/BindException.html#recordSuppressedField(java.lang.String)"><B>recordSuppressedField(String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindingResult.html#recordSuppressedField(java.lang.String)"><B>recordSuppressedField(String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A>
<DD>Mark the specified disallowed field as suppressed.
<DT><A HREF="../org/springframework/jca/cci/RecordTypeNotSupportedException.html" title="class in org.springframework.jca.cci"><B>RecordTypeNotSupportedException</B></A> - Exception in <A HREF="../org/springframework/jca/cci/package-summary.html">org.springframework.jca.cci</A><DD>Exception thrown when the creating of a CCI Record failed because
 the connector doesn't support the desired CCI Record type.<DT><A HREF="../org/springframework/jca/cci/RecordTypeNotSupportedException.html#RecordTypeNotSupportedException(java.lang.String, javax.resource.ResourceException)"><B>RecordTypeNotSupportedException(String, ResourceException)</B></A> - 
Constructor for exception org.springframework.jca.cci.<A HREF="../org/springframework/jca/cci/RecordTypeNotSupportedException.html" title="class in org.springframework.jca.cci">RecordTypeNotSupportedException</A>
<DD>Constructor for RecordTypeNotSupportedException.
<DT><A HREF="../org/springframework/dao/RecoverableDataAccessException.html" title="class in org.springframework.dao"><B>RecoverableDataAccessException</B></A> - Exception in <A HREF="../org/springframework/dao/package-summary.html">org.springframework.dao</A><DD>Data access exception thrown when a previously failed operation might be able
 to succeed if the application performs some recovery steps and retries the entire
 transaction or in the case of a distributed transaction, the transaction branch.<DT><A HREF="../org/springframework/dao/RecoverableDataAccessException.html#RecoverableDataAccessException(java.lang.String)"><B>RecoverableDataAccessException(String)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/RecoverableDataAccessException.html" title="class in org.springframework.dao">RecoverableDataAccessException</A>
<DD>Constructor for RecoverableDataAccessException.
<DT><A HREF="../org/springframework/dao/RecoverableDataAccessException.html#RecoverableDataAccessException(java.lang.String, java.lang.Throwable)"><B>RecoverableDataAccessException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.dao.<A HREF="../org/springframework/dao/RecoverableDataAccessException.html" title="class in org.springframework.dao">RecoverableDataAccessException</A>
<DD>Constructor for RecoverableDataAccessException.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#recoverAfterListenerSetupFailure()"><B>recoverAfterListenerSetupFailure()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Recover this listener container after a listener failed to set itself up,
 for example reestablishing the underlying Connection.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html#recreate()"><B>recreate()</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html" title="class in org.springframework.remoting.support">RemoteInvocationResult</A>
<DD>Recreate the invocation result, either returning the result value
 in case of a successful invocation of the target method, or
 rethrowing the exception thrown by the target method.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#recreateRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult)"><B>recreateRemoteInvocationResult(RemoteInvocationResult)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Recreate the invocation result contained in the given RemoteInvocationResult
 object.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html#recreateRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult)"><B>recreateRemoteInvocationResult(RemoteInvocationResult)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedAccessor</A>
<DD>Recreate the invocation result contained in the given RemoteInvocationResult object.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#REDIRECT_URL_PREFIX"><B>REDIRECT_URL_PREFIX</B></A> - 
Static variable in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Prefix for special view names that specify a redirect URL (usually
 to a controller after a form has been submitted and processed).
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view"><B>RedirectView</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD>View that redirects to an absolute, context relative, or current request
 relative URL.<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#RedirectView()"><B>RedirectView()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Constructor for use as a bean.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#RedirectView(java.lang.String)"><B>RedirectView(String)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Create a new RedirectView with the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#RedirectView(java.lang.String, boolean)"><B>RedirectView(String, boolean)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Create a new RedirectView with the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#RedirectView(java.lang.String, boolean, boolean)"><B>RedirectView(String, boolean, boolean)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Create a new RedirectView with the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#RedirectView(java.lang.String, boolean, boolean, boolean)"><B>RedirectView(String, boolean, boolean, boolean)</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Create a new RedirectView with the given URL.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#REF_ATTRIBUTE"><B>REF_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#REF_ELEMENT"><B>REF_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#REF_PREFIX"><B>REF_PREFIX</B></A> - 
Static variable in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Prefix before values referencing other beans.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#REF_SUFFIX"><B>REF_SUFFIX</B></A> - 
Static variable in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Property suffix for references to other beans in the current
 BeanFactory: e.g.
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html#REFERENCE_REQUEST"><B>REFERENCE_REQUEST</B></A> - 
Static variable in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request">RequestAttributes</A>
<DD>Name of the standard reference to the request object: "request".
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html#REFERENCE_SESSION"><B>REFERENCE_SESSION</B></A> - 
Static variable in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request">RequestAttributes</A>
<DD>Name of the standard reference to the session object: "session".
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(PortletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(PortletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Calls page-specific referenceData method.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors, int)"><B>referenceData(PortletRequest, Object, Errors, int)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#referenceData(javax.portlet.PortletRequest, int)"><B>referenceData(PortletRequest, int)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html#referenceData(javax.portlet.PortletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(PortletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html" title="class in org.springframework.web.portlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request and command,
 consisting of bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html#referenceData(javax.portlet.PortletRequest)"><B>referenceData(PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html" title="class in org.springframework.web.portlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(HttpServletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(HttpServletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Calls page-specific referenceData method.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors, int)"><B>referenceData(HttpServletRequest, Object, Errors, int)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html#referenceData(javax.servlet.http.HttpServletRequest, int)"><B>referenceData(HttpServletRequest, int)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.servlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request, consisting of
 bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest, java.lang.Object, org.springframework.validation.Errors)"><B>referenceData(HttpServletRequest, Object, Errors)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html" title="class in org.springframework.web.servlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request and command,
 consisting of bean name/bean instance pairs as expected by ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html#referenceData(javax.servlet.http.HttpServletRequest)"><B>referenceData(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.mvc.<A HREF="../org/springframework/web/servlet/mvc/SimpleFormController.html" title="class in org.springframework.web.servlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;Create a reference data map for the given request.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.html" title="class in org.springframework.expression.spel.support"><B>ReflectionHelper</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>Utility methods used by the reflection resolver code to discover the appropriate
 methods/constructors and fields that should be used in expressions.<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.html#ReflectionHelper()"><B>ReflectionHelper()</B></A> - 
Constructor for class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectionHelper.html" title="class in org.springframework.expression.spel.support">ReflectionHelper</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgsMatchKind.html" title="enum in org.springframework.expression.spel.support"><B>ReflectionHelper.ArgsMatchKind</B></A> - Enum in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>&nbsp;<DT><A HREF="../org/springframework/expression/spel/support/ReflectionHelper.ArgumentsMatchInfo.html" title="class in org.springframework.expression.spel.support"><B>ReflectionHelper.ArgumentsMatchInfo</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>An instance of ArgumentsMatchInfo describes what kind of match was achieved between two sets of arguments - the set that a
 method/constructor is expecting and the set that are being supplied at the point of invocation.<DT><A HREF="../org/springframework/test/util/ReflectionTestUtils.html" title="class in org.springframework.test.util"><B>ReflectionTestUtils</B></A> - Class in <A HREF="../org/springframework/test/util/package-summary.html">org.springframework.test.util</A><DD>
 ReflectionTestUtils is a collection of reflection-based utility methods for
 use in unit and integration testing scenarios.<DT><A HREF="../org/springframework/test/util/ReflectionTestUtils.html#ReflectionTestUtils()"><B>ReflectionTestUtils()</B></A> - 
Constructor for class org.springframework.test.util.<A HREF="../org/springframework/test/util/ReflectionTestUtils.html" title="class in org.springframework.test.util">ReflectionTestUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util"><B>ReflectionUtils</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Simple utility class for working with the reflection API and handling
 reflection exceptions.<DT><A HREF="../org/springframework/util/ReflectionUtils.html#ReflectionUtils()"><B>ReflectionUtils()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ReflectionUtils.FieldCallback.html" title="interface in org.springframework.util"><B>ReflectionUtils.FieldCallback</B></A> - Interface in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Callback interface invoked on each field in the hierarchy.<DT><A HREF="../org/springframework/util/ReflectionUtils.FieldFilter.html" title="interface in org.springframework.util"><B>ReflectionUtils.FieldFilter</B></A> - Interface in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Callback optionally used to filter fields to be operated on by a field callback.<DT><A HREF="../org/springframework/util/ReflectionUtils.MethodCallback.html" title="interface in org.springframework.util"><B>ReflectionUtils.MethodCallback</B></A> - Interface in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Action to take on each method.<DT><A HREF="../org/springframework/util/ReflectionUtils.MethodFilter.html" title="interface in org.springframework.util"><B>ReflectionUtils.MethodFilter</B></A> - Interface in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Callback optionally used to method fields to be operated on by a method callback.<DT><A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.html" title="class in org.springframework.aop.aspectj.annotation"><B>ReflectiveAspectJAdvisorFactory</B></A> - Class in <A HREF="../org/springframework/aop/aspectj/annotation/package-summary.html">org.springframework.aop.aspectj.annotation</A><DD>Factory that can create Spring AOP Advisors given AspectJ classes from
 classes honoring the AspectJ 5 annotation syntax, using reflection to
 invoke the corresponding advice methods.<DT><A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.html#ReflectiveAspectJAdvisorFactory()"><B>ReflectiveAspectJAdvisorFactory()</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.html" title="class in org.springframework.aop.aspectj.annotation">ReflectiveAspectJAdvisorFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor.html" title="class in org.springframework.aop.aspectj.annotation"><B>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor</B></A> - Class in <A HREF="../org/springframework/aop/aspectj/annotation/package-summary.html">org.springframework.aop.aspectj.annotation</A><DD>Synthetic advisor that instantiates the aspect.<DT><A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor.html#ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor(org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory)"><B>ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor(MetadataAwareAspectInstanceFactory)</B></A> - 
Constructor for class org.springframework.aop.aspectj.annotation.<A HREF="../org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor.html" title="class in org.springframework.aop.aspectj.annotation">ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveConstructorResolver.html" title="class in org.springframework.expression.spel.support"><B>ReflectiveConstructorResolver</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>A constructor resolver that uses reflection to locate the constructor that should be invoked<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveConstructorResolver.html#ReflectiveConstructorResolver()"><B>ReflectiveConstructorResolver()</B></A> - 
Constructor for class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectiveConstructorResolver.html" title="class in org.springframework.expression.spel.support">ReflectiveConstructorResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading"><B>ReflectiveLoadTimeWeaver</B></A> - Class in <A HREF="../org/springframework/instrument/classloading/package-summary.html">org.springframework.instrument.classloading</A><DD><A HREF="../org/springframework/instrument/classloading/LoadTimeWeaver.html" title="interface in org.springframework.instrument.classloading"><CODE>LoadTimeWeaver</CODE></A> which uses reflection to delegate to an underlying ClassLoader
 with well-known transformation hooks.<DT><A HREF="../org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html#ReflectiveLoadTimeWeaver()"><B>ReflectiveLoadTimeWeaver()</B></A> - 
Constructor for class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">ReflectiveLoadTimeWeaver</A>
<DD>Create a new ReflectiveLoadTimeWeaver for the current context class
 loader, <i>which needs to support the required weaving methods</i>.
<DT><A HREF="../org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html#ReflectiveLoadTimeWeaver(java.lang.ClassLoader)"><B>ReflectiveLoadTimeWeaver(ClassLoader)</B></A> - 
Constructor for class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">ReflectiveLoadTimeWeaver</A>
<DD>Create a new SimpleLoadTimeWeaver for the given class loader.
<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework"><B>ReflectiveMethodInvocation</B></A> - Class in <A HREF="../org/springframework/aop/framework/package-summary.html">org.springframework.aop.framework</A><DD>Spring's implementation of the AOP Alliance
 <A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/MethodInvocation.html?is-external=true" title="class or interface in org.aopalliance.intercept"><CODE>MethodInvocation</CODE></A> interface,
 implementing the extended
 <A HREF="../org/springframework/aop/ProxyMethodInvocation.html" title="interface in org.springframework.aop"><CODE>ProxyMethodInvocation</CODE></A> interface.<DT><A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html#ReflectiveMethodInvocation(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Class, java.util.List)"><B>ReflectiveMethodInvocation(Object, Object, Method, Object[], Class, List&lt;Object&gt;)</B></A> - 
Constructor for class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ReflectiveMethodInvocation.html" title="class in org.springframework.aop.framework">ReflectiveMethodInvocation</A>
<DD>Construct a new ReflectiveMethodInvocation with the given arguments.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html" title="class in org.springframework.expression.spel.support"><B>ReflectiveMethodResolver</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>A method resolver that uses reflection to locate the method that should be invoked.<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html#ReflectiveMethodResolver()"><B>ReflectiveMethodResolver()</B></A> - 
Constructor for class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html" title="class in org.springframework.expression.spel.support">ReflectiveMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support"><B>ReflectivePropertyAccessor</B></A> - Class in <A HREF="../org/springframework/expression/spel/support/package-summary.html">org.springframework.expression.spel.support</A><DD>Simple PropertyAccessor that uses reflection to access properties for reading and writing.<DT><A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html#ReflectivePropertyAccessor()"><B>ReflectivePropertyAccessor()</B></A> - 
Constructor for class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectivePropertyAccessor.html" title="class in org.springframework.expression.spel.support">ReflectivePropertyAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html#refresh()"><B>refresh()</B></A> - 
Method in class org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic">AbstractRefreshableTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/dynamic/Refreshable.html#refresh()"><B>refresh()</B></A> - 
Method in interface org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/Refreshable.html" title="interface in org.springframework.aop.target.dynamic">Refreshable</A>
<DD>Refresh the underlying target object.
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#refresh()"><B>refresh()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Load or refresh the persistent representation of the configuration,
 which might an XML file, properties file, or relational database schema.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#refresh()"><B>refresh()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Re-read the state of the given persistent instance.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#refresh(java.lang.Object, org.hibernate.LockMode)"><B>refresh(Object, LockMode)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Re-read the state of the given persistent instance.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#refresh(java.lang.Object, org.hibernate.LockMode)"><B>refresh(Object, LockMode)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/JdoOperations.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoOperations.html" title="interface in org.springframework.orm.jdo">JdoOperations</A>
<DD>Re-read the state of the given persistent instance.
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaOperations.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaOperations.html" title="interface in org.springframework.orm.jpa">JpaOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaTemplate.html#refresh(java.lang.Object)"><B>refresh(Object)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTemplate.html" title="class in org.springframework.orm.jpa">JpaTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/FrameworkPortlet.html#refresh()"><B>refresh()</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/FrameworkPortlet.html" title="class in org.springframework.web.portlet">FrameworkPortlet</A>
<DD>Refresh this portlet's application context, as well as the
 dependent state of the portlet.
<DT><A HREF="../org/springframework/web/servlet/FrameworkServlet.html#refresh()"><B>refresh()</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/FrameworkServlet.html" title="class in org.springframework.web.servlet">FrameworkServlet</A>
<DD>Refresh this servlet's application context, as well as the
 dependent state of the servlet.
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#REFRESH_CHECK_DELAY_ATTRIBUTE"><B>REFRESH_CHECK_DELAY_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/Log4jWebConfigurer.html#REFRESH_INTERVAL_PARAM"><B>REFRESH_INTERVAL_PARAM</B></A> - 
Static variable in class org.springframework.web.util.<A HREF="../org/springframework/web/util/Log4jWebConfigurer.html" title="class in org.springframework.web.util">Log4jWebConfigurer</A>
<DD>Parameter specifying the refresh interval for checking the log4j config file
<DT><A HREF="../org/springframework/aop/target/dynamic/Refreshable.html" title="interface in org.springframework.aop.target.dynamic"><B>Refreshable</B></A> - Interface in <A HREF="../org/springframework/aop/target/dynamic/package-summary.html">org.springframework.aop.target.dynamic</A><DD>Interface to be implemented by dynamic target objects,
 which support reloading and optionally polling for updates.<DT><A HREF="../org/springframework/scripting/support/RefreshableScriptTargetSource.html" title="class in org.springframework.scripting.support"><B>RefreshableScriptTargetSource</B></A> - Class in <A HREF="../org/springframework/scripting/support/package-summary.html">org.springframework.scripting.support</A><DD>Subclass of <A HREF="../org/springframework/aop/target/dynamic/BeanFactoryRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic"><CODE>BeanFactoryRefreshableTargetSource</CODE></A> that determines whether
 a refresh is required through the given <A HREF="../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A>.<DT><A HREF="../org/springframework/scripting/support/RefreshableScriptTargetSource.html#RefreshableScriptTargetSource(org.springframework.beans.factory.BeanFactory, java.lang.String, org.springframework.scripting.ScriptFactory, org.springframework.scripting.ScriptSource, boolean)"><B>RefreshableScriptTargetSource(BeanFactory, String, ScriptFactory, ScriptSource, boolean)</B></A> - 
Constructor for class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/RefreshableScriptTargetSource.html" title="class in org.springframework.scripting.support">RefreshableScriptTargetSource</A>
<DD>Create a new RefreshableScriptTargetSource.
<DT><A HREF="../org/springframework/orm/jdo/JdoOperations.html#refreshAll(java.util.Collection)"><B>refreshAll(Collection)</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoOperations.html" title="interface in org.springframework.orm.jdo">JdoOperations</A>
<DD>Re-read the state of all given persistent instances.
<DT><A HREF="../org/springframework/orm/jdo/JdoOperations.html#refreshAll()"><B>refreshAll()</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoOperations.html" title="interface in org.springframework.orm.jdo">JdoOperations</A>
<DD>Re-read the state of all persistent instances.
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#refreshAll(java.util.Collection)"><B>refreshAll(Collection)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jdo/JdoTemplate.html#refreshAll()"><B>refreshAll()</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoTemplate.html" title="class in org.springframework.orm.jdo">JdoTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html#refreshAndRetry(org.aopalliance.intercept.MethodInvocation)"><B>refreshAndRetry(MethodInvocation)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractRemoteSlsbInvokerInterceptor</A>
<DD>Refresh the EJB home object and retry the given invocation.
<DT><A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html#refreshAndRetry(org.aopalliance.intercept.MethodInvocation)"><B>refreshAndRetry(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/JndiRmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">JndiRmiClientInterceptor</A>
<DD>Refresh the RMI stub and retry the given invocation.
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html#refreshAndRetry(org.aopalliance.intercept.MethodInvocation)"><B>refreshAndRetry(MethodInvocation)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptor</A>
<DD>Refresh the RMI stub and retry the given invocation.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#refreshBeanFactory()"><B>refreshBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Subclasses must implement this method to perform the actual configuration load.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html#refreshBeanFactory()"><B>refreshBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableApplicationContext</A>
<DD>This implementation performs an actual refresh of this context's underlying
 bean factory, shutting down the previous bean factory (if any) and
 initializing a fresh bean factory for the next phase of the context's lifecycle.
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#refreshBeanFactory()"><B>refreshBeanFactory()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>Do nothing: We hold a single internal BeanFactory and rely on callers
 to register beans through our public methods (or the BeanFactory's).
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#refreshConnectionUntilSuccessful()"><B>refreshConnectionUntilSuccessful()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Refresh the underlying Connection, not returning before an attempt has been
 successful.
<DT><A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html#refreshDestination()"><B>refreshDestination()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/DefaultMessageListenerContainer.html" title="class in org.springframework.jms.listener">DefaultMessageListenerContainer</A>
<DD>Refresh the JMS destination that this listener container operates on.
<DT><A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html#refreshHome()"><B>refreshHome()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractSlsbInvokerInterceptor</A>
<DD>Refresh the cached home object, if applicable.
<DT><A HREF="../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html#refreshHome()"><B>refreshHome()</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">SimpleRemoteSlsbInvokerInterceptor</A>
<DD>Reset the cached session bean instance, if necessary.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#refreshProperties(java.lang.String, org.springframework.context.support.ReloadableResourceBundleMessageSource.PropertiesHolder)"><B>refreshProperties(String, ReloadableResourceBundleMessageSource.PropertiesHolder)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Refresh the PropertiesHolder for the given bundle filename.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#refreshSharedConnection()"><B>refreshSharedConnection()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Refresh the shared Connection that this container holds.
<DT><A HREF="../org/springframework/core/type/filter/RegexPatternTypeFilter.html" title="class in org.springframework.core.type.filter"><B>RegexPatternTypeFilter</B></A> - Class in <A HREF="../org/springframework/core/type/filter/package-summary.html">org.springframework.core.type.filter</A><DD>A simple filter for matching a fully-qualified class name with a regex <A HREF="http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html?is-external=true" title="class or interface in java.util.regex"><CODE>Pattern</CODE></A>.<DT><A HREF="../org/springframework/core/type/filter/RegexPatternTypeFilter.html#RegexPatternTypeFilter(java.util.regex.Pattern)"><B>RegexPatternTypeFilter(Pattern)</B></A> - 
Constructor for class org.springframework.core.type.filter.<A HREF="../org/springframework/core/type/filter/RegexPatternTypeFilter.html" title="class in org.springframework.core.type.filter">RegexPatternTypeFilter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support"><B>RegexpMethodPointcutAdvisor</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Convenient class for regexp method pointcuts that hold an Advice,
 making them an <A HREF="../org/springframework/aop/Advisor.html" title="interface in org.springframework.aop"><CODE>Advisor</CODE></A>.<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html#RegexpMethodPointcutAdvisor()"><B>RegexpMethodPointcutAdvisor()</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support">RegexpMethodPointcutAdvisor</A>
<DD>Create an empty RegexpMethodPointcutAdvisor.
<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html#RegexpMethodPointcutAdvisor(org.aopalliance.aop.Advice)"><B>RegexpMethodPointcutAdvisor(Advice)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support">RegexpMethodPointcutAdvisor</A>
<DD>Create a RegexpMethodPointcutAdvisor for the given advice.
<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html#RegexpMethodPointcutAdvisor(java.lang.String, org.aopalliance.aop.Advice)"><B>RegexpMethodPointcutAdvisor(String, Advice)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support">RegexpMethodPointcutAdvisor</A>
<DD>Create a RegexpMethodPointcutAdvisor for the given advice.
<DT><A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html#RegexpMethodPointcutAdvisor(java.lang.String[], org.aopalliance.aop.Advice)"><B>RegexpMethodPointcutAdvisor(String[], Advice)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RegexpMethodPointcutAdvisor.html" title="class in org.springframework.aop.support">RegexpMethodPointcutAdvisor</A>
<DD>Create a RegexpMethodPointcutAdvisor for the given advice.
<DT><A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html#register(java.lang.Class...)"><B>register(Class&lt;?&gt;...)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html" title="class in org.springframework.context.annotation">AnnotatedBeanDefinitionReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigApplicationContext.html#register(java.lang.Class...)"><B>register(Class&lt;?&gt;...)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigApplicationContext.html" title="class in org.springframework.context.annotation">AnnotationConfigApplicationContext</A>
<DD>Register an annotated class to be processed.
<DT><A HREF="../org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.html#registerAdvisorAdapter(org.springframework.aop.framework.adapter.AdvisorAdapter)"><B>registerAdvisorAdapter(AdvisorAdapter)</B></A> - 
Method in interface org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.html" title="interface in org.springframework.aop.framework.adapter">AdvisorAdapterRegistry</A>
<DD>Register the given AdvisorAdapter.
<DT><A HREF="../org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html#registerAdvisorAdapter(org.springframework.aop.framework.adapter.AdvisorAdapter)"><B>registerAdvisorAdapter(AdvisorAdapter)</B></A> - 
Method in class org.springframework.aop.framework.adapter.<A HREF="../org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.html" title="class in org.springframework.aop.framework.adapter">DefaultAdvisorAdapterRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#registerAfterCompletionWithExistingTransaction(java.lang.Object, java.util.List)"><B>registerAfterCompletionWithExistingTransaction(Object, List&lt;TransactionSynchronization&gt;)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#registerAfterCompletionWithExistingTransaction(java.lang.Object, java.util.List)"><B>registerAfterCompletionWithExistingTransaction(Object, List&lt;TransactionSynchronization&gt;)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Register the given list of transaction synchronizations with the existing transaction.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#registerAlias(java.lang.String, java.lang.String)"><B>registerAlias(String, String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Given a bean name, create an alias.
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#registerAlias(java.lang.String, java.lang.String)"><B>registerAlias(String, String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/AliasRegistry.html#registerAlias(java.lang.String, java.lang.String)"><B>registerAlias(String, String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/AliasRegistry.html" title="interface in org.springframework.core">AliasRegistry</A>
<DD>Given a name, register an alias for it.
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#registerAlias(java.lang.String, java.lang.String)"><B>registerAlias(String, String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerAnnotationConfigProcessors(BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html" title="class in org.springframework.context.annotation">AnnotationConfigUtils</A>
<DD>Register all relevant annotation post processors in the given registry.
<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"><B>registerAnnotationConfigProcessors(BeanDefinitionRegistry, Object)</B></A> - 
Static method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html" title="class in org.springframework.context.annotation">AnnotationConfigUtils</A>
<DD>Register all relevant annotation post processors in the given registry.
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerAspectJAnnotationAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"><B>registerAspectJAnnotationAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopNamespaceUtils.html#registerAspectJAnnotationAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)"><B>registerAspectJAnnotationAutoProxyCreatorIfNecessary(ParserContext, Element)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopNamespaceUtils.html" title="class in org.springframework.aop.config">AopNamespaceUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerAspectJAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"><B>registerAspectJAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopNamespaceUtils.html#registerAspectJAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)"><B>registerAspectJAutoProxyCreatorIfNecessary(ParserContext, Element)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopNamespaceUtils.html" title="class in org.springframework.aop.config">AopNamespaceUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerAutoProxyCreatorIfNecessary(BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"><B>registerAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopConfigUtils.html" title="class in org.springframework.aop.config">AopConfigUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopNamespaceUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)"><B>registerAutoProxyCreatorIfNecessary(ParserContext, Element)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopNamespaceUtils.html" title="class in org.springframework.aop.config">AopNamespaceUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/config/AopNamespaceUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)"><B>registerAutoProxyCreatorIfNecessary(ParserContext, Object)</B></A> - 
Static method in class org.springframework.aop.config.<A HREF="../org/springframework/aop/config/AopNamespaceUtils.html" title="class in org.springframework.aop.config">AopNamespaceUtils</A>
<DD><B>Deprecated.</B>&nbsp;<I>since Spring 2.5, in favor of
 <A HREF="../org/springframework/aop/config/AopNamespaceUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)"><CODE>AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(ParserContext, Element)</CODE></A> and
 <A HREF="../org/springframework/aop/config/AopConfigUtils.html#registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"><CODE>AopConfigUtils.registerAutoProxyCreatorIfNecessary(BeanDefinitionRegistry, Object)</CODE></A></I>
<DT><A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html#registerBean(java.lang.Class)"><B>registerBean(Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html" title="class in org.springframework.context.annotation">AnnotatedBeanDefinitionReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html#registerBean(java.lang.Class, java.lang.Class...)"><B>registerBean(Class&lt;?&gt;, Class&lt;? extends Annotation&gt;...)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html" title="class in org.springframework.context.annotation">AnnotatedBeanDefinitionReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html#registerBean(java.lang.Class, java.lang.String, java.lang.Class...)"><B>registerBean(Class&lt;?&gt;, String, Class&lt;? extends Annotation&gt;...)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotatedBeanDefinitionReader.html" title="class in org.springframework.context.annotation">AnnotatedBeanDefinitionReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/ParserContext.html#registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)"><B>registerBeanComponent(BeanComponentDefinition)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ParserContext.html" title="class in org.springframework.beans.factory.xml">ParserContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html#registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html" title="class in org.springframework.beans.factory.support">BeanDefinitionReaderUtils</A>
<DD>Register the given bean definition with the given bean factory.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><B>registerBeanDefinition(String, BeanDefinition)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support">BeanDefinitionRegistry</A>
<DD>Register a new bean definition with this registry.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><B>registerBeanDefinition(String, BeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinition(java.lang.String, java.util.Map, java.lang.String, java.lang.String)"><B>registerBeanDefinition(String, Map&lt;?, ?&gt;, String, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Get all property values, given a prefix (which will be stripped)
 and add the bean they define to the factory with the given name
<DT><A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html#registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><B>registerBeanDefinition(String, BeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html" title="class in org.springframework.beans.factory.support">SimpleBeanDefinitionRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html#registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractBeanDefinitionParser</A>
<DD>Register the supplied <A HREF="../org/springframework/beans/factory/config/BeanDefinitionHolder.html" title="class in org.springframework.beans.factory.config"><CODE>bean</CODE></A> with the supplied
 <A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support"><CODE>registry</CODE></A>.
<DT><A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html#registerBeanDefinition(org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathBeanDefinitionScanner.html" title="class in org.springframework.context.annotation">ClassPathBeanDefinitionScanner</A>
<DD>Register the specified bean with the given registry.
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)"><B>registerBeanDefinition(String, BeanDefinition)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html#registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)"><B>registerBeanDefinitionDecorator(String, BeanDefinitionDecorator)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html" title="class in org.springframework.beans.factory.xml">NamespaceHandlerSupport</A>
<DD>Subclasses can call this to register the supplied <A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDecorator.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionDecorator</CODE></A> to
 handle the specified element.
<DT><A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html#registerBeanDefinitionDecoratorForAttribute(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)"><B>registerBeanDefinitionDecoratorForAttribute(String, BeanDefinitionDecorator)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html" title="class in org.springframework.beans.factory.xml">NamespaceHandlerSupport</A>
<DD>Subclasses can call this to register the supplied <A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDecorator.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionDecorator</CODE></A> to
 handle the specified attribute.
<DT><A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html#registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)"><B>registerBeanDefinitionParser(String, BeanDefinitionParser)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerSupport.html" title="class in org.springframework.beans.factory.xml">NamespaceHandlerSupport</A>
<DD>Subclasses can call this to register the supplied <A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParser.html" title="interface in org.springframework.beans.factory.xml"><CODE>BeanDefinitionParser</CODE></A> to
 handle the specified element.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinitions(java.util.ResourceBundle)"><B>registerBeanDefinitions(ResourceBundle)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Register bean definitions contained in a resource bundle,
 using all property keys (i.e.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinitions(java.util.ResourceBundle, java.lang.String)"><B>registerBeanDefinitions(ResourceBundle, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Register bean definitions contained in a ResourceBundle.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinitions(java.util.Map)"><B>registerBeanDefinitions(Map)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Register bean definitions contained in a Map,
 using all property keys (i.e.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinitions(java.util.Map, java.lang.String)"><B>registerBeanDefinitions(Map, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Register bean definitions contained in a Map.
<DT><A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html#registerBeanDefinitions(java.util.Map, java.lang.String, java.lang.String)"><B>registerBeanDefinitions(Map, String, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/PropertiesBeanDefinitionReader.html" title="class in org.springframework.beans.factory.support">PropertiesBeanDefinitionReader</A>
<DD>Register bean definitions contained in a Map.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html#registerBeanDefinitions(org.w3c.dom.Document, org.springframework.beans.factory.xml.XmlReaderContext)"><B>registerBeanDefinitions(Document, XmlReaderContext)</B></A> - 
Method in interface org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.html" title="interface in org.springframework.beans.factory.xml">BeanDefinitionDocumentReader</A>
<DD>Read bean definitions from the given DOM document,
 and register them with the given bean factory.
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#registerBeanDefinitions(org.w3c.dom.Document, org.springframework.beans.factory.xml.XmlReaderContext)"><B>registerBeanDefinitions(Document, XmlReaderContext)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>Parses bean definitions according to the "spring-beans" DTD.
<DT><A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html#registerBeanDefinitions(org.w3c.dom.Document, org.springframework.core.io.Resource)"><B>registerBeanDefinitions(Document, Resource)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlBeanDefinitionReader.html" title="class in org.springframework.beans.factory.xml">XmlBeanDefinitionReader</A>
<DD>Register the bean definitions contained in the given DOM document.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#registerBeanNameOrInstance(java.lang.Object, java.lang.String)"><B>registerBeanNameOrInstance(Object, String)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Registers an individual bean with the <A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#setServer(javax.management.MBeanServer)"><CODE>MBeanServer</CODE></A>.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#registerBeanPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>registerBeanPostProcessors(ConfigurableListableBeanFactory)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Instantiate and invoke all registered BeanPostProcessor beans,
 respecting explicit order if given.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#registerBeans()"><B>registerBeans()</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>Registers the defined beans with the <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/MBeanServer.html?is-external=true" title="class or interface in javax.management"><CODE>MBeanServer</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/xml/ParserContext.html#registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)"><B>registerComponent(ComponentDefinition)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ParserContext.html" title="class in org.springframework.beans.factory.xml">ParserContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html#registerComponents(org.springframework.beans.factory.xml.XmlReaderContext, java.util.Set, org.w3c.dom.Element)"><B>registerComponents(XmlReaderContext, Set&lt;BeanDefinitionHolder&gt;, Element)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ComponentScanBeanDefinitionParser.html" title="class in org.springframework.context.annotation">ComponentScanBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#registerContainedBean(java.lang.String, java.lang.String)"><B>registerContainedBean(String, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Register a containment relationship between two beans,
 e.g.
<DT><A HREF="../org/springframework/mock/web/MockServletContext.html#registerContext(java.lang.String, javax.servlet.ServletContext)"><B>registerContext(String, ServletContext)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockServletContext.html" title="class in org.springframework.mock.web">MockServletContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html#registerConverters(java.util.Set, org.springframework.core.convert.converter.ConverterRegistry)"><B>registerConverters(Set&lt;?&gt;, ConverterRegistry)</B></A> - 
Static method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/ConversionServiceFactory.html" title="class in org.springframework.core.convert.support">ConversionServiceFactory</A>
<DD>Register the given converter objects with the given target registry.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#registerCustomEditor(java.lang.Class, java.lang.Class)"><B>registerCustomEditor(Class, Class&lt;? extends PropertyEditor&gt;)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Register the given custom property editor for all properties of the
 given type.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#registerCustomEditor(java.lang.Class, java.lang.Class)"><B>registerCustomEditor(Class, Class&lt;? extends PropertyEditor&gt;)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, PropertyEditor)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A>
<DD>Register the given custom property editor for all properties of the given type.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistry.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, String, PropertyEditor)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans">PropertyEditorRegistry</A>
<DD>Register the given custom property editor for the given type and
 property, or for all properties of the given type.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, PropertyEditor)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, String, PropertyEditor)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/ArgumentConvertingMethodInvoker.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, PropertyEditor)</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/ArgumentConvertingMethodInvoker.html" title="class in org.springframework.beans.support">ArgumentConvertingMethodInvoker</A>
<DD>Register the given custom property editor for all properties of the given type.
<DT><A HREF="../org/springframework/validation/DataBinder.html#registerCustomEditor(java.lang.Class, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, PropertyEditor)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DataBinder.html#registerCustomEditor(java.lang.Class, java.lang.String, java.beans.PropertyEditor)"><B>registerCustomEditor(Class, String, PropertyEditor)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DataBinder.html" title="class in org.springframework.validation">DataBinder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)"><B>registerCustomEditors(PropertyEditorRegistry)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Initialize the given PropertyEditorRegistry with the custom editors
 that have been registered with this BeanFactory.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrar.html#registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)"><B>registerCustomEditors(PropertyEditorRegistry)</B></A> - 
Method in interface org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrar.html" title="interface in org.springframework.beans">PropertyEditorRegistrar</A>
<DD>Register custom <A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditors</CODE></A> with
 the given <code>PropertyEditorRegistry</code>.
<DT><A HREF="../org/springframework/beans/support/ResourceEditorRegistrar.html#registerCustomEditors(org.springframework.beans.PropertyEditorRegistry)"><B>registerCustomEditors(PropertyEditorRegistry)</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/ResourceEditorRegistrar.html" title="class in org.springframework.beans.support">ResourceEditorRegistrar</A>
<DD>Populate the given bean factory with the following resource editors:
 ResourceEditor, InputStreamEditor, FileEditor, URLEditor, ClassEditor, URIEditor.
<DT><A HREF="../org/springframework/jdbc/support/SQLErrorCodesFactory.html#registerDatabase(javax.sql.DataSource, java.lang.String)"><B>registerDatabase(DataSource, String)</B></A> - 
Method in class org.springframework.jdbc.support.<A HREF="../org/springframework/jdbc/support/SQLErrorCodesFactory.html" title="class in org.springframework.jdbc.support">SQLErrorCodesFactory</A>
<DD>Associate the specified database name with the given <A HREF="http://java.sun.com/javase/6/docs/api/javax/sql/DataSource.html?is-external=true" title="class or interface in javax.sql"><CODE>DataSource</CODE></A>.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#registerDefaultEditors()"><B>registerDefaultEditors()</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD>Activate the default editors for this registry instance,
 allowing for lazily registering default editors when needed.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#registerDefaultFilters()"><B>registerDefaultFilters()</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Register the default filter for <A HREF="../org/springframework/stereotype/Component.html" title="annotation in org.springframework.stereotype"><CODE>@Component</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#registerDependentBean(java.lang.String, java.lang.String)"><B>registerDependentBean(String, String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Register a dependent bean for the given bean,
 to be destroyed before the given bean is destroyed.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#registerDependentBean(java.lang.String, java.lang.String)"><B>registerDependentBean(String, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Register a dependent bean for the given bean,
 to be destroyed before the given bean is destroyed.
<DT><A HREF="../org/springframework/beans/factory/config/Scope.html#registerDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerDestructionCallback(String, Runnable)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/Scope.html" title="interface in org.springframework.beans.factory.config">Scope</A>
<DD>Register a callback to be executed on destruction of the specified
 object in the scope (or at destruction of the entire scope, if the
 scope does not destroy individual objects but rather only terminates
 in its entirety).
<DT><A HREF="../org/springframework/context/support/SimpleThreadScope.html#registerDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/SimpleThreadScope.html" title="class in org.springframework.context.support">SimpleThreadScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html#registerDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html" title="class in org.springframework.web.context.request">AbstractRequestAttributesScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html#registerDestructionCallback(java.lang.String, java.lang.Runnable, int)"><B>registerDestructionCallback(String, Runnable, int)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html" title="class in org.springframework.web.context.request">FacesRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html#registerDestructionCallback(java.lang.String, java.lang.Runnable, int)"><B>registerDestructionCallback(String, Runnable, int)</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request">RequestAttributes</A>
<DD>Register a callback to be executed on destruction of the
 specified attribute in the given scope.
<DT><A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html#registerDestructionCallback(java.lang.String, java.lang.Runnable, int)"><B>registerDestructionCallback(String, Runnable, int)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html" title="class in org.springframework.web.context.request">ServletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextScope.html#registerDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextScope.html" title="class in org.springframework.web.context.support">ServletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletContextScope.html#registerDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletContextScope.html" title="class in org.springframework.web.portlet.context">PortletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html#registerDestructionCallback(java.lang.String, java.lang.Runnable, int)"><B>registerDestructionCallback(String, Runnable, int)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html" title="class in org.springframework.web.portlet.context">PortletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#registerDisposableBean(java.lang.String, org.springframework.beans.factory.DisposableBean)"><B>registerDisposableBean(String, DisposableBean)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Add the given bean to the list of disposable beans in this registry.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#registerDisposableBeanIfNecessary(java.lang.String, java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)"><B>registerDisposableBeanIfNecessary(String, Object, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Add the given bean to the list of disposable beans in this factory,
 registering its DisposableBean interface and/or the given destroy method
 to be called on factory shutdown (if applicable).
<DT><A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#registeredBeans"><B>registeredBeans</B></A> - 
Variable in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html" title="class in org.springframework.jmx.support">MBeanRegistrationSupport</A>
<DD>The beans that have been registered by this exporter.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html#registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)"><B>registerEnvironmentBeans(ConfigurableListableBeanFactory, ServletContext)</B></A> - 
Static method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html" title="class in org.springframework.web.context.support">WebApplicationContextUtils</A>
<DD>Register web-specific environment beans ("contextParameters", "contextAttributes")
 with the given BeanFactory, as used by the WebApplicationContext.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html#registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext, javax.servlet.ServletConfig)"><B>registerEnvironmentBeans(ConfigurableListableBeanFactory, ServletContext, ServletConfig)</B></A> - 
Static method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html" title="class in org.springframework.web.context.support">WebApplicationContextUtils</A>
<DD>Register web-specific environment beans ("contextParameters", "contextAttributes")
 with the given BeanFactory, as used by the WebApplicationContext.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#registerExternallyManagedConfigMember(java.lang.reflect.Member)"><B>registerExternallyManagedConfigMember(Member)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#registerExternallyManagedDestroyMethod(java.lang.String)"><B>registerExternallyManagedDestroyMethod(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#registerExternallyManagedInitMethod(java.lang.String)"><B>registerExternallyManagedInitMethod(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html#registerFunction(java.lang.String, java.lang.reflect.Method)"><B>registerFunction(String, Method)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html" title="class in org.springframework.expression.spel.support">StandardEvaluationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html#registerHandler(K, java.lang.Object)"><B>registerHandler(K, Object)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html" title="class in org.springframework.web.portlet.handler">AbstractMapBasedHandlerMapping</A>
<DD>Register the given handler instance for the given parameter value.
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html#registerHandler(K, java.lang.Object, org.springframework.web.portlet.handler.AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate)"><B>registerHandler(K, Object, AbstractMapBasedHandlerMapping.PortletRequestMappingPredicate)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html" title="class in org.springframework.web.portlet.handler">AbstractMapBasedHandlerMapping</A>
<DD>Register the given handler instance for the given parameter value.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html#registerHandler(javax.portlet.PortletMode, java.util.Map)"><B>registerHandler(PortletMode, Map&lt;String, ?&gt;)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeParameterHandlerMapping</A>
<DD>Register all handlers specified in the given parameter map.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html#registerHandler(javax.portlet.PortletMode, java.lang.String, java.lang.Object)"><B>registerHandler(PortletMode, String, Object)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeParameterHandlerMapping</A>
<DD>Register the given handler instance for the given PortletMode and parameter value,
 under an appropriate lookup key.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html#registerHandler(java.lang.String[], java.lang.String)"><B>registerHandler(String[], String)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractUrlHandlerMapping</A>
<DD>Register the specified handler for the given URL paths.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html#registerHandler(java.lang.String, java.lang.Object)"><B>registerHandler(String, Object)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">AbstractUrlHandlerMapping</A>
<DD>Register the specified handler for the given URL path.
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html#registerHandlers(java.util.Map)"><B>registerHandlers(Map&lt;K, ?&gt;)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractMapBasedHandlerMapping.html" title="class in org.springframework.web.portlet.handler">AbstractMapBasedHandlerMapping</A>
<DD>Register all handlers specified in the Portlet mode map for the corresponding modes.
<DT><A HREF="../org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html#registerHandlers(java.util.Map)"><B>registerHandlers(Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.html" title="class in org.springframework.web.servlet.handler">SimpleUrlHandlerMapping</A>
<DD>Register all handlers specified in the URL map for the corresponding paths.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeHandlerMapping.html#registerHandlersByMode(java.util.Map)"><B>registerHandlersByMode(Map&lt;String, Object&gt;)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeHandlerMapping</A>
<DD>Register all handlers specified in the Portlet mode map for the corresponding modes.
<DT><A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html#registerHandlersByModeAndParameter(java.util.Map)"><B>registerHandlersByModeAndParameter(Map&lt;String, Map&lt;String, ?&gt;&gt;)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/PortletModeParameterHandlerMapping.html" title="class in org.springframework.web.portlet.handler">PortletModeParameterHandlerMapping</A>
<DD>Register all handlers specified in the Portlet mode map for the corresponding modes.
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeLocator.html#registerImport(java.lang.String)"><B>registerImport(String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeLocator.html" title="class in org.springframework.expression.spel.support">StandardTypeLocator</A>
<DD>Register a new import prefix that will be used when searching for unqualified types.
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html#registerJobsAndTriggers()"><B>registerJobsAndTriggers()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html" title="class in org.springframework.scheduling.quartz">SchedulerAccessor</A>
<DD>Register jobs and triggers (within a transaction, if possible).
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#registerListeners()"><B>registerListeners()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Add beans that implement ApplicationListener as listeners.
<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html#registerListeners()"><B>registerListeners()</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html" title="class in org.springframework.scheduling.quartz">SchedulerAccessor</A>
<DD>Register all specified listeners with the Scheduler.
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#registerManagedResource(java.lang.Object)"><B>registerManagedResource(Object)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/MBeanExporter.html#registerManagedResource(java.lang.Object, javax.management.ObjectName)"><B>registerManagedResource(Object, ObjectName)</B></A> - 
Method in class org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExporter.html" title="class in org.springframework.jmx.export">MBeanExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/export/MBeanExportOperations.html#registerManagedResource(java.lang.Object)"><B>registerManagedResource(Object)</B></A> - 
Method in interface org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExportOperations.html" title="interface in org.springframework.jmx.export">MBeanExportOperations</A>
<DD>Register the supplied resource with JMX.
<DT><A HREF="../org/springframework/jmx/export/MBeanExportOperations.html#registerManagedResource(java.lang.Object, javax.management.ObjectName)"><B>registerManagedResource(Object, ObjectName)</B></A> - 
Method in interface org.springframework.jmx.export.<A HREF="../org/springframework/jmx/export/MBeanExportOperations.html" title="interface in org.springframework.jmx.export">MBeanExportOperations</A>
<DD>Register the supplied resource with JMX.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html#registerMethodFilter(java.lang.Class, org.springframework.expression.MethodFilter)"><B>registerMethodFilter(Class&lt;?&gt;, MethodFilter)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html" title="class in org.springframework.expression.spel.support">ReflectiveMethodResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html#registerMethodFilter(java.lang.Class, org.springframework.expression.MethodFilter)"><B>registerMethodFilter(Class&lt;?&gt;, MethodFilter)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html" title="class in org.springframework.expression.spel.support">StandardEvaluationContext</A>
<DD>Register a MethodFilter which will be called during method resolution for the
 specified type.
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#registerProcessedProperty(java.lang.String)"><B>registerProcessedProperty(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>Register the specified property as "processed" in the sense
 of some processor calling the corresponding setter method
 outside of the PropertyValue(s) mechanism.
<DT><A HREF="../org/springframework/context/support/StaticApplicationContext.html#registerPrototype(java.lang.String, java.lang.Class)"><B>registerPrototype(String, Class)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticApplicationContext.html" title="class in org.springframework.context.support">StaticApplicationContext</A>
<DD>Register a prototype bean with the underlying bean factory.
<DT><A HREF="../org/springframework/context/support/StaticApplicationContext.html#registerPrototype(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)"><B>registerPrototype(String, Class, MutablePropertyValues)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticApplicationContext.html" title="class in org.springframework.context.support">StaticApplicationContext</A>
<DD>Register a prototype bean with the underlying bean factory.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#registerPublicParameter(java.lang.String)"><B>registerPublicParameter(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#registerRequestDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerRequestDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Register the given callback as to be executed after request completion.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html#registerResolvableDependency(java.lang.Class, java.lang.Object)"><B>registerResolvableDependency(Class, Object)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableListableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableListableBeanFactory</A>
<DD>Register a special dependency type with corresponding autowired value.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#registerResolvableDependency(java.lang.Class, java.lang.Object)"><B>registerResolvableDependency(Class, Object)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#registerScope(java.lang.String, org.springframework.beans.factory.config.Scope)"><B>registerScope(String, Scope)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Register the given scope, backed by the given Scope implementation.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#registerScope(java.lang.String, org.springframework.beans.factory.config.Scope)"><B>registerScope(String, Scope)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html#registerScope(java.lang.Class, java.lang.String)"><B>registerScope(Class, String)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html" title="class in org.springframework.context.annotation">Jsr330ScopeMetadataResolver</A>
<DD>Register an extended JSR-330 scope annotation, mapping it onto a
 specific Spring scope by name.
<DT><A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html#registerScope(java.lang.String, java.lang.String)"><B>registerScope(String, String)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html" title="class in org.springframework.context.annotation">Jsr330ScopeMetadataResolver</A>
<DD>Register an extended JSR-330 scope annotation, mapping it onto a
 specific Spring scope by name.
<DT><A HREF="../org/springframework/scripting/config/LangNamespaceUtils.html#registerScriptFactoryPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerScriptFactoryPostProcessorIfNecessary(BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.scripting.config.<A HREF="../org/springframework/scripting/config/LangNamespaceUtils.html" title="class in org.springframework.scripting.config">LangNamespaceUtils</A>
<DD>Register a <A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> bean definition in the supplied
 <A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support"><CODE>BeanDefinitionRegistry</CODE></A> if the <A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support"><CODE>ScriptFactoryPostProcessor</CODE></A> hasn't
 already been registered.
<DT><A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html#registerSessionDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerSessionDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html" title="class in org.springframework.web.context.request">ServletRequestAttributes</A>
<DD>Register the given callback as to be executed after session termination.
<DT><A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html#registerSessionDestructionCallback(java.lang.String, java.lang.Runnable)"><B>registerSessionDestructionCallback(String, Runnable)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html" title="class in org.springframework.web.portlet.context">PortletRequestAttributes</A>
<DD>Register the given callback as to be executed after session termination.
<DT><A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html#registerSharedEditor(java.lang.Class, java.beans.PropertyEditor)"><B>registerSharedEditor(Class, PropertyEditor)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/PropertyEditorRegistrySupport.html" title="class in org.springframework.beans">PropertyEditorRegistrySupport</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of PropertyEditorRegistrars or ConversionService usage</I>
<DT><A HREF="../org/springframework/context/ConfigurableApplicationContext.html#registerShutdownHook()"><B>registerShutdownHook()</B></A> - 
Method in interface org.springframework.context.<A HREF="../org/springframework/context/ConfigurableApplicationContext.html" title="interface in org.springframework.context">ConfigurableApplicationContext</A>
<DD>Register a shutdown hook with the JVM runtime, closing this context
 on JVM shutdown unless it has already been closed at that time.
<DT><A HREF="../org/springframework/context/support/AbstractApplicationContext.html#registerShutdownHook()"><B>registerShutdownHook()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractApplicationContext.html" title="class in org.springframework.context.support">AbstractApplicationContext</A>
<DD>Register a shutdown hook with the JVM runtime, closing this context
 on JVM shutdown unless it has already been closed at that time.
<DT><A HREF="../org/springframework/beans/factory/config/SingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><B>registerSingleton(String, Object)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/SingletonBeanRegistry.html" title="interface in org.springframework.beans.factory.config">SingletonBeanRegistry</A>
<DD>Register the given existing object as singleton in the bean registry,
 under the given bean name.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#registerSingleton(java.lang.String, java.lang.Object)"><B>registerSingleton(String, Object)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/StaticApplicationContext.html#registerSingleton(java.lang.String, java.lang.Class)"><B>registerSingleton(String, Class)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticApplicationContext.html" title="class in org.springframework.context.support">StaticApplicationContext</A>
<DD>Register a singleton bean with the underlying bean factory.
<DT><A HREF="../org/springframework/context/support/StaticApplicationContext.html#registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)"><B>registerSingleton(String, Class, MutablePropertyValues)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticApplicationContext.html" title="class in org.springframework.context.support">StaticApplicationContext</A>
<DD>Register a singleton bean with the underlying bean factory.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html#registerSqlType(java.lang.String, int)"><B>registerSqlType(String, int)</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam">AbstractSqlParameterSource</A>
<DD>Register a SQL type for the given parameter.
<DT><A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html#registerSynchronization(javax.transaction.Synchronization)"><B>registerSynchronization(Synchronization)</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html" title="class in org.springframework.transaction.jta">ManagedTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html#registerSynchronization(org.springframework.transaction.support.TransactionSynchronization)"><B>registerSynchronization(TransactionSynchronization)</B></A> - 
Static method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support">TransactionSynchronizationManager</A>
<DD>Register a new transaction synchronization for the current thread.
<DT><A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html#registerTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask[], java.util.concurrent.ScheduledExecutorService)"><B>registerTasks(ScheduledExecutorTask[], ScheduledExecutorService)</B></A> - 
Method in class org.springframework.scheduling.concurrent.<A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.html" title="class in org.springframework.scheduling.concurrent">ScheduledExecutorFactoryBean</A>
<DD>Register the specified <A HREF="../org/springframework/scheduling/concurrent/ScheduledExecutorTask.html" title="class in org.springframework.scheduling.concurrent"><CODE>ScheduledExecutorTasks</CODE></A>
 on the given <A HREF="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledExecutorService.html?is-external=true" title="class or interface in java.util.concurrent"><CODE>ScheduledExecutorService</CODE></A>.
<DT><A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html#registerTasks(org.springframework.scheduling.timer.ScheduledTimerTask[], java.util.Timer)"><B>registerTasks(ScheduledTimerTask[], Timer)</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/TimerFactoryBean.html" title="class in org.springframework.scheduling.timer">TimerFactoryBean</A>
<DD><B>Deprecated.</B>&nbsp;Register the specified <A HREF="../org/springframework/scheduling/timer/ScheduledTimerTask.html" title="class in org.springframework.scheduling.timer"><CODE>ScheduledTimerTasks</CODE></A>
 on the given <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Timer.html?is-external=true" title="class or interface in java.util"><CODE>Timer</CODE></A>.
<DT><A HREF="../org/springframework/test/context/TestContextManager.html#registerTestExecutionListeners(org.springframework.test.context.TestExecutionListener...)"><B>registerTestExecutionListeners(TestExecutionListener...)</B></A> - 
Method in class org.springframework.test.context.<A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context">TestContextManager</A>
<DD>Register the supplied <A HREF="../org/springframework/test/context/TestExecutionListener.html" title="interface in org.springframework.test.context"><CODE>TestExecutionListeners</CODE></A>
 by appending them to the set of listeners used by this <code>TestContextManager</code>.
<DT><A HREF="../org/springframework/jdbc/support/lob/LobCreatorUtils.html#registerTransactionSynchronization(org.springframework.jdbc.support.lob.LobCreator, javax.transaction.TransactionManager)"><B>registerTransactionSynchronization(LobCreator, TransactionManager)</B></A> - 
Static method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/LobCreatorUtils.html" title="class in org.springframework.jdbc.support.lob">LobCreatorUtils</A>
<DD>Register a transaction synchronization for closing the given LobCreator,
 preferring Spring transaction synchronization and falling back to
 plain JTA transaction synchronization.
<DT><A HREF="../org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html#registerTypeName(java.lang.String, java.lang.String)"><B>registerTypeName(String, String)</B></A> - 
Method in class org.springframework.jdbc.core.namedparam.<A HREF="../org/springframework/jdbc/core/namedparam/AbstractSqlParameterSource.html" title="class in org.springframework.jdbc.core.namedparam">AbstractSqlParameterSource</A>
<DD>Register a SQL type for the given parameter.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html#registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"><B>registerWebApplicationScopes(ConfigurableListableBeanFactory)</B></A> - 
Static method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html" title="class in org.springframework.web.context.support">WebApplicationContextUtils</A>
<DD>Register web-specific scopes ("request", "session", "globalSession")
 with the given BeanFactory, as used by the WebApplicationContext.
<DT><A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html#registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, javax.servlet.ServletContext)"><B>registerWebApplicationScopes(ConfigurableListableBeanFactory, ServletContext)</B></A> - 
Static method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/WebApplicationContextUtils.html" title="class in org.springframework.web.context.support">WebApplicationContextUtils</A>
<DD>Register web-specific scopes ("request", "session", "globalSession", "application")
 with the given BeanFactory, as used by the WebApplicationContext.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html#registerWithGeneratedName(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry)"><B>registerWithGeneratedName(AbstractBeanDefinition, BeanDefinitionRegistry)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionReaderUtils.html" title="class in org.springframework.beans.factory.support">BeanDefinitionReaderUtils</A>
<DD>Register the given bean definition with a generated name,
 unique within the given bean factory.
<DT><A HREF="../org/springframework/beans/factory/xml/XmlReaderContext.html#registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)"><B>registerWithGeneratedName(BeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/XmlReaderContext.html" title="class in org.springframework.beans.factory.xml">XmlReaderContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#REGISTRATION_FAIL_ON_EXISTING"><B>REGISTRATION_FAIL_ON_EXISTING</B></A> - 
Static variable in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html" title="class in org.springframework.jmx.support">MBeanRegistrationSupport</A>
<DD>Constant indicating that registration should fail when
 attempting to register an MBean under a name that already exists.
<DT><A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#REGISTRATION_IGNORE_EXISTING"><B>REGISTRATION_IGNORE_EXISTING</B></A> - 
Static variable in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html" title="class in org.springframework.jmx.support">MBeanRegistrationSupport</A>
<DD>Constant indicating that registration should ignore the affected MBean
 when attempting to register an MBean under a name that already exists.
<DT><A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html#REGISTRATION_REPLACE_EXISTING"><B>REGISTRATION_REPLACE_EXISTING</B></A> - 
Static variable in class org.springframework.jmx.support.<A HREF="../org/springframework/jmx/support/MBeanRegistrationSupport.html" title="class in org.springframework.jmx.support">MBeanRegistrationSupport</A>
<DD>Constant indicating that registration should replace the affected MBean
 when attempting to register an MBean under a name that already exists.
<DT><A HREF="../org/springframework/beans/factory/support/MethodReplacer.html#reimplement(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"><B>reimplement(Object, Method, Object[])</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/MethodReplacer.html" title="interface in org.springframework.beans.factory.support">MethodReplacer</A>
<DD>Reimplement the given method.
<DT><A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#REINJECT_DEPENDENCIES_ATTRIBUTE"><B>REINJECT_DEPENDENCIES_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.test.context.support.<A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html" title="class in org.springframework.test.context.support">DependencyInjectionTestExecutionListener</A>
<DD>Attribute name for a <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>TestContext</CODE></A> attribute which indicates
 whether or not the dependencies of a test instance should be
 <em>reinjected</em> in
 <A HREF="../org/springframework/test/context/support/DependencyInjectionTestExecutionListener.html#beforeTestMethod(org.springframework.test.context.TestContext)"><CODE>beforeTestMethod()</CODE></A>.
<DT><A HREF="../org/springframework/validation/AbstractBindingResult.html#reject(java.lang.String, java.lang.Object[], java.lang.String)"><B>reject(String, Object[], String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractBindingResult.html" title="class in org.springframework.validation">AbstractBindingResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#reject(java.lang.String)"><B>reject(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#reject(java.lang.String, java.lang.String)"><B>reject(String, String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#reject(java.lang.String)"><B>reject(String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#reject(java.lang.String, java.lang.String)"><B>reject(String, String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#reject(java.lang.String, java.lang.Object[], java.lang.String)"><B>reject(String, Object[], String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/Errors.html#reject(java.lang.String)"><B>reject(String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a global error for the entire target object,
 using the given error description.
<DT><A HREF="../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.String)"><B>reject(String, String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a global error for the entire target object,
 using the given error description.
<DT><A HREF="../org/springframework/validation/Errors.html#reject(java.lang.String, java.lang.Object[], java.lang.String)"><B>reject(String, Object[], String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a global error for the entire target object,
 using the given error description.
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#reject(java.lang.String)"><B>reject(String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#reject(java.lang.String, java.lang.String)"><B>reject(String, String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#reject(java.lang.String, java.lang.Object[], java.lang.String)"><B>reject(String, Object[], String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String)"><B>rejectIfEmpty(Errors, String, String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code if the value is empty.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)"><B>rejectIfEmpty(Errors, String, String, String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code and default message
 if the value is empty.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[])"><B>rejectIfEmpty(Errors, String, String, Object[])</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error codea nd error arguments
 if the value is empty.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmpty(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectIfEmpty(Errors, String, String, Object[], String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code, error arguments
 and default message if the value is empty.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String)"><B>rejectIfEmptyOrWhitespace(Errors, String, String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code if the value is empty
 or just contains whitespace.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)"><B>rejectIfEmptyOrWhitespace(Errors, String, String, String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code and default message
 if the value is empty or just contains whitespace.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[])"><B>rejectIfEmptyOrWhitespace(Errors, String, String, Object[])</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code and error arguments
 if the value is empty or just contains whitespace.
<DT><A HREF="../org/springframework/validation/ValidationUtils.html#rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectIfEmptyOrWhitespace(Errors, String, String, Object[], String)</B></A> - 
Static method in class org.springframework.validation.<A HREF="../org/springframework/validation/ValidationUtils.html" title="class in org.springframework.validation">ValidationUtils</A>
<DD>Reject the given field with the given error code, error arguments
 and default message if the value is empty or just contains whitespace.
<DT><A HREF="../org/springframework/validation/AbstractBindingResult.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectValue(String, String, Object[], String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractBindingResult.html" title="class in org.springframework.validation">AbstractBindingResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#rejectValue(java.lang.String, java.lang.String)"><B>rejectValue(String, String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/AbstractErrors.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)"><B>rejectValue(String, String, String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractErrors.html" title="class in org.springframework.validation">AbstractErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String)"><B>rejectValue(String, String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)"><B>rejectValue(String, String, String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectValue(String, String, Object[], String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String)"><B>rejectValue(String, String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
<DT><A HREF="../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)"><B>rejectValue(String, String, String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
<DT><A HREF="../org/springframework/validation/Errors.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectValue(String, String, Object[], String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/Errors.html" title="interface in org.springframework.validation">Errors</A>
<DD>Register a field error for the specified field of the current object
 (respecting the current nested path, if any), using the given error
 description.
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#rejectValue(java.lang.String, java.lang.String)"><B>rejectValue(String, String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#rejectValue(java.lang.String, java.lang.String, java.lang.String)"><B>rejectValue(String, String, String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/EscapedErrors.html#rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)"><B>rejectValue(String, String, Object[], String)</B></A> - 
Method in class org.springframework.web.bind.<A HREF="../org/springframework/web/bind/EscapedErrors.html" title="class in org.springframework.web.bind">EscapedErrors</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#relative(int)"><B>relative(int)</B></A> - 
Method in class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html#relative(int)"><B>relative(int)</B></A> - 
Method in interface org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset">SqlRowSet</A>
<DD>Moves the cursor a relative number f rows, either positive or negative.
<DT><A HREF="../org/springframework/beans/factory/access/BeanFactoryReference.html#release()"><B>release()</B></A> - 
Method in interface org.springframework.beans.factory.access.<A HREF="../org/springframework/beans/factory/access/BeanFactoryReference.html" title="interface in org.springframework.beans.factory.access">BeanFactoryReference</A>
<DD>Indicate that the <A HREF="../org/springframework/beans/factory/BeanFactory.html" title="interface in org.springframework.beans.factory"><CODE>BeanFactory</CODE></A> instance referred to by this object is not
 needed any longer by the client code which obtained the <A HREF="../org/springframework/beans/factory/access/BeanFactoryReference.html" title="interface in org.springframework.beans.factory.access"><CODE>BeanFactoryReference</CODE></A>.
<DT><A HREF="../org/springframework/context/access/ContextBeanFactoryReference.html#release()"><B>release()</B></A> - 
Method in class org.springframework.context.access.<A HREF="../org/springframework/context/access/ContextBeanFactoryReference.html" title="class in org.springframework.context.access">ContextBeanFactoryReference</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html#release()"><B>release()</B></A> - 
Method in class org.springframework.jca.endpoint.<A HREF="../org/springframework/jca/endpoint/AbstractMessageEndpointFactory.AbstractMessageEndpoint.html" title="class in org.springframework.jca.endpoint">AbstractMessageEndpointFactory.AbstractMessageEndpoint</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jca/work/DelegatingWork.html#release()"><B>release()</B></A> - 
Method in class org.springframework.jca.work.<A HREF="../org/springframework/jca/work/DelegatingWork.html" title="class in org.springframework.jca.work">DelegatingWork</A>
<DD>This implementation is empty, since we expect the Runnable
 to terminate based on some specific shutdown signal.
<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#release()"><B>release()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html#release()"><B>release()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html" title="class in org.springframework.scheduling.commonj">DelegatingWork</A>
<DD>This implementation is empty, since we expect the Runnable
 to terminate based on some specific shutdown signal.
<DT><A HREF="../org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html#releaseBean(javax.interceptor.InvocationContext)"><B>releaseBean(InvocationContext)</B></A> - 
Method in class org.springframework.ejb.interceptor.<A HREF="../org/springframework/ejb/interceptor/SpringBeanAutowiringInterceptor.html" title="class in org.springframework.ejb.interceptor">SpringBeanAutowiringInterceptor</A>
<DD>Release the factory which has been used for autowiring the target bean.
<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html#releaseConnection(javax.resource.cci.Connection, javax.resource.cci.ConnectionFactory)"><B>releaseConnection(Connection, ConnectionFactory)</B></A> - 
Static method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jca.cci.connection">ConnectionFactoryUtils</A>
<DD>Close the given Connection, obtained from the given ConnectionFactory,
 if it is not managed externally (that is, not bound to the thread).
<DT><A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html#releaseConnection(javax.resource.cci.Connection)"><B>releaseConnection(Connection)</B></A> - 
Method in class org.springframework.jca.cci.core.support.<A HREF="../org/springframework/jca/cci/core/support/CciDaoSupport.html" title="class in org.springframework.jca.cci.core.support">CciDaoSupport</A>
<DD>Close the given CCI Connection, created via this bean's ConnectionFactory,
 if it isn't bound to the thread.
<DT><A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html#releaseConnection(java.sql.Connection)"><B>releaseConnection(Connection)</B></A> - 
Method in class org.springframework.jdbc.core.support.<A HREF="../org/springframework/jdbc/core/support/JdbcDaoSupport.html" title="class in org.springframework.jdbc.core.support">JdbcDaoSupport</A>
<DD>Close the given JDBC Connection, created via this DAO's DataSource,
 if it isn't bound to the thread.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHandle.html#releaseConnection(java.sql.Connection)"><B>releaseConnection(Connection)</B></A> - 
Method in interface org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHandle.html" title="interface in org.springframework.jdbc.datasource">ConnectionHandle</A>
<DD>Release the JDBC Connection that this handle refers to.
<DT><A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html#releaseConnection(java.sql.Connection, javax.sql.DataSource)"><B>releaseConnection(Connection, DataSource)</B></A> - 
Static method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html" title="class in org.springframework.jdbc.datasource">DataSourceUtils</A>
<DD>Close the given Connection, obtained from the given DataSource,
 if it is not managed externally (that is, not bound to the thread).
<DT><A HREF="../org/springframework/jdbc/datasource/SimpleConnectionHandle.html#releaseConnection(java.sql.Connection)"><B>releaseConnection(Connection)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/SimpleConnectionHandle.html" title="class in org.springframework.jdbc.datasource">SimpleConnectionHandle</A>
<DD>This implementation is empty, as we're using a standard
 Connection handle that does not have to be released.
<DT><A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html#releaseConnection(javax.jms.Connection, javax.jms.ConnectionFactory, boolean)"><B>releaseConnection(Connection, ConnectionFactory, boolean)</B></A> - 
Static method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/ConnectionFactoryUtils.html" title="class in org.springframework.jms.connection">ConnectionFactoryUtils</A>
<DD>Release the given Connection, stopping it (if necessary) and eventually closing it.
<DT><A HREF="../org/springframework/jndi/JndiTemplate.html#releaseContext(javax.naming.Context)"><B>releaseContext(Context)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiTemplate.html" title="class in org.springframework.jndi">JndiTemplate</A>
<DD>Release a JNDI context as obtained from <A HREF="../org/springframework/jndi/JndiTemplate.html#getContext()"><CODE>JndiTemplate.getContext()</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html#released()"><B>released()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/ConnectionHolder.html" title="class in org.springframework.jdbc.datasource">ConnectionHolder</A>
<DD>Releases the current Connection held by this ConnectionHolder.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#released()"><B>released()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Decrease the reference count by one because the holder has been released
 (i.e.
<DT><A HREF="../org/springframework/util/WeakReferenceMonitor.ReleaseListener.html#released()"><B>released()</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/WeakReferenceMonitor.ReleaseListener.html" title="interface in org.springframework.util">WeakReferenceMonitor.ReleaseListener</A>
<DD>This callback method is invoked once the associated handle has been released,
 i.e.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#releaseHeldSavepoint()"><B>releaseHeldSavepoint()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Release the savepoint that is held for the transaction.
<DT><A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.jdo.PersistenceManager)"><B>releaseJdbcConnection(ConnectionHandle, PersistenceManager)</B></A> - 
Method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/DefaultJdoDialect.html" title="class in org.springframework.orm.jdo">DefaultJdoDialect</A>
<DD>This implementation does nothing, assuming that the Connection
 will implicitly be closed with the PersistenceManager.
<DT><A HREF="../org/springframework/orm/jdo/JdoDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.jdo.PersistenceManager)"><B>releaseJdbcConnection(ConnectionHandle, PersistenceManager)</B></A> - 
Method in interface org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/JdoDialect.html" title="interface in org.springframework.orm.jdo">JdoDialect</A>
<DD>Release the given JDBC Connection, which has originally been retrieved
 via <code>getJdbcConnection</code>.
<DT><A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)"><B>releaseJdbcConnection(ConnectionHandle, EntityManager)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/DefaultJpaDialect.html" title="class in org.springframework.orm.jpa">DefaultJpaDialect</A>
<DD>This implementation does nothing, assuming that the Connection
 will implicitly be closed with the EntityManager.
<DT><A HREF="../org/springframework/orm/jpa/JpaDialect.html#releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.persistence.EntityManager)"><B>releaseJdbcConnection(ConnectionHandle, EntityManager)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaDialect.html" title="interface in org.springframework.orm.jpa">JpaDialect</A>
<DD>Release the given JDBC Connection, which has originally been retrieved
 via <code>getJdbcConnection</code>.
<DT><A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html#releasePersistenceManager(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory)"><B>releasePersistenceManager(PersistenceManager, PersistenceManagerFactory)</B></A> - 
Static method in class org.springframework.orm.jdo.<A HREF="../org/springframework/orm/jdo/PersistenceManagerFactoryUtils.html" title="class in org.springframework.orm.jdo">PersistenceManagerFactoryUtils</A>
<DD>Close the given PersistenceManager, created via the given factory,
 if it is not managed externally (i.e.
<DT><A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html#releasePersistenceManager(javax.jdo.PersistenceManager)"><B>releasePersistenceManager(PersistenceManager)</B></A> - 
Method in class org.springframework.orm.jdo.support.<A HREF="../org/springframework/orm/jdo/support/JdoDaoSupport.html" title="class in org.springframework.orm.jdo.support">JdoDaoSupport</A>
<DD>Close the given JDO PersistenceManager, created via this DAO's
 PersistenceManagerFactory, if it isn't bound to the thread.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#releaseResource(H, K)"><B>releaseResource(H, K)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>Release the given resource (after it has been unbound from the thread).
<DT><A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html#releaseResourcesAfterRead(java.sql.Connection, java.lang.Object)"><B>releaseResourcesAfterRead(Connection, Object)</B></A> - 
Method in class org.springframework.jdbc.support.lob.<A HREF="../org/springframework/jdbc/support/lob/OracleLobHandler.html" title="class in org.springframework.jdbc.support.lob">OracleLobHandler</A>
<DD>Release any LOB resources after read is complete.
<DT><A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html#releaseSavepoint(java.lang.Object)"><B>releaseSavepoint(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html" title="class in org.springframework.jdbc.datasource">JdbcTransactionObjectSupport</A>
<DD>This implementation releases the given JDBC 3.0 Savepoint.
<DT><A HREF="../org/springframework/transaction/SavepointManager.html#releaseSavepoint(java.lang.Object)"><B>releaseSavepoint(Object)</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/SavepointManager.html" title="interface in org.springframework.transaction">SavepointManager</A>
<DD>Explicitly release the given savepoint.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#releaseSavepoint(java.lang.Object)"><B>releaseSavepoint(Object)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>This implementation delegates to a SavepointManager for the
 underlying transaction, if possible.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html#releaseSession(org.hibernate.Session, org.hibernate.SessionFactory)"><B>releaseSession(Session, SessionFactory)</B></A> - 
Static method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionFactoryUtils.html" title="class in org.springframework.orm.hibernate3">SessionFactoryUtils</A>
<DD>Close the given Session, created via the given factory,
 if it is not managed externally (i.e.
<DT><A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html#releaseSession(org.hibernate.Session)"><B>releaseSession(Session)</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/HibernateDaoSupport.html" title="class in org.springframework.orm.hibernate3.support">HibernateDaoSupport</A>
<DD>Close the given Hibernate Session, created via this DAO's SessionFactory,
 if it isn't bound to the thread (i.e.
<DT><A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#releaseSessionBeanInstance(javax.ejb.EJBLocalObject)"><B>releaseSessionBeanInstance(EJBLocalObject)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">LocalSlsbInvokerInterceptor</A>
<DD>Release the given EJB instance.
<DT><A HREF="../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html#releaseSessionBeanInstance(javax.ejb.EJBObject)"><B>releaseSessionBeanInstance(EJBObject)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/SimpleRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">SimpleRemoteSlsbInvokerInterceptor</A>
<DD>Release the given EJB instance.
<DT><A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.html" title="class in org.springframework.aop.target">AbstractBeanFactoryBasedTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractLazyCreationTargetSource.html" title="class in org.springframework.aop.target">AbstractLazyCreationTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/AbstractPoolingTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/AbstractPoolingTargetSource.html" title="class in org.springframework.aop.target">AbstractPoolingTargetSource</A>
<DD>Return the given object to the pool.
<DT><A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/CommonsPoolTargetSource.html" title="class in org.springframework.aop.target">CommonsPoolTargetSource</A>
<DD>Returns the specified object to the underlying <code>ObjectPool</code>.
<DT><A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic">AbstractRefreshableTargetSource</A>
<DD>No need to release target.
<DT><A HREF="../org/springframework/aop/target/EmptyTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/EmptyTargetSource.html" title="class in org.springframework.aop.target">EmptyTargetSource</A>
<DD>Nothing to release.
<DT><A HREF="../org/springframework/aop/target/HotSwappableTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/HotSwappableTargetSource.html" title="class in org.springframework.aop.target">HotSwappableTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/target/PrototypeTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/PrototypeTargetSource.html" title="class in org.springframework.aop.target">PrototypeTargetSource</A>
<DD>Destroy the given independent instance.
<DT><A HREF="../org/springframework/aop/target/SingletonTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.aop.target.<A HREF="../org/springframework/aop/target/SingletonTargetSource.html" title="class in org.springframework.aop.target">SingletonTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/TargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in interface org.springframework.aop.<A HREF="../org/springframework/aop/TargetSource.html" title="interface in org.springframework.aop">TargetSource</A>
<DD>Release the given target object obtained from the
 <A HREF="../org/springframework/aop/TargetSource.html#getTarget()"><CODE>TargetSource.getTarget()</CODE></A> method.
<DT><A HREF="../org/springframework/jndi/JndiObjectTargetSource.html#releaseTarget(java.lang.Object)"><B>releaseTarget(Object)</B></A> - 
Method in class org.springframework.jndi.<A HREF="../org/springframework/jndi/JndiObjectTargetSource.html" title="class in org.springframework.jndi">JndiObjectTargetSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support"><B>ReloadableResourceBundleMessageSource</B></A> - Class in <A HREF="../org/springframework/context/support/package-summary.html">org.springframework.context.support</A><DD><A HREF="../org/springframework/context/MessageSource.html" title="interface in org.springframework.context"><CODE>MessageSource</CODE></A> implementation that
 accesses resource bundles using specified basenames.<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#ReloadableResourceBundleMessageSource()"><B>ReloadableResourceBundleMessageSource()</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html" title="class in org.springframework.context.support"><B>ReloadableResourceBundleMessageSource.PropertiesHolder</B></A> - Class in <A HREF="../org/springframework/context/support/package-summary.html">org.springframework.context.support</A><DD>PropertiesHolder for caching.<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html#ReloadableResourceBundleMessageSource.PropertiesHolder(java.util.Properties, long)"><B>ReloadableResourceBundleMessageSource.PropertiesHolder(Properties, long)</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource.PropertiesHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html#ReloadableResourceBundleMessageSource.PropertiesHolder()"><B>ReloadableResourceBundleMessageSource.PropertiesHolder()</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.PropertiesHolder.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource.PropertiesHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/RemoteAccessException.html" title="class in org.springframework.remoting"><B>RemoteAccessException</B></A> - Exception in <A HREF="../org/springframework/remoting/package-summary.html">org.springframework.remoting</A><DD>Generic remote access exception.<DT><A HREF="../org/springframework/remoting/RemoteAccessException.html#RemoteAccessException(java.lang.String)"><B>RemoteAccessException(String)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteAccessException.html" title="class in org.springframework.remoting">RemoteAccessException</A>
<DD>Constructor for RemoteAccessException.
<DT><A HREF="../org/springframework/remoting/RemoteAccessException.html#RemoteAccessException(java.lang.String, java.lang.Throwable)"><B>RemoteAccessException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteAccessException.html" title="class in org.springframework.remoting">RemoteAccessException</A>
<DD>Constructor for RemoteAccessException.
<DT><A HREF="../org/springframework/remoting/support/RemoteAccessor.html" title="class in org.springframework.remoting.support"><B>RemoteAccessor</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Abstract base class for classes that access a remote service.<DT><A HREF="../org/springframework/remoting/support/RemoteAccessor.html#RemoteAccessor()"><B>RemoteAccessor()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteAccessor.html" title="class in org.springframework.remoting.support">RemoteAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/RemoteConnectFailureException.html" title="class in org.springframework.remoting"><B>RemoteConnectFailureException</B></A> - Exception in <A HREF="../org/springframework/remoting/package-summary.html">org.springframework.remoting</A><DD>RemoteAccessException subclass to be thrown when no connection
 could be established with a remote service.<DT><A HREF="../org/springframework/remoting/RemoteConnectFailureException.html#RemoteConnectFailureException(java.lang.String, java.lang.Throwable)"><B>RemoteConnectFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteConnectFailureException.html" title="class in org.springframework.remoting">RemoteConnectFailureException</A>
<DD>Constructor for RemoteConnectFailureException.
<DT><A HREF="../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support"><B>RemoteExporter</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Abstract base class for classes that export a remote service.<DT><A HREF="../org/springframework/remoting/support/RemoteExporter.html#RemoteExporter()"><B>RemoteExporter()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteExporter.html" title="class in org.springframework.remoting.support">RemoteExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><B>RemoteInvocation</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Encapsulates a remote invocation, providing core method invocation properties
 in a serializable fashion.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocation.html#RemoteInvocation()"><B>RemoteInvocation()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support">RemoteInvocation</A>
<DD>Create a new RemoteInvocation for use as JavaBean.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocation.html#RemoteInvocation(java.lang.String, java.lang.Class[], java.lang.Object[])"><B>RemoteInvocation(String, Class[], Object[])</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support">RemoteInvocation</A>
<DD>Create a new RemoteInvocation for the given parameters.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocation.html#RemoteInvocation(org.aopalliance.intercept.MethodInvocation)"><B>RemoteInvocation(MethodInvocation)</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support">RemoteInvocation</A>
<DD>Create a new RemoteInvocation for the given AOP method invocation.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html" title="class in org.springframework.remoting.support"><B>RemoteInvocationBasedAccessor</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Abstract base class for remote service accessors that are based
 on serialization of <A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocation</CODE></A> objects.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html#RemoteInvocationBasedAccessor()"><B>RemoteInvocationBasedAccessor()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedAccessor.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support"><B>RemoteInvocationBasedExporter</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Abstract base class for remote service exporters that are based
 on deserialization of <A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocation</CODE></A> objects.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html#RemoteInvocationBasedExporter()"><B>RemoteInvocationBasedExporter()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationBasedExporter.html" title="class in org.springframework.remoting.support">RemoteInvocationBasedExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationExecutor.html" title="interface in org.springframework.remoting.support"><B>RemoteInvocationExecutor</B></A> - Interface in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Strategy interface for executing a <A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocation</CODE></A> on a target object.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationFactory.html" title="interface in org.springframework.remoting.support"><B>RemoteInvocationFactory</B></A> - Interface in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Strategy interface for creating a <A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocation</CODE></A> from an AOP Alliance
 <A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/MethodInvocation.html?is-external=true" title="class or interface in org.aopalliance.intercept"><CODE>MethodInvocation</CODE></A>.<DT><A HREF="../org/springframework/remoting/RemoteInvocationFailureException.html" title="class in org.springframework.remoting"><B>RemoteInvocationFailureException</B></A> - Exception in <A HREF="../org/springframework/remoting/package-summary.html">org.springframework.remoting</A><DD>RemoteAccessException subclass to be thrown when the execution
 of the target method failed on the server side, for example
 when a method was not found on the target object.<DT><A HREF="../org/springframework/remoting/RemoteInvocationFailureException.html#RemoteInvocationFailureException(java.lang.String, java.lang.Throwable)"><B>RemoteInvocationFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteInvocationFailureException.html" title="class in org.springframework.remoting">RemoteInvocationFailureException</A>
<DD>Constructor for RemoteInvocationFailureException.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html" title="class in org.springframework.remoting.support"><B>RemoteInvocationResult</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Encapsulates a remote invocation result, holding a result value or an exception.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html#RemoteInvocationResult(java.lang.Object)"><B>RemoteInvocationResult(Object)</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html" title="class in org.springframework.remoting.support">RemoteInvocationResult</A>
<DD>Create a new RemoteInvocationResult for the given result value.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html#RemoteInvocationResult(java.lang.Throwable)"><B>RemoteInvocationResult(Throwable)</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html" title="class in org.springframework.remoting.support">RemoteInvocationResult</A>
<DD>Create a new RemoteInvocationResult for the given exception.
<DT><A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html" title="class in org.springframework.remoting.rmi"><B>RemoteInvocationSerializingExporter</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>Abstract base class for remote service exporters that explicitly deserialize
 <A HREF="../org/springframework/remoting/support/RemoteInvocation.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocation</CODE></A> objects and serialize
 <A HREF="../org/springframework/remoting/support/RemoteInvocationResult.html" title="class in org.springframework.remoting.support"><CODE>RemoteInvocationResult</CODE></A> objects,
 for example Spring's HTTP invoker.<DT><A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html#RemoteInvocationSerializingExporter()"><B>RemoteInvocationSerializingExporter()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RemoteInvocationSerializingExporter.html" title="class in org.springframework.remoting.rmi">RemoteInvocationSerializingExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html" title="class in org.springframework.remoting.support"><B>RemoteInvocationTraceInterceptor</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>AOP Alliance MethodInterceptor for tracing remote invocations.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html#RemoteInvocationTraceInterceptor()"><B>RemoteInvocationTraceInterceptor()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html" title="class in org.springframework.remoting.support">RemoteInvocationTraceInterceptor</A>
<DD>Create a new RemoteInvocationTraceInterceptor.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html#RemoteInvocationTraceInterceptor(java.lang.String)"><B>RemoteInvocationTraceInterceptor(String)</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationTraceInterceptor.html" title="class in org.springframework.remoting.support">RemoteInvocationTraceInterceptor</A>
<DD>Create a new RemoteInvocationTraceInterceptor.
<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationUtils.html" title="class in org.springframework.remoting.support"><B>RemoteInvocationUtils</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>General utilities for handling remote invocations.<DT><A HREF="../org/springframework/remoting/support/RemoteInvocationUtils.html#RemoteInvocationUtils()"><B>RemoteInvocationUtils()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemoteInvocationUtils.html" title="class in org.springframework.remoting.support">RemoteInvocationUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/RemoteLookupFailureException.html" title="class in org.springframework.remoting"><B>RemoteLookupFailureException</B></A> - Exception in <A HREF="../org/springframework/remoting/package-summary.html">org.springframework.remoting</A><DD>RemoteAccessException subclass to be thrown in case of a lookup failure,
 typically if the lookup happens on demand for each method invocation.<DT><A HREF="../org/springframework/remoting/RemoteLookupFailureException.html#RemoteLookupFailureException(java.lang.String)"><B>RemoteLookupFailureException(String)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteLookupFailureException.html" title="class in org.springframework.remoting">RemoteLookupFailureException</A>
<DD>Constructor for RemoteLookupFailureException.
<DT><A HREF="../org/springframework/remoting/RemoteLookupFailureException.html#RemoteLookupFailureException(java.lang.String, java.lang.Throwable)"><B>RemoteLookupFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteLookupFailureException.html" title="class in org.springframework.remoting">RemoteLookupFailureException</A>
<DD>Constructor for RemoteLookupFailureException.
<DT><A HREF="../org/springframework/remoting/RemoteProxyFailureException.html" title="class in org.springframework.remoting"><B>RemoteProxyFailureException</B></A> - Exception in <A HREF="../org/springframework/remoting/package-summary.html">org.springframework.remoting</A><DD>RemoteAccessException subclass to be thrown in case of a failure
 within the client-side proxy for a remote service, for example
 when a method was not found on the underlying RMI stub.<DT><A HREF="../org/springframework/remoting/RemoteProxyFailureException.html#RemoteProxyFailureException(java.lang.String, java.lang.Throwable)"><B>RemoteProxyFailureException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.remoting.<A HREF="../org/springframework/remoting/RemoteProxyFailureException.html" title="class in org.springframework.remoting">RemoteProxyFailureException</A>
<DD>Constructor for RemoteProxyFailureException.
<DT><A HREF="../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support"><B>RemotingSupport</B></A> - Class in <A HREF="../org/springframework/remoting/support/package-summary.html">org.springframework.remoting.support</A><DD>Generic support base class for remote accessor and exporters,
 providing common bean ClassLoader handling.<DT><A HREF="../org/springframework/remoting/support/RemotingSupport.html#RemotingSupport()"><B>RemotingSupport()</B></A> - 
Constructor for class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support">RemotingSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/Scope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/Scope.html" title="interface in org.springframework.beans.factory.config">Scope</A>
<DD>Remove the object with the given <code>name</code> from the underlying scope.
<DT><A HREF="../org/springframework/context/support/SimpleThreadScope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/SimpleThreadScope.html" title="class in org.springframework.context.support">SimpleThreadScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/ConcurrentMap.html#remove(java.lang.Object, java.lang.Object)"><B>remove(Object, Object)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ConcurrentMap.html" title="interface in org.springframework.core">ConcurrentMap</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/http/HttpHeaders.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.http.<A HREF="../org/springframework/http/HttpHeaders.html" title="class in org.springframework.http">HttpHeaders</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaOperations.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in interface org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaOperations.html" title="interface in org.springframework.orm.jpa">JpaOperations</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/jpa/JpaTemplate.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.orm.jpa.<A HREF="../org/springframework/orm/jpa/JpaTemplate.html" title="class in org.springframework.orm.jpa">JpaTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#remove(int)"><B>remove(int)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CachingMapDecorator.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CachingMapDecorator.html" title="class in org.springframework.util">CachingMapDecorator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/CompositeIterator.html#remove()"><B>remove()</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/CompositeIterator.html" title="class in org.springframework.util">CompositeIterator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedCaseInsensitiveMap.html" title="class in org.springframework.util">LinkedCaseInsensitiveMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/LinkedMultiValueMap.html#remove(java.lang.Object)"><B>remove(Object)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/LinkedMultiValueMap.html" title="class in org.springframework.util">LinkedMultiValueMap</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html" title="class in org.springframework.web.context.request">AbstractRequestAttributesScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/SessionScope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/SessionScope.html" title="class in org.springframework.web.context.request">SessionScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextScope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextScope.html" title="class in org.springframework.web.context.support">ServletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletContextScope.html#remove(java.lang.String)"><B>remove(String)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletContextScope.html" title="class in org.springframework.web.portlet.context">PortletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/Advised.html#removeAdvice(org.aopalliance.aop.Advice)"><B>removeAdvice(Advice)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Remove the Advisor containing the given advice.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#removeAdvice(org.aopalliance.aop.Advice)"><B>removeAdvice(Advice)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/Advised.html#removeAdvisor(org.springframework.aop.Advisor)"><B>removeAdvisor(Advisor)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Remove the given advisor.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#removeAdvisor(int)"><B>removeAdvisor(int)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Remove the advisor at the given index.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#removeAdvisor(org.springframework.aop.Advisor)"><B>removeAdvisor(Advisor)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#removeAdvisor(int)"><B>removeAdvisor(int)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#removeAlias(java.lang.String)"><B>removeAlias(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/AliasRegistry.html#removeAlias(java.lang.String)"><B>removeAlias(String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/AliasRegistry.html" title="interface in org.springframework.core">AliasRegistry</A>
<DD>Remove the specified alias from this registry.
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#removeAlias(java.lang.String)"><B>removeAlias(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#removeAll(java.util.Collection)"><B>removeAll(Collection&lt;?&gt;)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html#removeAllListeners()"><B>removeAllListeners()</B></A> - 
Method in class org.springframework.context.event.<A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html" title="class in org.springframework.context.event">AbstractApplicationEventMulticaster</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html#removeAllListeners()"><B>removeAllListeners()</B></A> - 
Method in interface org.springframework.context.event.<A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html" title="interface in org.springframework.context.event">ApplicationEventMulticaster</A>
<DD>Remove all listeners registered with this multicaster.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#removeAllParameters()"><B>removeAllParameters()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Removes all existing parameters.
<DT><A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html#removeApplicationListener(org.springframework.context.ApplicationListener)"><B>removeApplicationListener(ApplicationListener)</B></A> - 
Method in class org.springframework.context.event.<A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html" title="class in org.springframework.context.event">AbstractApplicationEventMulticaster</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html#removeApplicationListener(org.springframework.context.ApplicationListener)"><B>removeApplicationListener(ApplicationListener)</B></A> - 
Method in interface org.springframework.context.event.<A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html" title="interface in org.springframework.context.event">ApplicationEventMulticaster</A>
<DD>Remove a listener from the notification list.
<DT><A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html#removeApplicationListenerBean(java.lang.String)"><B>removeApplicationListenerBean(String)</B></A> - 
Method in class org.springframework.context.event.<A HREF="../org/springframework/context/event/AbstractApplicationEventMulticaster.html" title="class in org.springframework.context.event">AbstractApplicationEventMulticaster</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html#removeApplicationListenerBean(java.lang.String)"><B>removeApplicationListenerBean(String)</B></A> - 
Method in interface org.springframework.context.event.<A HREF="../org/springframework/context/event/ApplicationEventMulticaster.html" title="interface in org.springframework.context.event">ApplicationEventMulticaster</A>
<DD>Remove a listener bean from the notification list.
<DT><A HREF="../org/springframework/beans/BeanMetadataAttributeAccessor.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanMetadataAttributeAccessor.html" title="class in org.springframework.beans">BeanMetadataAttributeAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/AttributeAccessor.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/AttributeAccessor.html" title="interface in org.springframework.core">AttributeAccessor</A>
<DD>Remove the attribute identified by <code>name</code> and return its value.
<DT><A HREF="../org/springframework/core/AttributeAccessorSupport.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/AttributeAccessorSupport.html" title="class in org.springframework.core">AttributeAccessorSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockPageContext.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockPageContext.html" title="class in org.springframework.mock.web">MockPageContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockServletContext.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockServletContext.html" title="class in org.springframework.mock.web">MockServletContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletContext.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletContext.html" title="class in org.springframework.mock.web.portlet">MockPortletContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletRequest.html" title="class in org.springframework.mock.web.portlet">MockPortletRequest</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletSession.html" title="class in org.springframework.mock.web.portlet">MockPortletSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/ServletWrappingPortletContext.html#removeAttribute(java.lang.String)"><B>removeAttribute(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/ServletWrappingPortletContext.html" title="class in org.springframework.mock.web.portlet">ServletWrappingPortletContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html" title="class in org.springframework.web.context.request">FacesRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request">RequestAttributes</A>
<DD>Remove the scoped attribute of the given name, if it exists.
<DT><A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html" title="class in org.springframework.web.context.request">ServletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html#removeAttribute(java.lang.String, int)"><B>removeAttribute(String, int)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html" title="class in org.springframework.web.portlet.context">PortletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html#removeAttributes()"><B>removeAttributes()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlElementBodyTag</A>
<DD>Called by <A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html#doFinally()"><CODE>AbstractHtmlElementBodyTag.doFinally()</CODE></A> allowing subclasses to remove any attributes from the
 <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/jsp/PageContext.html?is-external=true" title="class or interface in javax.servlet.jsp"><CODE>PageContext</CODE></A> as needed.
<DT><A HREF="../org/springframework/web/servlet/tags/form/ErrorsTag.html#removeAttributes()"><B>removeAttributes()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/ErrorsTag.html" title="class in org.springframework.web.servlet.tags.form">ErrorsTag</A>
<DD>Removes any bind status error messages that were previously stored under
 <A HREF="../org/springframework/web/servlet/tags/form/ErrorsTag.html#MESSAGES_ATTRIBUTE"><CODE>this key</CODE></A> in the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/jsp/PageContext.html?is-external=true#PAGE_SCOPE" title="class or interface in javax.servlet.jsp"><CODE>PageContext.PAGE_SCOPE</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html#removeAttributes()"><B>removeAttributes()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html" title="class in org.springframework.web.servlet.tags.form">OptionTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html#removeBeanDefinition(java.lang.String)"><B>removeBeanDefinition(String)</B></A> - 
Method in interface org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionRegistry.html" title="interface in org.springframework.beans.factory.support">BeanDefinitionRegistry</A>
<DD>Remove the BeanDefinition for the given name.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#removeBeanDefinition(java.lang.String)"><B>removeBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html#removeBeanDefinition(java.lang.String)"><B>removeBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/SimpleBeanDefinitionRegistry.html" title="class in org.springframework.beans.factory.support">SimpleBeanDefinitionRegistry</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/GenericApplicationContext.html#removeBeanDefinition(java.lang.String)"><B>removeBeanDefinition(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/GenericApplicationContext.html" title="class in org.springframework.context.support">GenericApplicationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html#removeBinding(java.lang.String)"><B>removeBinding(String)</B></A> - 
Method in class org.springframework.util.xml.<A HREF="../org/springframework/util/xml/SimpleNamespaceContext.html" title="class in org.springframework.util.xml">SimpleNamespaceContext</A>
<DD>Removes the given prefix from this context.
<DT><A HREF="../org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html#removeConnectionSpecFromCurrentThread()"><B>removeConnectionSpecFromCurrentThread()</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/ConnectionSpecConnectionFactoryAdapter.html" title="class in org.springframework.jca.cci.connection">ConnectionSpecConnectionFactoryAdapter</A>
<DD>Remove any ConnectionSpec for this proxy from the current thread.
<DT><A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html#removeConstructorResolver(org.springframework.expression.ConstructorResolver)"><B>removeConstructorResolver(ConstructorResolver)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html" title="class in org.springframework.expression.spel.support">StandardEvaluationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/convert/converter/ConverterRegistry.html#removeConvertible(java.lang.Class, java.lang.Class)"><B>removeConvertible(Class&lt;?&gt;, Class&lt;?&gt;)</B></A> - 
Method in interface org.springframework.core.convert.converter.<A HREF="../org/springframework/core/convert/converter/ConverterRegistry.html" title="interface in org.springframework.core.convert.converter">ConverterRegistry</A>
<DD>Remove any converters from sourceType to targetType.
<DT><A HREF="../org/springframework/core/convert/support/GenericConversionService.html#removeConvertible(java.lang.Class, java.lang.Class)"><B>removeConvertible(Class&lt;?&gt;, Class&lt;?&gt;)</B></A> - 
Method in class org.springframework.core.convert.support.<A HREF="../org/springframework/core/convert/support/GenericConversionService.html" title="class in org.springframework.core.convert.support">GenericConversionService</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/CookieGenerator.html#removeCookie(javax.servlet.http.HttpServletResponse)"><B>removeCookie(HttpServletResponse)</B></A> - 
Method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/CookieGenerator.html" title="class in org.springframework.web.util">CookieGenerator</A>
<DD>Remove the cookie that this generator describes from the response.
<DT><A HREF="../org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html#removeCredentialsFromCurrentThread()"><B>removeCredentialsFromCurrentThread()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.html" title="class in org.springframework.jdbc.datasource">UserCredentialsDataSourceAdapter</A>
<DD>Remove any user credentials for this proxy from the current thread.
<DT><A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html#removeCredentialsFromCurrentThread()"><B>removeCredentialsFromCurrentThread()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/UserCredentialsConnectionFactoryAdapter.html" title="class in org.springframework.jms.connection">UserCredentialsConnectionFactoryAdapter</A>
<DD>Remove any user credentials for this proxy from the current thread.
<DT><A HREF="../org/springframework/util/StringUtils.html#removeDuplicateStrings(java.lang.String[])"><B>removeDuplicateStrings(String[])</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Remove duplicate Strings from the given array.
<DT><A HREF="../org/springframework/jms/support/destination/CachingDestinationResolver.html#removeFromCache(java.lang.String)"><B>removeFromCache(String)</B></A> - 
Method in interface org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/CachingDestinationResolver.html" title="interface in org.springframework.jms.support.destination">CachingDestinationResolver</A>
<DD>Remove the destination with the given name from the cache
 (if cached by this resolver in the first place).
<DT><A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html#removeFromCache(java.lang.String)"><B>removeFromCache(String)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html" title="class in org.springframework.jms.support.destination">JndiDestinationResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html#removeFromCache(java.lang.String, java.util.Locale)"><B>removeFromCache(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractCachingViewResolver</A>
<DD>Provides functionality to clear the cache for a certain view.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#removeFromEnvironment(java.lang.String)"><B>removeFromEnvironment(String)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/scope/DefaultScopedObject.html#removeFromScope()"><B>removeFromScope()</B></A> - 
Method in class org.springframework.aop.scope.<A HREF="../org/springframework/aop/scope/DefaultScopedObject.html" title="class in org.springframework.aop.scope">DefaultScopedObject</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/scope/ScopedObject.html#removeFromScope()"><B>removeFromScope()</B></A> - 
Method in interface org.springframework.aop.scope.<A HREF="../org/springframework/aop/scope/ScopedObject.html" title="interface in org.springframework.aop.scope">ScopedObject</A>
<DD>Remove this object from its target scope, for example from
 the backing session.
<DT><A HREF="../org/springframework/expression/spel/support/StandardTypeLocator.html#removeImport(java.lang.String)"><B>removeImport(String)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardTypeLocator.html" title="class in org.springframework.expression.spel.support">StandardTypeLocator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#removeInterface(java.lang.Class)"><B>removeInterface(Class)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>Remove a proxied interface.
<DT><A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html#removeListener(org.springframework.aop.framework.AdvisedSupportListener)"><B>removeListener(AdvisedSupportListener)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/ProxyCreatorSupport.html" title="class in org.springframework.aop.framework">ProxyCreatorSupport</A>
<DD>Remove the given AdvisedSupportListener from this proxy configuration.
<DT><A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html#removeMethodResolver(org.springframework.expression.MethodResolver)"><B>removeMethodResolver(MethodResolver)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html" title="class in org.springframework.expression.spel.support">StandardEvaluationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/MockHttpServletRequest.html#removeParameter(java.lang.String)"><B>removeParameter(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletRequest.html" title="class in org.springframework.mock.web">MockHttpServletRequest</A>
<DD>Remove already registered values for the specified HTTP parameter, if any.
<DT><A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html#removePropertyAccessor(org.springframework.expression.PropertyAccessor)"><B>removePropertyAccessor(PropertyAccessor)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/StandardEvaluationContext.html" title="class in org.springframework.expression.spel.support">StandardEvaluationContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#removePropertyValue(org.springframework.beans.PropertyValue)"><B>removePropertyValue(PropertyValue)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>Remove the given PropertyValue, if contained.
<DT><A HREF="../org/springframework/beans/MutablePropertyValues.html#removePropertyValue(java.lang.String)"><B>removePropertyValue(String)</B></A> - 
Method in class org.springframework.beans.<A HREF="../org/springframework/beans/MutablePropertyValues.html" title="class in org.springframework.beans">MutablePropertyValues</A>
<DD>Overloaded version of <code>removePropertyValue</code> that takes a property name.
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html#removePublicRenderParameter(java.lang.String)"><B>removePublicRenderParameter(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletURL.html" title="class in org.springframework.mock.web.portlet">MockPortletURL</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockStateAwareResponse.html#removePublicRenderParameter(java.lang.String)"><B>removePublicRenderParameter(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockStateAwareResponse.html" title="class in org.springframework.mock.web.portlet">MockStateAwareResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#removeRequestDestructionCallback(java.lang.String)"><B>removeRequestDestructionCallback(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Remove the request destruction callback for the specified attribute, if any.
<DT><A HREF="../org/springframework/orm/hibernate3/SessionHolder.html#removeSession(java.lang.Object)"><B>removeSession(Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/SessionHolder.html" title="class in org.springframework.orm.hibernate3">SessionHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html#removeSessionBeanInstance(javax.ejb.EJBObject)"><B>removeSessionBeanInstance(EJBObject)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">AbstractRemoteSlsbInvokerInterceptor</A>
<DD>Remove the given EJB instance.
<DT><A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html#removeSessionBeanInstance(javax.ejb.EJBLocalObject)"><B>removeSessionBeanInstance(EJBLocalObject)</B></A> - 
Method in class org.springframework.ejb.access.<A HREF="../org/springframework/ejb/access/LocalSlsbInvokerInterceptor.html" title="class in org.springframework.ejb.access">LocalSlsbInvokerInterceptor</A>
<DD>Remove the given EJB instance.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#removeSingleton(java.lang.String)"><B>removeSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Overridden to clear FactoryBean instance cache as well.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html#removeSingleton(java.lang.String)"><B>removeSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.html" title="class in org.springframework.beans.factory.support">DefaultSingletonBeanRegistry</A>
<DD>Remove the bean with the given name from the singleton cache of this factory,
 to be able to clean up eager registration of a singleton if creation failed.
<DT><A HREF="../org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html#removeSingleton(java.lang.String)"><B>removeSingleton(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/FactoryBeanRegistrySupport.html" title="class in org.springframework.beans.factory.support">FactoryBeanRegistrySupport</A>
<DD>Overridden to clear the FactoryBean object cache as well.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#removeSingletonIfCreatedForTypeCheckOnly(java.lang.String)"><B>removeSingletonIfCreatedForTypeCheckOnly(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Remove the singleton instance (if any) for the given bean name,
 but only if it hasn't been used for other purposes than type checking.
<DT><A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html#removeTransformers()"><B>removeTransformers()</B></A> - 
Method in class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/InstrumentationLoadTimeWeaver.html" title="class in org.springframework.instrument.classloading">InstrumentationLoadTimeWeaver</A>
<DD>Remove all registered transformers, in inverse order of registration.
<DT><A HREF="../org/springframework/mock/web/MockHttpSession.html#removeValue(java.lang.String)"><B>removeValue(String)</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpSession.html" title="class in org.springframework.mock.web">MockHttpSession</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/util/WebUtils.html#removeWebAppRootSystemProperty(javax.servlet.ServletContext)"><B>removeWebAppRootSystemProperty(ServletContext)</B></A> - 
Static method in class org.springframework.web.util.<A HREF="../org/springframework/web/util/WebUtils.html" title="class in org.springframework.web.util">WebUtils</A>
<DD>Remove the system property that points to the web app root directory.
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#rename(java.lang.String, java.lang.String)"><B>rename(String, String)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html#rename(javax.naming.Name, javax.naming.Name)"><B>rename(Name, Name)</B></A> - 
Method in class org.springframework.mock.jndi.<A HREF="../org/springframework/mock/jndi/SimpleNamingContext.html" title="class in org.springframework.mock.jndi">SimpleNamingContext</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#render(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, java.io.Writer)"><B>render(JRExporter, JasperPrint, Writer)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render the supplied <code>JasperPrint</code> instance using the
 supplied <code>JRAbstractExporter</code> instance and write the results
 to the supplied <code>Writer</code>.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#render(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, java.io.OutputStream)"><B>render(JRExporter, JasperPrint, OutputStream)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render the supplied <code>JasperPrint</code> instance using the
 supplied <code>JRAbstractExporter</code> instance and write the results
 to the supplied <code>OutputStream</code>.
<DT><A HREF="../org/springframework/web/portlet/DispatcherPortlet.html#render(org.springframework.web.portlet.ModelAndView, javax.portlet.PortletRequest, javax.portlet.MimeResponse)"><B>render(ModelAndView, PortletRequest, MimeResponse)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet">DispatcherPortlet</A>
<DD>Render the given ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#render(org.springframework.web.servlet.ModelAndView, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>render(ModelAndView, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Render the given ModelAndView.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractView.html#render(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>render(Map&lt;String, ?&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A>
<DD>Prepares the view given the specified model, merging it with static
 attributes and a RequestContext attribute, if necessary.
<DT><A HREF="../org/springframework/web/servlet/View.html#render(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>render(Map&lt;String, ?&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/View.html" title="interface in org.springframework.web.servlet">View</A>
<DD>Render the view given the specified model.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsCsv(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer)"><B>renderAsCsv(JasperReport, Map, Object, Writer)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in CSV format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsCsv(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer, java.util.Map)"><B>renderAsCsv(JasperReport, Map, Object, Writer, Map)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in CSV format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsHtml(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer)"><B>renderAsHtml(JasperReport, Map, Object, Writer)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in HTML format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsHtml(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.Writer, java.util.Map)"><B>renderAsHtml(JasperReport, Map, Object, Writer, Map)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in HTML format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsPdf(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream)"><B>renderAsPdf(JasperReport, Map, Object, OutputStream)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in PDF format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsPdf(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream, java.util.Map)"><B>renderAsPdf(JasperReport, Map, Object, OutputStream, Map)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in PDF format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsXls(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream)"><B>renderAsXls(JasperReport, Map, Object, OutputStream)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in XLS format using the supplied report data.
<DT><A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html#renderAsXls(net.sf.jasperreports.engine.JasperReport, java.util.Map, java.lang.Object, java.io.OutputStream, java.util.Map)"><B>renderAsXls(JasperReport, Map, Object, OutputStream, Map)</B></A> - 
Static method in class org.springframework.ui.jasperreports.<A HREF="../org/springframework/ui/jasperreports/JasperReportsUtils.html" title="class in org.springframework.ui.jasperreports">JasperReportsUtils</A>
<DD>Render a report in XLS format using the supplied report data.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#renderCancel(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)"><B>renderCancel(RenderRequest, RenderResponse, Object, BindException)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Template method for the render phase of the cancel action of this wizard.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html#renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)"><B>renderDefaultContent(TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlElementBodyTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/ErrorsTag.html#renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)"><B>renderDefaultContent(TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/ErrorsTag.html" title="class in org.springframework.web.servlet.tags.form">ErrorsTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html#renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)"><B>renderDefaultContent(TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html" title="class in org.springframework.web.servlet.tags.form">OptionTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/MessageSourceSupport.html#renderDefaultMessage(java.lang.String, java.lang.Object[], java.util.Locale)"><B>renderDefaultMessage(String, Object[], Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/MessageSourceSupport.html" title="class in org.springframework.context.support">MessageSourceSupport</A>
<DD>Render the given default message String.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#renderFinish(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)"><B>renderFinish(RenderRequest, RenderResponse, Object, BindException)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Template method for the render phase of the finish action of this wizard.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)"><B>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Process render phase of form submission request.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)"><B>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Apply wizard workflow: finish, cancel, page change.
<DT><A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html#renderFormSubmission(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.validation.BindException)"><B>renderFormSubmission(RenderRequest, RenderResponse, Object, BindException)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/SimpleFormController.html" title="class in org.springframework.web.portlet.mvc">SimpleFormController</A>
<DD><B>Deprecated.</B>&nbsp;This implementation calls <code>showForm</code> in case of errors,
 and delegates to <code>onSubmitRender<code>'s full version else.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html#renderFromBodyContent(javax.servlet.jsp.tagext.BodyContent, org.springframework.web.servlet.tags.form.TagWriter)"><B>renderFromBodyContent(BodyContent, TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementBodyTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlElementBodyTag</A>
<DD>Render the tag contents based on the supplied <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/jsp/tagext/BodyContent.html?is-external=true" title="class or interface in javax.servlet.jsp.tagext"><CODE>BodyContent</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html#renderFromBodyContent(javax.servlet.jsp.tagext.BodyContent, org.springframework.web.servlet.tags.form.TagWriter)"><B>renderFromBodyContent(BodyContent, TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionTag.html" title="class in org.springframework.web.servlet.tags.form">OptionTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html#renderFromBoolean(java.lang.Boolean, org.springframework.web.servlet.tags.form.TagWriter)"><B>renderFromBoolean(Boolean, TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractCheckedElementTag</A>
<DD>Render the '<code>input(checkbox)</code>' with the supplied value, marking
 the '<code>input</code>' element as 'checked' if the supplied Boolean is
 <code>true</code>.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html#renderFromValue(java.lang.Object, org.springframework.web.servlet.tags.form.TagWriter)"><B>renderFromValue(Object, TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractCheckedElementTag</A>
<DD>Render the '<code>input(checkbox)</code>' with the supplied value, marking the
 '<code>input</code>' element as 'checked' if the supplied value matches the
 bound value.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html#renderFromValue(java.lang.Object, java.lang.Object, org.springframework.web.servlet.tags.form.TagWriter)"><B>renderFromValue(Object, Object, TagWriter)</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractCheckedElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractCheckedElementTag</A>
<DD>Render the '<code>input(checkbox)</code>' with the supplied value, marking the
 '<code>input</code>' element as 'checked' if the supplied value matches the
 bound value.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html#renderInvalidSubmit(javax.portlet.RenderRequest, javax.portlet.RenderResponse)"><B>renderInvalidSubmit(RenderRequest, RenderResponse)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractFormController</A>
<DD><B>Deprecated.</B>&nbsp;Handle an invalid submit request, e.g.
<DT><A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html#renderInvalidSubmit(javax.portlet.RenderRequest, javax.portlet.RenderResponse)"><B>renderInvalidSubmit(RenderRequest, RenderResponse)</B></A> - 
Method in class org.springframework.web.portlet.mvc.<A HREF="../org/springframework/web/portlet/mvc/AbstractWizardFormController.html" title="class in org.springframework.web.portlet.mvc">AbstractWizardFormController</A>
<DD><B>Deprecated.</B>&nbsp;Handle an invalid submit request, e.g.
<DT><A HREF="../org/springframework/web/portlet/bind/annotation/RenderMapping.html" title="annotation in org.springframework.web.portlet.bind.annotation"><B>RenderMapping</B></A> - Annotation Type in <A HREF="../org/springframework/web/portlet/bind/annotation/package-summary.html">org.springframework.web.portlet.bind.annotation</A><DD>Annotation for mapping Portlet render requests onto handler methods.<DT><A HREF="../org/springframework/web/servlet/view/AbstractTemplateView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractTemplateView.html" title="class in org.springframework.web.servlet.view">AbstractTemplateView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/AbstractView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractView.html" title="class in org.springframework.web.servlet.view">AbstractView</A>
<DD>Subclasses must implement this method to actually render the view.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractExcelView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractExcelView.html" title="class in org.springframework.web.servlet.view.document">AbstractExcelView</A>
<DD>Renders the Excel view, given the specified model.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractJExcelView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractJExcelView.html" title="class in org.springframework.web.servlet.view.document">AbstractJExcelView</A>
<DD>Renders the Excel view, given the specified model.
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractPdfStamperView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractPdfStamperView.html" title="class in org.springframework.web.servlet.view.document">AbstractPdfStamperView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.document.<A HREF="../org/springframework/web/servlet/view/document/AbstractPdfView.html" title="class in org.springframework.web.servlet.view.document">AbstractPdfView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.feed.<A HREF="../org/springframework/web/servlet/view/feed/AbstractFeedView.html" title="class in org.springframework.web.servlet.view.feed">AbstractFeedView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view">InternalResourceView</A>
<DD>Render the internal resource given the specified model.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Finds the report data to use for rendering the report and then invokes the
 <A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)"><CODE>AbstractJasperReportsView.renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletResponse)</CODE></A> method that should be implemented by the subclass.
<DT><A HREF="../org/springframework/web/servlet/view/json/MappingJacksonJsonView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.json.<A HREF="../org/springframework/web/servlet/view/json/MappingJacksonJsonView.html" title="class in org.springframework.web.servlet.view.json">MappingJacksonJsonView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/RedirectView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/RedirectView.html" title="class in org.springframework.web.servlet.view">RedirectView</A>
<DD>Convert model to request parameters and redirect to the given URL.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html" title="class in org.springframework.web.servlet.view.tiles2">TilesView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xml/MarshallingView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.xml.<A HREF="../org/springframework/web/servlet/view/xml/MarshallingView.html" title="class in org.springframework.web.servlet.view.xml">MarshallingView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html#renderMergedOutputModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedOutputModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltView.html" title="class in org.springframework.web.servlet.view.xslt">XsltView</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/AbstractTemplateView.html#renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedTemplateModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractTemplateView.html" title="class in org.springframework.web.servlet.view">AbstractTemplateView</A>
<DD>Subclasses must implement this method to actually render the view.
<DT><A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html#renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedTemplateModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.freemarker.<A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html" title="class in org.springframework.web.servlet.view.freemarker">FreeMarkerView</A>
<DD>Process the model map by merging it with the FreeMarker template.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html#renderMergedTemplateModel(java.util.Map, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderMergedTemplateModel(Map&lt;String, Object&gt;, HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity">VelocityView</A>
<DD>Process the model map by merging it with the Velocity template.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html#renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)"><B>renderReport(JasperPrint, Map&lt;String, Object&gt;, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsSingleFormatView</A>
<DD>Perform rendering for a single Jasper Reports exporter, that is,
 for a pre-defined output format.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html#renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)"><B>renderReport(JasperPrint, Map&lt;String, Object&gt;, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsView</A>
<DD>Subclasses should implement this method to perform the actual rendering process.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html#renderReport(net.sf.jasperreports.engine.JasperPrint, java.util.Map, javax.servlet.http.HttpServletResponse)"><B>renderReport(JasperPrint, Map&lt;String, Object&gt;, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsMultiFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsMultiFormatView</A>
<DD>Locates the format key in the model using the configured discriminator key and uses this
 key to lookup the appropriate view class from the mappings.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html#renderReportUsingOutputStream(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, javax.servlet.http.HttpServletResponse)"><B>renderReportUsingOutputStream(JRExporter, JasperPrint, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsSingleFormatView</A>
<DD>We need to write binary output to the response OutputStream.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html#renderReportUsingWriter(net.sf.jasperreports.engine.JRExporter, net.sf.jasperreports.engine.JasperPrint, javax.servlet.http.HttpServletResponse)"><B>renderReportUsingWriter(JRExporter, JasperPrint, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsSingleFormatView.html" title="class in org.springframework.web.servlet.view.jasperreports">AbstractJasperReportsSingleFormatView</A>
<DD>We need to write text to the response Writer.
<DT><A HREF="../org/springframework/web/servlet/ViewRendererServlet.html#renderView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)"><B>renderView(HttpServletRequest, HttpServletResponse)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ViewRendererServlet.html" title="class in org.springframework.web.servlet">ViewRendererServlet</A>
<DD>Retrieve the View instance and model Map to render
 and trigger actual rendering.
<DT><A HREF="../org/springframework/test/annotation/Repeat.html" title="annotation in org.springframework.test.annotation"><B>Repeat</B></A> - Annotation Type in <A HREF="../org/springframework/test/annotation/package-summary.html">org.springframework.test.annotation</A><DD>Test annotation to indicate that a test method should be invoked repeatedly.<DT><A HREF="../org/springframework/core/ConcurrentMap.html#replace(java.lang.Object, java.lang.Object, java.lang.Object)"><B>replace(Object, Object, Object)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ConcurrentMap.html" title="interface in org.springframework.core">ConcurrentMap</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/core/ConcurrentMap.html#replace(java.lang.Object, java.lang.Object)"><B>replace(Object, Object)</B></A> - 
Method in interface org.springframework.core.<A HREF="../org/springframework/core/ConcurrentMap.html" title="interface in org.springframework.core">ConcurrentMap</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/AbstractLobType.html#replace(java.lang.Object, java.lang.Object, java.lang.Object)"><B>replace(Object, Object, Object)</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/AbstractLobType.html" title="class in org.springframework.orm.hibernate3.support">AbstractLobType</A>
<DD>This implementation returns the passed-in original as-is.
<DT><A HREF="../org/springframework/util/StringUtils.html#replace(java.lang.String, java.lang.String, java.lang.String)"><B>replace(String, String, String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/StringUtils.html" title="class in org.springframework.util">StringUtils</A>
<DD>Replace all occurences of a substring within a string with
 another string.
<DT><A HREF="../org/springframework/aop/framework/Advised.html#replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor)"><B>replaceAdvisor(Advisor, Advisor)</B></A> - 
Method in interface org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/Advised.html" title="interface in org.springframework.aop.framework">Advised</A>
<DD>Replace the given advisor.
<DT><A HREF="../org/springframework/aop/framework/AdvisedSupport.html#replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor)"><B>replaceAdvisor(Advisor, Advisor)</B></A> - 
Method in class org.springframework.aop.framework.<A HREF="../org/springframework/aop/framework/AdvisedSupport.html" title="class in org.springframework.aop.framework">AdvisedSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#REPLACED_METHOD_ELEMENT"><B>REPLACED_METHOD_ELEMENT</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/ReplaceOverride.html" title="class in org.springframework.beans.factory.support"><B>ReplaceOverride</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>Extension of MethodOverride that represents an arbitrary
 override of a method by the IoC container.<DT><A HREF="../org/springframework/beans/factory/support/ReplaceOverride.html#ReplaceOverride(java.lang.String, java.lang.String)"><B>ReplaceOverride(String, String)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/ReplaceOverride.html" title="class in org.springframework.beans.factory.support">ReplaceOverride</A>
<DD>Construct a new ReplaceOverride.
<DT><A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html#replacePlaceholders(java.lang.String, org.aopalliance.intercept.MethodInvocation, java.lang.Object, java.lang.Throwable, long)"><B>replacePlaceholders(String, MethodInvocation, Object, Throwable, long)</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/CustomizableTraceInterceptor.html" title="class in org.springframework.aop.interceptor">CustomizableTraceInterceptor</A>
<DD>Replace the placeholders in the given message with the supplied values,
 or values derived from those supplied.
<DT><A HREF="../org/springframework/util/PropertyPlaceholderHelper.html#replacePlaceholders(java.lang.String, java.util.Properties)"><B>replacePlaceholders(String, Properties)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/PropertyPlaceholderHelper.html" title="class in org.springframework.util">PropertyPlaceholderHelper</A>
<DD>Replaces all placeholders of format <code>${name}</code> with the corresponding property
 from the supplied <A HREF="http://java.sun.com/javase/6/docs/api/java/util/Properties.html?is-external=true" title="class or interface in java.util"><CODE>Properties</CODE></A>.
<DT><A HREF="../org/springframework/util/PropertyPlaceholderHelper.html#replacePlaceholders(java.lang.String, org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver)"><B>replacePlaceholders(String, PropertyPlaceholderHelper.PlaceholderResolver)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/PropertyPlaceholderHelper.html" title="class in org.springframework.util">PropertyPlaceholderHelper</A>
<DD>Replaces all placeholders of format <code>${name}</code> with the value returned from the supplied
 <A HREF="../org/springframework/util/PropertyPlaceholderHelper.PlaceholderResolver.html" title="interface in org.springframework.util"><CODE>PropertyPlaceholderHelper.PlaceholderResolver</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html#REPLACER_ATTRIBUTE"><B>REPLACER_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeanDefinitionParserDelegate.html" title="class in org.springframework.beans.factory.xml">BeanDefinitionParserDelegate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/UrlTag.html#replaceUriTemplateParams(java.lang.String, java.util.List, java.util.Set)"><B>replaceUriTemplateParams(String, List&lt;Param&gt;, Set&lt;String&gt;)</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/UrlTag.html" title="class in org.springframework.web.servlet.tags">UrlTag</A>
<DD>Replace template markers in the URL matching available parameters.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#replicate(java.lang.Object, org.hibernate.ReplicationMode)"><B>replicate(Object, ReplicationMode)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Persist the state of the given detached instance according to the
 given replication mode, reusing the current identifier value.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html#replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)"><B>replicate(String, Object, ReplicationMode)</B></A> - 
Method in interface org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateOperations.html" title="interface in org.springframework.orm.hibernate3">HibernateOperations</A>
<DD>Persist the state of the given detached instance according to the
 given replication mode, reusing the current identifier value.
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#replicate(java.lang.Object, org.hibernate.ReplicationMode)"><B>replicate(Object, ReplicationMode)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html#replicate(java.lang.String, java.lang.Object, org.hibernate.ReplicationMode)"><B>replicate(String, Object, ReplicationMode)</B></A> - 
Method in class org.springframework.orm.hibernate3.<A HREF="../org/springframework/orm/hibernate3/HibernateTemplate.html" title="class in org.springframework.orm.hibernate3">HibernateTemplate</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/stereotype/Repository.html" title="annotation in org.springframework.stereotype"><B>Repository</B></A> - Annotation Type in <A HREF="../org/springframework/stereotype/package-summary.html">org.springframework.stereotype</A><DD>Indicates that an annotated class is a "Repository" (or "DAO").<DT><A HREF="../org/springframework/web/servlet/tags/RequestContextAwareTag.html#REQUEST_CONTEXT_PAGE_ATTRIBUTE"><B>REQUEST_CONTEXT_PAGE_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/RequestContextAwareTag.html" title="class in org.springframework.web.servlet.tags">RequestContextAwareTag</A>
<DD><A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/jsp/PageContext.html?is-external=true" title="class or interface in javax.servlet.jsp"><CODE>PageContext</CODE></A> attribute for the
 page-level <A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support"><CODE>RequestContext</CODE></A> instance.
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#REQUEST_TO_VIEW_NAME_TRANSLATOR_BEAN_NAME"><B>REQUEST_TO_VIEW_NAME_TRANSLATOR_BEAN_NAME</B></A> - 
Static variable in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Well-known name for the RequestToViewNameTranslator object in the bean factory for this namespace.
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request"><B>RequestAttributes</B></A> - Interface in <A HREF="../org/springframework/web/context/request/package-summary.html">org.springframework.web.context.request</A><DD>Abstraction for accessing attribute objects associated with a request.<DT><A HREF="../org/springframework/web/bind/annotation/RequestBody.html" title="annotation in org.springframework.web.bind.annotation"><B>RequestBody</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation which indicates that a method parameter should be bound to the web request body.<DT><A HREF="../org/springframework/web/client/RequestCallback.html" title="interface in org.springframework.web.client"><B>RequestCallback</B></A> - Interface in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Callback interface for code that operates on a <A HREF="../org/springframework/http/client/ClientHttpRequest.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequest</CODE></A>.<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#requestCompleted()"><B>requestCompleted()</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Signal that the request has been completed.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support"><B>RequestContext</B></A> - Class in <A HREF="../org/springframework/web/servlet/support/package-summary.html">org.springframework.web.servlet.support</A><DD>Context holder for request-specific state, like current web application
 context, current locale, current theme, and potential binding errors.<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#RequestContext(javax.servlet.http.HttpServletRequest)"><B>RequestContext(HttpServletRequest)</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Create a new RequestContext for the given request,
 using the request attributes for Errors retrieval.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#RequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.ServletContext)"><B>RequestContext(HttpServletRequest, ServletContext)</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Create a new RequestContext for the given request,
 using the request attributes for Errors retrieval.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#RequestContext(javax.servlet.http.HttpServletRequest, java.util.Map)"><B>RequestContext(HttpServletRequest, Map&lt;String, Object&gt;)</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Create a new RequestContext for the given request,
 using the given model attributes for Errors retrieval.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#RequestContext(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.util.Map)"><B>RequestContext(HttpServletRequest, HttpServletResponse, ServletContext, Map&lt;String, Object&gt;)</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Create a new RequestContext for the given request,
 using the given model attributes for Errors retrieval.
<DT><A HREF="../org/springframework/web/servlet/support/RequestContext.html#RequestContext()"><B>RequestContext()</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support">RequestContext</A>
<DD>Default constructor for subclasses.
<DT><A HREF="../org/springframework/web/servlet/tags/RequestContextAwareTag.html" title="class in org.springframework.web.servlet.tags"><B>RequestContextAwareTag</B></A> - Class in <A HREF="../org/springframework/web/servlet/tags/package-summary.html">org.springframework.web.servlet.tags</A><DD>Superclass for all tags that require a <A HREF="../org/springframework/web/servlet/support/RequestContext.html" title="class in org.springframework.web.servlet.support"><CODE>RequestContext</CODE></A>.<DT><A HREF="../org/springframework/web/servlet/tags/RequestContextAwareTag.html#RequestContextAwareTag()"><B>RequestContextAwareTag()</B></A> - 
Constructor for class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/RequestContextAwareTag.html" title="class in org.springframework.web.servlet.tags">RequestContextAwareTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/filter/RequestContextFilter.html" title="class in org.springframework.web.filter"><B>RequestContextFilter</B></A> - Class in <A HREF="../org/springframework/web/filter/package-summary.html">org.springframework.web.filter</A><DD>Servlet 2.3 Filter that exposes the request to the current thread,
 through both <A HREF="../org/springframework/context/i18n/LocaleContextHolder.html" title="class in org.springframework.context.i18n"><CODE>LocaleContextHolder</CODE></A> and
 <A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request"><CODE>RequestContextHolder</CODE></A>.<DT><A HREF="../org/springframework/web/filter/RequestContextFilter.html#RequestContextFilter()"><B>RequestContextFilter()</B></A> - 
Constructor for class org.springframework.web.filter.<A HREF="../org/springframework/web/filter/RequestContextFilter.html" title="class in org.springframework.web.filter">RequestContextFilter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request"><B>RequestContextHolder</B></A> - Class in <A HREF="../org/springframework/web/context/request/package-summary.html">org.springframework.web.context.request</A><DD>Holder class to expose the web request in the form of a thread-bound
 <A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request"><CODE>RequestAttributes</CODE></A> object.<DT><A HREF="../org/springframework/web/context/request/RequestContextHolder.html#RequestContextHolder()"><B>RequestContextHolder()</B></A> - 
Constructor for class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request">RequestContextHolder</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestContextListener.html" title="class in org.springframework.web.context.request"><B>RequestContextListener</B></A> - Class in <A HREF="../org/springframework/web/context/request/package-summary.html">org.springframework.web.context.request</A><DD>Servlet 2.4+ listener that exposes the request to the current thread,
 through both <A HREF="../org/springframework/context/i18n/LocaleContextHolder.html" title="class in org.springframework.context.i18n"><CODE>LocaleContextHolder</CODE></A> and
 <A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request"><CODE>RequestContextHolder</CODE></A>.<DT><A HREF="../org/springframework/web/context/request/RequestContextListener.html#RequestContextListener()"><B>RequestContextListener()</B></A> - 
Constructor for class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextListener.html" title="class in org.springframework.web.context.request">RequestContextListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/support/RequestContextUtils.html" title="class in org.springframework.web.servlet.support"><B>RequestContextUtils</B></A> - Class in <A HREF="../org/springframework/web/servlet/support/package-summary.html">org.springframework.web.servlet.support</A><DD>Utility class for easy access to request-specific state which has been
 set by the <A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet"><CODE>DispatcherServlet</CODE></A>.<DT><A HREF="../org/springframework/web/servlet/support/RequestContextUtils.html#RequestContextUtils()"><B>RequestContextUtils()</B></A> - 
Constructor for class org.springframework.web.servlet.support.<A HREF="../org/springframework/web/servlet/support/RequestContextUtils.html" title="class in org.springframework.web.servlet.support">RequestContextUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestContextListener.html#requestDestroyed(javax.servlet.ServletRequestEvent)"><B>requestDestroyed(ServletRequestEvent)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextListener.html" title="class in org.springframework.web.context.request">RequestContextListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html#requestDestructionCallbacks"><B>requestDestructionCallbacks</B></A> - 
Variable in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributes.html" title="class in org.springframework.web.context.request">AbstractRequestAttributes</A>
<DD>Map from attribute name String to destruction callback Runnable
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#requested()"><B>requested()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Increase the reference count by one because the holder has been requested
 (i.e.
<DT><A HREF="../org/springframework/web/context/support/RequestHandledEvent.html" title="class in org.springframework.web.context.support"><B>RequestHandledEvent</B></A> - Class in <A HREF="../org/springframework/web/context/support/package-summary.html">org.springframework.web.context.support</A><DD>Event raised when a request is handled within an ApplicationContext.<DT><A HREF="../org/springframework/web/context/support/RequestHandledEvent.html#RequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, long)"><B>RequestHandledEvent(Object, String, String, long)</B></A> - 
Constructor for class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/RequestHandledEvent.html" title="class in org.springframework.web.context.support">RequestHandledEvent</A>
<DD>Create a new RequestHandledEvent with session information.
<DT><A HREF="../org/springframework/web/context/support/RequestHandledEvent.html#RequestHandledEvent(java.lang.Object, java.lang.String, java.lang.String, long, java.lang.Throwable)"><B>RequestHandledEvent(Object, String, String, long, Throwable)</B></A> - 
Constructor for class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/RequestHandledEvent.html" title="class in org.springframework.web.context.support">RequestHandledEvent</A>
<DD>Create a new RequestHandledEvent with session information.
<DT><A HREF="../org/springframework/web/bind/annotation/RequestHeader.html" title="annotation in org.springframework.web.bind.annotation"><B>RequestHeader</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation which indicates that a method parameter should be bound to a web request header.<DT><A HREF="../org/springframework/web/context/request/RequestContextListener.html#requestInitialized(javax.servlet.ServletRequestEvent)"><B>requestInitialized(ServletRequestEvent)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextListener.html" title="class in org.springframework.web.context.request">RequestContextListener</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/RequestMapping.html" title="annotation in org.springframework.web.bind.annotation"><B>RequestMapping</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation for mapping web requests onto specific handler classes and/or
 handler methods.<DT><A HREF="../org/springframework/web/bind/annotation/RequestMethod.html" title="enum in org.springframework.web.bind.annotation"><B>RequestMethod</B></A> - Enum in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Java 5 enumeration of HTTP request methods.<DT><A HREF="../org/springframework/web/bind/annotation/RequestParam.html" title="annotation in org.springframework.web.bind.annotation"><B>RequestParam</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation which indicates that a method parameter should be bound to a web
 request parameter.<DT><A HREF="../org/springframework/web/context/request/RequestScope.html" title="class in org.springframework.web.context.request"><B>RequestScope</B></A> - Class in <A HREF="../org/springframework/web/context/request/package-summary.html">org.springframework.web.context.request</A><DD>Request-backed <A HREF="../org/springframework/beans/factory/config/Scope.html" title="interface in org.springframework.beans.factory.config"><CODE>Scope</CODE></A>
 implementation.<DT><A HREF="../org/springframework/web/context/request/RequestScope.html#RequestScope()"><B>RequestScope()</B></A> - 
Constructor for class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestScope.html" title="class in org.springframework.web.context.request">RequestScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/RequestToViewNameTranslator.html" title="interface in org.springframework.web.servlet"><B>RequestToViewNameTranslator</B></A> - Interface in <A HREF="../org/springframework/web/servlet/package-summary.html">org.springframework.web.servlet</A><DD>Strategy interface for translating an incoming
 <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A> into a
 logical view name when no view name is explicitly supplied.<DT><A HREF="../org/springframework/beans/factory/annotation/Required.html" title="annotation in org.springframework.beans.factory.annotation"><B>Required</B></A> - Annotation Type in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD>Marks a method (typically a JavaBean setter method) as being 'required': that is,
 the setter method must be configured to be dependency-injected with a value.<DT><A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html#REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME"><B>REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME</B></A> - 
Static variable in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationConfigUtils.html" title="class in org.springframework.context.annotation">AnnotationConfigUtils</A>
<DD>The bean name of the internally managed Required annotation processor.
<DT><A HREF="../org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation"><B>RequiredAnnotationBeanPostProcessor</B></A> - Class in <A HREF="../org/springframework/beans/factory/annotation/package-summary.html">org.springframework.beans.factory.annotation</A><DD><A HREF="../org/springframework/beans/factory/config/BeanPostProcessor.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanPostProcessor</CODE></A> implementation
 that enforces required JavaBean properties to have been configured.<DT><A HREF="../org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html#RequiredAnnotationBeanPostProcessor()"><B>RequiredAnnotationBeanPostProcessor()</B></A> - 
Constructor for class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/RequiredAnnotationBeanPostProcessor.html" title="class in org.springframework.beans.factory.annotation">RequiredAnnotationBeanPostProcessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ApplicationObjectSupport.html#requiredContextClass()"><B>requiredContextClass()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ApplicationObjectSupport.html" title="class in org.springframework.context.support">ApplicationObjectSupport</A>
<DD>Determine the context class that any context passed to
 <code>setApplicationContext</code> must be an instance of.
<DT><A HREF="../org/springframework/dao/support/DataAccessUtils.html#requiredSingleResult(java.util.Collection)"><B>requiredSingleResult(Collection&lt;T&gt;)</B></A> - 
Static method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DataAccessUtils.html" title="class in org.springframework.dao.support">DataAccessUtils</A>
<DD>Return a single result object from the given Collection.
<DT><A HREF="../org/springframework/dao/support/DataAccessUtils.html#requiredUniqueResult(java.util.Collection)"><B>requiredUniqueResult(Collection&lt;T&gt;)</B></A> - 
Static method in class org.springframework.dao.support.<A HREF="../org/springframework/dao/support/DataAccessUtils.html" title="class in org.springframework.dao.support">DataAccessUtils</A>
<DD>Return a unique result object from the given Collection.
<DT><A HREF="../org/springframework/web/servlet/view/AbstractTemplateViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractTemplateViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractTemplateViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.freemarker.<A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerViewResolver.html" title="class in org.springframework.web.servlet.view.freemarker">FreeMarkerViewResolver</A>
<DD>Requires <A HREF="../org/springframework/web/servlet/view/freemarker/FreeMarkerView.html" title="class in org.springframework.web.servlet.view.freemarker"><CODE>FreeMarkerView</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/InternalResourceViewResolver.html" title="class in org.springframework.web.servlet.view">InternalResourceViewResolver</A>
<DD>This resolver requires <A HREF="../org/springframework/web/servlet/view/InternalResourceView.html" title="class in org.springframework.web.servlet.view"><CODE>InternalResourceView</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.jasperreports.<A HREF="../org/springframework/web/servlet/view/jasperreports/JasperReportsViewResolver.html" title="class in org.springframework.web.servlet.view.jasperreports">JasperReportsViewResolver</A>
<DD>Requires the view class to be a subclass of <A HREF="../org/springframework/web/servlet/view/jasperreports/AbstractJasperReportsView.html" title="class in org.springframework.web.servlet.view.jasperreports"><CODE>AbstractJasperReportsView</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/TilesViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/TilesViewResolver.html" title="class in org.springframework.web.servlet.view.tiles2">TilesViewResolver</A>
<DD>Requires <A HREF="../org/springframework/web/servlet/view/tiles2/TilesView.html" title="class in org.springframework.web.servlet.view.tiles2"><CODE>TilesView</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/UrlBasedViewResolver.html" title="class in org.springframework.web.servlet.view">UrlBasedViewResolver</A>
<DD>Return the required type of view for this resolver.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityLayoutViewResolver.html" title="class in org.springframework.web.servlet.view.velocity">VelocityLayoutViewResolver</A>
<DD>Requires VelocityLayoutView.
<DT><A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.velocity.<A HREF="../org/springframework/web/servlet/view/velocity/VelocityViewResolver.html" title="class in org.springframework.web.servlet.view.velocity">VelocityViewResolver</A>
<DD>Requires <A HREF="../org/springframework/web/servlet/view/velocity/VelocityView.html" title="class in org.springframework.web.servlet.view.velocity"><CODE>VelocityView</CODE></A>.
<DT><A HREF="../org/springframework/web/servlet/view/xslt/XsltViewResolver.html#requiredViewClass()"><B>requiredViewClass()</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/XsltViewResolver.html" title="class in org.springframework.web.servlet.view.xslt">XsltViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html#requiresConfigInterface()"><B>requiresConfigInterface()</B></A> - 
Method in class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html" title="class in org.springframework.scripting.bsh">BshScriptFactory</A>
<DD>BeanShell scripts do require a config interface.
<DT><A HREF="../org/springframework/scripting/groovy/GroovyScriptFactory.html#requiresConfigInterface()"><B>requiresConfigInterface()</B></A> - 
Method in class org.springframework.scripting.groovy.<A HREF="../org/springframework/scripting/groovy/GroovyScriptFactory.html" title="class in org.springframework.scripting.groovy">GroovyScriptFactory</A>
<DD>Groovy scripts do not need a config interface,
 since they expose their setters as public methods.
<DT><A HREF="../org/springframework/scripting/jruby/JRubyScriptFactory.html#requiresConfigInterface()"><B>requiresConfigInterface()</B></A> - 
Method in class org.springframework.scripting.jruby.<A HREF="../org/springframework/scripting/jruby/JRubyScriptFactory.html" title="class in org.springframework.scripting.jruby">JRubyScriptFactory</A>
<DD>JRuby scripts do require a config interface.
<DT><A HREF="../org/springframework/scripting/ScriptFactory.html#requiresConfigInterface()"><B>requiresConfigInterface()</B></A> - 
Method in interface org.springframework.scripting.<A HREF="../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting">ScriptFactory</A>
<DD>Return whether the script requires a config interface to be
 generated for it.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#requiresDestruction(java.lang.Object, org.springframework.beans.factory.support.RootBeanDefinition)"><B>requiresDestruction(Object, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Determine whether the given bean requires destruction on shutdown.
<DT><A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html#requiresRefresh()"><B>requiresRefresh()</B></A> - 
Method in class org.springframework.aop.target.dynamic.<A HREF="../org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.html" title="class in org.springframework.aop.target.dynamic">AbstractRefreshableTargetSource</A>
<DD>Determine whether a refresh is required.
<DT><A HREF="../org/springframework/scripting/support/RefreshableScriptTargetSource.html#requiresRefresh()"><B>requiresRefresh()</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/RefreshableScriptTargetSource.html" title="class in org.springframework.scripting.support">RefreshableScriptTargetSource</A>
<DD>Determine whether a refresh is required through calling
 ScriptFactory's <code>requiresScriptedObjectRefresh</code> method.
<DT><A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html#requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)"><B>requiresScriptedObjectRefresh(ScriptSource)</B></A> - 
Method in class org.springframework.scripting.bsh.<A HREF="../org/springframework/scripting/bsh/BshScriptFactory.html" title="class in org.springframework.scripting.bsh">BshScriptFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/groovy/GroovyScriptFactory.html#requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)"><B>requiresScriptedObjectRefresh(ScriptSource)</B></A> - 
Method in class org.springframework.scripting.groovy.<A HREF="../org/springframework/scripting/groovy/GroovyScriptFactory.html" title="class in org.springframework.scripting.groovy">GroovyScriptFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/jruby/JRubyScriptFactory.html#requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)"><B>requiresScriptedObjectRefresh(ScriptSource)</B></A> - 
Method in class org.springframework.scripting.jruby.<A HREF="../org/springframework/scripting/jruby/JRubyScriptFactory.html" title="class in org.springframework.scripting.jruby">JRubyScriptFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/ScriptFactory.html#requiresScriptedObjectRefresh(org.springframework.scripting.ScriptSource)"><B>requiresScriptedObjectRefresh(ScriptSource)</B></A> - 
Method in interface org.springframework.scripting.<A HREF="../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting">ScriptFactory</A>
<DD>Determine whether a refresh is required (e.g.
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#rescheduleTaskIfNecessary(java.lang.Object)"><B>rescheduleTaskIfNecessary(Object)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Take the given task object and reschedule it, either immediately if
 this container is currently running, or later once this container
 has been restarted.
<DT><A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html#reset()"><B>reset()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/BatchSqlUpdate.html" title="class in org.springframework.jdbc.object">BatchSqlUpdate</A>
<DD>Reset the statement parameter queue, the rows affected cache,
 and the execution count.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#reset()"><B>reset()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#reset()"><B>reset()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockPortletPreferences.html#reset(java.lang.String)"><B>reset(String)</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockPortletPreferences.html" title="class in org.springframework.mock.web.portlet">MockPortletPreferences</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html#reset()"><B>reset()</B></A> - 
Method in class org.springframework.remoting.jaxrpc.<A HREF="../org/springframework/remoting/jaxrpc/JaxRpcPortClientInterceptor.html" title="class in org.springframework.remoting.jaxrpc">JaxRpcPortClientInterceptor</A>
<DD><B>Deprecated.</B>&nbsp;Reset the prepared service of this interceptor,
 allowing for reinitialization on next access.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolder.html#reset()"><B>reset()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support">ResourceHolder</A>
<DD>Reset the transactional state of this holder.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#reset()"><B>reset()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>Reset this resource holder - transactional state as well as reference count.
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#resetBeanDefinition(java.lang.String)"><B>resetBeanDefinition(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>Reset all bean definition caches for the given bean,
 including the caches of beans that are derived from it.
<DT><A HREF="../org/springframework/mock/web/MockHttpServletResponse.html#resetBuffer()"><B>resetBuffer()</B></A> - 
Method in class org.springframework.mock.web.<A HREF="../org/springframework/mock/web/MockHttpServletResponse.html" title="class in org.springframework.mock.web">MockHttpServletResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html#resetBuffer()"><B>resetBuffer()</B></A> - 
Method in class org.springframework.mock.web.portlet.<A HREF="../org/springframework/mock/web/portlet/MockMimeResponse.html" title="class in org.springframework.mock.web.portlet">MockMimeResponse</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html#resetCachedTemplates()"><B>resetCachedTemplates()</B></A> - 
Method in class org.springframework.web.servlet.view.xslt.<A HREF="../org/springframework/web/servlet/view/xslt/AbstractXsltView.html" title="class in org.springframework.web.servlet.view.xslt">AbstractXsltView</A>
<DD><B>Deprecated.</B>&nbsp;Reset the cached Templates object, if any.
<DT><A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html#resetConnection()"><B>resetConnection()</B></A> - 
Method in class org.springframework.jca.cci.connection.<A HREF="../org/springframework/jca/cci/connection/SingleConnectionFactory.html" title="class in org.springframework.jca.cci.connection">SingleConnectionFactory</A>
<DD>Reset the underlying shared Connection, to be reinitialized on next access.
<DT><A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html#resetConnection()"><B>resetConnection()</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/SingleConnectionDataSource.html" title="class in org.springframework.jdbc.datasource">SingleConnectionDataSource</A>
<DD>Reset the underlying shared Connection, to be reinitialized on next access.
<DT><A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html#resetConnection()"><B>resetConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/CachingConnectionFactory.html" title="class in org.springframework.jms.connection">CachingConnectionFactory</A>
<DD>Resets the Session cache as well.
<DT><A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html#resetConnection()"><B>resetConnection()</B></A> - 
Method in class org.springframework.jms.connection.<A HREF="../org/springframework/jms/connection/SingleConnectionFactory.html" title="class in org.springframework.jms.connection">SingleConnectionFactory</A>
<DD>Reset the underlying shared Connection, to be reinitialized on next access.
<DT><A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html#resetConnectionAfterTransaction(java.sql.Connection, java.lang.Integer)"><B>resetConnectionAfterTransaction(Connection, Integer)</B></A> - 
Static method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/DataSourceUtils.html" title="class in org.springframework.jdbc.datasource">DataSourceUtils</A>
<DD>Reset the given Connection after a transaction,
 regarding read-only flag and isolation level.
<DT><A HREF="../org/springframework/aop/interceptor/DebugInterceptor.html#resetCount()"><B>resetCount()</B></A> - 
Method in class org.springframework.aop.interceptor.<A HREF="../org/springframework/aop/interceptor/DebugInterceptor.html" title="class in org.springframework.aop.interceptor">DebugInterceptor</A>
<DD>Reset the invocation count to zero.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#resetFilters(boolean)"><B>resetFilters(boolean)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Reset the configured type filters.
<DT><A HREF="../org/springframework/format/datetime/joda/JodaTimeContextHolder.html#resetJodaTimeContext()"><B>resetJodaTimeContext()</B></A> - 
Static method in class org.springframework.format.datetime.joda.<A HREF="../org/springframework/format/datetime/joda/JodaTimeContextHolder.html" title="class in org.springframework.format.datetime.joda">JodaTimeContextHolder</A>
<DD>Reset the JodaTimeContext for the current thread.
<DT><A HREF="../org/springframework/context/i18n/LocaleContextHolder.html#resetLocaleContext()"><B>resetLocaleContext()</B></A> - 
Static method in class org.springframework.context.i18n.<A HREF="../org/springframework/context/i18n/LocaleContextHolder.html" title="class in org.springframework.context.i18n">LocaleContextHolder</A>
<DD>Reset the LocaleContext for the current thread.
<DT><A HREF="../org/springframework/web/context/request/RequestContextHolder.html#resetRequestAttributes()"><B>resetRequestAttributes()</B></A> - 
Static method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestContextHolder.html" title="class in org.springframework.web.context.request">RequestContextHolder</A>
<DD>Reset the RequestAttributes for the current thread.
<DT><A HREF="../org/springframework/remoting/support/RemotingSupport.html#resetThreadContextClassLoader(java.lang.ClassLoader)"><B>resetThreadContextClassLoader(ClassLoader)</B></A> - 
Method in class org.springframework.remoting.support.<A HREF="../org/springframework/remoting/support/RemotingSupport.html" title="class in org.springframework.remoting.support">RemotingSupport</A>
<DD>Reset the original thread context ClassLoader if necessary.
<DT><A HREF="../org/springframework/context/support/DefaultMessageSourceResolvable.html#resolvableToString()"><B>resolvableToString()</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/DefaultMessageSourceResolvable.html" title="class in org.springframework.context.support">DefaultMessageSourceResolvable</A>
<DD>Build a default String representation for this MessageSourceResolvable:
 including codes, arguments, and default message.
<DT><A HREF="../org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html#resolve(java.lang.String)"><B>resolve(String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.html" title="class in org.springframework.beans.factory.xml">DefaultNamespaceHandlerResolver</A>
<DD>Locate the <A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html" title="interface in org.springframework.beans.factory.xml"><CODE>NamespaceHandler</CODE></A> for the supplied namespace URI
 from the configured mappings.
<DT><A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerResolver.html#resolve(java.lang.String)"><B>resolve(String)</B></A> - 
Method in interface org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/NamespaceHandlerResolver.html" title="interface in org.springframework.beans.factory.xml">NamespaceHandlerResolver</A>
<DD>Resolve the namespace URI and return the located <A HREF="../org/springframework/beans/factory/xml/NamespaceHandler.html" title="interface in org.springframework.beans.factory.xml"><CODE>NamespaceHandler</CODE></A>
 implementation.
<DT><A HREF="../org/springframework/context/expression/BeanFactoryResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.String)"><B>resolve(EvaluationContext, String)</B></A> - 
Method in class org.springframework.context.expression.<A HREF="../org/springframework/context/expression/BeanFactoryResolver.html" title="class in org.springframework.context.expression">BeanFactoryResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/expression/BeanResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.String)"><B>resolve(EvaluationContext, String)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/BeanResolver.html" title="interface in org.springframework.expression">BeanResolver</A>
<DD>Look up the named bean and return it.
<DT><A HREF="../org/springframework/expression/ConstructorResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.String, java.util.List)"><B>resolve(EvaluationContext, String, List&lt;TypeDescriptor&gt;)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/ConstructorResolver.html" title="interface in org.springframework.expression">ConstructorResolver</A>
<DD>Within the supplied context determine a suitable constructor on the supplied type that can handle the
 specified arguments.
<DT><A HREF="../org/springframework/expression/MethodResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.util.List)"><B>resolve(EvaluationContext, Object, String, List&lt;TypeDescriptor&gt;)</B></A> - 
Method in interface org.springframework.expression.<A HREF="../org/springframework/expression/MethodResolver.html" title="interface in org.springframework.expression">MethodResolver</A>
<DD>Within the supplied context determine a suitable method on the supplied object that can handle the
 specified arguments.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveConstructorResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.String, java.util.List)"><B>resolve(EvaluationContext, String, List&lt;TypeDescriptor&gt;)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectiveConstructorResolver.html" title="class in org.springframework.expression.spel.support">ReflectiveConstructorResolver</A>
<DD>Locate a constructor on the type.
<DT><A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html#resolve(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.util.List)"><B>resolve(EvaluationContext, Object, String, List&lt;TypeDescriptor&gt;)</B></A> - 
Method in class org.springframework.expression.spel.support.<A HREF="../org/springframework/expression/spel/support/ReflectiveMethodResolver.html" title="class in org.springframework.expression.spel.support">ReflectiveMethodResolver</A>
<DD>Locate a method on a type.
<DT><A HREF="../org/springframework/web/servlet/tags/form/FormTag.html#resolveAction()"><B>resolveAction()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/FormTag.html" title="class in org.springframework.web.servlet.tags.form">FormTag</A>
<DD>Resolve the value of the '<code>action</code>' attribute.
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#resolveAliases(org.springframework.util.StringValueResolver)"><B>resolveAliases(StringValueResolver)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Resolve all alias target names and aliases registered in this
 factory, applying the given StringValueResolver to them.
<DT><A HREF="../org/springframework/core/SimpleAliasRegistry.html#resolveAliases(org.springframework.util.StringValueResolver)"><B>resolveAliases(StringValueResolver)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/SimpleAliasRegistry.html" title="class in org.springframework.core">SimpleAliasRegistry</A>
<DD>Resolve all alias target names and aliases registered in this
 factory, applying the given StringValueResolver to them.
<DT><A HREF="../org/springframework/web/bind/support/WebArgumentResolver.html#resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)"><B>resolveArgument(MethodParameter, NativeWebRequest)</B></A> - 
Method in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/WebArgumentResolver.html" title="interface in org.springframework.web.bind.support">WebArgumentResolver</A>
<DD>Resolve an argument for the given handler method parameter within the given web request.
<DT><A HREF="../org/springframework/context/support/AbstractMessageSource.html#resolveArguments(java.lang.Object[], java.util.Locale)"><B>resolveArguments(Object[], Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractMessageSource.html" title="class in org.springframework.context.support">AbstractMessageSource</A>
<DD>Searches through the given array of objects, finds any MessageSourceResolvable
 objects and resolves them.
<DT><A HREF="../org/springframework/context/support/MessageSourceSupport.html#resolveArguments(java.lang.Object[], java.util.Locale)"><B>resolveArguments(Object[], Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/MessageSourceSupport.html" title="class in org.springframework.context.support">MessageSourceSupport</A>
<DD>Template method for resolving argument objects.
<DT><A HREF="../org/springframework/web/servlet/tags/MessageTag.html#resolveArguments(java.lang.Object)"><B>resolveArguments(Object)</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/MessageTag.html" title="class in org.springframework.web.servlet.tags">MessageTag</A>
<DD>Resolve the given arguments Object into an arguments array.
<DT><A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html#resolveBasePackage(java.lang.String)"><B>resolveBasePackage(String)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" title="class in org.springframework.context.annotation">ClassPathScanningCandidateComponentProvider</A>
<DD>Resolve the specified base package into a pattern specification for
 the package search path.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#resolveBeanClass(java.lang.ClassLoader)"><B>resolveBeanClass(ClassLoader)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html" title="class in org.springframework.beans.factory.support">AbstractBeanDefinition</A>
<DD>Determine the class of the wrapped bean, resolving it from a
 specified class name if necessary.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#resolveBeanClass(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String, java.lang.Class...)"><B>resolveBeanClass(RootBeanDefinition, String, Class...)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>Resolve the bean class for the specified bean definition,
 resolving a bean class name into a Class reference (if necessary)
 and storing the resolved Class in the bean definition for further use.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#resolveBeforeInstantiation(java.lang.String, org.springframework.beans.factory.support.RootBeanDefinition)"><B>resolveBeforeInstantiation(String, RootBeanDefinition)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>Apply before-instantiation post-processors, resolving whether there is a
 before-instantiation shortcut for the specified bean.
<DT><A HREF="../org/springframework/core/ConfigurableObjectInputStream.html#resolveClass(java.io.ObjectStreamClass)"><B>resolveClass(ObjectStreamClass)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/ConfigurableObjectInputStream.html" title="class in org.springframework.core">ConfigurableObjectInputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/MethodInvokingFactoryBean.html#resolveClassName(java.lang.String)"><B>resolveClassName(String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/MethodInvokingFactoryBean.html" title="class in org.springframework.beans.factory.config">MethodInvokingFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html#resolveClassName(java.lang.String)"><B>resolveClassName(String)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/MethodInvokingJobDetailFactoryBean.html" title="class in org.springframework.scheduling.quartz">MethodInvokingJobDetailFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/support/MethodInvokingRunnable.html#resolveClassName(java.lang.String)"><B>resolveClassName(String)</B></A> - 
Method in class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/MethodInvokingRunnable.html" title="class in org.springframework.scheduling.support">MethodInvokingRunnable</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ClassUtils.html#resolveClassName(java.lang.String, java.lang.ClassLoader)"><B>resolveClassName(String, ClassLoader)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Resolve the given class name into a Class instance.
<DT><A HREF="../org/springframework/util/MethodInvoker.html#resolveClassName(java.lang.String)"><B>resolveClassName(String)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/MethodInvoker.html" title="class in org.springframework.util">MethodInvoker</A>
<DD>Resolve the given class name into a Class.
<DT><A HREF="../org/springframework/context/support/AbstractMessageSource.html#resolveCode(java.lang.String, java.util.Locale)"><B>resolveCode(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractMessageSource.html" title="class in org.springframework.context.support">AbstractMessageSource</A>
<DD>Subclasses must implement this method to resolve a message.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#resolveCode(java.lang.String, java.util.Locale)"><B>resolveCode(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Resolves the given message code as key in the retrieved bundle files,
 using a cached MessageFormat instance per message code.
<DT><A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html#resolveCode(java.lang.String, java.util.Locale)"><B>resolveCode(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html" title="class in org.springframework.context.support">ResourceBundleMessageSource</A>
<DD>Resolves the given message code as key in the registered resource bundles,
 using a cached MessageFormat instance per message code.
<DT><A HREF="../org/springframework/context/support/StaticMessageSource.html#resolveCode(java.lang.String, java.util.Locale)"><B>resolveCode(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticMessageSource.html" title="class in org.springframework.context.support">StaticMessageSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/AbstractMessageSource.html#resolveCodeWithoutArguments(java.lang.String, java.util.Locale)"><B>resolveCodeWithoutArguments(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractMessageSource.html" title="class in org.springframework.context.support">AbstractMessageSource</A>
<DD>Subclasses can override this method to resolve a message without arguments
 in an optimized fashion, i.e.
<DT><A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html#resolveCodeWithoutArguments(java.lang.String, java.util.Locale)"><B>resolveCodeWithoutArguments(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ReloadableResourceBundleMessageSource.html" title="class in org.springframework.context.support">ReloadableResourceBundleMessageSource</A>
<DD>Resolves the given message code as key in the retrieved bundle files,
 returning the value found in the bundle as-is (without MessageFormat parsing).
<DT><A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html#resolveCodeWithoutArguments(java.lang.String, java.util.Locale)"><B>resolveCodeWithoutArguments(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html" title="class in org.springframework.context.support">ResourceBundleMessageSource</A>
<DD>Resolves the given message code as key in the registered resource bundles,
 returning the value found in the bundle as-is (without MessageFormat parsing).
<DT><A HREF="../org/springframework/context/support/StaticMessageSource.html#resolveCodeWithoutArguments(java.lang.String, java.util.Locale)"><B>resolveCodeWithoutArguments(String, Locale)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/StaticMessageSource.html" title="class in org.springframework.context.support">StaticMessageSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest)"><B>resolveCommonArgument(MethodParameter, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html#resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)"><B>resolveCommonArgument(MethodParameter, NativeWebRequest, Exception)</B></A> - 
Method in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.portlet.mvc.annotation">AnnotationMethodHandlerExceptionResolver</A>
<DD>Resolves common method arguments.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html#resolveCommonArgument(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)"><B>resolveCommonArgument(MethodParameter, NativeWebRequest, Exception)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerExceptionResolver</A>
<DD>Resolves common method arguments.
<DT><A HREF="../org/springframework/beans/factory/config/Scope.html#resolveContextualObject(java.lang.String)"><B>resolveContextualObject(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/Scope.html" title="interface in org.springframework.beans.factory.config">Scope</A>
<DD>Resolve the contextual object for the given key, if any.
<DT><A HREF="../org/springframework/context/support/SimpleThreadScope.html#resolveContextualObject(java.lang.String)"><B>resolveContextualObject(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/SimpleThreadScope.html" title="class in org.springframework.context.support">SimpleThreadScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html#resolveContextualObject(java.lang.String)"><B>resolveContextualObject(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/AbstractRequestAttributesScope.html" title="class in org.springframework.web.context.request">AbstractRequestAttributesScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextScope.html#resolveContextualObject(java.lang.String)"><B>resolveContextualObject(String)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextScope.html" title="class in org.springframework.web.context.support">ServletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletContextScope.html#resolveContextualObject(java.lang.String)"><B>resolveContextualObject(String)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletContextScope.html" title="class in org.springframework.web.portlet.context">PortletContextScope</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolveCookieValue(java.lang.String, java.lang.Class, org.springframework.web.context.request.NativeWebRequest)"><B>resolveCookieValue(String, Class, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Resolves the given <A HREF="../org/springframework/web/bind/annotation/CookieValue.html" title="annotation in org.springframework.web.bind.annotation"><CODE>@CookieValue</CODE></A> annotation.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html#resolveCssClass()"><B>resolveCssClass()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractHtmlElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractHtmlElementTag</A>
<DD>Gets the appropriate CSS class to use based on the state of the current
 <A HREF="../org/springframework/web/servlet/support/BindStatus.html" title="class in org.springframework.web.servlet.support"><CODE>BindStatus</CODE></A> object.
<DT><A HREF="../org/springframework/web/servlet/tags/form/FormTag.html#resolveCssClass()"><B>resolveCssClass()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/FormTag.html" title="class in org.springframework.web.servlet.tags.form">FormTag</A>
<DD>Override resolve CSS class since error class is not supported.
<DT><A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html#resolveDefaultResponseDestination(javax.jms.Session)"><B>resolveDefaultResponseDestination(Session)</B></A> - 
Method in class org.springframework.jms.listener.adapter.<A HREF="../org/springframework/jms/listener/adapter/MessageListenerAdapter.html" title="class in org.springframework.jms.listener.adapter">MessageListenerAdapter</A>
<DD>Resolve the default response destination into a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Destination.html?is-external=true" title="class or interface in javax.jms"><CODE>Destination</CODE></A>, using this
 accessor's <A HREF="../org/springframework/jms/support/destination/DestinationResolver.html" title="interface in org.springframework.jms.support.destination"><CODE>DestinationResolver</CODE></A> in case of a destination name.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolveDefaultValue(java.lang.String)"><B>resolveDefaultValue(String)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String)"><B>resolveDependency(DependencyDescriptor, String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Resolve the specified dependency against the beans defined in this factory.
<DT><A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html#resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)"><B>resolveDependency(DependencyDescriptor, String, Set&lt;String&gt;, TypeConverter)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/AutowireCapableBeanFactory.html" title="interface in org.springframework.beans.factory.config">AutowireCapableBeanFactory</A>
<DD>Resolve the specified dependency against the beans defined in this factory.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html#resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String)"><B>resolveDependency(DependencyDescriptor, String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractAutowireCapableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html#resolveDependency(org.springframework.beans.factory.config.DependencyDescriptor, java.lang.String, java.util.Set, org.springframework.beans.TypeConverter)"><B>resolveDependency(DependencyDescriptor, String, Set&lt;String&gt;, TypeConverter)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/DefaultListableBeanFactory.html" title="class in org.springframework.beans.factory.support">DefaultListableBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html#resolveDestinationName(javax.jms.Session, java.lang.String, boolean)"><B>resolveDestinationName(Session, String, boolean)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/BeanFactoryDestinationResolver.html" title="class in org.springframework.jms.support.destination">BeanFactoryDestinationResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/support/destination/DestinationResolver.html#resolveDestinationName(javax.jms.Session, java.lang.String, boolean)"><B>resolveDestinationName(Session, String, boolean)</B></A> - 
Method in interface org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/DestinationResolver.html" title="interface in org.springframework.jms.support.destination">DestinationResolver</A>
<DD>Resolve the given destination name, either as located resource
 or as dynamic destination.
<DT><A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html#resolveDestinationName(javax.jms.Session, java.lang.String, boolean)"><B>resolveDestinationName(Session, String, boolean)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html" title="class in org.springframework.jms.support.destination">DynamicDestinationResolver</A>
<DD>Resolve the specified destination name as a dynamic destination.
<DT><A HREF="../org/springframework/jms/support/destination/JmsDestinationAccessor.html#resolveDestinationName(javax.jms.Session, java.lang.String)"><B>resolveDestinationName(Session, String)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/JmsDestinationAccessor.html" title="class in org.springframework.jms.support.destination">JmsDestinationAccessor</A>
<DD>Resolve the given destination name into a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Destination.html?is-external=true" title="class or interface in javax.jms"><CODE>Destination</CODE></A>,
 via this accessor's <A HREF="../org/springframework/jms/support/destination/DestinationResolver.html" title="interface in org.springframework.jms.support.destination"><CODE>DestinationResolver</CODE></A>.
<DT><A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html#resolveDestinationName(javax.jms.Session, java.lang.String, boolean)"><B>resolveDestinationName(Session, String, boolean)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/JndiDestinationResolver.html" title="class in org.springframework.jms.support.destination">JndiDestinationResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html#resolveEmbeddedValue(java.lang.String)"><B>resolveEmbeddedValue(String)</B></A> - 
Method in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/ConfigurableBeanFactory.html" title="interface in org.springframework.beans.factory.config">ConfigurableBeanFactory</A>
<DD>Resolve the given embedded value, e.g.
<DT><A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html#resolveEmbeddedValue(java.lang.String)"><B>resolveEmbeddedValue(String)</B></A> - 
Method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/AbstractBeanFactory.html" title="class in org.springframework.beans.factory.support">AbstractBeanFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.html#resolveEmbeddedValue(java.lang.String)"><B>resolveEmbeddedValue(String)</B></A> - 
Method in class org.springframework.format.datetime.joda.<A HREF="../org/springframework/format/datetime/joda/JodaDateTimeFormatAnnotationFormatterFactory.html" title="class in org.springframework.format.datetime.joda">JodaDateTimeFormatAnnotationFormatterFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/format/number/NumberFormatAnnotationFormatterFactory.html#resolveEmbeddedValue(java.lang.String)"><B>resolveEmbeddedValue(String)</B></A> - 
Method in class org.springframework.format.number.<A HREF="../org/springframework/format/number/NumberFormatAnnotationFormatterFactory.html" title="class in org.springframework.format.number">NumberFormatAnnotationFormatterFactory</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/BeansDtdResolver.html#resolveEntity(java.lang.String, java.lang.String)"><B>resolveEntity(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/BeansDtdResolver.html" title="class in org.springframework.beans.factory.xml">BeansDtdResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/DelegatingEntityResolver.html#resolveEntity(java.lang.String, java.lang.String)"><B>resolveEntity(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DelegatingEntityResolver.html" title="class in org.springframework.beans.factory.xml">DelegatingEntityResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/PluggableSchemaResolver.html#resolveEntity(java.lang.String, java.lang.String)"><B>resolveEntity(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/PluggableSchemaResolver.html" title="class in org.springframework.beans.factory.xml">PluggableSchemaResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/xml/ResourceEntityResolver.html#resolveEntity(java.lang.String, java.lang.String)"><B>resolveEntity(String, String)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ResourceEntityResolver.html" title="class in org.springframework.beans.factory.xml">ResourceEntityResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html#resolveException(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(RenderRequest, RenderResponse, Object, Exception)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html" title="class in org.springframework.web.portlet.handler">AbstractHandlerExceptionResolver</A>
<DD>Checks whether this resolver is supposed to apply (i.e.
<DT><A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html#resolveException(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(ResourceRequest, ResourceResponse, Object, Exception)</B></A> - 
Method in class org.springframework.web.portlet.handler.<A HREF="../org/springframework/web/portlet/handler/AbstractHandlerExceptionResolver.html" title="class in org.springframework.web.portlet.handler">AbstractHandlerExceptionResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/HandlerExceptionResolver.html#resolveException(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(RenderRequest, RenderResponse, Object, Exception)</B></A> - 
Method in interface org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/HandlerExceptionResolver.html" title="interface in org.springframework.web.portlet">HandlerExceptionResolver</A>
<DD>Try to resolve the given exception that got thrown during on handler execution,
 returning a ModelAndView that represents a specific error page if appropriate.
<DT><A HREF="../org/springframework/web/portlet/HandlerExceptionResolver.html#resolveException(javax.portlet.ResourceRequest, javax.portlet.ResourceResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(ResourceRequest, ResourceResponse, Object, Exception)</B></A> - 
Method in interface org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/HandlerExceptionResolver.html" title="interface in org.springframework.web.portlet">HandlerExceptionResolver</A>
<DD>Try to resolve the given exception that got thrown during on handler execution,
 returning a ModelAndView that represents a specific error page if appropriate.
<DT><A HREF="../org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html#resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</B></A> - 
Method in class org.springframework.web.servlet.handler.<A HREF="../org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.handler">AbstractHandlerExceptionResolver</A>
<DD>Checks whether this resolver is supposed to apply (i.e.
<DT><A HREF="../org/springframework/web/servlet/HandlerExceptionResolver.html#resolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)"><B>resolveException(HttpServletRequest, HttpServletResponse, Object, Exception)</B></A> - 
Method in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/HandlerExceptionResolver.html" title="interface in org.springframework.web.servlet">HandlerExceptionResolver</A>
<DD>Try to resolve the given exception that got thrown during on handler execution,
 returning a ModelAndView that represents a specific error page if appropriate.
<DT><A HREF="../org/springframework/core/ConfigurableObjectInputStream.html#resolveFallbackIfPossible(java.lang.String, java.lang.ClassNotFoundException)"><B>resolveFallbackIfPossible(String, ClassNotFoundException)</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/ConfigurableObjectInputStream.html" title="class in org.springframework.core">ConfigurableObjectInputStream</A>
<DD>Resolve the given class name against a fallback class loader.
<DT><A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html#resolveFallbackIfPossible(java.lang.String, java.lang.ClassNotFoundException)"><B>resolveFallbackIfPossible(String, ClassNotFoundException)</B></A> - 
Method in class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/CodebaseAwareObjectInputStream.html" title="class in org.springframework.remoting.rmi">CodebaseAwareObjectInputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/LabelTag.html#resolveFor()"><B>resolveFor()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/LabelTag.html" title="class in org.springframework.web.servlet.tags.form">LabelTag</A>
<DD>Determine the '<code>for</code>' attribute value for this tag,
 autogenerating one if none specified.
<DT><A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html#resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)"><B>resolveId(Element, AbstractBeanDefinition, ParserContext)</B></A> - 
Method in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/AbstractBeanDefinitionParser.html" title="class in org.springframework.beans.factory.xml">AbstractBeanDefinitionParser</A>
<DD>Resolve the ID for the supplied <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/transaction/config/JtaTransactionManagerBeanDefinitionParser.html#resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)"><B>resolveId(Element, AbstractBeanDefinition, ParserContext)</B></A> - 
Method in class org.springframework.transaction.config.<A HREF="../org/springframework/transaction/config/JtaTransactionManagerBeanDefinitionParser.html" title="class in org.springframework.transaction.config">JtaTransactionManagerBeanDefinitionParser</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html#resolveId()"><B>resolveId()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractDataBoundFormElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractDataBoundFormElementTag</A>
<DD>Determine the '<code>id</code>' attribute value for this tag,
 autogenerating one if none specified.
<DT><A HREF="../org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html#resolveId()"><B>resolveId()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/AbstractMultiCheckedElementTag.html" title="class in org.springframework.web.servlet.tags.form">AbstractMultiCheckedElementTag</A>
<DD>Appends a counter to a specified id as well,
 since we're dealing with multiple HTML elements.
<DT><A HREF="../org/springframework/web/servlet/tags/form/OptionsTag.html#resolveId()"><B>resolveId()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/OptionsTag.html" title="class in org.springframework.web.servlet.tags.form">OptionsTag</A>
<DD>Appends a counter to a specified id,
 since we're dealing with multiple HTML elements.
<DT><A HREF="../org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html#resolveLocale(javax.servlet.http.HttpServletRequest)"><B>resolveLocale(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.i18n.<A HREF="../org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.html" title="class in org.springframework.web.servlet.i18n">AcceptHeaderLocaleResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html#resolveLocale(javax.servlet.http.HttpServletRequest)"><B>resolveLocale(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.i18n.<A HREF="../org/springframework/web/servlet/i18n/CookieLocaleResolver.html" title="class in org.springframework.web.servlet.i18n">CookieLocaleResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/i18n/FixedLocaleResolver.html#resolveLocale(javax.servlet.http.HttpServletRequest)"><B>resolveLocale(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.i18n.<A HREF="../org/springframework/web/servlet/i18n/FixedLocaleResolver.html" title="class in org.springframework.web.servlet.i18n">FixedLocaleResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/i18n/SessionLocaleResolver.html#resolveLocale(javax.servlet.http.HttpServletRequest)"><B>resolveLocale(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.i18n.<A HREF="../org/springframework/web/servlet/i18n/SessionLocaleResolver.html" title="class in org.springframework.web.servlet.i18n">SessionLocaleResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/LocaleResolver.html#resolveLocale(javax.servlet.http.HttpServletRequest)"><B>resolveLocale(HttpServletRequest)</B></A> - 
Method in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/LocaleResolver.html" title="interface in org.springframework.web.servlet">LocaleResolver</A>
<DD>Resolve the current locale via the given request.
<DT><A HREF="../org/springframework/web/servlet/view/tiles2/SpringLocaleResolver.html#resolveLocale(org.apache.tiles.context.TilesRequestContext)"><B>resolveLocale(TilesRequestContext)</B></A> - 
Method in class org.springframework.web.servlet.view.tiles2.<A HREF="../org/springframework/web/servlet/view/tiles2/SpringLocaleResolver.html" title="class in org.springframework.web.servlet.view.tiles2">SpringLocaleResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/MessageTag.html#resolveMessage()"><B>resolveMessage()</B></A> - 
Method in class org.springframework.web.servlet.tags.<A HREF="../org/springframework/web/servlet/tags/MessageTag.html" title="class in org.springframework.web.servlet.tags">MessageTag</A>
<DD>Resolve the specified message into a concrete message String.
<DT><A HREF="../org/springframework/validation/AbstractBindingResult.html#resolveMessageCodes(java.lang.String)"><B>resolveMessageCodes(String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractBindingResult.html" title="class in org.springframework.validation">AbstractBindingResult</A>
<DD>Resolve the given error code into message codes.
<DT><A HREF="../org/springframework/validation/AbstractBindingResult.html#resolveMessageCodes(java.lang.String, java.lang.String)"><B>resolveMessageCodes(String, String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/AbstractBindingResult.html" title="class in org.springframework.validation">AbstractBindingResult</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindException.html#resolveMessageCodes(java.lang.String, java.lang.String)"><B>resolveMessageCodes(String, String)</B></A> - 
Method in exception org.springframework.validation.<A HREF="../org/springframework/validation/BindException.html" title="class in org.springframework.validation">BindException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/BindingResult.html#resolveMessageCodes(java.lang.String, java.lang.String)"><B>resolveMessageCodes(String, String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/BindingResult.html" title="interface in org.springframework.validation">BindingResult</A>
<DD>Resolve the given error code into message codes for the given field.
<DT><A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html#resolveMessageCodes(java.lang.String, java.lang.String)"><B>resolveMessageCodes(String, String)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html" title="class in org.springframework.validation">DefaultMessageCodesResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html#resolveMessageCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.Class)"><B>resolveMessageCodes(String, String, String, Class)</B></A> - 
Method in class org.springframework.validation.<A HREF="../org/springframework/validation/DefaultMessageCodesResolver.html" title="class in org.springframework.validation">DefaultMessageCodesResolver</A>
<DD>Build the code list for the given code and field: an
 object/field-specific code, a field-specific code, a plain error code.
<DT><A HREF="../org/springframework/validation/MessageCodesResolver.html#resolveMessageCodes(java.lang.String, java.lang.String)"><B>resolveMessageCodes(String, String)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/MessageCodesResolver.html" title="interface in org.springframework.validation">MessageCodesResolver</A>
<DD>Build message codes for the given error code and object name.
<DT><A HREF="../org/springframework/validation/MessageCodesResolver.html#resolveMessageCodes(java.lang.String, java.lang.String, java.lang.String, java.lang.Class)"><B>resolveMessageCodes(String, String, String, Class)</B></A> - 
Method in interface org.springframework.validation.<A HREF="../org/springframework/validation/MessageCodesResolver.html" title="interface in org.springframework.validation">MessageCodesResolver</A>
<DD>Build message codes for the given error code and field specification.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html#resolveModelAndView(java.lang.reflect.Method, java.lang.Class, java.lang.Object, org.springframework.ui.ExtendedModelMap, org.springframework.web.context.request.NativeWebRequest)"><B>resolveModelAndView(Method, Class, Object, ExtendedModelMap, NativeWebRequest)</B></A> - 
Method in interface org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/ModelAndViewResolver.html" title="interface in org.springframework.web.servlet.mvc.annotation">ModelAndViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/tags/form/FormTag.html#resolveModelAttribute()"><B>resolveModelAttribute()</B></A> - 
Method in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/FormTag.html" title="class in org.springframework.web.servlet.tags.form">FormTag</A>
<DD><A HREF="../org/springframework/web/servlet/tags/form/AbstractFormTag.html#evaluate(java.lang.String, java.lang.Object)"><CODE>Resolves</CODE></A> and returns the name of the form object.
<DT><A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html#resolveMultipart(javax.servlet.http.HttpServletRequest)"><B>resolveMultipart(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.multipart.commons.<A HREF="../org/springframework/web/multipart/commons/CommonsMultipartResolver.html" title="class in org.springframework.web.multipart.commons">CommonsMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/multipart/MultipartResolver.html#resolveMultipart(javax.servlet.http.HttpServletRequest)"><B>resolveMultipart(HttpServletRequest)</B></A> - 
Method in interface org.springframework.web.multipart.<A HREF="../org/springframework/web/multipart/MultipartResolver.html" title="interface in org.springframework.web.multipart">MultipartResolver</A>
<DD>Parse the given HTTP request into multipart files and parameters,
 and wrap the request inside a
 <A HREF="../org/springframework/web/multipart/MultipartHttpServletRequest.html" title="interface in org.springframework.web.multipart"><CODE>MultipartHttpServletRequest</CODE></A> object
 that provides access to file descriptors and makes contained
 parameters accessible via the standard ServletRequest methods.
<DT><A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html#resolveMultipart(javax.portlet.ActionRequest)"><B>resolveMultipart(ActionRequest)</B></A> - 
Method in class org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/CommonsPortletMultipartResolver.html" title="class in org.springframework.web.portlet.multipart">CommonsPortletMultipartResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html#resolveMultipart(javax.portlet.ActionRequest)"><B>resolveMultipart(ActionRequest)</B></A> - 
Method in interface org.springframework.web.portlet.multipart.<A HREF="../org/springframework/web/portlet/multipart/PortletMultipartResolver.html" title="interface in org.springframework.web.portlet.multipart">PortletMultipartResolver</A>
<DD>Parse the given portlet request into multipart files and parameters,
 and wrap the request inside a MultipartActionRequest object
 that provides access to file descriptors and makes contained
 parameters accessible via the standard PortletRequest methods.
<DT><A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html#resolveOriginal(javax.faces.context.FacesContext, java.lang.String)"><B>resolveOriginal(FacesContext, String)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html" title="class in org.springframework.web.jsf">DelegatingVariableResolver</A>
<DD>Resolve the attribute via the original JSF VariableResolver.
<DT><A HREF="../org/springframework/core/GenericTypeResolver.html#resolveParameterType(org.springframework.core.MethodParameter, java.lang.Class)"><B>resolveParameterType(MethodParameter, Class)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/GenericTypeResolver.html" title="class in org.springframework.core">GenericTypeResolver</A>
<DD>Determine the target type for the given generic parameter type.
<DT><A HREF="../org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html#resolvePath(java.lang.String)"><B>resolvePath(String)</B></A> - 
Method in class org.springframework.context.support.<A HREF="../org/springframework/context/support/AbstractRefreshableConfigApplicationContext.html" title="class in org.springframework.context.support">AbstractRefreshableConfigApplicationContext</A>
<DD>Resolve the given path, replacing placeholders with corresponding
 system property values if necessary.
<DT><A HREF="../org/springframework/core/io/ResourceEditor.html#resolvePath(java.lang.String)"><B>resolvePath(String)</B></A> - 
Method in class org.springframework.core.io.<A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io">ResourceEditor</A>
<DD>Resolve the given path, replacing placeholders with
 corresponding system property values if necessary.
<DT><A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html#resolvePath(java.lang.String)"><B>resolvePath(String)</B></A> - 
Method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html" title="class in org.springframework.core.io.support">ResourceArrayPropertyEditor</A>
<DD>Resolve the given path, replacing placeholders with
 corresponding system property values if necessary.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolvePathVariable(java.lang.String, java.lang.Class, org.springframework.web.context.request.NativeWebRequest)"><B>resolvePathVariable(String, Class, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Resolves the given <A HREF="../org/springframework/web/bind/annotation/PathVariable.html" title="annotation in org.springframework.web.bind.annotation"><CODE>@PathVariable</CODE></A> annotation.
<DT><A HREF="../org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, java.util.Properties)"><B>resolvePlaceholder(String, Properties)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html" title="class in org.springframework.beans.factory.config">PreferencesPlaceholderConfigurer</A>
<DD>This implementation tries to resolve placeholders as keys first
 in the user preferences, then in the system preferences, then in
 the passed-in properties.
<DT><A HREF="../org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, java.lang.String, java.util.prefs.Preferences)"><B>resolvePlaceholder(String, String, Preferences)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PreferencesPlaceholderConfigurer.html" title="class in org.springframework.beans.factory.config">PreferencesPlaceholderConfigurer</A>
<DD>Resolve the given path and key against the given Preferences.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, java.util.Properties, int)"><B>resolvePlaceholder(String, Properties, int)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyPlaceholderConfigurer</A>
<DD>Resolve the given placeholder using the given properties, performing
 a system properties check according to the given mode.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, java.util.Properties)"><B>resolvePlaceholder(String, Properties)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyPlaceholderConfigurer</A>
<DD>Resolve the given placeholder using the given properties.
<DT><A HREF="../org/springframework/util/PropertyPlaceholderHelper.PlaceholderResolver.html#resolvePlaceholder(java.lang.String)"><B>resolvePlaceholder(String)</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/PropertyPlaceholderHelper.PlaceholderResolver.html" title="interface in org.springframework.util">PropertyPlaceholderHelper.PlaceholderResolver</A>
<DD>Resolves the supplied placeholder name into the replacement value.
<DT><A HREF="../org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, java.util.Properties)"><B>resolvePlaceholder(String, Properties)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html" title="class in org.springframework.web.context.support">ServletContextPropertyPlaceholderConfigurer</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html#resolvePlaceholder(java.lang.String, javax.servlet.ServletContext, boolean)"><B>resolvePlaceholder(String, ServletContext, boolean)</B></A> - 
Method in class org.springframework.web.context.support.<A HREF="../org/springframework/web/context/support/ServletContextPropertyPlaceholderConfigurer.html" title="class in org.springframework.web.context.support">ServletContextPropertyPlaceholderConfigurer</A>
<DD>Resolves the given placeholder using the init parameters
 and optionally also the attributes of the given ServletContext.
<DT><A HREF="../org/springframework/util/SystemPropertyUtils.html#resolvePlaceholders(java.lang.String)"><B>resolvePlaceholders(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/SystemPropertyUtils.html" title="class in org.springframework.util">SystemPropertyUtils</A>
<DD>Resolve ${...} placeholders in the given text, replacing them with corresponding system property values.
<DT><A HREF="../org/springframework/util/SystemPropertyUtils.html#resolvePlaceholders(java.lang.String, boolean)"><B>resolvePlaceholders(String, boolean)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/SystemPropertyUtils.html" title="class in org.springframework.util">SystemPropertyUtils</A>
<DD>Resolve ${...} placeholders in the given text, replacing them with corresponding system property values.
<DT><A HREF="../org/springframework/util/ClassUtils.html#resolvePrimitiveClassName(java.lang.String)"><B>resolvePrimitiveClassName(String)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Resolve the given class name as primitive class, if appropriate,
 according to the JVM's naming rules for primitive classes.
<DT><A HREF="../org/springframework/util/ClassUtils.html#resolvePrimitiveIfNecessary(java.lang.Class)"><B>resolvePrimitiveIfNecessary(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ClassUtils.html" title="class in org.springframework.util">ClassUtils</A>
<DD>Resolve the given class if it is a primitive class,
 returning the corresponding primitive wrapper type instead.
<DT><A HREF="../org/springframework/core/ConfigurableObjectInputStream.html#resolveProxyClass(java.lang.String[])"><B>resolveProxyClass(String[])</B></A> - 
Method in class org.springframework.core.<A HREF="../org/springframework/core/ConfigurableObjectInputStream.html" title="class in org.springframework.core">ConfigurableObjectInputStream</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#resolveQueue(javax.jms.Session)"><B>resolveQueue(Session)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Resolve this accessor's target queue.
<DT><A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html#resolveQueue(javax.jms.Session, java.lang.String)"><B>resolveQueue(Session, String)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html" title="class in org.springframework.jms.support.destination">DynamicDestinationResolver</A>
<DD>Resolve the given destination name to a <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Queue.html?is-external=true" title="class or interface in javax.jms"><CODE>Queue</CODE></A>.
<DT><A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html#resolveQueueName(javax.jms.Session, java.lang.String)"><B>resolveQueueName(Session, String)</B></A> - 
Method in class org.springframework.jms.remoting.<A HREF="../org/springframework/jms/remoting/JmsInvokerClientInterceptor.html" title="class in org.springframework.jms.remoting">JmsInvokerClientInterceptor</A>
<DD>Resolve the given queue name into a JMS <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Queue.html?is-external=true" title="class or interface in javax.jms"><CODE>Queue</CODE></A>,
 via this accessor's <A HREF="../org/springframework/jms/support/destination/DestinationResolver.html" title="interface in org.springframework.jms.support.destination"><CODE>DestinationResolver</CODE></A>.
<DT><A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html#resolveReference(java.lang.String)"><B>resolveReference(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/FacesRequestAttributes.html" title="class in org.springframework.web.context.request">FacesRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/context/request/RequestAttributes.html#resolveReference(java.lang.String)"><B>resolveReference(String)</B></A> - 
Method in interface org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/RequestAttributes.html" title="interface in org.springframework.web.context.request">RequestAttributes</A>
<DD>Resolve the contextual reference for the given key, if any.
<DT><A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html#resolveReference(java.lang.String)"><B>resolveReference(String)</B></A> - 
Method in class org.springframework.web.context.request.<A HREF="../org/springframework/web/context/request/ServletRequestAttributes.html" title="class in org.springframework.web.context.request">ServletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html#resolveReference(java.lang.String)"><B>resolveReference(String)</B></A> - 
Method in class org.springframework.web.portlet.context.<A HREF="../org/springframework/web/portlet/context/PortletRequestAttributes.html" title="class in org.springframework.web.portlet.context">PortletRequestAttributes</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html#resolveRefreshCheckDelay(org.springframework.beans.factory.config.BeanDefinition)"><B>resolveRefreshCheckDelay(BeanDefinition)</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ScriptFactoryPostProcessor.html" title="class in org.springframework.scripting.support">ScriptFactoryPostProcessor</A>
<DD>Get the refresh check delay for the given <A HREF="../org/springframework/scripting/ScriptFactory.html" title="interface in org.springframework.scripting"><CODE>ScriptFactory</CODE></A> <A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config"><CODE>BeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolveRequestBody(org.springframework.core.MethodParameter, org.springframework.web.context.request.NativeWebRequest, java.lang.Object)"><B>resolveRequestBody(MethodParameter, NativeWebRequest, Object)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>Resolves the given <A HREF="../org/springframework/web/bind/annotation/RequestBody.html" title="annotation in org.springframework.web.bind.annotation"><CODE>@RequestBody</CODE></A> annotation.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html#resolveResponseStatus(org.springframework.web.bind.annotation.ResponseStatus, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception)"><B>resolveResponseStatus(ResponseStatus, HttpServletRequest, HttpServletResponse, Object, Exception)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation">ResponseStatusExceptionResolver</A>
<DD>Template method that handles <A HREF="../org/springframework/web/bind/annotation/ResponseStatus.html" title="annotation in org.springframework.web.bind.annotation"><CODE>@ResponseStatus</CODE></A> annotation.
<DT><A HREF="../org/springframework/core/GenericTypeResolver.html#resolveReturnType(java.lang.reflect.Method, java.lang.Class)"><B>resolveReturnType(Method, Class)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/GenericTypeResolver.html" title="class in org.springframework.core">GenericTypeResolver</A>
<DD>Determine the target type for the generic return type of the given method.
<DT><A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html#resolveRootDirResource(org.springframework.core.io.Resource)"><B>resolveRootDirResource(Resource)</B></A> - 
Method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html" title="class in org.springframework.core.io.support">PathMatchingResourcePatternResolver</A>
<DD>Resolve the specified resource for path matching.
<DT><A HREF="../org/springframework/context/annotation/AnnotationScopeMetadataResolver.html#resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)"><B>resolveScopeMetadata(BeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/AnnotationScopeMetadataResolver.html" title="class in org.springframework.context.annotation">AnnotationScopeMetadataResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html#resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)"><B>resolveScopeMetadata(BeanDefinition)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html" title="class in org.springframework.context.annotation">Jsr330ScopeMetadataResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/annotation/ScopeMetadataResolver.html#resolveScopeMetadata(org.springframework.beans.factory.config.BeanDefinition)"><B>resolveScopeMetadata(BeanDefinition)</B></A> - 
Method in interface org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/ScopeMetadataResolver.html" title="interface in org.springframework.context.annotation">ScopeMetadataResolver</A>
<DD>Resolve the <A HREF="../org/springframework/context/annotation/ScopeMetadata.html" title="class in org.springframework.context.annotation"><CODE>ScopeMetadata</CODE></A> appropriate to the supplied
 bean <code>definition</code>.
<DT><A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html#resolveScopeName(java.lang.String)"><B>resolveScopeName(String)</B></A> - 
Method in class org.springframework.context.annotation.<A HREF="../org/springframework/context/annotation/Jsr330ScopeMetadataResolver.html" title="class in org.springframework.context.annotation">Jsr330ScopeMetadataResolver</A>
<DD>Resolve the given annotation type into a named Spring scope.
<DT><A HREF="../org/springframework/beans/BeanUtils.html#resolveSignature(java.lang.String, java.lang.Class)"><B>resolveSignature(String, Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.beans.<A HREF="../org/springframework/beans/BeanUtils.html" title="class in org.springframework.beans">BeanUtils</A>
<DD>Parse a method signature in the form <code>methodName[([arg_list])]</code>,
 where <code>arg_list</code> is an optional, comma-separated list of fully-qualified
 type names, and attempts to resolve that signature against the supplied <code>Class</code>.
<DT><A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html#resolveSpecifiedDataSource(java.lang.Object)"><B>resolveSpecifiedDataSource(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html" title="class in org.springframework.jdbc.datasource.lookup">AbstractRoutingDataSource</A>
<DD>Resolve the specified data source object into a DataSource instance.
<DT><A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html#resolveSpecifiedLookupKey(java.lang.Object)"><B>resolveSpecifiedLookupKey(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html" title="class in org.springframework.jdbc.datasource.lookup">AbstractRoutingDataSource</A>
<DD>Resolve the given lookup key object, as specified in the
 <A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html#setTargetDataSources(java.util.Map)"><CODE>targetDataSources</CODE></A> map, into
 the actual lookup key to be used for matching with the
 <A HREF="../org/springframework/jdbc/datasource/lookup/AbstractRoutingDataSource.html#determineCurrentLookupKey()"><CODE>current lookup key</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html#resolveSpecifiedLookupKey(java.lang.Object)"><B>resolveSpecifiedLookupKey(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.lookup.<A HREF="../org/springframework/jdbc/datasource/lookup/IsolationLevelDataSourceRouter.html" title="class in org.springframework.jdbc.datasource.lookup">IsolationLevelDataSourceRouter</A>
<DD>Supports Integer values for the isolation level constants
 as well as isolation level names as defined on the
 <A HREF="../org/springframework/transaction/TransactionDefinition.html" title="interface in org.springframework.transaction"><CODE>TransactionDefinition interface</CODE></A>.
<DT><A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html#resolveSpringBean(javax.faces.context.FacesContext, java.lang.String)"><B>resolveSpringBean(FacesContext, String)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html" title="class in org.springframework.web.jsf">DelegatingVariableResolver</A>
<DD>Resolve the attribute as a Spring bean in the ApplicationContext.
<DT><A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html#resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest)"><B>resolveStandardArgument(Class&lt;?&gt;, NativeWebRequest)</B></A> - 
Method in class org.springframework.web.bind.annotation.support.<A HREF="../org/springframework/web/bind/annotation/support/HandlerMethodInvoker.html" title="class in org.springframework.web.bind.annotation.support">HandlerMethodInvoker</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html#resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)"><B>resolveStandardArgument(Class, NativeWebRequest, Exception)</B></A> - 
Method in class org.springframework.web.portlet.mvc.annotation.<A HREF="../org/springframework/web/portlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.portlet.mvc.annotation">AnnotationMethodHandlerExceptionResolver</A>
<DD>Resolves standard method arguments.
<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html#resolveStandardArgument(java.lang.Class, org.springframework.web.context.request.NativeWebRequest, java.lang.Exception)"><B>resolveStandardArgument(Class, NativeWebRequest, Exception)</B></A> - 
Method in class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/AnnotationMethodHandlerExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation">AnnotationMethodHandlerExceptionResolver</A>
<DD>Resolves standard method arguments.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html#resolveStringValue(java.lang.String)"><B>resolveStringValue(String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html" title="class in org.springframework.beans.factory.config">BeanDefinitionVisitor</A>
<DD>Resolve the given String value, for example parsing placeholders.
<DT><A HREF="../org/springframework/util/StringValueResolver.html#resolveStringValue(java.lang.String)"><B>resolveStringValue(String)</B></A> - 
Method in interface org.springframework.util.<A HREF="../org/springframework/util/StringValueResolver.html" title="interface in org.springframework.util">StringValueResolver</A>
<DD>Resolve the given String value, for example parsing placeholders.
<DT><A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html#resolveSystemProperty(java.lang.String)"><B>resolveSystemProperty(String)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/PropertyPlaceholderConfigurer.html" title="class in org.springframework.beans.factory.config">PropertyPlaceholderConfigurer</A>
<DD>Resolve the given key as JVM system property, and optionally also as
 system environment variable if no matching system property has been found.
<DT><A HREF="../org/springframework/beans/factory/config/TypedStringValue.html#resolveTargetType(java.lang.ClassLoader)"><B>resolveTargetType(ClassLoader)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/TypedStringValue.html" title="class in org.springframework.beans.factory.config">TypedStringValue</A>
<DD>Determine the type to convert to, resolving it from a specified class name
 if necessary.
<DT><A HREF="../org/springframework/web/servlet/theme/CookieThemeResolver.html#resolveThemeName(javax.servlet.http.HttpServletRequest)"><B>resolveThemeName(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.theme.<A HREF="../org/springframework/web/servlet/theme/CookieThemeResolver.html" title="class in org.springframework.web.servlet.theme">CookieThemeResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/theme/FixedThemeResolver.html#resolveThemeName(javax.servlet.http.HttpServletRequest)"><B>resolveThemeName(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.theme.<A HREF="../org/springframework/web/servlet/theme/FixedThemeResolver.html" title="class in org.springframework.web.servlet.theme">FixedThemeResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/theme/SessionThemeResolver.html#resolveThemeName(javax.servlet.http.HttpServletRequest)"><B>resolveThemeName(HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.theme.<A HREF="../org/springframework/web/servlet/theme/SessionThemeResolver.html" title="class in org.springframework.web.servlet.theme">SessionThemeResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/ThemeResolver.html#resolveThemeName(javax.servlet.http.HttpServletRequest)"><B>resolveThemeName(HttpServletRequest)</B></A> - 
Method in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ThemeResolver.html" title="interface in org.springframework.web.servlet">ThemeResolver</A>
<DD>Resolve the current theme name via the given request.
<DT><A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html#resolveTopic(javax.jms.Session, java.lang.String)"><B>resolveTopic(Session, String)</B></A> - 
Method in class org.springframework.jms.support.destination.<A HREF="../org/springframework/jms/support/destination/DynamicDestinationResolver.html" title="class in org.springframework.jms.support.destination">DynamicDestinationResolver</A>
<DD>Resolve the given destination name to a <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Topic.html?is-external=true" title="class or interface in javax.jms"><CODE>Topic</CODE></A>.
<DT><A HREF="../org/springframework/core/GenericTypeResolver.html#resolveTypeArgument(java.lang.Class, java.lang.Class)"><B>resolveTypeArgument(Class, Class)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/GenericTypeResolver.html" title="class in org.springframework.core">GenericTypeResolver</A>
<DD>Resolve the single type argument of the given generic interface against
 the given target class which is assumed to implement the generic interface
 and possibly declare a concrete type for its type variable.
<DT><A HREF="../org/springframework/core/GenericTypeResolver.html#resolveTypeArguments(java.lang.Class, java.lang.Class)"><B>resolveTypeArguments(Class, Class)</B></A> - 
Static method in class org.springframework.core.<A HREF="../org/springframework/core/GenericTypeResolver.html" title="class in org.springframework.core">GenericTypeResolver</A>
<DD>Resolve the type arguments of the given generic interface against the given
 target class which is assumed to implement the generic interface and possibly
 declare concrete types for its type variables.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html#resolveValue(java.lang.Object)"><B>resolveValue(Object)</B></A> - 
Method in class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinitionVisitor.html" title="class in org.springframework.beans.factory.config">BeanDefinitionVisitor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html#resolveVariable(javax.faces.context.FacesContext, java.lang.String)"><B>resolveVariable(FacesContext, String)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/DelegatingVariableResolver.html" title="class in org.springframework.web.jsf">DelegatingVariableResolver</A>
<DD>Delegate to the original VariableResolver first, then try to
 resolve the variable as Spring bean in the root WebApplicationContext.
<DT><A HREF="../org/springframework/web/jsf/SpringBeanVariableResolver.html#resolveVariable(javax.faces.context.FacesContext, java.lang.String)"><B>resolveVariable(FacesContext, String)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/SpringBeanVariableResolver.html" title="class in org.springframework.web.jsf">SpringBeanVariableResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/jsf/WebApplicationContextVariableResolver.html#resolveVariable(javax.faces.context.FacesContext, java.lang.String)"><B>resolveVariable(FacesContext, String)</B></A> - 
Method in class org.springframework.web.jsf.<A HREF="../org/springframework/web/jsf/WebApplicationContextVariableResolver.html" title="class in org.springframework.web.jsf">WebApplicationContextVariableResolver</A>
<DD>Check for the special "webApplicationContext" variable first,
 then delegate to the original VariableResolver.
<DT><A HREF="../org/springframework/web/portlet/DispatcherPortlet.html#resolveViewName(java.lang.String, java.util.Map, javax.portlet.PortletRequest)"><B>resolveViewName(String, Map, PortletRequest)</B></A> - 
Method in class org.springframework.web.portlet.<A HREF="../org/springframework/web/portlet/DispatcherPortlet.html" title="class in org.springframework.web.portlet">DispatcherPortlet</A>
<DD>Resolve the given view name into a View object (to be rendered).
<DT><A HREF="../org/springframework/web/servlet/DispatcherServlet.html#resolveViewName(java.lang.String, java.util.Map, java.util.Locale, javax.servlet.http.HttpServletRequest)"><B>resolveViewName(String, Map&lt;String, Object&gt;, Locale, HttpServletRequest)</B></A> - 
Method in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/DispatcherServlet.html" title="class in org.springframework.web.servlet">DispatcherServlet</A>
<DD>Resolve the given view name into a View object (to be rendered).
<DT><A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html#resolveViewName(java.lang.String, java.util.Locale)"><B>resolveViewName(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/AbstractCachingViewResolver.html" title="class in org.springframework.web.servlet.view">AbstractCachingViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/BeanNameViewResolver.html#resolveViewName(java.lang.String, java.util.Locale)"><B>resolveViewName(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/BeanNameViewResolver.html" title="class in org.springframework.web.servlet.view">BeanNameViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html#resolveViewName(java.lang.String, java.util.Locale)"><B>resolveViewName(String, Locale)</B></A> - 
Method in class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html" title="class in org.springframework.web.servlet.view">ContentNegotiatingViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/ViewResolver.html#resolveViewName(java.lang.String, java.util.Locale)"><B>resolveViewName(String, Locale)</B></A> - 
Method in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet">ViewResolver</A>
<DD>Resolve the given view by name.
<DT><A HREF="../org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html#resolveWiringInfo(java.lang.Object)"><B>resolveWiringInfo(Object)</B></A> - 
Method in class org.springframework.beans.factory.annotation.<A HREF="../org/springframework/beans/factory/annotation/AnnotationBeanWiringInfoResolver.html" title="class in org.springframework.beans.factory.annotation">AnnotationBeanWiringInfoResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html#resolveWiringInfo(java.lang.Object)"><B>resolveWiringInfo(Object)</B></A> - 
Method in interface org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/BeanWiringInfoResolver.html" title="interface in org.springframework.beans.factory.wiring">BeanWiringInfoResolver</A>
<DD>Resolve the BeanWiringInfo for the given bean instance.
<DT><A HREF="../org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html#resolveWiringInfo(java.lang.Object)"><B>resolveWiringInfo(Object)</B></A> - 
Method in class org.springframework.beans.factory.wiring.<A HREF="../org/springframework/beans/factory/wiring/ClassNameBeanWiringInfoResolver.html" title="class in org.springframework.beans.factory.wiring">ClassNameBeanWiringInfoResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/support/PagedListHolder.html#resort()"><B>resort()</B></A> - 
Method in class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/PagedListHolder.html" title="class in org.springframework.beans.support">PagedListHolder</A>
<DD>Resort the list if necessary, i.e.
<DT><A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><B>Resource</B></A> - Interface in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD>Interface for a resource descriptor that abstracts from the actual
 type of underlying resource, such as a file or class path resource.<DT><A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html#RESOURCE_ATTRIBUTE"><B>RESOURCE_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.html" title="class in org.springframework.beans.factory.xml">DefaultBeanDefinitionDocumentReader</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/ResourceServlet.html#RESOURCE_PARAM_NAME"><B>RESOURCE_PARAM_NAME</B></A> - 
Static variable in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ResourceServlet.html" title="class in org.springframework.web.servlet">ResourceServlet</A>
<DD>Name of the parameter that must contain the actual resource path.
<DT><A HREF="../org/springframework/web/servlet/ResourceServlet.html#RESOURCE_URL_DELIMITERS"><B>RESOURCE_URL_DELIMITERS</B></A> - 
Static variable in class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ResourceServlet.html" title="class in org.springframework.web.servlet">ResourceServlet</A>
<DD>Any number of these characters are considered delimiters
 between multiple resource paths in a single String value.
<DT><A HREF="../org/springframework/web/client/ResourceAccessException.html" title="class in org.springframework.web.client"><B>ResourceAccessException</B></A> - Exception in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Exception thrown when an I/O error occurs.<DT><A HREF="../org/springframework/web/client/ResourceAccessException.html#ResourceAccessException(java.lang.String)"><B>ResourceAccessException(String)</B></A> - 
Constructor for exception org.springframework.web.client.<A HREF="../org/springframework/web/client/ResourceAccessException.html" title="class in org.springframework.web.client">ResourceAccessException</A>
<DD>Construct a new <code>HttpIOException</code> with the given message.
<DT><A HREF="../org/springframework/web/client/ResourceAccessException.html#ResourceAccessException(java.lang.String, java.io.IOException)"><B>ResourceAccessException(String, IOException)</B></A> - 
Constructor for exception org.springframework.web.client.<A HREF="../org/springframework/web/client/ResourceAccessException.html" title="class in org.springframework.web.client">ResourceAccessException</A>
<DD>Construct a new <code>HttpIOException</code> with the given message and <A HREF="http://java.sun.com/javase/6/docs/api/java/io/IOException.html?is-external=true" title="class or interface in java.io"><CODE>IOException</CODE></A>.
<DT><A HREF="../org/springframework/jca/context/ResourceAdapterApplicationContext.html" title="class in org.springframework.jca.context"><B>ResourceAdapterApplicationContext</B></A> - Class in <A HREF="../org/springframework/jca/context/package-summary.html">org.springframework.jca.context</A><DD><A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A> implementation
 for a JCA ResourceAdapter.<DT><A HREF="../org/springframework/jca/context/ResourceAdapterApplicationContext.html#ResourceAdapterApplicationContext(javax.resource.spi.BootstrapContext)"><B>ResourceAdapterApplicationContext(BootstrapContext)</B></A> - 
Constructor for class org.springframework.jca.context.<A HREF="../org/springframework/jca/context/ResourceAdapterApplicationContext.html" title="class in org.springframework.jca.context">ResourceAdapterApplicationContext</A>
<DD>Create a new ResourceAdapterApplicationContext for the given BootstrapContext.
<DT><A HREF="../org/springframework/jca/support/ResourceAdapterFactoryBean.html" title="class in org.springframework.jca.support"><B>ResourceAdapterFactoryBean</B></A> - Class in <A HREF="../org/springframework/jca/support/package-summary.html">org.springframework.jca.support</A><DD><A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> that bootstraps
 the specified JCA 1.5 <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/resource/spi/ResourceAdapter.html?is-external=true" title="class or interface in javax.resource.spi"><CODE>ResourceAdapter</CODE></A>,
 starting it with a local <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/resource/spi/BootstrapContext.html?is-external=true" title="class or interface in javax.resource.spi"><CODE>BootstrapContext</CODE></A>
 and exposing it for bean references.<DT><A HREF="../org/springframework/jca/support/ResourceAdapterFactoryBean.html#ResourceAdapterFactoryBean()"><B>ResourceAdapterFactoryBean()</B></A> - 
Constructor for class org.springframework.jca.support.<A HREF="../org/springframework/jca/support/ResourceAdapterFactoryBean.html" title="class in org.springframework.jca.support">ResourceAdapterFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/ResourceAllocationException.html" title="class in org.springframework.jms"><B>ResourceAllocationException</B></A> - Exception in <A HREF="../org/springframework/jms/package-summary.html">org.springframework.jms</A><DD>Runtime exception mirroring the JMS ResourceAllocationException.<DT><A HREF="../org/springframework/jms/ResourceAllocationException.html#ResourceAllocationException(javax.jms.ResourceAllocationException)"><B>ResourceAllocationException(ResourceAllocationException)</B></A> - 
Constructor for exception org.springframework.jms.<A HREF="../org/springframework/jms/ResourceAllocationException.html" title="class in org.springframework.jms">ResourceAllocationException</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html" title="class in org.springframework.core.io.support"><B>ResourceArrayPropertyEditor</B></A> - Class in <A HREF="../org/springframework/core/io/support/package-summary.html">org.springframework.core.io.support</A><DD>Editor for <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A> arrays, to
 automatically convert <code>String</code> location patterns
 (e.g.<DT><A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html#ResourceArrayPropertyEditor()"><B>ResourceArrayPropertyEditor()</B></A> - 
Constructor for class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html" title="class in org.springframework.core.io.support">ResourceArrayPropertyEditor</A>
<DD>Create a new ResourceArrayPropertyEditor with a default
 PathMatchingResourcePatternResolver.
<DT><A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html#ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver)"><B>ResourceArrayPropertyEditor(ResourcePatternResolver)</B></A> - 
Constructor for class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html" title="class in org.springframework.core.io.support">ResourceArrayPropertyEditor</A>
<DD>Create a new ResourceArrayPropertyEditor with the given ResourcePatternResolver.
<DT><A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html#ResourceArrayPropertyEditor(org.springframework.core.io.support.ResourcePatternResolver, boolean)"><B>ResourceArrayPropertyEditor(ResourcePatternResolver, boolean)</B></A> - 
Constructor for class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourceArrayPropertyEditor.html" title="class in org.springframework.core.io.support">ResourceArrayPropertyEditor</A>
<DD>Create a new ResourceArrayPropertyEditor with the given ResourcePatternResolver.
<DT><A HREF="../org/springframework/web/portlet/mvc/ResourceAwareController.html" title="interface in org.springframework.web.portlet.mvc"><B>ResourceAwareController</B></A> - Interface in <A HREF="../org/springframework/web/portlet/mvc/package-summary.html">org.springframework.web.portlet.mvc</A><DD>Extension of the Portlet <A HREF="../org/springframework/web/portlet/mvc/Controller.html" title="interface in org.springframework.web.portlet.mvc"><CODE>Controller</CODE></A> interface that allows
 for handling Portlet 2.0 resource requests as well.<DT><A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html" title="class in org.springframework.beans.propertyeditors"><B>ResourceBundleEditor</B></A> - Class in <A HREF="../org/springframework/beans/propertyeditors/package-summary.html">org.springframework.beans.propertyeditors</A><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>PropertyEditor</CODE></A> implementation for
 <A HREF="http://java.sun.com/javase/6/docs/api/java/util/ResourceBundle.html?is-external=true" title="class or interface in java.util"><CODE>ResourceBundles</CODE></A>.<DT><A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html#ResourceBundleEditor()"><B>ResourceBundleEditor()</B></A> - 
Constructor for class org.springframework.beans.propertyeditors.<A HREF="../org/springframework/beans/propertyeditors/ResourceBundleEditor.html" title="class in org.springframework.beans.propertyeditors">ResourceBundleEditor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html" title="class in org.springframework.context.support"><B>ResourceBundleMessageSource</B></A> - Class in <A HREF="../org/springframework/context/support/package-summary.html">org.springframework.context.support</A><DD><A HREF="../org/springframework/context/MessageSource.html" title="interface in org.springframework.context"><CODE>MessageSource</CODE></A> implementation that
 accesses resource bundles using specified basenames.<DT><A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html#ResourceBundleMessageSource()"><B>ResourceBundleMessageSource()</B></A> - 
Constructor for class org.springframework.context.support.<A HREF="../org/springframework/context/support/ResourceBundleMessageSource.html" title="class in org.springframework.context.support">ResourceBundleMessageSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html" title="class in org.springframework.ui.context.support"><B>ResourceBundleThemeSource</B></A> - Class in <A HREF="../org/springframework/ui/context/support/package-summary.html">org.springframework.ui.context.support</A><DD><A HREF="../org/springframework/ui/context/ThemeSource.html" title="interface in org.springframework.ui.context"><CODE>ThemeSource</CODE></A> implementation that looks up an individual
 <A HREF="http://java.sun.com/javase/6/docs/api/java/util/ResourceBundle.html?is-external=true" title="class or interface in java.util"><CODE>ResourceBundle</CODE></A> per theme.<DT><A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html#ResourceBundleThemeSource()"><B>ResourceBundleThemeSource()</B></A> - 
Constructor for class org.springframework.ui.context.support.<A HREF="../org/springframework/ui/context/support/ResourceBundleThemeSource.html" title="class in org.springframework.ui.context.support">ResourceBundleThemeSource</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/view/ResourceBundleViewResolver.html" title="class in org.springframework.web.servlet.view"><B>ResourceBundleViewResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/view/package-summary.html">org.springframework.web.servlet.view</A><DD><A HREF="../org/springframework/web/servlet/ViewResolver.html" title="interface in org.springframework.web.servlet"><CODE>ViewResolver</CODE></A> implementation 
 that uses bean definitions in a <A HREF="http://java.sun.com/javase/6/docs/api/java/util/ResourceBundle.html?is-external=true" title="class or interface in java.util"><CODE>ResourceBundle</CODE></A>, specified by
 the bundle basename.<DT><A HREF="../org/springframework/web/servlet/view/ResourceBundleViewResolver.html#ResourceBundleViewResolver()"><B>ResourceBundleViewResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.view.<A HREF="../org/springframework/web/servlet/view/ResourceBundleViewResolver.html" title="class in org.springframework.web.servlet.view">ResourceBundleViewResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html" title="class in org.springframework.jdbc.datasource.init"><B>ResourceDatabasePopulator</B></A> - Class in <A HREF="../org/springframework/jdbc/datasource/init/package-summary.html">org.springframework.jdbc.datasource.init</A><DD>Populates a database from SQL scripts defined in external resources.<DT><A HREF="../org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html#ResourceDatabasePopulator()"><B>ResourceDatabasePopulator()</B></A> - 
Constructor for class org.springframework.jdbc.datasource.init.<A HREF="../org/springframework/jdbc/datasource/init/ResourceDatabasePopulator.html" title="class in org.springframework.jdbc.datasource.init">ResourceDatabasePopulator</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io"><B>ResourceEditor</B></A> - Class in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD><A HREF="http://java.sun.com/javase/6/docs/api/java/beans/PropertyEditor.html?is-external=true" title="class or interface in java.beans"><CODE>Editor</CODE></A> for <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A>
 descriptors, to automatically convert <code>String</code> locations
 e.g.<DT><A HREF="../org/springframework/core/io/ResourceEditor.html#ResourceEditor()"><B>ResourceEditor()</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io">ResourceEditor</A>
<DD>Create a new instance of the <A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io"><CODE>ResourceEditor</CODE></A> class
 using a <A HREF="../org/springframework/core/io/DefaultResourceLoader.html" title="class in org.springframework.core.io"><CODE>DefaultResourceLoader</CODE></A>.
<DT><A HREF="../org/springframework/core/io/ResourceEditor.html#ResourceEditor(org.springframework.core.io.ResourceLoader)"><B>ResourceEditor(ResourceLoader)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io">ResourceEditor</A>
<DD>Create a new instance of the <A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io"><CODE>ResourceEditor</CODE></A> class
 using the given <A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><CODE>ResourceLoader</CODE></A>.
<DT><A HREF="../org/springframework/core/io/ResourceEditor.html#ResourceEditor(org.springframework.core.io.ResourceLoader, boolean)"><B>ResourceEditor(ResourceLoader, boolean)</B></A> - 
Constructor for class org.springframework.core.io.<A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io">ResourceEditor</A>
<DD>Create a new instance of the <A HREF="../org/springframework/core/io/ResourceEditor.html" title="class in org.springframework.core.io"><CODE>ResourceEditor</CODE></A> class
 using the given <A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><CODE>ResourceLoader</CODE></A>.
<DT><A HREF="../org/springframework/beans/support/ResourceEditorRegistrar.html" title="class in org.springframework.beans.support"><B>ResourceEditorRegistrar</B></A> - Class in <A HREF="../org/springframework/beans/support/package-summary.html">org.springframework.beans.support</A><DD>PropertyEditorRegistrar implementation that populates a given
 <A HREF="../org/springframework/beans/PropertyEditorRegistry.html" title="interface in org.springframework.beans"><CODE>PropertyEditorRegistry</CODE></A>
 (typically a <A HREF="../org/springframework/beans/BeanWrapper.html" title="interface in org.springframework.beans"><CODE>BeanWrapper</CODE></A> used for bean
 creation within an <A HREF="../org/springframework/context/ApplicationContext.html" title="interface in org.springframework.context"><CODE>ApplicationContext</CODE></A>)
 with resource editors.<DT><A HREF="../org/springframework/beans/support/ResourceEditorRegistrar.html#ResourceEditorRegistrar(org.springframework.core.io.ResourceLoader)"><B>ResourceEditorRegistrar(ResourceLoader)</B></A> - 
Constructor for class org.springframework.beans.support.<A HREF="../org/springframework/beans/support/ResourceEditorRegistrar.html" title="class in org.springframework.beans.support">ResourceEditorRegistrar</A>
<DD>Create a new ResourceEditorRegistrar for the given ResourceLoader
<DT><A HREF="../org/springframework/beans/factory/xml/ResourceEntityResolver.html" title="class in org.springframework.beans.factory.xml"><B>ResourceEntityResolver</B></A> - Class in <A HREF="../org/springframework/beans/factory/xml/package-summary.html">org.springframework.beans.factory.xml</A><DD>EntityResolver implementation that tries to resolve entity references
 through a <A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><CODE>ResourceLoader</CODE></A> (usually,
 relative to the resource base of an ApplicationContext), if applicable.<DT><A HREF="../org/springframework/beans/factory/xml/ResourceEntityResolver.html#ResourceEntityResolver(org.springframework.core.io.ResourceLoader)"><B>ResourceEntityResolver(ResourceLoader)</B></A> - 
Constructor for class org.springframework.beans.factory.xml.<A HREF="../org/springframework/beans/factory/xml/ResourceEntityResolver.html" title="class in org.springframework.beans.factory.xml">ResourceEntityResolver</A>
<DD>Create a ResourceEntityResolver for the specified ResourceLoader
 (usually, an ApplicationContext).
<DT><A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support"><B>ResourceHolder</B></A> - Interface in <A HREF="../org/springframework/transaction/support/package-summary.html">org.springframework.transaction.support</A><DD>Generic interface to be implemented by resource holders.<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support"><B>ResourceHolderSupport</B></A> - Class in <A HREF="../org/springframework/transaction/support/package-summary.html">org.springframework.transaction.support</A><DD>Convenient base class for resource holders.<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html#ResourceHolderSupport()"><B>ResourceHolderSupport()</B></A> - 
Constructor for class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSupport.html" title="class in org.springframework.transaction.support">ResourceHolderSupport</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support"><B>ResourceHolderSynchronization</B></A>&lt;<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="type parameter in ResourceHolderSynchronization">H</A> extends <A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support">ResourceHolder</A>,<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="type parameter in ResourceHolderSynchronization">K</A>&gt; - Class in <A HREF="../org/springframework/transaction/support/package-summary.html">org.springframework.transaction.support</A><DD><A HREF="../org/springframework/transaction/support/TransactionSynchronization.html" title="interface in org.springframework.transaction.support"><CODE>TransactionSynchronization</CODE></A> implementation that manages a
 <A HREF="../org/springframework/transaction/support/ResourceHolder.html" title="interface in org.springframework.transaction.support"><CODE>ResourceHolder</CODE></A> bound through <A HREF="../org/springframework/transaction/support/TransactionSynchronizationManager.html" title="class in org.springframework.transaction.support"><CODE>TransactionSynchronizationManager</CODE></A>.<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#ResourceHolderSynchronization(H, K)"><B>ResourceHolderSynchronization(H, K)</B></A> - 
Constructor for class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>Create a new ResourceHolderSynchronization for the given holder.
<DT><A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter"><B>ResourceHttpMessageConverter</B></A> - Class in <A HREF="../org/springframework/http/converter/package-summary.html">org.springframework.http.converter</A><DD>Implementation of <A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter"><CODE>HttpMessageConverter</CODE></A> that can read and write <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resources</CODE></A>.<DT><A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html#ResourceHttpMessageConverter()"><B>ResourceHttpMessageConverter()</B></A> - 
Constructor for class org.springframework.http.converter.<A HREF="../org/springframework/http/converter/ResourceHttpMessageConverter.html" title="class in org.springframework.http.converter">ResourceHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html" title="class in org.springframework.web.servlet.resource"><B>ResourceHttpRequestHandler</B></A> - Class in <A HREF="../org/springframework/web/servlet/resource/package-summary.html">org.springframework.web.servlet.resource</A><DD><A HREF="../org/springframework/web/HttpRequestHandler.html" title="interface in org.springframework.web"><CODE>HttpRequestHandler</CODE></A> that serves static resources optimized for superior browser performance 
 (according to the guidelines of Page Speed, YSlow, etc.) by allowing for flexible cache settings
 (<A HREF="../org/springframework/web/servlet/support/WebContentGenerator.html#setCacheSeconds(int)"><CODE>"cacheSeconds" property</CODE></A>, last-modified support).<DT><A HREF="../org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html#ResourceHttpRequestHandler()"><B>ResourceHttpRequestHandler()</B></A> - 
Constructor for class org.springframework.web.servlet.resource.<A HREF="../org/springframework/web/servlet/resource/ResourceHttpRequestHandler.html" title="class in org.springframework.web.servlet.resource">ResourceHttpRequestHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><B>ResourceLoader</B></A> - Interface in <A HREF="../org/springframework/core/io/package-summary.html">org.springframework.core.io</A><DD>Strategy interface for loading resources (e..<DT><A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html#resourceLoader"><B>resourceLoader</B></A> - 
Variable in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/SchedulerAccessor.html" title="class in org.springframework.scheduling.quartz">SchedulerAccessor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/context/ResourceLoaderAware.html" title="interface in org.springframework.context"><B>ResourceLoaderAware</B></A> - Interface in <A HREF="../org/springframework/context/package-summary.html">org.springframework.context</A><DD>Interface to be implemented by any object that wishes to be notified of
 the <b>ResourceLoader</b> (typically the ApplicationContext) that it runs in.<DT><A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html" title="class in org.springframework.scheduling.quartz"><B>ResourceLoaderClassLoadHelper</B></A> - Class in <A HREF="../org/springframework/scheduling/quartz/package-summary.html">org.springframework.scheduling.quartz</A><DD>Wrapper that adapts from the Quartz <CODE>ClassLoadHelper</CODE> interface
 onto Spring's <A HREF="../org/springframework/core/io/ResourceLoader.html" title="interface in org.springframework.core.io"><CODE>ResourceLoader</CODE></A> interface.<DT><A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html#ResourceLoaderClassLoadHelper()"><B>ResourceLoaderClassLoadHelper()</B></A> - 
Constructor for class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html" title="class in org.springframework.scheduling.quartz">ResourceLoaderClassLoadHelper</A>
<DD>Create a new ResourceLoaderClassLoadHelper for the default
 ResourceLoader.
<DT><A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html#ResourceLoaderClassLoadHelper(org.springframework.core.io.ResourceLoader)"><B>ResourceLoaderClassLoadHelper(ResourceLoader)</B></A> - 
Constructor for class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.html" title="class in org.springframework.scheduling.quartz">ResourceLoaderClassLoadHelper</A>
<DD>Create a new ResourceLoaderClassLoadHelper for the given ResourceLoader.
<DT><A HREF="../org/springframework/web/portlet/bind/annotation/ResourceMapping.html" title="annotation in org.springframework.web.portlet.bind.annotation"><B>ResourceMapping</B></A> - Annotation Type in <A HREF="../org/springframework/web/portlet/bind/annotation/package-summary.html">org.springframework.web.portlet.bind.annotation</A><DD>Annotation for mapping Portlet resource requests onto handler methods.<DT><A HREF="../org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html" title="class in org.springframework.instrument.classloading"><B>ResourceOverridingShadowingClassLoader</B></A> - Class in <A HREF="../org/springframework/instrument/classloading/package-summary.html">org.springframework.instrument.classloading</A><DD>Subclass of ShadowingClassLoader that overrides attempts to
 locate certain files.<DT><A HREF="../org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html#ResourceOverridingShadowingClassLoader(java.lang.ClassLoader)"><B>ResourceOverridingShadowingClassLoader(ClassLoader)</B></A> - 
Constructor for class org.springframework.instrument.classloading.<A HREF="../org/springframework/instrument/classloading/ResourceOverridingShadowingClassLoader.html" title="class in org.springframework.instrument.classloading">ResourceOverridingShadowingClassLoader</A>
<DD>Create a new ResourceOverridingShadowingClassLoader,
 decorating the given ClassLoader.
<DT><A HREF="../org/springframework/core/io/support/ResourcePatternResolver.html" title="interface in org.springframework.core.io.support"><B>ResourcePatternResolver</B></A> - Interface in <A HREF="../org/springframework/core/io/support/package-summary.html">org.springframework.core.io.support</A><DD>Strategy interface for resolving a location pattern (for example,
 an Ant-style path pattern) into Resource objects.<DT><A HREF="../org/springframework/core/io/support/ResourcePatternUtils.html" title="class in org.springframework.core.io.support"><B>ResourcePatternUtils</B></A> - Class in <A HREF="../org/springframework/core/io/support/package-summary.html">org.springframework.core.io.support</A><DD>Utility class for determining whether a given URL is a resource
 location that can be loaded via a ResourcePatternResolver.<DT><A HREF="../org/springframework/core/io/support/ResourcePatternUtils.html#ResourcePatternUtils()"><B>ResourcePatternUtils()</B></A> - 
Constructor for class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/ResourcePatternUtils.html" title="class in org.springframework.core.io.support">ResourcePatternUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support"><B>ResourceScriptSource</B></A> - Class in <A HREF="../org/springframework/scripting/support/package-summary.html">org.springframework.scripting.support</A><DD><A HREF="../org/springframework/scripting/ScriptSource.html" title="interface in org.springframework.scripting"><CODE>ScriptSource</CODE></A> implementation
 based on Spring's <A HREF="../org/springframework/core/io/Resource.html" title="interface in org.springframework.core.io"><CODE>Resource</CODE></A>
 abstraction.<DT><A HREF="../org/springframework/scripting/support/ResourceScriptSource.html#ResourceScriptSource(org.springframework.core.io.Resource)"><B>ResourceScriptSource(Resource)</B></A> - 
Constructor for class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support">ResourceScriptSource</A>
<DD>Create a new ResourceScriptSource for the given resource.
<DT><A HREF="../org/springframework/web/servlet/ResourceServlet.html" title="class in org.springframework.web.servlet"><B>ResourceServlet</B></A> - Class in <A HREF="../org/springframework/web/servlet/package-summary.html">org.springframework.web.servlet</A><DD>Simple servlet that can expose an internal resource, including a 
 default URL if the specified resource is not found.<DT><A HREF="../org/springframework/web/servlet/ResourceServlet.html#ResourceServlet()"><B>ResourceServlet()</B></A> - 
Constructor for class org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/ResourceServlet.html" title="class in org.springframework.web.servlet">ResourceServlet</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/ResourceTransactionManager.html" title="interface in org.springframework.transaction.support"><B>ResourceTransactionManager</B></A> - Interface in <A HREF="../org/springframework/transaction/support/package-summary.html">org.springframework.transaction.support</A><DD>Extension of the <A HREF="../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction"><CODE>PlatformTransactionManager</CODE></A>
 interface, indicating a native resource transaction manager, operating on a single
 target resource.<DT><A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util"><B>ResourceUtils</B></A> - Class in <A HREF="../org/springframework/util/package-summary.html">org.springframework.util</A><DD>Utility methods for resolving resource locations to files in the
 file system.<DT><A HREF="../org/springframework/util/ResourceUtils.html#ResourceUtils()"><B>ResourceUtils()</B></A> - 
Constructor for class org.springframework.util.<A HREF="../org/springframework/util/ResourceUtils.html" title="class in org.springframework.util">ResourceUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/servlet/View.html#RESPONSE_STATUS_ATTRIBUTE"><B>RESPONSE_STATUS_ATTRIBUTE</B></A> - 
Static variable in interface org.springframework.web.servlet.<A HREF="../org/springframework/web/servlet/View.html" title="interface in org.springframework.web.servlet">View</A>
<DD>Name of the <A HREF="http://java.sun.com/j2ee/1.4/docs/api/javax/servlet/http/HttpServletRequest.html?is-external=true" title="class or interface in javax.servlet.http"><CODE>HttpServletRequest</CODE></A> attribute that contains the response status code.
<DT><A HREF="../org/springframework/web/bind/annotation/ResponseBody.html" title="annotation in org.springframework.web.bind.annotation"><B>ResponseBody</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Annotation which indicates that a method return value should be bound to the web response body.<DT><A HREF="../org/springframework/http/ResponseEntity.html" title="class in org.springframework.http"><B>ResponseEntity</B></A>&lt;<A HREF="../org/springframework/http/ResponseEntity.html" title="type parameter in ResponseEntity">T</A>&gt; - Class in <A HREF="../org/springframework/http/package-summary.html">org.springframework.http</A><DD>Extension of <A HREF="../org/springframework/http/HttpEntity.html" title="class in org.springframework.http"><CODE>HttpEntity</CODE></A> that adds a <A HREF="../org/springframework/http/HttpStatus.html" title="enum in org.springframework.http"><CODE>HttpStatus</CODE></A> status code.<DT><A HREF="../org/springframework/http/ResponseEntity.html#ResponseEntity(org.springframework.http.HttpStatus)"><B>ResponseEntity(HttpStatus)</B></A> - 
Constructor for class org.springframework.http.<A HREF="../org/springframework/http/ResponseEntity.html" title="class in org.springframework.http">ResponseEntity</A>
<DD>Create a new <code>ResponseEntity</code> with the given status code, and no body nor headers.
<DT><A HREF="../org/springframework/http/ResponseEntity.html#ResponseEntity(T, org.springframework.http.HttpStatus)"><B>ResponseEntity(T, HttpStatus)</B></A> - 
Constructor for class org.springframework.http.<A HREF="../org/springframework/http/ResponseEntity.html" title="class in org.springframework.http">ResponseEntity</A>
<DD>Create a new <code>ResponseEntity</code> with the given body and status code, and no headers.
<DT><A HREF="../org/springframework/http/ResponseEntity.html#ResponseEntity(org.springframework.util.MultiValueMap, org.springframework.http.HttpStatus)"><B>ResponseEntity(MultiValueMap&lt;String, String&gt;, HttpStatus)</B></A> - 
Constructor for class org.springframework.http.<A HREF="../org/springframework/http/ResponseEntity.html" title="class in org.springframework.http">ResponseEntity</A>
<DD>Create a new <code>HttpEntity</code> with the given headers and status code, and no body.
<DT><A HREF="../org/springframework/http/ResponseEntity.html#ResponseEntity(T, org.springframework.util.MultiValueMap, org.springframework.http.HttpStatus)"><B>ResponseEntity(T, MultiValueMap&lt;String, String&gt;, HttpStatus)</B></A> - 
Constructor for class org.springframework.http.<A HREF="../org/springframework/http/ResponseEntity.html" title="class in org.springframework.http">ResponseEntity</A>
<DD>Create a new <code>HttpEntity</code> with the given body, headers, and status code.
<DT><A HREF="../org/springframework/web/client/ResponseErrorHandler.html" title="interface in org.springframework.web.client"><B>ResponseErrorHandler</B></A> - Interface in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Strategy interface used by the <A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><CODE>RestTemplate</CODE></A> to determine whether a particular response has an error or not.<DT><A HREF="../org/springframework/web/client/ResponseExtractor.html" title="interface in org.springframework.web.client"><B>ResponseExtractor</B></A>&lt;<A HREF="../org/springframework/web/client/ResponseExtractor.html" title="type parameter in ResponseExtractor">T</A>&gt; - Interface in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Generic callback interface used by <A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><CODE>RestTemplate</CODE></A>'s retrieval methods
 Implementations of this interface perform the actual work of extracting data
 from a <A HREF="../org/springframework/http/client/ClientHttpResponse.html" title="interface in org.springframework.http.client"><CODE>ClientHttpResponse</CODE></A>, but don't need to worry about exception
 handling or closing resources.<DT><A HREF="../org/springframework/web/bind/annotation/ResponseStatus.html" title="annotation in org.springframework.web.bind.annotation"><B>ResponseStatus</B></A> - Annotation Type in <A HREF="../org/springframework/web/bind/annotation/package-summary.html">org.springframework.web.bind.annotation</A><DD>Marks a method or exception class with the status code and reason that should be returned.<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation"><B>ResponseStatusExceptionResolver</B></A> - Class in <A HREF="../org/springframework/web/servlet/mvc/annotation/package-summary.html">org.springframework.web.servlet.mvc.annotation</A><DD>Implementation of the <A HREF="../org/springframework/web/servlet/HandlerExceptionResolver.html" title="interface in org.springframework.web.servlet"><CODE>HandlerExceptionResolver</CODE></A>
 interface that uses the <A HREF="../org/springframework/web/bind/annotation/ResponseStatus.html" title="annotation in org.springframework.web.bind.annotation"><CODE>@ResponseStatus</CODE></A> annotation to map exceptions to HTTP status codes.<DT><A HREF="../org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html#ResponseStatusExceptionResolver()"><B>ResponseStatusExceptionResolver()</B></A> - 
Constructor for class org.springframework.web.servlet.mvc.annotation.<A HREF="../org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.html" title="class in org.springframework.web.servlet.mvc.annotation">ResponseStatusExceptionResolver</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/client/RestClientException.html" title="class in org.springframework.web.client"><B>RestClientException</B></A> - Exception in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Base class for exceptions thrown by <A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><CODE>RestTemplate</CODE></A> whenever it encounters client-side HTTP errors.<DT><A HREF="../org/springframework/web/client/RestClientException.html#RestClientException(java.lang.String)"><B>RestClientException(String)</B></A> - 
Constructor for exception org.springframework.web.client.<A HREF="../org/springframework/web/client/RestClientException.html" title="class in org.springframework.web.client">RestClientException</A>
<DD>Construct a new instance of <code>HttpClientException</code> with the given message.
<DT><A HREF="../org/springframework/web/client/RestClientException.html#RestClientException(java.lang.String, java.lang.Throwable)"><B>RestClientException(String, Throwable)</B></A> - 
Constructor for exception org.springframework.web.client.<A HREF="../org/springframework/web/client/RestClientException.html" title="class in org.springframework.web.client">RestClientException</A>
<DD>Construct a new instance of <code>HttpClientException</code> with the given message and exception.
<DT><A HREF="../org/springframework/web/client/support/RestGatewaySupport.html" title="class in org.springframework.web.client.support"><B>RestGatewaySupport</B></A> - Class in <A HREF="../org/springframework/web/client/support/package-summary.html">org.springframework.web.client.support</A><DD>Convenient super class for application classes that need REST access.<DT><A HREF="../org/springframework/web/client/support/RestGatewaySupport.html#RestGatewaySupport()"><B>RestGatewaySupport()</B></A> - 
Constructor for class org.springframework.web.client.support.<A HREF="../org/springframework/web/client/support/RestGatewaySupport.html" title="class in org.springframework.web.client.support">RestGatewaySupport</A>
<DD>Construct a new instance of the <A HREF="../org/springframework/web/client/support/RestGatewaySupport.html" title="class in org.springframework.web.client.support"><CODE>RestGatewaySupport</CODE></A>, with default parameters.
<DT><A HREF="../org/springframework/web/client/support/RestGatewaySupport.html#RestGatewaySupport(org.springframework.http.client.ClientHttpRequestFactory)"><B>RestGatewaySupport(ClientHttpRequestFactory)</B></A> - 
Constructor for class org.springframework.web.client.support.<A HREF="../org/springframework/web/client/support/RestGatewaySupport.html" title="class in org.springframework.web.client.support">RestGatewaySupport</A>
<DD>Construct a new instance of the <A HREF="../org/springframework/web/client/support/RestGatewaySupport.html" title="class in org.springframework.web.client.support"><CODE>RestGatewaySupport</CODE></A>, with the given <A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequestFactory</CODE></A>.
<DT><A HREF="../org/springframework/web/client/RestOperations.html" title="interface in org.springframework.web.client"><B>RestOperations</B></A> - Interface in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD>Interface specifying a basic set of RESTful operations.<DT><A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><B>RestTemplate</B></A> - Class in <A HREF="../org/springframework/web/client/package-summary.html">org.springframework.web.client</A><DD><strong>The central class for client-side HTTP access.</strong> It simplifies communication with HTTP servers, and
 enforces RESTful principles.<DT><A HREF="../org/springframework/web/client/RestTemplate.html#RestTemplate()"><B>RestTemplate()</B></A> - 
Constructor for class org.springframework.web.client.<A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client">RestTemplate</A>
<DD>Create a new instance of the <A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><CODE>RestTemplate</CODE></A> using default settings.
<DT><A HREF="../org/springframework/web/client/RestTemplate.html#RestTemplate(org.springframework.http.client.ClientHttpRequestFactory)"><B>RestTemplate(ClientHttpRequestFactory)</B></A> - 
Constructor for class org.springframework.web.client.<A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client">RestTemplate</A>
<DD>Create a new instance of the <A HREF="../org/springframework/web/client/RestTemplate.html" title="class in org.springframework.web.client"><CODE>RestTemplate</CODE></A> based on the given <A HREF="../org/springframework/http/client/ClientHttpRequestFactory.html" title="interface in org.springframework.http.client"><CODE>ClientHttpRequestFactory</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetExtractor.html" title="interface in org.springframework.jdbc.core"><B>ResultSetExtractor</B></A>&lt;<A HREF="../org/springframework/jdbc/core/ResultSetExtractor.html" title="type parameter in ResultSetExtractor">T</A>&gt; - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Callback interface used by <A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core"><CODE>JdbcTemplate</CODE></A>'s query methods.<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core"><B>ResultSetSupportingSqlParameter</B></A> - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Common base class for ResultSet-supporting SqlParameters like
 <A HREF="../org/springframework/jdbc/core/SqlOutParameter.html" title="class in org.springframework.jdbc.core"><CODE>SqlOutParameter</CODE></A> and <A HREF="../org/springframework/jdbc/core/SqlReturnResultSet.html" title="class in org.springframework.jdbc.core"><CODE>SqlReturnResultSet</CODE></A>.<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int)"><B>ResultSetSupportingSqlParameter(String, int)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int, int)"><B>ResultSetSupportingSqlParameter(String, int, int)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int, java.lang.String)"><B>ResultSetSupportingSqlParameter(String, int, String)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.ResultSetExtractor)"><B>ResultSetSupportingSqlParameter(String, int, ResultSetExtractor)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.RowCallbackHandler)"><B>ResultSetSupportingSqlParameter(String, int, RowCallbackHandler)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html#ResultSetSupportingSqlParameter(java.lang.String, int, org.springframework.jdbc.core.RowMapper)"><B>ResultSetSupportingSqlParameter(String, int, RowMapper)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/ResultSetSupportingSqlParameter.html" title="class in org.springframework.jdbc.core">ResultSetSupportingSqlParameter</A>
<DD>Create a new ResultSetSupportingSqlParameter.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset"><B>ResultSetWrappingSqlRowSet</B></A> - Class in <A HREF="../org/springframework/jdbc/support/rowset/package-summary.html">org.springframework.jdbc.support.rowset</A><DD>Default implementation of Spring's <A HREF="../org/springframework/jdbc/support/rowset/SqlRowSet.html" title="interface in org.springframework.jdbc.support.rowset"><CODE>SqlRowSet</CODE></A> interface.<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html#ResultSetWrappingSqlRowSet(java.sql.ResultSet)"><B>ResultSetWrappingSqlRowSet(ResultSet)</B></A> - 
Constructor for class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSet.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSet</A>
<DD>Create a new ResultSetWrappingSqlRowSet for the given ResultSet.
<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html" title="class in org.springframework.jdbc.support.rowset"><B>ResultSetWrappingSqlRowSetMetaData</B></A> - Class in <A HREF="../org/springframework/jdbc/support/rowset/package-summary.html">org.springframework.jdbc.support.rowset</A><DD>Default implementation of Spring's SqlRowSetMetaData interface.<DT><A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html#ResultSetWrappingSqlRowSetMetaData(java.sql.ResultSetMetaData)"><B>ResultSetWrappingSqlRowSetMetaData(ResultSetMetaData)</B></A> - 
Constructor for class org.springframework.jdbc.support.rowset.<A HREF="../org/springframework/jdbc/support/rowset/ResultSetWrappingSqlRowSetMetaData.html" title="class in org.springframework.jdbc.support.rowset">ResultSetWrappingSqlRowSetMetaData</A>
<DD>Create a new ResultSetWrappingSqlRowSetMetaData object
 for the given ResultSetMetaData instance.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#resume(java.lang.Object, org.springframework.transaction.support.AbstractPlatformTransactionManager.SuspendedResourcesHolder)"><B>resume(Object, AbstractPlatformTransactionManager.SuspendedResourcesHolder)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>Resume the given transaction.
<DT><A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html#resume()"><B>resume()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/ResourceHolderSynchronization.html" title="class in org.springframework.transaction.support">ResourceHolderSynchronization</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronization.html#resume()"><B>resume()</B></A> - 
Method in interface org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronization.html" title="interface in org.springframework.transaction.support">TransactionSynchronization</A>
<DD>Resume this synchronization.
<DT><A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html#resume()"><B>resume()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/TransactionSynchronizationAdapter.html" title="class in org.springframework.transaction.support">TransactionSynchronizationAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#resumePausedTasks()"><B>resumePausedTasks()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Try to resume all paused tasks.
<DT><A HREF="../org/springframework/util/AutoPopulatingList.html#retainAll(java.util.Collection)"><B>retainAll(Collection&lt;?&gt;)</B></A> - 
Method in class org.springframework.util.<A HREF="../org/springframework/util/AutoPopulatingList.html" title="class in org.springframework.util">AutoPopulatingList</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#rethrowException(java.lang.Throwable)"><B>rethrowException(Throwable)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Rethrow the given <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang"><CODE>exception</CODE></A>, which is presumably the
 <em>target exception</em> of an <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/InvocationTargetException.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>InvocationTargetException</CODE></A>.
<DT><A HREF="../org/springframework/util/ReflectionUtils.html#rethrowRuntimeException(java.lang.Throwable)"><B>rethrowRuntimeException(Throwable)</B></A> - 
Static method in class org.springframework.util.<A HREF="../org/springframework/util/ReflectionUtils.html" title="class in org.springframework.util">ReflectionUtils</A>
<DD>Rethrow the given <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Throwable.html?is-external=true" title="class or interface in java.lang"><CODE>exception</CODE></A>, which is presumably the
 <em>target exception</em> of an <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/reflect/InvocationTargetException.html?is-external=true" title="class or interface in java.lang.reflect"><CODE>InvocationTargetException</CODE></A>.
<DT><A HREF="../org/springframework/web/bind/support/DefaultSessionAttributeStore.html#retrieveAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)"><B>retrieveAttribute(WebRequest, String)</B></A> - 
Method in class org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/DefaultSessionAttributeStore.html" title="class in org.springframework.web.bind.support">DefaultSessionAttributeStore</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/web/bind/support/SessionAttributeStore.html#retrieveAttribute(org.springframework.web.context.request.WebRequest, java.lang.String)"><B>retrieveAttribute(WebRequest, String)</B></A> - 
Method in interface org.springframework.web.bind.support.<A HREF="../org/springframework/web/bind/support/SessionAttributeStore.html" title="interface in org.springframework.web.bind.support">SessionAttributeStore</A>
<DD>Retrieve the specified attribute from the backend session.
<DT><A HREF="../org/springframework/scripting/support/ResourceScriptSource.html#retrieveLastModifiedTime()"><B>retrieveLastModifiedTime()</B></A> - 
Method in class org.springframework.scripting.support.<A HREF="../org/springframework/scripting/support/ResourceScriptSource.html" title="class in org.springframework.scripting.support">ResourceScriptSource</A>
<DD>Retrieve the current last-modified timestamp of the underlying resource.
<DT><A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html#retrieveMatchingFiles(java.io.File, java.lang.String)"><B>retrieveMatchingFiles(File, String)</B></A> - 
Method in class org.springframework.core.io.support.<A HREF="../org/springframework/core/io/support/PathMatchingResourcePatternResolver.html" title="class in org.springframework.core.io.support">PathMatchingResourcePatternResolver</A>
<DD>Retrieve files that match the given path pattern,
 checking the given directory and its subdirectories.
<DT><A HREF="../org/springframework/test/annotation/ProfileValueUtils.html#retrieveProfileValueSource(java.lang.Class)"><B>retrieveProfileValueSource(Class&lt;?&gt;)</B></A> - 
Static method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/ProfileValueUtils.html" title="class in org.springframework.test.annotation">ProfileValueUtils</A>
<DD>Retrieves the <A HREF="../org/springframework/test/annotation/ProfileValueSource.html" title="interface in org.springframework.test.annotation"><CODE>ProfileValueSource</CODE></A> type for the specified
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Class.html?is-external=true" title="class or interface in java.lang"><CODE>test class</CODE></A> as configured via the
 <A HREF="../org/springframework/test/annotation/ProfileValueSourceConfiguration.html" title="annotation in org.springframework.test.annotation"><CODE>&#064;ProfileValueSourceConfiguration</CODE></A> annotation and instantiates a new
 instance of that type.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#retrieveTransactionManager()"><B>retrieveTransactionManager()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Allows subclasses to retrieve the JTA TransactionManager in a vendor-specific manner.
<DT><A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html#retrieveTransactionManager()"><B>retrieveTransactionManager()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html" title="class in org.springframework.transaction.jta">WebLogicJtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#retrieveTransactionSynchronizationRegistry()"><B>retrieveTransactionSynchronizationRegistry()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Allows subclasses to retrieve the JTA 1.1 TransactionSynchronizationRegistry
 in a vendor-specific manner.
<DT><A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html#retrieveUserTransaction()"><B>retrieveUserTransaction()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/JtaTransactionManager.html" title="class in org.springframework.transaction.jta">JtaTransactionManager</A>
<DD>Allows subclasses to retrieve the JTA UserTransaction in a vendor-specific manner.
<DT><A HREF="../org/springframework/transaction/jta/OC4JJtaTransactionManager.html#retrieveUserTransaction()"><B>retrieveUserTransaction()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/OC4JJtaTransactionManager.html" title="class in org.springframework.transaction.jta">OC4JJtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html#retrieveUserTransaction()"><B>retrieveUserTransaction()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/WebLogicJtaTransactionManager.html" title="class in org.springframework.transaction.jta">WebLogicJtaTransactionManager</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html#returnedClass()"><B>returnedClass()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobByteArrayType.html" title="class in org.springframework.orm.hibernate3.support">BlobByteArrayType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html#returnedClass()"><B>returnedClass()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobSerializableType.html" title="class in org.springframework.orm.hibernate3.support">BlobSerializableType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html#returnedClass()"><B>returnedClass()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/BlobStringType.html" title="class in org.springframework.orm.hibernate3.support">BlobStringType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html#returnedClass()"><B>returnedClass()</B></A> - 
Method in class org.springframework.orm.hibernate3.support.<A HREF="../org/springframework/orm/hibernate3/support/ClobStringType.html" title="class in org.springframework.orm.hibernate3.support">ClobStringType</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)"><B>returningResultSet(String, RowMapper)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcCall</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.simple.ParameterizedRowMapper)"><B>returningResultSet(String, ParameterizedRowMapper)</B></A> - 
Method in class org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html" title="class in org.springframework.jdbc.core.simple">SimpleJdbcCall</A>
<DD><B>Deprecated.</B>&nbsp;<I>in favor of <A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCall.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)"><CODE>SimpleJdbcCall.returningResultSet(String, org.springframework.jdbc.core.RowMapper)</CODE></A></I>
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)"><B>returningResultSet(String, RowMapper)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcCallOperations</A>
<DD>Used to specify when a ResultSet is returned by the stored procedure and you want it mapped
 by a RowMapper.
<DT><A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.simple.ParameterizedRowMapper)"><B>returningResultSet(String, ParameterizedRowMapper)</B></A> - 
Method in interface org.springframework.jdbc.core.simple.<A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html" title="interface in org.springframework.jdbc.core.simple">SimpleJdbcCallOperations</A>
<DD><B>Deprecated.</B>&nbsp;<I>in favor of <A HREF="../org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.html#returningResultSet(java.lang.String, org.springframework.jdbc.core.RowMapper)"><CODE>SimpleJdbcCallOperations.returningResultSet(String, org.springframework.jdbc.core.RowMapper)</CODE></A></I>
<DT><A HREF="../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi"><B>RmiBasedExporter</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>Convenient superclass for RMI-based remote exporters.<DT><A HREF="../org/springframework/remoting/rmi/RmiBasedExporter.html#RmiBasedExporter()"><B>RmiBasedExporter()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiBasedExporter.html" title="class in org.springframework.remoting.rmi">RmiBasedExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi"><B>RmiClientInterceptor</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD><A HREF="http://aopalliance.sourceforge.net/doc/org/aopalliance/intercept/MethodInterceptor.html?is-external=true" title="class or interface in org.aopalliance.intercept"><CODE>MethodInterceptor</CODE></A> for accessing conventional
 RMI services or RMI invokers.<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html#RmiClientInterceptor()"><B>RmiClientInterceptor()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptor.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptor</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi"><B>RmiClientInterceptorUtils</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>Factored-out methods for performing invocations within an RMI client.<DT><A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html#RmiClientInterceptorUtils()"><B>RmiClientInterceptorUtils()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiClientInterceptorUtils.html" title="class in org.springframework.remoting.rmi">RmiClientInterceptorUtils</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiInvocationHandler.html" title="interface in org.springframework.remoting.rmi"><B>RmiInvocationHandler</B></A> - Interface in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>Interface for RMI invocation handlers instances on the server,
 wrapping exported services.<DT><A HREF="../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi"><B>RmiProxyFactoryBean</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD><A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> for RMI proxies, supporting both conventional RMI services
 and RMI invokers.<DT><A HREF="../org/springframework/remoting/rmi/RmiProxyFactoryBean.html#RmiProxyFactoryBean()"><B>RmiProxyFactoryBean()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiProxyFactoryBean.html" title="class in org.springframework.remoting.rmi">RmiProxyFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi"><B>RmiRegistryFactoryBean</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD><A HREF="../org/springframework/beans/factory/FactoryBean.html" title="interface in org.springframework.beans.factory"><CODE>FactoryBean</CODE></A> that locates a <A HREF="http://java.sun.com/javase/6/docs/api/java/rmi/registry/Registry.html?is-external=true" title="class or interface in java.rmi.registry"><CODE>Registry</CODE></A> and
 exposes it for bean references.<DT><A HREF="../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html#RmiRegistryFactoryBean()"><B>RmiRegistryFactoryBean()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiRegistryFactoryBean.html" title="class in org.springframework.remoting.rmi">RmiRegistryFactoryBean</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/remoting/rmi/RmiServiceExporter.html" title="class in org.springframework.remoting.rmi"><B>RmiServiceExporter</B></A> - Class in <A HREF="../org/springframework/remoting/rmi/package-summary.html">org.springframework.remoting.rmi</A><DD>RMI exporter that exposes the specified service as RMI object with the specified name.<DT><A HREF="../org/springframework/remoting/rmi/RmiServiceExporter.html#RmiServiceExporter()"><B>RmiServiceExporter()</B></A> - 
Constructor for class org.springframework.remoting.rmi.<A HREF="../org/springframework/remoting/rmi/RmiServiceExporter.html" title="class in org.springframework.remoting.rmi">RmiServiceExporter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#ROLE_APPLICATION"><B>ROLE_APPLICATION</B></A> - 
Static variable in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Role hint indicating that a <code>BeanDefinition</code> is a major part
 of the application.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#ROLE_GETTER"><B>ROLE_GETTER</B></A> - 
Static variable in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Constant identifier for the getter role field value in a JMX <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/Descriptor.html?is-external=true" title="class or interface in javax.management"><CODE>Descriptor</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#ROLE_INFRASTRUCTURE"><B>ROLE_INFRASTRUCTURE</B></A> - 
Static variable in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Role hint indicating that a <code>BeanDefinition</code> is providing an
 entirely background role and has no relevance to the end-user.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#ROLE_OPERATION"><B>ROLE_OPERATION</B></A> - 
Static variable in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Identifies an operation (method) in a JMX <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/Descriptor.html?is-external=true" title="class or interface in javax.management"><CODE>Descriptor</CODE></A>.
<DT><A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html#ROLE_SETTER"><B>ROLE_SETTER</B></A> - 
Static variable in class org.springframework.jmx.export.assembler.<A HREF="../org/springframework/jmx/export/assembler/AbstractReflectiveMBeanInfoAssembler.html" title="class in org.springframework.jmx.export.assembler">AbstractReflectiveMBeanInfoAssembler</A>
<DD>Constant identifier for the setter role field value in a JMX <A HREF="http://java.sun.com/javase/6/docs/api/javax/management/Descriptor.html?is-external=true" title="class or interface in javax.management"><CODE>Descriptor</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/config/BeanDefinition.html#ROLE_SUPPORT"><B>ROLE_SUPPORT</B></A> - 
Static variable in interface org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/BeanDefinition.html" title="interface in org.springframework.beans.factory.config">BeanDefinition</A>
<DD>Role hint indicating that a <code>BeanDefinition</code> is a supporting
 part of some larger configuration, typically an outer
 <A HREF="../org/springframework/beans/factory/parsing/ComponentDefinition.html" title="interface in org.springframework.beans.factory.parsing"><CODE>ComponentDefinition</CODE></A>.
<DT><A HREF="../org/springframework/test/annotation/Rollback.html" title="annotation in org.springframework.test.annotation"><B>Rollback</B></A> - Annotation Type in <A HREF="../org/springframework/test/annotation/package-summary.html">org.springframework.test.annotation</A><DD>Test annotation to indicate whether or not the transaction for the annotated
 test method should be <em>rolled back</em> after the test method has
 completed.<DT><A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html#rollback()"><B>rollback()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/ManagedTransactionAdapter.html" title="class in org.springframework.transaction.jta">ManagedTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html#rollback()"><B>rollback()</B></A> - 
Method in class org.springframework.transaction.jta.<A HREF="../org/springframework/transaction/jta/UserTransactionAdapter.html" title="class in org.springframework.transaction.jta">UserTransactionAdapter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/PlatformTransactionManager.html#rollback(org.springframework.transaction.TransactionStatus)"><B>rollback(TransactionStatus)</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/PlatformTransactionManager.html" title="interface in org.springframework.transaction">PlatformTransactionManager</A>
<DD>Perform a rollback of the given transaction.
<DT><A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html#rollback(org.springframework.transaction.TransactionStatus)"><B>rollback(TransactionStatus)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractPlatformTransactionManager.html" title="class in org.springframework.transaction.support">AbstractPlatformTransactionManager</A>
<DD>This implementation of rollback handles participating in existing
 transactions.
<DT><A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html#ROLLBACK_ON_RUNTIME_EXCEPTIONS"><B>ROLLBACK_ON_RUNTIME_EXCEPTIONS</B></A> - 
Static variable in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html" title="class in org.springframework.transaction.interceptor">RollbackRuleAttribute</A>
<DD>The <A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html" title="class in org.springframework.transaction.interceptor"><CODE>rollback rule</CODE></A> for
 <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/RuntimeException.html?is-external=true" title="class or interface in java.lang"><CODE>RuntimeExceptions</CODE></A>.
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#rollbackIfNecessary(javax.jms.Session)"><B>rollbackIfNecessary(Session)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Perform a rollback, if appropriate.
<DT><A HREF="../org/springframework/jms/support/JmsUtils.html#rollbackIfNecessary(javax.jms.Session)"><B>rollbackIfNecessary(Session)</B></A> - 
Static method in class org.springframework.jms.support.<A HREF="../org/springframework/jms/support/JmsUtils.html" title="class in org.springframework.jms.support">JmsUtils</A>
<DD>Rollback the Session if not within a JTA transaction.
<DT><A HREF="../org/springframework/transaction/interceptor/DefaultTransactionAttribute.html#rollbackOn(java.lang.Throwable)"><B>rollbackOn(Throwable)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/DefaultTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">DefaultTransactionAttribute</A>
<DD>The default behavior is as with EJB: rollback on unchecked exception.
<DT><A HREF="../org/springframework/transaction/interceptor/DelegatingTransactionAttribute.html#rollbackOn(java.lang.Throwable)"><B>rollbackOn(Throwable)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/DelegatingTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">DelegatingTransactionAttribute</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html#rollbackOn(java.lang.Throwable)"><B>rollbackOn(Throwable)</B></A> - 
Method in class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">RuleBasedTransactionAttribute</A>
<DD>Winning rule is the shallowest rule (that is, the closest in the
 inheritance hierarchy to the exception).
<DT><A HREF="../org/springframework/transaction/interceptor/TransactionAttribute.html#rollbackOn(java.lang.Throwable)"><B>rollbackOn(Throwable)</B></A> - 
Method in interface org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/TransactionAttribute.html" title="interface in org.springframework.transaction.interceptor">TransactionAttribute</A>
<DD>Should we roll back on the given exception?
<DT><A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html#rollbackOnExceptionIfNecessary(javax.jms.Session, java.lang.Throwable)"><B>rollbackOnExceptionIfNecessary(Session, Throwable)</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractMessageListenerContainer.html" title="class in org.springframework.jms.listener">AbstractMessageListenerContainer</A>
<DD>Perform a rollback, handling rollback exceptions properly.
<DT><A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html" title="class in org.springframework.transaction.interceptor"><B>RollbackRuleAttribute</B></A> - Class in <A HREF="../org/springframework/transaction/interceptor/package-summary.html">org.springframework.transaction.interceptor</A><DD>Rule determining whether or not a given exception (and any subclasses)
 should cause a rollback.<DT><A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html#RollbackRuleAttribute(java.lang.Class)"><B>RollbackRuleAttribute(Class)</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html" title="class in org.springframework.transaction.interceptor">RollbackRuleAttribute</A>
<DD>Create a new instance of the <code>RollbackRuleAttribute</code> class.
<DT><A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html#RollbackRuleAttribute(java.lang.String)"><B>RollbackRuleAttribute(String)</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RollbackRuleAttribute.html" title="class in org.springframework.transaction.interceptor">RollbackRuleAttribute</A>
<DD>Create a new instance of the <code>RollbackRuleAttribute</code> class
 for the given <code>exceptionName</code>.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#rollbackToHeldSavepoint()"><B>rollbackToHeldSavepoint()</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>Roll back to the savepoint that is held for the transaction.
<DT><A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html#rollbackToSavepoint(java.lang.Object)"><B>rollbackToSavepoint(Object)</B></A> - 
Method in class org.springframework.jdbc.datasource.<A HREF="../org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.html" title="class in org.springframework.jdbc.datasource">JdbcTransactionObjectSupport</A>
<DD>This implementation rolls back to the given JDBC 3.0 Savepoint.
<DT><A HREF="../org/springframework/transaction/SavepointManager.html#rollbackToSavepoint(java.lang.Object)"><B>rollbackToSavepoint(Object)</B></A> - 
Method in interface org.springframework.transaction.<A HREF="../org/springframework/transaction/SavepointManager.html" title="interface in org.springframework.transaction">SavepointManager</A>
<DD>Roll back to the given savepoint.
<DT><A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html#rollbackToSavepoint(java.lang.Object)"><B>rollbackToSavepoint(Object)</B></A> - 
Method in class org.springframework.transaction.support.<A HREF="../org/springframework/transaction/support/AbstractTransactionStatus.html" title="class in org.springframework.transaction.support">AbstractTransactionStatus</A>
<DD>This implementation delegates to a SavepointManager for the
 underlying transaction, if possible.
<DT><A HREF="../org/springframework/web/context/WebApplicationContext.html#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE"><B>ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE</B></A> - 
Static variable in interface org.springframework.web.context.<A HREF="../org/springframework/web/context/WebApplicationContext.html" title="interface in org.springframework.web.context">WebApplicationContext</A>
<DD>Context attribute to bind root WebApplicationContext to on successful startup.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html#rootBeanDefinition(java.lang.Class)"><B>rootBeanDefinition(Class)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support">BeanDefinitionBuilder</A>
<DD>Create a new <code>BeanDefinitionBuilder</code> used to construct a <A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support"><CODE>RootBeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html#rootBeanDefinition(java.lang.Class, java.lang.String)"><B>rootBeanDefinition(Class, String)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support">BeanDefinitionBuilder</A>
<DD>Create a new <code>BeanDefinitionBuilder</code> used to construct a <A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support"><CODE>RootBeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html#rootBeanDefinition(java.lang.String)"><B>rootBeanDefinition(String)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support">BeanDefinitionBuilder</A>
<DD>Create a new <code>BeanDefinitionBuilder</code> used to construct a <A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support"><CODE>RootBeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html#rootBeanDefinition(java.lang.String, java.lang.String)"><B>rootBeanDefinition(String, String)</B></A> - 
Static method in class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/BeanDefinitionBuilder.html" title="class in org.springframework.beans.factory.support">BeanDefinitionBuilder</A>
<DD>Create a new <code>BeanDefinitionBuilder</code> used to construct a <A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support"><CODE>RootBeanDefinition</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support"><B>RootBeanDefinition</B></A> - Class in <A HREF="../org/springframework/beans/factory/support/package-summary.html">org.springframework.beans.factory.support</A><DD>A root bean definition represents the merged bean definition that backs
 a specific bean in a Spring BeanFactory at runtime.<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition()"><B>RootBeanDefinition()</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition, to be configured through its bean
 properties and configuration methods.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class)"><B>RootBeanDefinition(Class)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition for a singleton.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, boolean)"><B>RootBeanDefinition(Class, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD><B>Deprecated.</B>&nbsp;<I>since Spring 2.5, in favor of <A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#setScope(java.lang.String)"><CODE>AbstractBeanDefinition.setScope(java.lang.String)</CODE></A></I>
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, int)"><B>RootBeanDefinition(Class, int)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of <A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#setAutowireMode(int)"><CODE>AbstractBeanDefinition.setAutowireMode(int)</CODE></A> usage</I>
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, int, boolean)"><B>RootBeanDefinition(Class, int, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition for a singleton,
 using the given autowire mode.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, org.springframework.beans.MutablePropertyValues)"><B>RootBeanDefinition(Class, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD><B>Deprecated.</B>&nbsp;<I>as of Spring 3.0, in favor of <A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#getPropertyValues()"><CODE>AbstractBeanDefinition.getPropertyValues()</CODE></A> usage</I>
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, org.springframework.beans.MutablePropertyValues, boolean)"><B>RootBeanDefinition(Class, MutablePropertyValues, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD><B>Deprecated.</B>&nbsp;<I>since Spring 2.5, in favor of <A HREF="../org/springframework/beans/factory/support/AbstractBeanDefinition.html#setScope(java.lang.String)"><CODE>AbstractBeanDefinition.setScope(java.lang.String)</CODE></A></I>
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.Class, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)"><B>RootBeanDefinition(Class, ConstructorArgumentValues, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition for a singleton,
 providing constructor arguments and property values.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.String)"><B>RootBeanDefinition(String)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition for a singleton,
 providing constructor arguments and property values.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(java.lang.String, org.springframework.beans.factory.config.ConstructorArgumentValues, org.springframework.beans.MutablePropertyValues)"><B>RootBeanDefinition(String, ConstructorArgumentValues, MutablePropertyValues)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition for a singleton,
 providing constructor arguments and property values.
<DT><A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html#RootBeanDefinition(org.springframework.beans.factory.support.RootBeanDefinition)"><B>RootBeanDefinition(RootBeanDefinition)</B></A> - 
Constructor for class org.springframework.beans.factory.support.<A HREF="../org/springframework/beans/factory/support/RootBeanDefinition.html" title="class in org.springframework.beans.factory.support">RootBeanDefinition</A>
<DD>Create a new RootBeanDefinition as deep copy of the given
 bean definition.
<DT><A HREF="../org/springframework/aop/support/RootClassFilter.html" title="class in org.springframework.aop.support"><B>RootClassFilter</B></A> - Class in <A HREF="../org/springframework/aop/support/package-summary.html">org.springframework.aop.support</A><DD>Simple ClassFilter implementation that passes classes (and optionally subclasses)<DT><A HREF="../org/springframework/aop/support/RootClassFilter.html#RootClassFilter(java.lang.Class)"><B>RootClassFilter(Class)</B></A> - 
Constructor for class org.springframework.aop.support.<A HREF="../org/springframework/aop/support/RootClassFilter.html" title="class in org.springframework.aop.support">RootClassFilter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/RowCallbackHandler.html" title="interface in org.springframework.jdbc.core"><B>RowCallbackHandler</B></A> - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>An interface used by <A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core"><CODE>JdbcTemplate</CODE></A> for processing rows of a
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/ResultSet.html?is-external=true" title="class or interface in java.sql"><CODE>ResultSet</CODE></A> on a per-row basis.<DT><A HREF="../org/springframework/jdbc/core/RowCountCallbackHandler.html" title="class in org.springframework.jdbc.core"><B>RowCountCallbackHandler</B></A> - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Implementation of RowCallbackHandler.<DT><A HREF="../org/springframework/jdbc/core/RowCountCallbackHandler.html#RowCountCallbackHandler()"><B>RowCountCallbackHandler()</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/RowCountCallbackHandler.html" title="class in org.springframework.jdbc.core">RowCountCallbackHandler</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jdbc/core/RowMapper.html" title="interface in org.springframework.jdbc.core"><B>RowMapper</B></A>&lt;<A HREF="../org/springframework/jdbc/core/RowMapper.html" title="type parameter in RowMapper">T</A>&gt; - Interface in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>An interface used by <A HREF="../org/springframework/jdbc/core/JdbcTemplate.html" title="class in org.springframework.jdbc.core"><CODE>JdbcTemplate</CODE></A> for mapping rows of a
 <A HREF="http://java.sun.com/javase/6/docs/api/java/sql/ResultSet.html?is-external=true" title="class or interface in java.sql"><CODE>ResultSet</CODE></A> on a per-row basis.<DT><A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html" title="class in org.springframework.jdbc.core"><B>RowMapperResultSetExtractor</B></A>&lt;<A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html" title="type parameter in RowMapperResultSetExtractor">T</A>&gt; - Class in <A HREF="../org/springframework/jdbc/core/package-summary.html">org.springframework.jdbc.core</A><DD>Adapter implementation of the ResultSetExtractor interface that delegates
 to a RowMapper which is supposed to create an object for each row.<DT><A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html#RowMapperResultSetExtractor(org.springframework.jdbc.core.RowMapper)"><B>RowMapperResultSetExtractor(RowMapper&lt;T&gt;)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html" title="class in org.springframework.jdbc.core">RowMapperResultSetExtractor</A>
<DD>Create a new RowMapperResultSetExtractor.
<DT><A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html#RowMapperResultSetExtractor(org.springframework.jdbc.core.RowMapper, int)"><B>RowMapperResultSetExtractor(RowMapper&lt;T&gt;, int)</B></A> - 
Constructor for class org.springframework.jdbc.core.<A HREF="../org/springframework/jdbc/core/RowMapperResultSetExtractor.html" title="class in org.springframework.jdbc.core">RowMapperResultSetExtractor</A>
<DD>Create a new RowMapperResultSetExtractor.
<DT><A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html#ROWS_ATTRIBUTE"><B>ROWS_ATTRIBUTE</B></A> - 
Static variable in class org.springframework.web.servlet.tags.form.<A HREF="../org/springframework/web/servlet/tags/form/TextareaTag.html" title="class in org.springframework.web.servlet.tags.form">TextareaTag</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html" title="class in org.springframework.http.converter.feed"><B>RssChannelHttpMessageConverter</B></A> - Class in <A HREF="../org/springframework/http/converter/feed/package-summary.html">org.springframework.http.converter.feed</A><DD>Implementation of <A HREF="../org/springframework/http/converter/HttpMessageConverter.html" title="interface in org.springframework.http.converter"><CODE>HttpMessageConverter</CODE></A> that can read and write RSS feeds.<DT><A HREF="../org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html#RssChannelHttpMessageConverter()"><B>RssChannelHttpMessageConverter()</B></A> - 
Constructor for class org.springframework.http.converter.feed.<A HREF="../org/springframework/http/converter/feed/RssChannelHttpMessageConverter.html" title="class in org.springframework.http.converter.feed">RssChannelHttpMessageConverter</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html" title="class in org.springframework.transaction.interceptor"><B>RuleBasedTransactionAttribute</B></A> - Class in <A HREF="../org/springframework/transaction/interceptor/package-summary.html">org.springframework.transaction.interceptor</A><DD>TransactionAttribute implementation that works out whether a given exception
 should cause transaction rollback by applying a number of rollback rules,
 both positive and negative.<DT><A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html#RuleBasedTransactionAttribute()"><B>RuleBasedTransactionAttribute()</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">RuleBasedTransactionAttribute</A>
<DD>Create a new RuleBasedTransactionAttribute, with default settings.
<DT><A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html#RuleBasedTransactionAttribute(org.springframework.transaction.interceptor.RuleBasedTransactionAttribute)"><B>RuleBasedTransactionAttribute(RuleBasedTransactionAttribute)</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">RuleBasedTransactionAttribute</A>
<DD>Copy constructor.
<DT><A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html#RuleBasedTransactionAttribute(int, java.util.List)"><B>RuleBasedTransactionAttribute(int, List&lt;RollbackRuleAttribute&gt;)</B></A> - 
Constructor for class org.springframework.transaction.interceptor.<A HREF="../org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.html" title="class in org.springframework.transaction.interceptor">RuleBasedTransactionAttribute</A>
<DD>Create a new DefaultTransactionAttribute with the the given
 propagation behavior.
<DT><A HREF="../org/springframework/jca/work/DelegatingWork.html#run()"><B>run()</B></A> - 
Method in class org.springframework.jca.work.<A HREF="../org/springframework/jca/work/DelegatingWork.html" title="class in org.springframework.jca.work">DelegatingWork</A>
<DD>Delegates execution to the underlying Runnable.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#run()"><B>run()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Convenient method to run the function without arguments.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#run(int)"><B>run(int)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Convenient method to run the function with a single int argument.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#run(java.lang.Object...)"><B>run(Object...)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Analogous to the SqlQuery.execute([]) method.
<DT><A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html#run()"><B>run()</B></A> - 
Method in class org.springframework.scheduling.commonj.<A HREF="../org/springframework/scheduling/commonj/DelegatingWork.html" title="class in org.springframework.scheduling.commonj">DelegatingWork</A>
<DD>Delegates execution to the underlying Runnable.
<DT><A HREF="../org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.html#run()"><B>run()</B></A> - 
Method in class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/DelegatingErrorHandlingRunnable.html" title="class in org.springframework.scheduling.support">DelegatingErrorHandlingRunnable</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/support/MethodInvokingRunnable.html#run()"><B>run()</B></A> - 
Method in class org.springframework.scheduling.support.<A HREF="../org/springframework/scheduling/support/MethodInvokingRunnable.html" title="class in org.springframework.scheduling.support">MethodInvokingRunnable</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/scheduling/timer/DelegatingTimerTask.html#run()"><B>run()</B></A> - 
Method in class org.springframework.scheduling.timer.<A HREF="../org/springframework/scheduling/timer/DelegatingTimerTask.html" title="class in org.springframework.scheduling.timer">DelegatingTimerTask</A>
<DD><B>Deprecated.</B>&nbsp;Delegates execution to the underlying Runnable, catching any exception
 or error thrown in order to continue scheduled execution.
<DT><A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#run(org.junit.runner.notification.RunNotifier)"><B>run(RunNotifier)</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html" title="class in org.springframework.test.context.junit4">SpringJUnit4ClassRunner</A>
<DD>Check whether the test is enabled in the first place.
<DT><A HREF="../org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html#run(org.testng.IHookCallBack, org.testng.ITestResult)"><B>run(IHookCallBack, ITestResult)</B></A> - 
Method in class org.springframework.test.context.testng.<A HREF="../org/springframework/test/context/testng/AbstractTestNGSpringContextTests.html" title="class in org.springframework.test.context.testng">AbstractTestNGSpringContextTests</A>
<DD>Delegates to the <CODE>test
 method</CODE> in the supplied <code>callback</code> to execute the actual test
 and then tracks the exception thrown during test execution, if any.
<DT><A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html" title="class in org.springframework.test.context.junit4.statements"><B>RunAfterTestClassCallbacks</B></A> - Class in <A HREF="../org/springframework/test/context/junit4/statements/package-summary.html">org.springframework.test.context.junit4.statements</A><DD><code>RunAfterTestClassCallbacks</code> is a custom JUnit 4.5+
 <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/model.Statement.html?is-external=true" title="class or interface in org.junit.runners"><CODE>Statement</CODE></A> which allows the <em>Spring TestContext Framework</em> to
 be plugged into the JUnit execution chain by calling
 <A HREF="../org/springframework/test/context/TestContextManager.html#afterTestClass()"><CODE>afterTestClass()</CODE></A> on the supplied
 <A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context"><CODE>TestContextManager</CODE></A>.<DT><A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html#RunAfterTestClassCallbacks(org.junit.runners.model.Statement, org.springframework.test.context.TestContextManager)"><B>RunAfterTestClassCallbacks(Statement, TestContextManager)</B></A> - 
Constructor for class org.springframework.test.context.junit4.statements.<A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestClassCallbacks.html" title="class in org.springframework.test.context.junit4.statements">RunAfterTestClassCallbacks</A>
<DD>Constructs a new <code>RunAfterTestClassCallbacks</code> statement.
<DT><A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html" title="class in org.springframework.test.context.junit4.statements"><B>RunAfterTestMethodCallbacks</B></A> - Class in <A HREF="../org/springframework/test/context/junit4/statements/package-summary.html">org.springframework.test.context.junit4.statements</A><DD><code>RunAfterTestMethodCallbacks</code> is a custom JUnit 4.5+
 <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/model.Statement.html?is-external=true" title="class or interface in org.junit.runners"><CODE>Statement</CODE></A> which allows the <em>Spring TestContext Framework</em> to
 be plugged into the JUnit execution chain by calling
 <CODE>afterTestMethod()</CODE>
 on the supplied <A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context"><CODE>TestContextManager</CODE></A>.<DT><A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html#RunAfterTestMethodCallbacks(org.junit.runners.model.Statement, java.lang.Object, java.lang.reflect.Method, org.springframework.test.context.TestContextManager)"><B>RunAfterTestMethodCallbacks(Statement, Object, Method, TestContextManager)</B></A> - 
Constructor for class org.springframework.test.context.junit4.statements.<A HREF="../org/springframework/test/context/junit4/statements/RunAfterTestMethodCallbacks.html" title="class in org.springframework.test.context.junit4.statements">RunAfterTestMethodCallbacks</A>
<DD>Constructs a new <code>RunAfterTestMethodCallbacks</code> statement.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#runAfterTransactionMethods(org.springframework.test.context.TestContext)"><B>runAfterTransactionMethods(TestContext)</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html" title="class in org.springframework.test.context.transaction">TransactionalTestExecutionListener</A>
<DD>Run all <A HREF="../org/springframework/test/context/transaction/AfterTransaction.html" title="annotation in org.springframework.test.context.transaction"><CODE>@AfterTransaction methods</CODE></A> for the
 specified <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A>.
<DT><A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html#runBare()"><B>runBare()</B></A> - 
Method in class org.springframework.test.annotation.<A HREF="../org/springframework/test/annotation/AbstractAnnotationAwareTransactionalTests.html" title="class in org.springframework.test.annotation">AbstractAnnotationAwareTransactionalTests</A>
<DD><B>Deprecated.</B>&nbsp;Overridden to populate transaction definition from annotations.
<DT><A HREF="../org/springframework/test/ConditionalTestCase.html#runBare()"><B>runBare()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/ConditionalTestCase.html" title="class in org.springframework.test">ConditionalTestCase</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html#runBare()"><B>runBare()</B></A> - 
Method in class org.springframework.test.context.junit38.<A HREF="../org/springframework/test/context/junit38/AbstractJUnit38SpringContextTests.html" title="class in org.springframework.test.context.junit38">AbstractJUnit38SpringContextTests</A>
<DD>Runs the <em>Spring TestContext Framework</em> test sequence.
<DT><A HREF="../org/springframework/test/jpa/AbstractJpaTests.html#runBare()"><B>runBare()</B></A> - 
Method in class org.springframework.test.jpa.<A HREF="../org/springframework/test/jpa/AbstractJpaTests.html" title="class in org.springframework.test.jpa">AbstractJpaTests</A>
<DD><B>Deprecated.</B>&nbsp;&nbsp;
<DT><A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html" title="class in org.springframework.test.context.junit4.statements"><B>RunBeforeTestClassCallbacks</B></A> - Class in <A HREF="../org/springframework/test/context/junit4/statements/package-summary.html">org.springframework.test.context.junit4.statements</A><DD><code>RunBeforeTestClassCallbacks</code> is a custom JUnit 4.5+
 <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/model.Statement.html?is-external=true" title="class or interface in org.junit.runners"><CODE>Statement</CODE></A> which allows the <em>Spring TestContext Framework</em> to
 be plugged into the JUnit execution chain by calling
 <A HREF="../org/springframework/test/context/TestContextManager.html#beforeTestClass()"><CODE>beforeTestClass()</CODE></A> on the
 supplied <A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context"><CODE>TestContextManager</CODE></A>.<DT><A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html#RunBeforeTestClassCallbacks(org.junit.runners.model.Statement, org.springframework.test.context.TestContextManager)"><B>RunBeforeTestClassCallbacks(Statement, TestContextManager)</B></A> - 
Constructor for class org.springframework.test.context.junit4.statements.<A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestClassCallbacks.html" title="class in org.springframework.test.context.junit4.statements">RunBeforeTestClassCallbacks</A>
<DD>Constructs a new <code>RunBeforeTestClassCallbacks</code> statement.
<DT><A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html" title="class in org.springframework.test.context.junit4.statements"><B>RunBeforeTestMethodCallbacks</B></A> - Class in <A HREF="../org/springframework/test/context/junit4/statements/package-summary.html">org.springframework.test.context.junit4.statements</A><DD><code>RunBeforeTestMethodCallbacks</code> is a custom JUnit 4.5+
 <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/model.Statement.html?is-external=true" title="class or interface in org.junit.runners"><CODE>Statement</CODE></A> which allows the <em>Spring TestContext Framework</em> to
 be plugged into the JUnit execution chain by calling
 <A HREF="../org/springframework/test/context/TestContextManager.html#beforeTestMethod(java.lang.Object, java.lang.reflect.Method)"><CODE>beforeTestMethod()</CODE></A> on the supplied <A HREF="../org/springframework/test/context/TestContextManager.html" title="class in org.springframework.test.context"><CODE>TestContextManager</CODE></A>.<DT><A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html#RunBeforeTestMethodCallbacks(org.junit.runners.model.Statement, java.lang.Object, java.lang.reflect.Method, org.springframework.test.context.TestContextManager)"><B>RunBeforeTestMethodCallbacks(Statement, Object, Method, TestContextManager)</B></A> - 
Constructor for class org.springframework.test.context.junit4.statements.<A HREF="../org/springframework/test/context/junit4/statements/RunBeforeTestMethodCallbacks.html" title="class in org.springframework.test.context.junit4.statements">RunBeforeTestMethodCallbacks</A>
<DD>Constructs a new <code>RunBeforeTestMethodCallbacks</code> statement.
<DT><A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html#runBeforeTransactionMethods(org.springframework.test.context.TestContext)"><B>runBeforeTransactionMethods(TestContext)</B></A> - 
Method in class org.springframework.test.context.transaction.<A HREF="../org/springframework/test/context/transaction/TransactionalTestExecutionListener.html" title="class in org.springframework.test.context.transaction">TransactionalTestExecutionListener</A>
<DD>Run all <A HREF="../org/springframework/test/context/transaction/BeforeTransaction.html" title="annotation in org.springframework.test.context.transaction"><CODE>@BeforeTransaction methods</CODE></A> for the
 specified <A HREF="../org/springframework/test/context/TestContext.html" title="class in org.springframework.test.context"><CODE>test context</CODE></A>.
<DT><A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#runChild(org.junit.runners.model.FrameworkMethod, org.junit.runner.notification.RunNotifier)"><B>runChild(FrameworkMethod, RunNotifier)</B></A> - 
Method in class org.springframework.test.context.junit4.<A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html" title="class in org.springframework.test.context.junit4">SpringJUnit4ClassRunner</A>
<DD>Performs the same logic as
 <A HREF="http://junit.sourceforge.net/javadoc_40/org/junit/runners/BlockJUnit4ClassRunner.html?is-external=true#runChild(org.junit.runners.model.FrameworkMethod, org.junit.runner.notification.RunNotifier)" title="class or interface in org.junit.runners"><CODE>BlockJUnit4ClassRunner.runChild(FrameworkMethod, RunNotifier)</CODE></A>,
 except that tests are determined to be <em>ignored</em> by
 <A HREF="../org/springframework/test/context/junit4/SpringJUnit4ClassRunner.html#isTestMethodIgnored(org.junit.runners.model.FrameworkMethod)"><CODE>SpringJUnit4ClassRunner.isTestMethodIgnored(FrameworkMethod)</CODE></A>.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#runGeneric()"><B>runGeneric()</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Convenient method to run the function without arguments,
 returning the value as an object.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#runGeneric(int)"><B>runGeneric(int)</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Convenient method to run the function with a single int argument.
<DT><A HREF="../org/springframework/jdbc/object/SqlFunction.html#runGeneric(java.lang.Object[])"><B>runGeneric(Object[])</B></A> - 
Method in class org.springframework.jdbc.object.<A HREF="../org/springframework/jdbc/object/SqlFunction.html" title="class in org.springframework.jdbc.object">SqlFunction</A>
<DD>Analogous to the <code>SqlQuery.findObject(Object[])</code> method.
<DT><A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html#runInThread(java.lang.Runnable)"><B>runInThread(Runnable)</B></A> - 
Method in class org.springframework.scheduling.quartz.<A HREF="../org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.html" title="class in org.springframework.scheduling.quartz">LocalTaskExecutorThreadPool</A>
<DD>&nbsp;
<DT><A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html#runningAllowed()"><B>runningAllowed()</B></A> - 
Method in class org.springframework.jms.listener.<A HREF="../org/springframework/jms/listener/AbstractJmsListeningContainer.html" title="class in org.springframework.jms.listener">AbstractJmsListeningContainer</A>
<DD>Check whether this container's listeners are generally allowed to run.
<DT><A HREF="../org/springframework/test/AssertThrows.html#runTest()"><B>runTest()</B></A> - 
Method in class org.springframework.test.<A HREF="../org/springframework/test/AssertThrows.html" title="class in org.springframework.test">AssertThrows</A>
<DD><B>Deprecated.</B>&nbsp;The main template method that drives the running of the
 <A HREF="../org/springframework/test/AssertThrows.html#test()"><CODE>test logic</CODE></A> and the
 <A HREF="../org/springframework/test/AssertThrows.html#checkExceptionExpectations(java.lang.Exception)"><CODE>checking</CODE></A> of the
 resulting (expected) <A HREF="http://java.sun.com/javase/6/docs/api/java/lang/Exception.html?is-external=true" title="class or interface in java.lang"><CODE>Exception</CODE></A>.
<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanNameReference.html" title="class in org.springframework.beans.factory.config"><B>RuntimeBeanNameReference</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Immutable placeholder class used for a property value object when it's a
 reference to another bean name in the factory, to be resolved at runtime.<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanNameReference.html#RuntimeBeanNameReference(java.lang.String)"><B>RuntimeBeanNameReference(String)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/RuntimeBeanNameReference.html" title="class in org.springframework.beans.factory.config">RuntimeBeanNameReference</A>
<DD>Create a new RuntimeBeanNameReference to the given bean name.
<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html" title="class in org.springframework.beans.factory.config"><B>RuntimeBeanReference</B></A> - Class in <A HREF="../org/springframework/beans/factory/config/package-summary.html">org.springframework.beans.factory.config</A><DD>Immutable placeholder class used for a property value object when it's
 a reference to another bean in the factory, to be resolved at runtime.<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html#RuntimeBeanReference(java.lang.String)"><B>RuntimeBeanReference(String)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html" title="class in org.springframework.beans.factory.config">RuntimeBeanReference</A>
<DD>Create a new RuntimeBeanReference to the given bean name,
 without explicitly marking it as reference to a bean in
 the parent factory.
<DT><A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html#RuntimeBeanReference(java.lang.String, boolean)"><B>RuntimeBeanReference(String, boolean)</B></A> - 
Constructor for class org.springframework.beans.factory.config.<A HREF="../org/springframework/beans/factory/config/RuntimeBeanReference.html" title="class in org.springframework.beans.factory.config">RuntimeBeanReference</A>
<DD>Create a new RuntimeBeanReference to the given bean name,
 with the option to mark it as reference to a bean in
 the parent factory.
</DL>
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<!-- Begin Google Analytics code --> <script type="text/javascript"> var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www."); document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); </script> <script type="text/javascript"> var pageTracker = _gat._getTracker("UA-2728886-3"); pageTracker._setDomainName("none"); pageTracker._setAllowLinker(true); pageTracker._trackPageview(); </script> <!-- End Google Analytics code --></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="index-17.html"><B>PREV LETTER</B></A>&nbsp;
&nbsp;<A HREF="index-19.html"><B>NEXT LETTER</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?index-filesindex-18.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-18.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<A HREF="index-1.html">A</A> <A HREF="index-2.html">B</A> <A HREF="index-3.html">C</A> <A HREF="index-4.html">D</A> <A HREF="index-5.html">E</A> <A HREF="index-6.html">F</A> <A HREF="index-7.html">G</A> <A HREF="index-8.html">H</A> <A HREF="index-9.html">I</A> <A HREF="index-10.html">J</A> <A HREF="index-11.html">K</A> <A HREF="index-12.html">L</A> <A HREF="index-13.html">M</A> <A HREF="index-14.html">N</A> <A HREF="index-15.html">O</A> <A HREF="index-16.html">P</A> <A HREF="index-17.html">Q</A> <A HREF="index-18.html">R</A> <A HREF="index-19.html">S</A> <A HREF="index-20.html">T</A> <A HREF="index-21.html">U</A> <A HREF="index-22.html">V</A> <A HREF="index-23.html">W</A> <A HREF="index-24.html">X</A> <HR>

</BODY>
</HTML>
